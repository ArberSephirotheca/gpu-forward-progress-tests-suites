#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5435.8233), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.0)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, round(length(normalize(1.0))), round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-886.642))), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 1.0, determinant(mat2(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0)))), clamp(float(vec3(injectionSwitch.x, 1.0, determinant(mat2(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0)))), float(vec3(injectionSwitch.x, 1.0, determinant(mat2(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0)))), float(vec3(injectionSwitch.x, 1.0, determinant(mat2(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))).x, (injectionSwitch.x) + 0.0))) - 0.0)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), bool(bvec3(! (! ((injectionSwitch.x < injectionSwitch.y))), false, false))))))))))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        barrier();
       barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (0u ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) | (gl_NumWorkGroups.x));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec3((false), false, false)))))))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(true, (true) || false), false))))), true))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! _GLF_IDENTITY((bool(bvec3((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * 1.0) < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), ((bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), true, true, _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 1u)))) + 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) + (0u ^ 0u))) / 1u))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u ^ 0u)))) + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) + 0u), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_size) << 0u)), 1u, 1u), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))) ^ (uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1), ((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1)) | ((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((1u), ((1u)) >> 0u)), _GLF_IDENTITY(1u, (1u) / 1u))))));
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(true && (bool(bool(_GLF_IDENTITY(true, true && (true))))), ! (! (_GLF_IDENTITY(true && (bool(bool(_GLF_IDENTITY(true, true && (true))))), true && (true && (bool(bool(_GLF_IDENTITY(true, true && (true))))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(true && (bool(bool(_GLF_IDENTITY(true, true && (true))))), ! (! (_GLF_IDENTITY(true && (bool(bool(_GLF_IDENTITY(true, true && (true))))), true && (true && (bool(bool(_GLF_IDENTITY(true, true && (true)))))))))))))), true, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (true)))), true && (bool(bool(_GLF_IDENTITY(true, true && (true)))))), true, true))))))), _GLF_IDENTITY(true && (true), false || (true && _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(true, false || (true))), true)), (bool(bvec2((_GLF_IDENTITY(true, false || (true))), true))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = ((0 & (-41776 * -42396)) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) << 0)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (read_1)))) << 0u) + 1), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 ^ 1), ((_GLF_IDENTITY(0, (0) ^ 0) ^ 1)) - 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
  }
 else
  {
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), false || (_GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), (bool(bool(_GLF_WRAPPED_IF_FALSE(false)))) && true)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
 for(int _injected_loop_counter = ((4271 & 0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) | (_GLF_IDENTITY(1, min(1, 1))))) | 0)) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1)) < subgroup_size)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) ^ (0 << _GLF_IDENTITY(int(6), int(6)))))), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), min(4, 4)), 4))) - 0), ~ (_GLF_IDENTITY(~ (4), max(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | 0)), ((4)) >> 0), ~ (4)))))) - _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bool(false || (false))), (_GLF_IDENTITY(bool(bool(false || (false))), bool(bvec4(bool(bool(false || (false))), true, true, true)))) && true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), min(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), length(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), transpose(transpose(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))))))))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       subgroupAll(false);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), true && (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_injected_loop_counter))) / 1) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(973.684, -98.83)))).y))); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(647.800, mix(float(647.800), float(_GLF_FUZZED(-0.5)), bool(false)))), _GLF_FUZZED(7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), ((_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(647.800, mix(float(647.800), float(_GLF_FUZZED(-0.5)), bool(false)))), _GLF_FUZZED(7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y)) && true))));
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(float(_GLF_ONE(1.0, injectionSwitch.y))))) * (4)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), _GLF_IDENTITY(ivec3(ivec4(ivec3(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4)), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), 0), 1)), (false ? _GLF_FUZZED(ivec3(-24996, -51500, 69431)) : ivec3(ivec4(ivec3(_GLF_IDENTITY(4, int(_GLF_ONE(1.0, injectionSwitch.y)) * (4)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), clamp(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0)))), (false ? _GLF_FUZZED(37378) : _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), clamp(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0)))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), clamp(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0))))) | (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), clamp(ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0), ivec4(_GLF_IDENTITY(int(6), int(6)), 1, 0, 0)))))))))) >> _GLF_IDENTITY(int(6), int(6))), 0), 1))))))), 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) && (false))), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(bvec3((_GLF_IDENTITY(true, true && (true))), true, _GLF_IDENTITY(false, bool(bool(false)))))) && true))) && (false)))), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) && (false))))), ! (! _GLF_IDENTITY((! ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true))) && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec2(! ((false)), true)), (bool(bvec2(! ((false)), true))) && true))))))))), true && ((! ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true))) && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec2(! ((false)), true)), (bool(bvec2(! ((false)), true))) && true))))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), bool(bvec3(bool(true && (false)), false, false))))))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), bool(bvec3(bool(true && (false)), false, false))))))))), true)))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED((-5.4 - (- 1.9)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3949.5742)))), (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch.x : _GLF_FUZZED(-3949.5742))))) - 0.0)) > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           subgroupAll(true);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(655.246)), bvec2(true, false))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.6))))))), 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))) && true)) || false))))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))) ? injectionSwitch.x : _GLF_FUZZED(1.9))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4))))), (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), max(int(4), int(4)))))) << 0)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), true, false))))))
            barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, 1, 1))) | (int(ivec3(0, 1, 1)))), min(_GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, 1, 1))) | (int(ivec3(0, 1, 1)))), _GLF_IDENTITY(int(ivec3(0, 1, 1)), (int(ivec3(0, 1, 1))) | (int(ivec3(0, 1, 1)))))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.0)), bool(false)))) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))))))), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))))), clamp(length(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))))), length(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))))), length(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))))))), 1.0, 0.0), (false ? _GLF_FUZZED(vec3(3.0, 8.2, 0.8)) : vec3(length(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(6259.7473, (_GLF_IDENTITY(6259.7473, (6259.7473) / 1.0)) / 1.0)) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, min(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, float(mat2x4(false ? _GLF_FUZZED(6259.7473) : 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), false ? _GLF_FUZZED(6259.7473) : 0.0))), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, (true ? false ? _GLF_FUZZED(6259.7473) : 0.0 : _GLF_FUZZED(3.9))), mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))) - 0.0), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), mix(float(_GLF_FUZZED(-79.87)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))), bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))))), 1.0, 0.0)))), (dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(length(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8.6)), (float(_GLF_FUZZED(8.6))) / 1.0), float(false ? _GLF_FUZZED(6259.7473) : 0.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), (bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))) && true))))), clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, clamp(false ? _GLF_FUZZED(6259.7473) : 0.0, _GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, float(vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 0.0, 1.0, 1.0))), false ? _GLF_FUZZED(6259.7473) : 0.0))), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, clamp(8.6, 8.6, _GLF_IDENTITY(8.6, max(8.6, 8.6)))))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8.6)), float(_GLF_IDENTITY(mat2x4(float(_GLF_FUZZED(8.6)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))), mat2x4(mat3x4(mat2x4(float(_GLF_FUZZED(8.6)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))))))))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), cos(0.0))), mix(float(_GLF_FUZZED(323.369)), float(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), cos(0.0))), float(mat4(float(mat2x3(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), cos(0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(6259.7473, max(_GLF_IDENTITY(6259.7473, float(mat2(6259.7473, 1.0, 1.0, 1.0))), 6259.7473))) : 0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8.6)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(8.6)), max(_GLF_IDENTITY(float(_GLF_FUZZED(8.6)), (float(_GLF_FUZZED(8.6))) - 0.0), float(_GLF_FUZZED(8.6)))) : _GLF_FUZZED(8.3))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))), mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(6259.7473, max(_GLF_IDENTITY(6259.7473, float(mat2(6259.7473, 1.0, 1.0, 1.0))), 6259.7473))) : 0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8.6)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(8.6)), max(_GLF_IDENTITY(float(_GLF_FUZZED(8.6)), (float(_GLF_FUZZED(8.6))) - 0.0), float(_GLF_FUZZED(8.6)))) : _GLF_FUZZED(8.3))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))), float(_GLF_FUZZED(-601.578)), bool(false))))), float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))))), 1.0, 0.0), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(vec3(3.0, 8.2, 0.8)) : vec3(length(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, min(8.6, _GLF_IDENTITY(8.6, (8.6) - 0.0))))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, (_GLF_IDENTITY(8.6, clamp(8.6, 8.6, 8.6))) / 1.0))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))))))), false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))))), clamp(clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, min(8.6, _GLF_IDENTITY(8.6, (8.6) - 0.0))))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, (_GLF_IDENTITY(8.6, clamp(8.6, 8.6, 8.6))) / 1.0))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))))))), false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, min(8.6, _GLF_IDENTITY(8.6, (8.6) - 0.0))))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, (_GLF_IDENTITY(8.6, clamp(8.6, 8.6, 8.6))) / 1.0))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))))))), false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))))), (false ? _GLF_FUZZED(-71.17) : clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, min(8.6, _GLF_IDENTITY(8.6, (8.6) - 0.0))))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, (_GLF_IDENTITY(8.6, clamp(8.6, 8.6, 8.6))) / 1.0))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))))))), false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))))))), clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, min(8.6, _GLF_IDENTITY(8.6, (8.6) - 0.0))))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.6, (_GLF_IDENTITY(8.6, clamp(8.6, 8.6, 8.6))) / 1.0))), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), 0.0 + (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)))))))), false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), float(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))))))), 1.0, 0.0))))) + 0.0)), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(23.75) : 0.0)), 0.0)), 0.0)), _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(578.445)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(578.445)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(578.445)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(578.445)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(5128.9335)), bool(false))), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(578.445)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)))))), vec3(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(8.6)), (float(_GLF_IDENTITY(_GLF_FUZZED(8.6), max(_GLF_FUZZED(8.6), _GLF_IDENTITY(_GLF_FUZZED(8.6), min(_GLF_FUZZED(8.6), _GLF_FUZZED(8.6))))))) * 1.0), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), bool(bvec2(true, false)))))))))), _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), min(vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0))), vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0))), vec3(1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((mat4x2(-1.5, 75.61, -0.5, 8815.8015, -0.1, 2.1, 332.856, 6097.4845) , 8.3))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(length(vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8.0))), 0.0)), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), float(_GLF_IDENTITY(mat3x2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 1.0, 0.0, 0.0), clamp(vec4(false ? _GLF_IDENTITY(_GLF_FUZZED(6259.7473), (false ? _GLF_FUZZED(176.603) : _GLF_IDENTITY(_GLF_FUZZED(6259.7473), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(6259.7473), abs(1.0))), min(float(vec2(_GLF_FUZZED(6259.7473), abs(1.0))), float(vec2(_GLF_FUZZED(6259.7473), abs(1.0)))))))) : 0.0, 1.0, 0.0, 0.0), vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), _GLF_IDENTITY(vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(7.9, 4.2, 8.0, -51.77)) : vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 1.0, 0.0, 0.0)))))), (float(_GLF_IDENTITY(vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 1.0, 0.0, 0.0), clamp(vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 1.0, 0.0, 0.0), vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(7.9, 4.2, 8.0, -51.77)) : vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 1.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec4(-437.074, 325.214, 2761.1647, 6807.4774)) : _GLF_IDENTITY(vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(7.9, 4.2, 8.0, -51.77)) : vec4(false ? _GLF_FUZZED(6259.7473) : 0.0, 1.0, 0.0, 0.0))))))))) * _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-948.979)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), (bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))) || false))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0), mat3x2(mat4x3(mat3x2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : 0.0), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), true, true, false)), bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), true, true, false)), false)))))))))))))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(135.895))), 0.0, 1.0)))))), 1.0, 0.0))), (_GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0)), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false)), clamp(mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false))))))))), mix(float(_GLF_FUZZED(8401.8072)), float(length(vec3(0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(77.09) : injectionSwitch.x), mix(float((false ? _GLF_FUZZED(77.09) : injectionSwitch.x)), float(_GLF_FUZZED(8167.7331)), bool(false)))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0)))))), length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0), (vec3(_GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0)), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false)), clamp(mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false))))))))), mix(float(_GLF_FUZZED(8401.8072)), float(length(vec3(0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(77.09) : injectionSwitch.x), mix(float((false ? _GLF_FUZZED(77.09) : injectionSwitch.x)), float(_GLF_FUZZED(8167.7331)), bool(false)))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.y) - 0.0)))))), length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0)) / vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(vec3(8.8, -8.1, 5.6)) : _GLF_IDENTITY(vec3(_GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0)), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false))))))), mix(float(_GLF_FUZZED(8401.8072)), float(length(vec3(0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(77.09) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), clamp(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))))), 1.0, 0.0), _GLF_IDENTITY(vec3(vec4(vec3(_GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0)), 0.0)), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false))))))), mix(float(_GLF_FUZZED(8401.8072)), float(length(vec3(0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(77.09) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0), 1.0)), max(vec3(vec4(vec3(_GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 0.0, 1.0, 0.0, cos(abs(0.0)))), (float(mat3x4(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, abs(0.0)))), 0.0, 1.0, 0.0, cos(abs(0.0))))) - 0.0)), max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0)), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false))))))), mix(float(_GLF_FUZZED(8401.8072)), float(length(vec3(0.0, 0.0, 0.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(77.09) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), length(vec3(0.0, 0.0, 0.0)))), 1.0, 0.0), 1.0)), vec3(vec4(vec3(_GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false))))))), mix(float(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8993.0612)), bool(false)))))))), float(_GLF_FUZZED(2.6)), bool(false))), mix(float(_GLF_FUZZED(8401.8072)), float(length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(77.09) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) ? _GLF_FUZZED(77.09) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) || false))), length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-875.671) : 1.0)))), 0.0), 1.0)))))))), dot(vec3(0.0, 1.0, 0.0), vec3(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(6259.7473) : 0.0, mix(float(_GLF_FUZZED(8.6)), float(false ? _GLF_FUZZED(6259.7473) : _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false))))))), false, true)), ! (! (bool(bvec3(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false))))))), false, true))))))) || false))))))), 1.0, 0.0)))) / 1.0)))) > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, cos(0.0))))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.61) : injectionSwitch.x)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4182.0721, 34.10)))).x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.1)), float(0.0), bool(true))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0), (mat4x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), max(injectionSwitch.x, injectionSwitch.x))) - sqrt(0.0), (false ? _GLF_FUZZED(-88.89) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), max(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, float(float(1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), max(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, float(float(1.0))))), (false ? _GLF_FUZZED(dot(-4.5, 68.12)) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), max(_GLF_IDENTITY(1.0, float(float(1.0))), _GLF_IDENTITY(1.0, float(float(1.0)))))))) + sin(0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.8) : 1.0)), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), max(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), mix(vec4((vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-567.167) : 1.0)), 0.0, 0.0))[0], _GLF_FUZZED(2.6), _GLF_IDENTITY((vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)))), _GLF_IDENTITY(0.0, (0.0) - tan(0.0)))), 1.0, 0.0, 0.0))[2], min((vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)))), 0.0)), 1.0, 0.0, 0.0))[2], _GLF_IDENTITY((vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)))), 0.0), (clamp(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)))), 0.0)) - 0.0)), 1.0, 0.0, 0.0))[2], ((vec4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0)))), 0.0)), 1.0, 0.0, 0.0))[2]) - 0.0))), _GLF_IDENTITY((vec4(0.0, 1.0, 0.0, 0.0)), vec4(mat4x3((vec4(0.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))[3]), vec4(_GLF_FUZZED(9617.0683), (vec4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec2(1.6, 8.3).t)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 0.0, 0.0))[1], _GLF_FUZZED(-7.9), _GLF_FUZZED(-1.5)), bvec4(false, true, false, false))))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), float(mat2(cos(0.0), 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y))))), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4035.6449))), cos(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(length(vec3(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3963.3418) : 1.0))) / 1.0), 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(length(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5177.6402)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0)), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), round(length(normalize(vec2(1.0, 1.0)))))), mix(float(_GLF_FUZZED(-6.2)), float(float(mat2x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4035.6449))), cos(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), round(length(normalize(vec2(1.0, 1.0))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-271.742) : 0.0))), 1.0, 1.0, tan(0.0), 0.0, sqrt(1.0)))), 0.0, 0.0))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, cos(0.0))) * mat3(1.0))))) - sqrt(0.0)))) < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))).x > injectionSwitch.y, true)))))))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3141.7853), _GLF_IDENTITY(_GLF_FUZZED(61.36), min(_GLF_FUZZED(61.36), _GLF_FUZZED(61.36)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0))), (_GLF_IDENTITY(float(1.0), float(mat2x4(float(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) * 1.0)), float(mat4x2(float(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY((float(1.0)) * 1.0, max(_GLF_IDENTITY((float(1.0)) * 1.0, mix(float(_GLF_FUZZED(6.5)), float((float(1.0)) * 1.0), bool(true))), (float(1.0)) * 1.0))), (_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(_GLF_IDENTITY((float(1.0)) * 1.0, ((float(1.0)) * 1.0) / 1.0), max(_GLF_IDENTITY((float(1.0)) * 1.0, mix(float(_GLF_FUZZED(6.5)), float((float(1.0)) * 1.0), _GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), (float(1.0)) * 1.0)))) * 1.0)), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), _GLF_IDENTITY(log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), min(log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 1.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.3))), 1.0)))), 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3141.7853), _GLF_FUZZED(61.36)), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(vec2(mat4x2(mat2(1.0) * ((injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (true ? vec2(mat4x2(mat2(1.0) * ((injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0)), (transpose(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3141.7853), _GLF_FUZZED(61.36)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3141.7853), _GLF_FUZZED(61.36)), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(vec2(mat4x2(mat2(1.0) * ((injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (true ? vec2(mat4x2(mat2(1.0) * ((injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0)), (transpose(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3141.7853), _GLF_FUZZED(61.36)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - (44447 & 0))]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), min(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0))))) / vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(vec2(42.39, -69.45)) : vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3141.7853), _GLF_IDENTITY(_GLF_FUZZED(61.36), min(_GLF_FUZZED(61.36), _GLF_FUZZED(61.36)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0))), (_GLF_IDENTITY(float(1.0), float(mat2x4(float(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) * 1.0)), float(mat4x2(float(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), _GLF_IDENTITY((float(1.0)) * 1.0, max(_GLF_IDENTITY((float(1.0)) * 1.0, mix(float(_GLF_FUZZED(6.5)), float((float(1.0)) * 1.0), bool(true))), (float(1.0)) * 1.0))), (_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(_GLF_IDENTITY((float(1.0)) * 1.0, ((float(1.0)) * 1.0) / 1.0), max(_GLF_IDENTITY((float(1.0)) * 1.0, mix(float(_GLF_FUZZED(6.5)), float((float(1.0)) * 1.0), _GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(true), false || (bool(true))))))), (float(1.0)) * 1.0)))) * 1.0)), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), _GLF_IDENTITY(log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), min(log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 1.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.3))), 1.0)))), 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3141.7853), _GLF_FUZZED(61.36)), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(vec2(mat4x2(mat2(1.0) * ((injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (true ? vec2(mat4x2(mat2(1.0) * ((injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0)), (transpose(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3141.7853), _GLF_FUZZED(61.36)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3141.7853), _GLF_FUZZED(61.36)), vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(vec2(mat4x2(mat2(1.0) * ((injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), (true ? vec2(mat4x2(mat2(1.0) * ((injectionSwitch)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))))[0], (injectionSwitch)[1]), bvec2(true, true))), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0)), (transpose(mat4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3141.7853), _GLF_FUZZED(61.36)), vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - (44447 & 0))]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))), 0.0, 1.0, 0.0, log(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 1.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), min(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0))))) / vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))) + mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(dot(-14.71, -3695.0576)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                    barrier();
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
