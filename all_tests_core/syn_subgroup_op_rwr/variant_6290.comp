#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 mat4 _f0;
 bvec3 _f1;
 mat2 _f2;
 bool _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 mat4x3 _f1;
 vec4 _f2;
 ivec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_8 {
 uint virtual_gid;
 mat4x3 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 mat4x2 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_6 {
 int _f0;
 mat3 _f1;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
 float _f1;
 mat3x4 _f2;
 bvec3 _f3;
 float _f4;
 vec2 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 bvec4 _f1;
 float _f2;
 mat3x2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 ivec3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_1 {
 uvec3 _f0;
 ivec4 _f1;
 uvec3 _f2;
 mat3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 _GLF_struct_0 _f1;
 mat2 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_3 _f0;
 _GLF_struct_5 _f1;
 vec2 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_11 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(vec2(-1.2, 1.2)))).y))), ! (_GLF_IDENTITY(! (bool(((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (bool(((injectionSwitch.x > injectionSwitch.y)))), true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 0.0, 0.0, 0.0))).y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(vec2(-1.2, 1.2)))).y))), ! (! (bool(((injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(vec2(-1.2, 1.2)))).y))), ! (! (bool(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))) && true))))))))))))))) || false)) && true), false, true, _GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))), true && (! (_GLF_IDENTITY(! (false), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, false, true)))))))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) * cos(0.0))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))) || false))) || false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && ((false) || false)))))), false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || _GLF_IDENTITY((_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || false) || false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || false) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || false) || false)))), false || (_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || false) || false)))))))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ! _GLF_IDENTITY((! (_GLF_IDENTITY((false) || false, ((false) || false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false) || false, ((false) || false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), true && (! ((! (_GLF_IDENTITY((false) || false, ((false) || false) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ((false) || false) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ((false) || false) || false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((false) || false, ((false) || false) || false)), true, false)), ! (! (bool(bvec3(! (_GLF_IDENTITY((false) || false, ((false) || false) || false)), true, false))))))))))))), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), true && ((false))))), bool(bvec2(bool(bool((false))), false)))) || false)) || false, ((false) || false) || false))))))), true, _GLF_IDENTITY(false, (false) || false))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))), (_GLF_DEAD(false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 1.0, length(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), false || (! (! (_GLF_IDENTITY(false, true && (false))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true), ((injectionSwitch.x > injectionSwitch.y)) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) - 0.0)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(vec3(8.9, -269.953, 49.40))) : (injectionSwitch)))))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y)), bool(bvec3(((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec3(-577.646, -777.206, -71.41).x), _GLF_FUZZED(vec3(6880.9128, -951.687, 3.5).t)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), vec2(0.0, 0.0) + (vec2(1.0, 1.0) * (injectionSwitch)))))).x > injectionSwitch.y)), false, true))))) || false))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8572.9339)), bool(false))), sqrt(1.0), 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, mix(float(_GLF_FUZZED(64.68)), float(injectionSwitch.y), bool(true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), false || (! (true))))) && ((true)))))))), bool(bvec3(! (true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), ! (! (true && (false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), (true && (false)) && true), ! (! (true && (_GLF_IDENTITY(false, ! (! (false)))))))))) && true))), (_GLF_DEAD(false)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id, (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_3(mat3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0, 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0, (true ? (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0 : _GLF_FUZZED(9445.4076)))))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), _GLF_struct_0(vec3(1.0)), mat2(1.0), _GLF_struct_1(uvec3(_GLF_IDENTITY(1u, (1u) | (1u))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2((1), 1)), 0 | (int(ivec2((1), 1))))) | (0 >> _GLF_IDENTITY(int(5), int(5)))), 1)), 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2((1), 1)), 0 | (int(ivec2((1), 1))))) | (0 >> _GLF_IDENTITY(int(5), int(5)))), 1))))), uvec3(1u), _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-0.7, -688.149, -28.37, -141.012, -2575.8999, 99.17, -7268.0747, _GLF_IDENTITY(_GLF_IDENTITY(-46.37, max(-46.37, -46.37)), clamp(-46.37, -46.37, _GLF_IDENTITY(-46.37, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(-46.37, clamp(-46.37, -46.37, -46.37)), 1.0, 0.0, 0.0, 0.0, 0.0), mat3x2(mat4x3(mat3x2(-46.37, 1.0, 0.0, 0.0, 0.0, 0.0)))))))), 5.4)))), bvec2(true)), _GLF_struct_2(vec3(1.0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(92824, clamp(_GLF_IDENTITY(92824, (92824) | (92824)), 92824, 92824)), min(_GLF_IDENTITY(_GLF_IDENTITY(92824, 0 ^ (_GLF_IDENTITY(92824, max(92824, 92824)))), 0 ^ (92824)), _GLF_IDENTITY(92824, int(ivec4(92824, 0, 1, 0))))), 83710, 94916)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1)))))), ivec3(0, 0, 0) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 | (~ (1)))))) | 0), 0 | (1)))), 1 * (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), _GLF_IDENTITY(0 | (1), (-87337 & 0) | (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0)))) | (1)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), 0 ^ (~ (~ (1)))))) | 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(6098) : (~ (1)))))) | 0))), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) << 0))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0))))), _GLF_IDENTITY(0 | (1), (-87337 & 0) | (0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(2308)))))))))) / (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), 0 | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0), 0 | (1))) ^ 0)) >> (-30704 & 0))))) + 0))))), clamp(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, 0 | (1)))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, 0 | (1)))), int(ivec4(~ (~ (_GLF_IDENTITY(1, 0 | (1)))), 1, 0, 1)))), ~ (~ (int(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, 0 | (1)))), int(ivec4(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 | (1)))), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 | (1)))), 1 * _GLF_IDENTITY(((~ (_GLF_IDENTITY(1, 0 | (1))))), (((~ (_GLF_IDENTITY(1, 0 | (1)))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (_GLF_IDENTITY(1, 0 | (1)))))), 1, 0, 1)))))))), 0 | (int(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, 0 | (1)))), int(ivec4(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(62025))), 0 | (1)))), 1, 0, 1)))), ~ (~ (int(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, 0 | (1)))), int(int(~ (~ (_GLF_IDENTITY(1, 0 | (1))))))), int(ivec4(~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), max(0 | (1), 0 | (1)))))), 1, 0, 1))))))))))))), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, 0 | (1)))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, 0 | (1)))), (false ? _GLF_FUZZED(69751) : ~ (~ (_GLF_IDENTITY(1, 0 | (1))))))) >> (0 | 0)))), ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY(_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) << 0))), ((1)) ^ 0)))))), min(ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY(_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) << 0))), ((1)) ^ 0)))))), ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY(_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) << 0))), ((1)) ^ 0)))))))), clamp(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, 0 | (1)))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1))), clamp((_GLF_IDENTITY(1, 0 | (1))), (_GLF_IDENTITY(1, 0 | (1))), (_GLF_IDENTITY(1, 0 | (1))))))) / _GLF_IDENTITY(1, int(ivec3(1, 1, 1)))))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), ~ (~ (~ (1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0 | (1)))))), ivec3(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1))), min(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1))), (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1)))) ^ 0), _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1)))))))))))))))))))), mat4x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(smoothstep(972.342, (true ? 4270.8616 : 9332.0869), _GLF_IDENTITY(-3.1, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(-3.1, clamp(_GLF_IDENTITY(-3.1, float(mat3(-3.1, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(-3.1, (-3.1) / 1.0), -3.1)), 1.0, cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, determinant(mat3(abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((false ? -531.634 : 5982.3074))), float(1.0), bool(true)))), 0.0, 0.0, 1.0)), max(float(mat4x3(_GLF_IDENTITY(-3.1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(-3.1, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y) * (-3.1)), float(mat3(-3.1, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(-3.1, _GLF_IDENTITY(_GLF_IDENTITY((-3.1), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * ((-3.1))), ((-3.1)) - 0.0) / 1.0), -3.1)), 1.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0, determinant(mat3(abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), log(1.0), 0.0, 0.0, 1.0)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(-3.1, clamp(-3.1, -3.1, -3.1)), clamp(_GLF_IDENTITY(-3.1, float(mat3(-3.1, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(-3.1, (-3.1) / 1.0), -3.1)), 1.0, cos(0.0), 0.0, determinant(mat3(abs(1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-20.91 / -709.174))), float(0.0), bool(true))), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), log(1.0), 0.0, 0.0, 1.0))))))) : 1.0))))), _GLF_struct_5(_GLF_struct_4(mat3x4(1.0), 1.0, mat3x4(1.0), bvec3(true), 1.0, _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0))), (min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)))) * vec2(1.0, 1.0)))), bvec4(true), 1.0, mat3x2(1.0), _GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0)))), vec2(1.0), _GLF_struct_6(1, mat3(1.0)), _GLF_struct_7(uvec2(1u), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), true)))), _GLF_struct_11(_GLF_struct_8(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), 0u, 0u, 0u))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, 1u)), 0u ^ (uint(uvec3(workgroup_base, 1u, 1u))))) + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), 0u, 0u, 0u))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), 0u, 0u, 0u))))), ~ (~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) | ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) >> 0u), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) >> 0u), 0u, 0u, 0u))))))))) - 0u)), 1u, 1u, (0u | 0u)))), mat4x3(1.0)), mat4x2(1.0), _GLF_struct_9(uvec2(1u), mat4x3(1.0), vec4(1.0), ivec4(1), mat4x2(1.0)), _GLF_struct_10(mat4(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (1.0) + abs(0.0))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + abs(0.0))), (false ? _GLF_FUZZED(mat2(-6.5, -77.02, 7.6, -8.5)) : mat2(_GLF_IDENTITY(1.0, (1.0) + abs(0.0)))))) * mat2(1.0)), true, uvec2(1u)), mat4x3(_GLF_IDENTITY(1.0, (1.0) * 1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((466.211 + 1536.8091), clamp((466.211 + 1536.8091), (466.211 + 1536.8091), (466.211 + 1536.8091))), (true ? (466.211 + 1536.8091) : _GLF_FUZZED(-5133.2238))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (0) + 0))), _GLF_IDENTITY((int(int(_GLF_IDENTITY(0, (0) + 0)))), 0 | ((int(int(_GLF_IDENTITY(0, (0) + 0)))))) | (_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) + 0))), (false ? _GLF_FUZZED(54728) : int(int(_GLF_IDENTITY(0, (0) + 0))))))), 0 ^ (int(int(_GLF_IDENTITY(0, (0) + 0)))))), clamp(0, 0, 0))) / 1)], _GLF_FUZZED(404.634)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8527.0487), min(_GLF_FUZZED(_GLF_IDENTITY(-8527.0487, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(-8527.0487, (_GLF_IDENTITY(-8527.0487, mix(float(_GLF_FUZZED(9910.6859)), float(-8527.0487), bool(true)))) / 1.0), (-8527.0487) - 0.0)), mix(float(_GLF_FUZZED(-5.0)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(-8527.0487, (-8527.0487) - 0.0))), (_GLF_IDENTITY(float(float(_GLF_IDENTITY(-8527.0487, (-8527.0487) - 0.0))), min(float(float(_GLF_IDENTITY(-8527.0487, (-8527.0487) - 0.0))), float(float(_GLF_IDENTITY(-8527.0487, (_GLF_IDENTITY(-8527.0487, float(float(-8527.0487)))) - 0.0)))))) - _GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(float(_GLF_FUZZED(596.616)), mix(float(float(_GLF_FUZZED(596.616))), float(_GLF_FUZZED(-9.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))), _GLF_IDENTITY(_GLF_FUZZED(-8527.0487), min(_GLF_FUZZED(-8527.0487), _GLF_FUZZED(-8527.0487))))), _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(2.4)))), max(vec2(_GLF_IDENTITY(_GLF_FUZZED(-8527.0487), min(_GLF_FUZZED(_GLF_IDENTITY(-8527.0487, mix(float(_GLF_IDENTITY(-8527.0487, (-8527.0487) - 0.0)), float(_GLF_FUZZED(596.616)), bool(false)))), _GLF_FUZZED(-8527.0487))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-8527.0487), min(_GLF_FUZZED(_GLF_IDENTITY(-8527.0487, mix(float(_GLF_IDENTITY(-8527.0487, _GLF_IDENTITY((-8527.0487) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(-8527.0487, clamp(-8527.0487, -8527.0487, -8527.0487))) - 0.0, min((-8527.0487) - 0.0, (-8527.0487) - 0.0))) * 1.0))), float(_GLF_FUZZED(596.616)), bool(false)))), _GLF_FUZZED(-8527.0487))), (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) && true), true))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(404.634)), vec2(_GLF_FUZZED(-8527.0487), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1], (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? _GLF_FUZZED(length(vec2(_GLF_IDENTITY(-5925.2820, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)), 0.0, 1.0, 1.0, 0.0, 1.0)), clamp(float(mat3x2(_GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)), 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)), 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)), max(_GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)), _GLF_IDENTITY(_GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)), max(_GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)), _GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)))))), 0.0, 1.0, 1.0, 0.0, 1.0)))), clamp(float(mat3x2(_GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)), 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)), 0.0, 1.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(5.7)), float(float(mat3x2(_GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)), 0.0, 1.0, 1.0, 0.0, 1.0))), bool(true))), float(mat3x2(_GLF_IDENTITY(-5925.2820, min(-5925.2820, -5925.2820)), 0.0, 1.0, 1.0, 0.0, 1.0))))), -9.0))) : _GLF_IDENTITY((injectionSwitch), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) * ((injectionSwitch)))[1]))), bvec2(false, true))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_12._f5._f0.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, (true) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, _GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, int(ivec2(64, 1)))) | 0), 64)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) ^ _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) | 0), 0, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) ^ _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) | 0), 0, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) ^ _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) | 0), 0, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) ^ _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) | 0), 0, _GLF_IDENTITY(1, clamp(1, 1, 1)))))))))), clamp((_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) ^ 0))), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), ((4)) * 1), (4), (4))) >> 0, ((4) >> 0) ^ 0))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) ^ 0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 0 | (~ (4)))), ((_GLF_IDENTITY(~ (4), 0 | (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(49509)), min((true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_IDENTITY(_GLF_FUZZED(49509), (_GLF_FUZZED(49509)) | (_GLF_FUZZED(49509)))), (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(49509)))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (4), 0 | _GLF_IDENTITY((~ (4)), ((~ (4))) - 0))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 | (~ (4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), 0 | (~ (4)))), ~ (~ (~ (_GLF_IDENTITY(~ (4), 0 | (~ (4)))))))))), (_GLF_IDENTITY(~ (4), 0 | (~ (4)))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 0 | (~ (4)))), ((_GLF_IDENTITY(~ (4), 0 | (~ (4))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 | (~ (4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), 0 | (~ (4)))), min(~ (_GLF_IDENTITY(~ (4), 0 | (~ (4)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 0 | _GLF_IDENTITY((~ (4)), ((~ (4))) - _GLF_IDENTITY(0, (0) | 0)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (4), 0 | _GLF_IDENTITY((~ (4)), ((~ (4))) - _GLF_IDENTITY(0, (0) | 0))))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (4), 0 | _GLF_IDENTITY((~ (4)), ((~ (4))) - _GLF_IDENTITY(0, (0) | 0))))), (true ? ~ ((_GLF_IDENTITY(~ (4), 0 | _GLF_IDENTITY((~ (4)), ((~ (4))) - _GLF_IDENTITY(0, (0) | 0))))) : _GLF_FUZZED(-45411)))) | (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (4), 0 | _GLF_IDENTITY((~ (4)), ((~ (4))) - _GLF_IDENTITY(0, (0) | 0))))), ~ (~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(~ (4), 0 | _GLF_IDENTITY((~ (4)), ((~ (4))) - _GLF_IDENTITY(0, (0) | 0))))), (_GLF_IDENTITY(((_GLF_IDENTITY(~ (4), 0 | _GLF_IDENTITY((~ (4)), ((~ (4))) - _GLF_IDENTITY(0, (0) | 0))))), int(ivec4(((_GLF_IDENTITY(~ (4), 0 | _GLF_IDENTITY((~ (4)), ((~ (4))) - _GLF_IDENTITY(0, (0) | 0))))), 0, 0, 0)))) | (((_GLF_IDENTITY(~ (4), 0 | _GLF_IDENTITY((~ (4)), ((~ (4))) - _GLF_IDENTITY(0, (0) | 0))))))))))))))))))), max((_GLF_IDENTITY(~ (4), 0 | (~ (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (~ (4)), 0 | (~ (~ (4)))))), 0 | (~ (4))))))))) | _GLF_IDENTITY((0 & 60528), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) | _GLF_IDENTITY((_GLF_IDENTITY((0 & 60528), max((0 & 60528), (0 & 60528)))), min(_GLF_IDENTITY((_GLF_IDENTITY((0 & 60528), max((0 & 60528), (0 & 60528)))), ((_GLF_IDENTITY((0 & 60528), max((0 & 60528), (0 & 60528))))) / 1), _GLF_IDENTITY((_GLF_IDENTITY((0 & 60528), max((0 & 60528), (0 & 60528)))), 0 ^ ((_GLF_IDENTITY((0 & 60528), max((_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0))), 0)) & 60528), (0 & 60528))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) >> 0), ((4)) << int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))) >> 0), clamp(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (4)))))))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, 0 | ((4) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((_GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), (_GLF_IDENTITY(1 * (4), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-77971) : 1 * (4), int(_GLF_IDENTITY(int(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-77971) : 1 * (4)), (int(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-77971) : 1 * (4))) >> 0)))))) - _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) * 1))))) >> (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * 1), int(4))), int(4)))) >> 0), clamp(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> 0))), _GLF_IDENTITY(4, (4) >> 0))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6193.6195))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.0, -86.19)) : injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), ! (! _GLF_IDENTITY((bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, tan(0.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), abs(0.0), 1.0)), (float(mat3x2(injectionSwitch.y, tan(0.0), 1.0, 1.0, abs(0.0), 1.0))) * 1.0))))), false, false, true))), ! (! ((bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, tan(0.0), 1.0, 1.0, abs(0.0), 1.0)), (float(mat3x2(injectionSwitch.y, tan(0.0), 1.0, 1.0, abs(0.0), 1.0))) * 1.0))))), false, false, true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_12._f5._f0.virtual_gid], (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, (true) && true))))))), ! (! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))) && true, ((true) && true) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), true && ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), ! (! ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))) && true, ((true) && true) || false))))))) ? buf[_GLF_struct_replacement_12._f5._f0.virtual_gid] : _GLF_FUZZED(subgroup_size))), 4, 64, 0);
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)) : _GLF_FUZZED((_GLF_IDENTITY(+ workgroup_id, ~ (~ (+ workgroup_id))))))), next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (! (! ((injectionSwitch.x < injectionSwitch.y)))) || false), false)))) || false))))) ? _GLF_IDENTITY(read_2, (read_2) | 0u) : _GLF_FUZZED(subgroup_id))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(subgroup_local_id) : read_1 + 1)), uint(uvec2(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(subgroup_local_id) : read_1 + 1)), 0u))) == read_2), (! (read_1 + 1 == read_2)) || _GLF_IDENTITY(false, (false) || false)))))) ^ 0u), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) ^ 0u) : _GLF_FUZZED(subgroup_size))) + 1, 4, 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) / 1), 4)));
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), (bool(bvec3(false, true, false))) || _GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), _GLF_IDENTITY(true, ! (! (true))))))), (bool(bvec3(false, _GLF_IDENTITY(true, (true) && true), false))) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(61.19) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(abs(-817.395)))) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), false || ((_GLF_IDENTITY(true, true && (true))))) && true) && (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), false)), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)), false || (_GLF_IDENTITY(false, true && (false)))), false)), false), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), false)), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), false)), false), false)))), true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false || (_GLF_IDENTITY(false, true && (false)))), false), false))))), true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)))) && true)))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, false || (true)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(99.25)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true), ! _GLF_IDENTITY((! (false)), ((! (false))) || false))))), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))))))), true))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))))))), true))))))), true && (bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))))))), true)))))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (false)), false), bvec2(bvec3(bvec2(! (! (false)), false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ((false)) && true)), false), bvec2(bvec3(bvec2(! (! (false)), false), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ((false)) && true)), false), bvec2(bvec3(bvec2(! (! (false)), false), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ((false)) && true)), false), bvec2(bvec3(bvec2(! (! (false)), false), false)))), true && (bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ((false)) && true)), false), bvec2(bvec3(bvec2(! (! (false)), false), false))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), bool(bool(! _GLF_IDENTITY((false), ((false)) && true))))), false), bvec2(bvec3(bvec2(! (! (false)), false), false)))), true && (bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((false), ((false)) && true)), false), bvec2(bvec3(bvec2(! (! (false)), false), false)))))))) && true))))))) && true))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), true)))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.9), _GLF_FUZZED(-3.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)))))))), false), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
