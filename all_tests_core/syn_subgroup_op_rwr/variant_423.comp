#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, (true ? _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x : _GLF_FUZZED(num_workgroup))), min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), (false ? _GLF_FUZZED(4.5) : 1.0 * (injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base)) + subgroup_id * subgroup_size) ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY((~ (subgroup_local_id)), max((~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u)) | (subgroup_local_id)))), _GLF_IDENTITY((~ (subgroup_local_id)), uint(_GLF_IDENTITY(uint((~ (subgroup_local_id))), max(uint((~ (subgroup_local_id))), uint((~ (subgroup_local_id)))))))))), ((_GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), min(_GLF_IDENTITY((~ (subgroup_local_id)), ~ (~ (_GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) | ((~ (subgroup_local_id))))))), (~ (subgroup_local_id)))), uint(uvec2((~ (subgroup_local_id)), 1u)))))))) / 1u) << (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(0u))))) + 1), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), ((~ (subgroup_local_id))) << (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(0u))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), ((~ (subgroup_local_id))) << (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(0u))))) + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), ((~ (subgroup_local_id))) << (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(0u))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))), ((~ (subgroup_local_id))) << (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(0u))))) + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)), (_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id)))), (_GLF_IDENTITY((~ (subgroup_local_id)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_local_id)), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id)))), 0u | (_GLF_IDENTITY((~ (subgroup_local_id)), clamp((~ (subgroup_local_id)), (~ (subgroup_local_id)), (~ (subgroup_local_id))))))))) / 1u), ((~ (subgroup_local_id))) << (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(0u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, 0u))), uint(0u)))))))) + 1))) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
        {
         switch(_GLF_SWITCH(0))
          {
           case 9:
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             for(             (mat3(-23.49, 7.3, 85.42, 8427.2862, 1.9, -2422.2319, 7.4, -4.4, -2.7) * vec3(-152.618, injectionSwitch));
 true; mat4x2(-773.270, 60.79, 606.630, 2.5, 859.859, -9.0, 98.88, -1.2))
              {
               while((false ? false : false))
                {
                 mat2x3 _GLF_SWITCH_6_0v[94], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                 bvec4 _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v, _GLF_SWITCH_6_5v[75];
                 ivec3(-67884, 4760, 56735);
                 mat2 _GLF_SWITCH_6_6v[18], _GLF_SWITCH_6_7v;
                 (injectionSwitch + injectionSwitch);
                 -6.3;
                }
               ivec4 _GLF_SWITCH_6_8v[5];
               {
               }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 ivec3(94620, 69966, 73093);
                }
               float _GLF_SWITCH_6_9v[83], _GLF_SWITCH_6_10v;
              }
            }
           case 0:
           case 93:
           case 97:
           do
            {
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           case 42:
           case 30:
           case 52:
           case 70:
           case 34:
           return;
           break;
           case 25:
           mat3x2(-5.8, 0.2, 6572.5555, 3092.4170, 46.98, -270.747)[2];
           case 56:
           if(true)
            {
             if((bvec3(true, false, true) != bvec3(false, false, false)))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 step(-766.189, vec4(-0.7, 8.0, -81.12, -80.32));
                }
               else
                {
                }
               ivec4(ivec2(-54055, 55661), -44311, -96831);
               mat3(1.2, -40.80, 91.99, 844.224, 274.661, -5370.4534, -5.5, -694.747, 75.07);
               bvec2 _GLF_SWITCH_6_11v, _GLF_SWITCH_6_12v;
               atomicCompSwap(subgroup_id, workgroup_size, workgroup_size);
               bvec2 _GLF_SWITCH_6_13v, _GLF_SWITCH_6_14v[59];
              }
             else
              {
               outerProduct(vec2(7546.6968, -8051.1963), (injectionSwitch * 451.981));
               (38172 > (-58493 + -92146));
               mat2x4 _GLF_SWITCH_6_15v, _GLF_SWITCH_6_16v, _GLF_SWITCH_6_17v[93];
               mat4(-32.83, -4.8, -6409.1848, -77.75, -643.351, -640.766, -8414.6150, 1.4, 2.4, 5626.5348, 5.9, 387.560, 111.130, 5.5, 5663.5585, -59.43);
              }
             (subgroup_local_id ^ uvec2(2518u, 117048u));
             {
              mat2 _GLF_SWITCH_6_18v[5];
              do
               {
                bvec3(false, false, true);
               }
              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
             }
            }
           default:
           1;
          }
        }
      }
    }
  }
 else
  {
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 32:
     uvec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
     case 0:
     case 94:
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
        {
         return;
        }
      }
     case 82:
     case 89:
     case 75:
     case 81:
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)), 4, 64, 4);
     break;
     case 96:
     ivec3(-97581, -72109, -66079);
     case 55:
     mat3(1883.5376, -9.1, -455.161, -3.0, -3571.9787, -418.894, 9.5, -43.40, 57.26);
     default:
     1;
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   if(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-64192) : 1))) - 0u), subgroup_local_id + 1)) < subgroup_size)
    {
     switch(_GLF_SWITCH(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(18802) : 0))))
      {
       case 0:
       case 34:
       case 90:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         continue;
        }
       switch(_GLF_SWITCH((0 | 0)))
        {
         case 20:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
         ;
         case 17:
         for(uvec2 _GLF_SWITCH_0_0v[87], _GLF_SWITCH_0_1v; _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true))); (read_2 + uvec3(76811u, 141253u, 159032u)))
          {
           mat4x3 _GLF_SWITCH_0_2v[45];
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          break;
         case 0:
         case 2:
         if(_GLF_DEAD(false))
          continue;
         case 25:
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false))))))))))))
          return;
         case 60:
         case 49:
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_IDENTITY(true, ! (! (true))))) + 1, 4, _GLF_IDENTITY(64, int(ivec3(64, 0, 0))), 4);
         case 30:
         subgroupAll(false);
         break;
         default:
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             switch(_GLF_SWITCH(0))
              {
               case 25:
               smoothstep((false ? -7936.9161 : -3034.4252), 2656.9947, injectionSwitch);
               case 0:
               case 52:
               case 81:
               case 17:
               case 87:
               case 38:
               case 18:
               for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.6)), (float(_GLF_FUZZED(7.6))) + 0.0), float(1.0), bool(true))))), injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(int(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.6)), (float(_GLF_FUZZED(7.6))) + 0.0), float(1.0), bool(true))))), injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 13:
                     if(_GLF_DEAD(false))
                      return;
                     ;
                     case 0:
                     case 45:
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false))))))), (true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false)))))))) && true))))) && _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(0) : _GLF_FUZZED((+ -45133)))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                          {
                           1;
                          }
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                        return;
                      }
                     case 72:
                     case 18:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 78:
                           uvec3(23692u, 175291u, 52839u);
                           case 0:
                           case 63:
                           case 91:
                           case 87:
                           if(_GLF_DEAD(false))
                            continue;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                           case 16:
                           case 32:
                           if(_GLF_DEAD(false))
                            continue;
                           case 44:
                           do
                            {
                             do
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                {
                                 return;
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             if(_GLF_DEAD(false))
                              break;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           break;
                           case 80:
                           faceforward(radians((-82.65 * vec4(-87.26, -2.6, 1038.9219, 7.8))), vec4(3689.3701, -7533.6148, 313.727, 715.784), vec4(1.3, _GLF_IDENTITY(4.7, min(4.7, 4.7)), -8.4, 16.99));
                           default:
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0)), 0 | (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0))))), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0)), 0 | (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0)))))) << 0)); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 1;
                                }
                              }
                            }
                          }
                        }
                      }
                     else
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 0.0, 0.0, sin(0.0), 0.0, 0.0))))).y)), true)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true)))))))) || false))
                        break;
                      }
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     break;
                     default:
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      return;
                     1;
                    }
                  }
                }
               break;
               case 11:
               (mat2x3(1.4, 0.2, 6.0, 6.3, -7.3, 52.14) , mat4x2(8181.7600, 5.2, -4.9, 7546.8918, 4253.3322, 959.015, 2.5, 1.6));
               case 32:
               1038.1516;
               default:
               1;
              }
            }
           else
            {
            }
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), clamp(~ (0), ~ (0), ~ (0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) != 1); _injected_loop_counter ++)
                  {
                   return;
                  }
                }
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       case 92:
       case 60:
       case 42:
       case 91:
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, true))))))))
          continue;
         continue;
        }
       break;
       if(_GLF_DEAD(false))
        break;
       case 63:
       if(_GLF_DEAD(false))
        break;
       mat2x3 _GLF_SWITCH_1_0v[30], _GLF_SWITCH_1_1v;
       default:
       1;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           switch(_GLF_SWITCH(0))
            {
             case 33:
             vec2 _GLF_SWITCH_6_0v[69], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
             case 0:
             case 34:
             case 52:
             case 80:
             return;
             break;
             case 95:
             if((9975.1506 < -9676.2823))
              {
               ivec3 _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v[78];
               mat2x3 _GLF_SWITCH_6_5v, _GLF_SWITCH_6_6v[75], _GLF_SWITCH_6_7v;
               uint _GLF_SWITCH_6_8v, _GLF_SWITCH_6_9v, _GLF_SWITCH_6_10v[64];
              }
             else
              {
               ivec4 _GLF_SWITCH_6_11v, _GLF_SWITCH_6_12v;
               mat2 _GLF_SWITCH_6_13v[81];
               uaddCarry(read_1, workgroup_id, next_virtual_gid);
               (ivec2(-78721, 31132) | 70858);
               mat2 _GLF_SWITCH_6_14v[83], _GLF_SWITCH_6_15v, _GLF_SWITCH_6_16v;
              }
             default:
             1;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(10.96)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))))
      break;
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 32:
       mat2x4 _GLF_SWITCH_2_0v;
       case 0:
       case 93:
       case 11:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       case 47:
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))) + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        {
         for(int _injected_loop_counter = (1 ^ (0 >> _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((16375 | -55265) & 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         continue;
        }
       case 49:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         switch(_GLF_IDENTITY(_GLF_SWITCH(0), (0 << _GLF_IDENTITY(int(3), int(3))) ^ (_GLF_SWITCH(0))))
          {
           case 0:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) >> 0u) + 1, _GLF_IDENTITY(max(read_1 + 1, read_1 + 1), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(atomicCompSwap(subgroup_size, read_2, 163474u)) : max(read_1 + 1, read_1 + 1)))) : _GLF_FUZZED(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(180859u, max(180859u, 180859u)), _GLF_IDENTITY(85398u, (true ? 85398u : _GLF_FUZZED(read_1))), 120069u, 29993u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(180859u, max(180859u, 180859u)), 85398u, 120069u, 29993u)))[2]))) == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) << 0), 64, _GLF_IDENTITY(4, max(4, 4)));
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               subgroupAll(true);
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           break;
           default:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 return;
                }
              }
             break;
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bool((true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)))), ! (! (! (true))))) && true))))))))
                  {
                   1;
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           else
            {
            }
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 0 ^ (0))))), 0 ^ (~ (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 0 ^ (0))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, int(int(3)))))) >> _GLF_IDENTITY(int(3), int(3))), false || (_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), false || (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))))))))))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 64:
                           case 76:
                           case 4:
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_DEAD(false))
                            return;
                           break;
                           case 96:
                           mat2x4 _GLF_SWITCH_5_0v;
                           default:
                           1;
                          }
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      return;
                     return;
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      continue;
                    }
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))));
          }
        }
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       case 46:
       for(bvec2 _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v; _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), _GLF_IDENTITY(false || ((true)), (_GLF_IDENTITY(false || ((true)), ! (_GLF_IDENTITY(! (false || ((true))), ! (! (! (false || ((true))))))))) && true))))); mat3x4(_GLF_IDENTITY(9.1, (true ? _GLF_IDENTITY(9.1, float(mat4x2(9.1, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 0.0))) : _GLF_FUZZED(dot(vec4(-6.8, -12.03, -78.19, 477.039), vec4(3.9, 3.0, _GLF_IDENTITY(-7.8, (-7.8) / 1.0), -648.610))))), _GLF_IDENTITY(-9878.2514, _GLF_IDENTITY(max(-9878.2514, -9878.2514), _GLF_IDENTITY((max(-9878.2514, -9878.2514)), min(_GLF_IDENTITY((max(-9878.2514, -9878.2514)), max((max(-9878.2514, -9878.2514)), _GLF_IDENTITY((max(-9878.2514, -9878.2514)), mix(float(_GLF_FUZZED(-2.5)), float((max(-9878.2514, -9878.2514))), bool(true))))), _GLF_IDENTITY((max(-9878.2514, -9878.2514)), ((max(-9878.2514, -9878.2514))) / 1.0))) + log(1.0))), 33.80, 3.3, -516.408, 71.83, -1.4, _GLF_IDENTITY(-836.289, _GLF_IDENTITY(float(mat4(-836.289, 1.0, 0.0, 0.0, 1.0, 1.0, round(_GLF_IDENTITY(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), _GLF_IDENTITY(vec4(_GLF_FUZZED(-604.140), _GLF_FUZZED(8117.6474), _GLF_FUZZED(6.4), _GLF_FUZZED(50.99)), min(vec4(_GLF_FUZZED(-604.140), _GLF_FUZZED(8117.6474), _GLF_FUZZED(6.4), _GLF_FUZZED(50.99)), _GLF_IDENTITY(vec4(_GLF_FUZZED(-604.140), _GLF_FUZZED(8117.6474), _GLF_FUZZED(6.4), _GLF_FUZZED(50.99)), max(vec4(_GLF_FUZZED(-604.140), _GLF_FUZZED(8117.6474), _GLF_FUZZED(6.4), _GLF_FUZZED(50.99)), vec4(_GLF_FUZZED(-604.140), _GLF_FUZZED(8117.6474), _GLF_FUZZED(6.4), _GLF_FUZZED(50.99)))))), bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(mat3(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mix(vec4((normalize(vec4(1.0, 1.0, 1.0, 1.0)))[0], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[1], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[2], (normalize(vec4(1.0, 1.0, 1.0, 1.0)))[3]), _GLF_IDENTITY(vec4(_GLF_FUZZED(-604.140), _GLF_FUZZED(8117.6474), _GLF_FUZZED(6.4), _GLF_FUZZED(50.99)), min(vec4(_GLF_FUZZED(-604.140), _GLF_FUZZED(8117.6474), _GLF_FUZZED(6.4), _GLF_FUZZED(50.99)), _GLF_IDENTITY(vec4(_GLF_FUZZED(-604.140), _GLF_FUZZED(8117.6474), _GLF_FUZZED(6.4), _GLF_FUZZED(50.99)), max(vec4(_GLF_FUZZED(-604.140), _GLF_FUZZED(8117.6474), _GLF_FUZZED(6.4), _GLF_FUZZED(50.99)), vec4(_GLF_FUZZED(-604.140), _GLF_FUZZED(8117.6474), _GLF_FUZZED(6.4), _GLF_FUZZED(50.99)))))), bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))), sqrt(1.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-670.926)), bool(false))), 0.0))), _GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), max(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0)))), max(vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))))))), vec2(1.0, 0.0))))))), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0)), dot(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sign(9419.6123)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sign(9419.6123))))) + 0.0)), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) + length(0.0)), 0.0))), 0.0, 0.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sign(9419.6123)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sign(9419.6123))))) + 0.0)), vec2(1.0, 0.0))), 0.0, 0.0)) * mat3(1.0), ((vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sign(9419.6123)))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(sign(9419.6123))), (_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(sign(9419.6123))), float(mat2(_GLF_IDENTITY((true ? 0.0 : _GLF_FUZZED(sign(9419.6123))), clamp((true ? 0.0 : _GLF_FUZZED(sign(9419.6123))), (true ? 0.0 : _GLF_FUZZED(sign(9419.6123))), (true ? 0.0 : _GLF_FUZZED(sign(9419.6123))))), 1.0, 1.0, 1.0)))) * 1.0))) + 0.0)), vec2(1.0, 0.0))), 0.0, 0.0)) * mat3(1.0)) * mat3(1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.3)), float(1.0), bool(true))) * (dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), (vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), (vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(835.779), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED((23.91))), bvec2(true, false)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)) - vec3(0.0, 0.0, 0.0)), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), (vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.5) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.5) : 1.0))) - 0.0))), 0.0))), 0.0, 0.0)) - vec3(0.0, 0.0, 0.0))) * mat3(1.0)))), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-7.8))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))))), 0.0, 0.0))))))), 0.0, abs(1.0), 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x), 1.0, cos(0.0))), _GLF_IDENTITY((float(mat4(-836.289, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED((vec4(92.99, 6.9, 3117.2190, 4978.8813) * mat3x4(-1613.5636, -1.8, 49.66, 83.32, -1.3, 6.3, 25.52, 8.2, 5.9, 574.061, -31.46, 9.5)).x), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(5.4)), bvec2(true, false)))))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), vec2(1.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), vec2(1.0, 0.0)), (dot(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), vec2(1.0, 0.0))) * 1.0)), float(_GLF_FUZZED(-651.415)), bool(false)))), 0.0, 0.0)))), clamp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), (true ? dot(vec3(1.0, _GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 0.0), vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))) : _GLF_FUZZED(-83.93))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0)))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, exp(0.0), 0.0, 0.0, exp(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))))), float(_GLF_FUZZED(8452.7549)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(-487.839)), bool(false))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(5724.0802), (vec2(1.0, 0.0))[1]), vec2(_GLF_IDENTITY((vec2(1.0, 0.0))[0], min((vec2(1.0, 0.0))[0], (vec2(1.0, 0.0))[0])), _GLF_FUZZED(9979.8852)), bvec2(true, false))), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (true ? dot(vec2(1.0, 0.0), vec2(1.0, 0.0)) : _GLF_FUZZED(215.380)))), 0.0, 0.0)))), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))))), float(_GLF_FUZZED(8452.7549)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(1.0)), bool(false)))), 0.0, 0.0)))), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))))), float(_GLF_FUZZED(8452.7549)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(-8.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(_GLF_FUZZED(vec2(926.264, 6.1).y)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)))), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4734.1638)), float(1.0), bool(true))), 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))), float(_GLF_FUZZED(8452.7549)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), clamp(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), max(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), (vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)) * mat3(1.0))))), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)))), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))))), float(_GLF_FUZZED(8452.7549)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3(vec2(1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))), 0.0, 0.0), vec3(_GLF_IDENTITY(mat4x3(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3(vec2(1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))), 0.0, 0.0), 0.0, 0.0, sqrt(abs(0.0)), 1.0, 1.0, abs(1.0), cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0), (mat4x3(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat3(vec2(1.0, 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))), 0.0, 0.0), 0.0, 0.0, sqrt(abs(0.0)), 1.0, 1.0, abs(1.0), cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), mix(vec2(_GLF_FUZZED(-8201.0510), _GLF_FUZZED(3.3)), vec2((vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))[0], (vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))[1]), bvec2(true, true))))), 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(1.0, 0.0, determinant(mat4(tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0), mat4(1.0) * (vec4(1.0, 0.0, determinant(mat4(tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))), float(mat2x3(float(_GLF_IDENTITY(vec4(1.0, 0.0, determinant(mat4(tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0), mat4(1.0) * (vec4(1.0, 0.0, determinant(mat4(tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(8.2, (true ? _GLF_IDENTITY(8.2, max(_GLF_IDENTITY(8.2, min(8.2, 8.2)), 8.2)) : _GLF_FUZZED(446.135)))) : 1.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(70.11) : 0.0)), 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-776.732) : 0.0)), mix(float(_GLF_FUZZED(vec4(-15.84, 0.4, 2.7, 5.0).g)), float(0.0), bool(true)))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(53.91))), 0.0)), _GLF_IDENTITY(1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))), max(1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (false ? _GLF_FUZZED(7549.3796) : _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (false ? _GLF_FUZZED(617.817) : _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))))))), 0.0, 0.0))), _GLF_IDENTITY(1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))), (1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))), 0.0, 0.0)))) / 1.0))))))), 0.0, abs(1.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.6)), float(0.0), bool(true)))), float(_GLF_FUZZED(-2.4)), bool(false))))))), ((float(mat4(-836.289, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), max(vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))), vec2(1.0, 0.0))), 0.0, 0.0)))), clamp(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) / 1.0)), float(_GLF_FUZZED(-0.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0)), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)))), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-998.113)), float(0.0), bool(true)))), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0))))), 0.0, 0.0))))), float(_GLF_FUZZED(8452.7549)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), min(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)))))), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(49.17)), float(0.0), bool(true))))), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.4)), bool(false))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))), vec2(1.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))))), float(_GLF_FUZZED(8452.7549)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(55.99) : dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(0.0, 0.0) + (vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))), 0.0, 0.0)))), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))))), float(_GLF_FUZZED(8452.7549)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(-8.1)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED((8522.5734)), (vec3(1.0, 0.0, 0.0))[1], (vec3(1.0, 0.0, 0.0))[2]), vec3((vec3(1.0, 0.0, 0.0))[0], _GLF_FUZZED(-2873.2255), _GLF_FUZZED(8.5)), bvec3(true, false, false))), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, 0.0)))), mix(float(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(852.087))), 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.4) : 0.0))), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))))), float(_GLF_FUZZED(8452.7549)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(1.0, 1.0) * (vec2(1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED(-6.9)), vec2(_GLF_FUZZED(3.0), (vec2(1.0, 0.0))[1]), bvec2(false, true))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-94.51)))))), 0.0, 0.0)))), mix(float(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), vec3(mat2(vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0), 0.0)))), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) / 1.0), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))))), float(_GLF_FUZZED(8452.7549)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), min(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9059.7958)), float(0.0), bool(true)))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-92.42) : 0.0))))))), 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0 * (dot(vec3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(8.2, (true ? _GLF_IDENTITY(8.2, max(_GLF_IDENTITY(8.2, min(8.2, 8.2)), 8.2)) : _GLF_FUZZED(446.135)))) : 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(70.11) : 0.0, (false ? _GLF_FUZZED(-6.0) : false ? _GLF_FUZZED(70.11) : 0.0)))), 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(-15.84, 0.4, 2.7, 5.0).g)), float(0.0), bool(true)))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)))))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(-3.0) : float(vec2(1.0, 1.0))))))), 0.0), vec2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(53.91))), 0.0)), _GLF_IDENTITY(1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))), max(1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))), _GLF_IDENTITY(1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0))), (1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), float(mat4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))), 0.0, 0.0)))) / 1.0))))))), 0.0, abs(1.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-8.6, min(-8.6, _GLF_IDENTITY(-8.6, (_GLF_IDENTITY(-8.6, float(vec3(-8.6, 0.0, 1.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)))))), float(0.0), bool(true)))), float(_GLF_FUZZED(-2.4)), bool(false)))))))) / 1.0) + 0.0)), _GLF_IDENTITY(829.374, float(mat2x3(_GLF_IDENTITY(829.374, max(829.374, _GLF_IDENTITY(829.374, min(829.374, 829.374)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), (false ? _GLF_FUZZED(-21.04) : dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mat3(1.0) * (vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))), 0.0, 1.0, 1.0))), -2.6, 5.9, -785.368))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            continue;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), bool(bvec2(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), true)))), true)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               while(false)
                {
                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   case 45:
                   mat2x3 _GLF_SWITCH_6_0v;
                   case 97:
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     bvec3(false, true, false);
                    }
                   case 0:
                   switch(_GLF_IDENTITY(_GLF_SWITCH(0), (true ? _GLF_IDENTITY(_GLF_SWITCH(0), (_GLF_SWITCH(0)) + 0) : _GLF_FUZZED(3980))))
                    {
                     case 17:
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       do
                        {
                         _GLF_IDENTITY(uvec4(_GLF_IDENTITY(144113u, (144113u) | 0u), 156819u, 137170u, 78079u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(144113u, (144113u) | 0u), 156819u, 137170u, 78079u), min(uvec4(_GLF_IDENTITY(144113u, (144113u) | 0u), 156819u, 137170u, 78079u), uvec4(_GLF_IDENTITY(144113u, (144113u) | 0u), 156819u, 137170u, 78079u)))) * uvec4(1u, 1u, 1u, 1u));
                         if(_GLF_DEAD(false))
                          return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                     case 0:
                     case 91:
                     case 52:
                     case 56:
                     case 96:
                     case 49:
                     case 39:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     mat4 _GLF_SWITCH_2_3v[66];
                     break;
                     case 35:
                     uvec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[87];
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       return;
                      }
                     default:
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                   break;
                   case 30:
                   vec4 _GLF_SWITCH_6_1v[77], _GLF_SWITCH_6_2v[41];
                   default:
                   1;
                  }
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_WRAPPED_IF_FALSE(false))))
          {
          }
         else
          {
           for(uvec2 _GLF_SWITCH_2_4v; false; max(injectionSwitch, injectionSwitch))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(false ? _GLF_FUZZED(8128.2852) : _GLF_ZERO(0.0, injectionSwitch.x), min(false ? _GLF_FUZZED(8128.2852) : _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(false ? _GLF_FUZZED(8128.2852) : _GLF_ZERO(0.0, injectionSwitch.x), (true ? false ? _GLF_FUZZED(_GLF_IDENTITY(8128.2852, float(mat3x2(8128.2852, 0.0, 1.0, length(0.0), 0.0, 1.0)))) : _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(40.93))))))), _GLF_ZERO(0.0, injectionSwitch.x)))), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(trunc(282.542)) : (1.0))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))
              {
               mat4(9714.7538, 21.06, 28.05, 46.24, -265.547, 1481.9224, 19.11, 5.2, _GLF_IDENTITY(45.66, (45.66) - 0.0), -2.1, -170.906, _GLF_IDENTITY(49.46, mix(float(_GLF_FUZZED(_GLF_IDENTITY((2979.3423 + -690.708), (_GLF_IDENTITY((2979.3423 + -690.708), ((2979.3423 + -690.708)) * 1.0)) * 1.0))), float(_GLF_IDENTITY(49.46, (true ? 49.46 : _GLF_FUZZED(-9338.2859)))), bool(true))), 8057.5109, 7.9, 66.83, -644.139);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
            return;
          }
         if(_GLF_DEAD(false))
          break;
         while((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(193846u, 123131u), (uvec2(193846u, 123131u)) >> uvec2(0u, 0u)) != _GLF_IDENTITY(uvec2(58447u, 12611u), clamp(uvec2(58447u, 12611u), _GLF_IDENTITY(uvec2(58447u, 12611u), clamp(uvec2(58447u, 12611u), uvec2(58447u, 12611u), uvec2(58447u, 12611u))), _GLF_IDENTITY(uvec2(58447u, 12611u), uvec2(1u, 1u) * (uvec2(58447u, 12611u))))), true && (uvec2(193846u, 123131u) != uvec2(58447u, 12611u)))))
          {
           _GLF_IDENTITY(sign(ivec3(48941, -41693, -46955)), (sign(ivec3(48941, -41693, -46955))) / ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)));
           if(_GLF_DEAD(false))
            return;
           mat3x2 _GLF_SWITCH_2_5v, _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v;
           ivec2 _GLF_SWITCH_2_8v[16];
          }
         {
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         mat2 _GLF_SWITCH_2_9v, _GLF_SWITCH_2_10v, _GLF_SWITCH_2_11v;
         if(_GLF_DEAD(false))
          break;
         {
          for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))), clamp((1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))), (1 << _GLF_IDENTITY(int(3), int(3))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), int(3))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0)))))); _injected_loop_counter --)
           {
            switch(_GLF_SWITCH(0))
             {
              case 25:
              mat4x3 _GLF_SWITCH_5_0v[4], _GLF_SWITCH_5_1v[17], _GLF_SWITCH_5_2v;
              if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
               continue;
              case 0:
              case 43:
              case 22:
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    int _GLF_SWITCH_2_12v, _GLF_SWITCH_2_13v, _GLF_SWITCH_2_14v[48];
                    case 91:
                    uvec2 _GLF_SWITCH_2_15v, _GLF_SWITCH_2_16v;
                    break;
                    case 90:
                    vec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[98];
                    case 70:
                    if(_GLF_DEAD(false))
                     break;
                    do
                     {
                      (true ? mat3(71.76, -19.06, 9708.9816, -6.8, 8.0, 2.9, 3.9, -2.4, 9394.0061) : mat3(1.8, _GLF_IDENTITY(4252.6217, (4252.6217) + 0.0), 4024.5141, 12.27, 3985.7312, -268.441, 70.62, 1.1, -53.88));
                      if(_GLF_DEAD(false))
                       return;
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    default:
                    1;
                   }
                 }
               }
              case 24:
              case 16:
              case 42:
              if(_GLF_DEAD(false))
               return;
              break;
              if(_GLF_DEAD(false))
               continue;
              case 70:
              mat3 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v;
              case 57:
              bvec4 _GLF_SWITCH_5_6v[60], _GLF_SWITCH_5_7v[15];
              default:
              1;
             }
           }
         }
         ivec3 _GLF_SWITCH_2_17v[67], _GLF_SWITCH_2_18v[32], _GLF_SWITCH_2_19v;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
          return;
         _GLF_IDENTITY((false ? uvec3(131310u, 113684u, 129752u) : (uvec3(119710u, _GLF_IDENTITY(198140u, clamp(198140u, 198140u, _GLF_IDENTITY(198140u, 0u ^ (198140u)))), 95560u) ^ subgroup_local_id)), (_GLF_IDENTITY((false ? uvec3(131310u, 113684u, 129752u) : (uvec3(119710u, 198140u, 95560u) ^ subgroup_local_id)), (_GLF_IDENTITY((false ? uvec3(131310u, 113684u, 129752u) : (uvec3(119710u, 198140u, 95560u) ^ subgroup_local_id)), clamp(_GLF_IDENTITY((false ? uvec3(131310u, 113684u, 129752u) : (uvec3(119710u, 198140u, 95560u) ^ subgroup_local_id)), max((false ? uvec3(131310u, 113684u, 129752u) : (uvec3(119710u, 198140u, 95560u) ^ subgroup_local_id)), (false ? uvec3(131310u, 113684u, 129752u) : (uvec3(119710u, 198140u, 95560u) ^ subgroup_local_id)))), (false ? uvec3(131310u, 113684u, 129752u) : (uvec3(119710u, 198140u, 95560u) ^ subgroup_local_id)), (false ? uvec3(131310u, 113684u, 129752u) : (uvec3(119710u, 198140u, 95560u) ^ subgroup_local_id))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
        break;
       default:
       1;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
}
