#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-114.679) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec2(268.279, -1.9).r)), bool(false))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2]))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(((false ? -7.0 : 195.509) * -2041.9767))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(60.67), _GLF_FUZZED(6.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))), workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), clamp(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)))))))) | (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(1u, (1u) ^ (51692u & 0u)) * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))))), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), clamp(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(93012u) : subgroup_local_id + 1))) << (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), subgroup_local_id + 1))))))) | (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) ^ 0u))))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))))), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), clamp(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(93012u) : subgroup_local_id + 1))) << (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), subgroup_local_id + 1))))))) | (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) ^ 0u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))))), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), clamp(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(93012u) : subgroup_local_id + 1))) << (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), subgroup_local_id + 1))))))) | (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1), (clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) ^ 0u)))))))))) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))))), (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) - 0u)) >> 0u) + 1, subgroup_local_id + 1, subgroup_local_id + 1))))))) | (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))))))))))))) % subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << (0u | 0u)), (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size))) << 0u) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))) % subgroup_size)));
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = (0 | _GLF_IDENTITY((0 ^ 0), _GLF_IDENTITY(1, clamp(1, 1, 1)) * ((0 ^ 0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, (1) ^ 0))) & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), false))))), (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1)))), bool(bvec2(! (_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1)))), false))))), false), true)))), true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), false), bvec2(bvec4(bvec2(_injected_loop_counter < (1 & 1), false), false, false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), false), bvec2(bvec4(bvec2(_injected_loop_counter < (1 & 1), false), false, false))))), false, false))))), (bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), false), bvec2(bvec4(bvec2(_injected_loop_counter < (1 & 1), false), false, false))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), false), bvec2(bvec4(bvec2(_injected_loop_counter < (1 & 1), false), false, false))))), false, false)))))) && true)), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), false)))))) || false)))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), (_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1)))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true))), true)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true))), true)), true)), true)))))), true, true, true)), false))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), false || (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), false)))))) || false, ((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false || (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), bool(bvec2(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_injected_loop_counter < (1 & 1), false || (_injected_loop_counter < (1 & 1))), false), true)))), true, true, true)), false)))))) || false) && true))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))); _injected_loop_counter ++)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + _GLF_IDENTITY(1, int(ivec2(1, 1)))))), (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + _GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(1, 0 + (1))))))))) / 1u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) - 0u))), 1u, 1u, 1u) * _GLF_IDENTITY((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)), min(_GLF_IDENTITY((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)))), _GLF_IDENTITY((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)), ((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u))) | _GLF_IDENTITY((_GLF_IDENTITY((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)), ~ (~ ((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)))))), clamp((_GLF_IDENTITY((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)), ~ (~ ((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)))))), (_GLF_IDENTITY((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)), ~ (~ ((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)))))), (_GLF_IDENTITY((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)), ~ (~ ((uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)))))))))))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), _GLF_IDENTITY((uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (read_1)) + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u))) + ((uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) + (read_1)), (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(_GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))), uint(0u))))) + (read_1))) / 1u) + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))), (false ? _GLF_FUZZED(uvec4(158967u, 32704u, 69544u, 37746u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + _GLF_IDENTITY(1, (1) | 0))))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u))), max(min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + _GLF_IDENTITY(1, (1) | 0))))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + _GLF_IDENTITY(1, (1) | 0))))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u))), (min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + _GLF_IDENTITY(1, (1) | 0))))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))) | (min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + _GLF_IDENTITY(1, (1) | 0))))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))))), clamp(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, uint(uvec4(read_1 + 1, 1u, 1u, 1u))), uint(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) + 1)))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), max(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), uint(uint(read_1 + 1)))), uint(uvec2(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)), uint(uint(read_1 + 1)))), 1u))), 0u, 0u, 1u), min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), (uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))))) << 0u)) - 0u), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + _GLF_IDENTITY(1, int(ivec2(1, 1))))))), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 1u)), max(_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 1u)), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 1u)), 1u * (uint(uvec2(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 1u))))) - 0u), _GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 1u)), (uint(uvec2(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 1u))) << 0u)))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + _GLF_IDENTITY(1, int(ivec2(1, 1))))))), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), _GLF_IDENTITY(min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uint(read_1))) + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) << 0u)) - 0u))))), 0u, 0u, 1u), (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, _GLF_IDENTITY(0u, (0u) << 0u), 1u)) | uvec4(0u, 0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 1u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), (uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))))) | (uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))))), 0u, 0u, 1u), min(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), (uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))))) | (uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))))), 0u, 0u, 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), (uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))))) | (uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), (uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1))))) | (uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))))), 0u, 0u, 1u)) / uvec4(1u, 1u, 1u, 1u))))) | uvec4(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), ~ (0u))))), 0u, 0u, 0u))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.7))) > injectionSwitch.y)), false)), true, false)), true && (bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false)))))) ? min(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))), 0u, 0u, 1u))), _GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (1))))))), 0u, 0u, 1u), (uvec4(uint(_GLF_IDENTITY(read_1 + 1, uint(_GLF_IDENTITY(uint(read_1 + 1), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) * 1u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | 1u) * (uint(read_1 + 1)))))), 0u, 0u, 1u)) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))) : _GLF_FUZZED(max(uvec4(_GLF_IDENTITY(136902u, clamp(_GLF_IDENTITY(136902u, ~ (~ (136902u))), 136902u, _GLF_IDENTITY(136902u, clamp(136902u, 136902u, 136902u)))), 182921u, 108679u, 166197u), workgroup_id)))))))))))) : _GLF_FUZZED(next_virtual_gid))), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (false ? _GLF_FUZZED(-82586) : _GLF_IDENTITY(4, _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) | (4)))), int(ivec2(int(int(_GLF_IDENTITY(4, (4) | (4)))), 1)))))), 4, 4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true)))))))), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && (false)), true, false, true))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
                      barrier();
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)) : _GLF_FUZZED(vec2(-1.8, 8.6)))).y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(false)), true && (! (_GLF_WRAPPED_LOOP(false)))))));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, min(64, 64))))) | 0), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, _GLF_IDENTITY(1, min(1, 1)))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), 64)), 0, 0, 0), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (_GLF_IDENTITY(64, clamp(64, 64, 64))) / 1), 0, 0, 0)) / ivec4(1, _GLF_IDENTITY(1, ~ (~ (1))), 1, 1))) | (ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(int(64))))))), 64)), 0, 0, 0))), max(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)))))) << 0, _GLF_IDENTITY(clamp((_GLF_IDENTITY(64, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) ^ 0), _GLF_IDENTITY(0, int(ivec3(0, 1, 0))))), 0, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) / 1), (_GLF_IDENTITY(64, (64) / 1)) | 0), 64)), 0, 0, 0), (ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)) / ivec4(1, 1, 1, 1))) | (ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(int(64))))))), 64)), 0, 0, 0))), max(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)))))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(64, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), 64)), 0, 0, 0), (ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)) / ivec4(1, 1, 1, 1))) | (ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(int(64))))))), 64)), 0, 0, 0))), max(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), int(ivec3(_GLF_IDENTITY(64, clamp(64, 64, 64)), 1, 1))), 0, 0, 0)))))) << 0, (false ? _GLF_FUZZED(-79640) : (_GLF_IDENTITY(64, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), 64)), 0, 0, 0), (ivec4(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) ^ 0), 64, 64)), 0, 0, 0)) / ivec4(1, 1, 1, 1))) | (ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(int(64))))))), 64)), 0, 0, 0))), max(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)))))) << 0)), (_GLF_IDENTITY(64, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), 64)), 0, 0, 0), (ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)) / ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0), 1, 1, 1))), (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(5), ivec4(5))) + (_GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), 64)), 0, 0, 0), (ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)) / ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0), 1, 1, 1))), max((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), 64)), 0, 0, 0), (ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)) / ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0), 1, 1, 1))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), 64)), 0, 0, 0), (ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)) / ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0), 1, 1, 1))))))) | (ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(int(64))))))), 64)), 0, 0, 0))), max(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), clamp(64, 64, 64)), 0, 0, 0), ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)))))) << 0), (clamp((_GLF_IDENTITY(64, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), 64)), 0, 0, 0), (ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)) / ivec4(1, 1, 1, 1))) | (ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(int(64))))))), 64)), 0, 0, 0))), max(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)))))) << 0, _GLF_IDENTITY((_GLF_IDENTITY(64, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), 64)), 0, 0, 0), (ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)) / ivec4(1, 1, 1, 1))) | (ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(int(64))))))), 64)), 0, 0, 0))), max(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)))))) << 0, (false ? _GLF_FUZZED(-79640) : (_GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, (64) * 1), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1), (ivec4(_GLF_IDENTITY(64, (64) * 1), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1)) >> ivec4(0, 0, 0, 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / _GLF_IDENTITY(1, (1) | (1))), _GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, int(ivec3(64, 0, 0))) : _GLF_FUZZED(-44214))))), 0, 0, 0), (ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)) / ivec4(1, 1, 1, 1))) | (ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, int(int(64))))))), 64)), _GLF_IDENTITY(0, (0) | (0)), 0, 0))), max(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)))))) << 0)), (_GLF_IDENTITY(64, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) / 1), 64)), 0, 0, 0), (ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)) / ivec4(1, 1, 1, 1))) | (ivec4(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), int(int(64))))))), 64)), 0, 0, 0))), max(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (_GLF_IDENTITY(64, clamp(64, 64, 64))) >> (0 << _GLF_IDENTITY(int(6), int(6)))), 0, 0, 0), ivec4(_GLF_IDENTITY(64, clamp(64, 64, 64)), 0, 0, 0)))))) << 0)) | 0))), 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, clamp(1 & 1, _GLF_IDENTITY(1 & 1, (1 & 1) << 0), 1 & 1)), (_GLF_IDENTITY(1 & 1, clamp(1 & 1, _GLF_IDENTITY(1 & 1, (1 & 1) << 0), 1 & 1))) - 0))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             barrier();
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
    }
   else
    {
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.8)), float(injectionSwitch.x), bool(true)))) / 1.0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), ~ (~ (_GLF_IDENTITY(~ (5), int(ivec4(~ (5), 0, 0, 0))))))))), int(5)), int(int(((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), int(ivec2(_GLF_IDENTITY(int(1), int(1)), 0)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, ~ (~ (5)))), int(5)))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) ^ 0)), int(ivec3(int(_GLF_IDENTITY(5, max(5, 5))), 1, 1)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))) || false)));
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       subgroupAll(true);
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec2(0.0, 0.0))) > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
