#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0)) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, exp(0.0), _GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4836.2142)), bool(false))), sin(abs(0.0)), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))) || false))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))) || false)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u))) >> uvec3(0u, 0u, 0u)))) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)))) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)) && (false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))), ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))))))) || false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(false)), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true && (_GLF_DEAD(false)), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true && (_GLF_DEAD(false)), false, true), false)), true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec4(! (false), true, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec4(! (false), true, true, false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-51.71)), bool(false)))), false, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), min(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))) ? _GLF_FUZZED(num_workgroup) : subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)))) << (0u & 119964u))), clamp(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size)))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) << 0u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat2(-2.4, -299.683, -2.7, 4.6))))) < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat2(-2.4, -299.683, -2.7, 4.6))))) < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(determinant(mat2(-2.4, -299.683, -2.7, 4.6))))) < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))))) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size) << 0u))), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), 0u | ((subgroup_size))) << 0u)) >> (1u ^ 1u)) | _GLF_IDENTITY(((subgroup_size) << 0u), (_GLF_IDENTITY(((subgroup_size) << 0u), ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) << 0u)) >> 0u)) >> (0u | 0u))), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)))) << (0u & 119964u))), clamp(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size)))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), min(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)))))), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size) << 0u))), ((_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) << 0u)) >> (1u ^ 1u)) | _GLF_IDENTITY(((subgroup_size) << 0u), (_GLF_IDENTITY(((subgroup_size) << 0u), ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) << 0u)) >> 0u)) >> (0u | 0u))), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)), (_GLF_IDENTITY(min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)), (min((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), min(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)) | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))))))) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) << (0u & 119964u))), clamp(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size)))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), _GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), mix(vec2(_GLF_FUZZED(-3366.3523), (vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]))[1]), vec2(_GLF_IDENTITY((vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]))[0], max((vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]))[0], (vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]))[0])), _GLF_FUZZED(float(92138u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.7) : injectionSwitch.x)))) < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size) << 0u))), ((_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) << 0u)) >> (1u ^ 1u)) | _GLF_IDENTITY(((subgroup_size) << 0u), (_GLF_IDENTITY(((subgroup_size) << 0u), ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) << 0u)) >> 0u)) >> (0u | 0u))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * (1u | 1u))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) | uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)))) << (0u & 119964u))), clamp(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)))) << (0u & 119964u))), clamp(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size)))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)))) << (0u & 119964u))), clamp(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size)))))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(mat2x4(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sin(0.0), 1.0, 1.0, tan(0.0))), (vec4(mat2x4(vec4(injectionSwitch.y, 0.0, 1.0, 0.0), sin(0.0), 1.0, 1.0, tan(0.0)))) * mat4(1.0)))), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size) << 0u))), ((_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) << 0u)) >> (1u ^ 1u)) | _GLF_IDENTITY(((subgroup_size) << 0u), (_GLF_IDENTITY(((subgroup_size) << 0u), ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) << 0u)) >> 0u)) >> (0u | 0u))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 1u)), (uint(uvec3(0u, 1u, 1u))) | 0u))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)))) << (0u & 119964u))), clamp(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size)))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) << 0u, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size) << 0u))), ((_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) << 0u)) >> (1u ^ 1u)) | _GLF_IDENTITY(((subgroup_size) << 0u), (_GLF_IDENTITY(((subgroup_size) << 0u), ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) << 0u)) >> 0u)) >> (0u | 0u))), 1u, 0u)) ^ uvec3(0u, 0u, 0u))))), (false ? _GLF_FUZZED(workgroup_id) : uint(uvec3(_GLF_IDENTITY((subgroup_size) << 0u, _GLF_IDENTITY(((subgroup_size) << 0u), clamp((_GLF_IDENTITY((subgroup_size) << 0u, ~ (~ ((subgroup_size) << 0u)))), ((subgroup_size) << 0u), _GLF_IDENTITY(((subgroup_size) << 0u), (((subgroup_size) << 0u)) / 1u))) | _GLF_IDENTITY(((subgroup_size) << _GLF_IDENTITY(0u, 0u ^ (0u))), (((subgroup_size) << 0u)) / (0u | (1u | 1u)))), 1u, 0u)))))) + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (~ (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))))), ((subgroup_size)) ^ 0u)))) << (0u & 119964u))), clamp(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size))) - 0u)))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size)))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(103.598))), 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size) << 0u))), ((_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) << 0u)) >> (1u ^ 1u)) | _GLF_IDENTITY(((subgroup_size) << 0u), (_GLF_IDENTITY(((subgroup_size) << 0u), ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) << 0u)) >> 0u)) >> (0u | 0u))), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)))) << (0u & 119964u))), ((_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)))) << (0u & 119964u)))) >> (102003u & 0u)), clamp(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size)))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(vec4(778.971, 3.2, 7.1, -85.24).g)), vec2(_GLF_FUZZED(-3.2), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), clamp(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))))), vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size) << 0u))), ((_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) << 0u)) >> (1u ^ 1u)) | _GLF_IDENTITY(((subgroup_size) << 0u), (_GLF_IDENTITY(((subgroup_size) << 0u), ((_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u) << 0u)) >> 0u)) >> (0u | 0u))), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) ^ 0u)))) << (0u & 119964u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_size)), max(~ ((subgroup_size)), ~ ((subgroup_size)))), (~ ((subgroup_size))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size)))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))) : (subgroup_size) << 0u))), ((_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) << 0u)) >> (1u ^ 1u)) | _GLF_IDENTITY(((subgroup_size) << 0u), (_GLF_IDENTITY(((subgroup_size) << 0u), ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) << 0u)) >> 0u)) >> (0u | 0u))), 1u, 0u)) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))) * (uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))))))) << (0u & 119964u))), clamp(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size)))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)))), (_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))) + 0.0), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size) << 0u))), ((_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) << 0u)) >> (1u ^ 1u)) | _GLF_IDENTITY(((subgroup_size) << 0u), (_GLF_IDENTITY(((subgroup_size) << 0u), ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) << 0u)) >> 0u)) >> (0u | 0u))), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)))) << (0u & 119964u))), (~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)))) << (0u & 119964u)))) >> 0u), clamp(_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) / 1u), ~ ((subgroup_size)), ~ ((subgroup_size)))))) << 0u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size) << 0u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((75.53 / -1.1)), _GLF_FUZZED(float(_GLF_IDENTITY(false, true && (false))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, 0.0, 1.0, 0.0)), clamp(float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0)), float(vec4(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5176.6653)), float(1.0), bool(true))), 0.0)), float(vec4(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size) << 0u))), ((_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) << 0u)) >> (1u ^ 1u)) | _GLF_IDENTITY(((subgroup_size) << 0u), (_GLF_IDENTITY(((subgroup_size) << 0u), ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u) << 0u)) >> 0u)) >> (0u | 0u))), 1u, 0u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))))), (false ? _GLF_FUZZED(workgroup_id) : uint(uvec3(_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) | ((subgroup_size) << 0u)), 1u, 0u)))))) + ((subgroup_local_id + 1) % subgroup_size)) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, 4)), 64, _GLF_IDENTITY(0, max(0, 0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(43.99)), float(mat2x4(float(_GLF_FUZZED(43.99)), 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0))), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(_GLF_IDENTITY(57.01, clamp(_GLF_IDENTITY(57.01, clamp(57.01, _GLF_IDENTITY(57.01, mix(float(_GLF_FUZZED(-505.771)), float(57.01), bool(true))), 57.01)), 57.01, _GLF_IDENTITY(57.01, mix(float(_GLF_FUZZED(-871.623)), float(57.01), bool(true)))))))), sqrt(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, abs(1.0), abs(1.0), 0.0))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false))))))))) && true, true && ((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false))))))))) && true))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false)))))))), (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), false || (bool(bvec4(true, true, true, false))))))))) && true), true), false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y))))))))), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(960.150)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))) < injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7.9)), bool(false))), false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), false))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-958.187 * 3153.0936))), vec2(_GLF_FUZZED(6356.0747), (injectionSwitch)[1]), bvec2(false, true))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-958.187 * 3153.0936))), vec2(_GLF_FUZZED(6356.0747), (injectionSwitch)[1]), bvec2(false, true))).x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 ^ (1)) : _GLF_FUZZED(-4550)))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false, true)), (bool(bvec3(_GLF_DEAD(false), false, true))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(537.522)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5.1), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(-5.1), clamp(_GLF_FUZZED(-5.1), _GLF_FUZZED(-5.1), _GLF_FUZZED(-5.1))), _GLF_FUZZED(-5.1)), mix(float(_GLF_FUZZED(-62.08)), float(min(_GLF_IDENTITY(_GLF_FUZZED(-5.1), clamp(_GLF_FUZZED(-5.1), _GLF_FUZZED(-5.1), _GLF_FUZZED(-5.1))), _GLF_FUZZED(-5.1))), bool(true)))), (injectionSwitch)[_GLF_IDENTITY(1, (1) << 0)]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), true))))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false)), true), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false)), true))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false)), true), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), false)), true)))))))))), true))))))), false, true))))))).x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, 0 | (4)), 4)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), false || (true && (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))), true && (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true)))))))), true), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))), true && (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true)))))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))), true && (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true)))))))), true), true)), false, false))), true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))), true && (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true)))))))), true), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))), true && (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true)))))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))), true && (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true)))))))), true), true)), false, false))), true))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))), true && (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true)))))))), true), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))), true && (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true)))))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true))))), true && (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((false), true)))))))), true), true)), false, false))), true))), true), true))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec3(bvec2((false), true), true))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec3(bvec2((false), true), true))))), bool(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec3(bvec2((false), true), true))))), bool(bvec4(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), bvec2(bvec3(bvec2((false), true), true))))), true, true, false)))))))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bool(! _GLF_IDENTITY((false), bool(bool((false))))))))))))) || false)), bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true)))), bool(bvec4(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), bool(bool(! (! _GLF_IDENTITY((false), ! (! ((false)))))))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true)))), true, false, false))))), bool(bvec4(false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))), (_GLF_IDENTITY(! (false), true && (! (false)))) || false), bool(bool(! (false)))))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), ! (! ((_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))), true), bvec2(bvec3(bvec2((false), true), true))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true), true))))), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), true), true)))))) || false), true), false)))), false || (bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))))), true), bvec2(bvec3(bvec2((bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))))), true), false))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), true))))), true), false), bvec3(bvec3(bvec3(bvec2((bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))))), true), false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bool(! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true))))) || false)), true)))), bool(bvec4(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))) || false)), true)))), true, false, false))))), true, false, true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-726.676), max(_GLF_IDENTITY(_GLF_FUZZED(-726.676), clamp(_GLF_FUZZED(-726.676), _GLF_FUZZED(-726.676), _GLF_IDENTITY(_GLF_FUZZED(-726.676), (true ? _GLF_FUZZED(-726.676) : _GLF_FUZZED(6.4))))), _GLF_IDENTITY(_GLF_FUZZED(-726.676), mix(float(_GLF_FUZZED(8.6)), float(_GLF_FUZZED(-726.676)), bool(true))))) : injectionSwitch.y))))) + length(vec2(0.0, 0.0))), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-726.676), max(_GLF_IDENTITY(_GLF_FUZZED(-726.676), clamp(_GLF_FUZZED(-726.676), _GLF_FUZZED(-726.676), _GLF_IDENTITY(_GLF_FUZZED(-726.676), (true ? _GLF_FUZZED(-726.676) : _GLF_FUZZED(6.4))))), _GLF_IDENTITY(_GLF_FUZZED(-726.676), mix(float(_GLF_FUZZED(8.6)), float(_GLF_FUZZED(-726.676)), bool(true))))) : injectionSwitch.y))))) + length(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0)))))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true)))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))) || false)), bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true)))), bool(bvec4(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))))))) || false)), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))), false || (false || ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), true)))), true, false, false))))), bool(bvec4(false || _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true), bvec3(bvec4(bvec3(bvec2((false), true), true), false)))))))))), ! (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && (bool(! (false)))))))))))) || false)), bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true)))), bool(bvec4(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)), bool(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true)))), true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (false) || false)))))), true, _GLF_IDENTITY(false, (false) || false), true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), (injectionSwitch) * mat2(1.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-726.676) : injectionSwitch.y))))) + length(vec2(0.0, 0.0)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-18.76) : injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4997.9234)), float(injectionSwitch.y), bool(true))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), (int(ivec3(1, 1, 0))) | (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0)), 0 | (int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0))))))), max(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), (int(ivec3(1, 1, 0))) | (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0)), 0 | (int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(0, min(0, 0))))))))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), (int(ivec3(1, 1, 0))) | (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0)), 0 | (int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0))))))))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 0)), (int(ivec3(1, 1, 0))) | (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0)), 0 | (int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0))))))), max(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, _GLF_IDENTITY(1, (1) + 0), 0), (false ? _GLF_FUZZED(ivec3(-19274, 74915, -10356)) : ivec3(1, _GLF_IDENTITY(1, (1) + 0), 0)))), (int(ivec3(1, 1, 0))) | (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0)), 0 | (int(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, _GLF_IDENTITY(0, min(0, 0))))))))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 1, 0), ivec3(ivec3(ivec3(1, 1, 0))))), (int(ivec3(1, 1, 0))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0)), (ivec3(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0))) << ivec3(0, 0, 0))), (ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0)), (ivec3(ivec3(_GLF_IDENTITY(1, ~ (~ (1))), 1, 0))) << ivec3(0, 0, 0)))) ^ ivec3(0, 0, 0)))), 0 | (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (1))), 1, 0)))))))))))) < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, ~ (~ _GLF_IDENTITY((read_1), ((read_1)) << 0u))))), (true ? _GLF_IDENTITY(read_1, 0u ^ (read_1)) : _GLF_FUZZED(num_workgroup)))) ^ 0u) + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, read_1 + 1)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, read_1 + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), ~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, read_1 + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), clamp(uvec4(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, read_1 + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), uvec4(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)), max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)), clamp(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, 0u | (read_1)))))) + 1, read_1 + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u), uvec4(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, read_1 + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)))))))) == read_2) && true)) + 1, 4, 64, _GLF_IDENTITY(4, (4) | (4)));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))), bool(bool(_GLF_IDENTITY(((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY((false), true && ((false)))))), (! (false)) || _GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(cosh(-9.4)) : (injectionSwitch)[0])), _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))).y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-6.7, (_GLF_IDENTITY(-6.7, clamp(-6.7, -6.7, -6.7))) + 0.0)), (injectionSwitch)[1]), bvec2(false, true))).y, (false ? _GLF_FUZZED(-95.68) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) << 0)], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true)))) * mat2(1.0)).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))).y)))), 1.0, 1.0, determinant(mat3(sin(0.0), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8811.8847))), 1.0)))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), sin(0.0), sin(0.0), exp(0.0), 1.0), (mat2x3((injectionSwitch), sin(0.0), sin(0.0), exp(0.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat2x3((injectionSwitch), sin(0.0), sin(0.0), exp(0.0), 1.0), (mat2x3((injectionSwitch), sin(0.0), sin(0.0), exp(0.0), 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + vec2(0.0, 0.0)))[0], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8.0)), vec2(_GLF_FUZZED(-6.7), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))), false, true, false))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(3.7, float(mat2x4(3.7, 1.0, 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))), bool(false)))) + 0.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(round(length(normalize(1.0))), max(round(length(normalize(1.0))), round(length(normalize(1.0))))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0)))))), 0.0)))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0)))))), 0.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0)))))), 0.0)))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0)))))), 0.0)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0)))))), 0.0)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0)))))), 0.0)))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0)))))), 0.0)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0)))))), 0.0)))))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, float(vec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0, 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.7)), bool(false)))) + 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, round(length(normalize(1.0)))))), 0.0)))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true))) || false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true)), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true))) || false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false)), false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (1) / (0 ^ 1)) == read_2), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (1) / (0 ^ 1)), 1u * (_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) / (0 ^ 1), (_GLF_IDENTITY((1) / (0 ^ 1), ((1) / (0 ^ 1)) ^ (0 | 0))) ^ (1 ^ 1))))) == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) << 0u)) << 0u) + _GLF_IDENTITY(1, (1) / (0 ^ 1)) == read_2), (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), min((read_1), (read_1))) << 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (0 ^ 1)), clamp(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY(0, 0 | (0)) ^ 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / (0 ^ 1)), 1 * (_GLF_IDENTITY(1, (1) / (0 ^ 1)))), _GLF_IDENTITY(1, (1) / (0 ^ 1)))) == read_2)) - 0u), uint(_GLF_IDENTITY(read_1, (read_1) << 0u) + _GLF_IDENTITY(1, (1) / (0 ^ 1)) == read_2))) + 1, _GLF_IDENTITY(4, (4) | 0), 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(_GLF_IDENTITY(bvec3((true) || false, false, true), bvec3(bvec3(bvec3((true) || false, false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))), false)))))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y) + 0.0)) + 0.0), false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), determinant(mat4(exp(_GLF_IDENTITY(0.0, float(mat4(0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), 0.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, determinant(mat2(1.0, log(1.0), 0.0, 1.0)), abs(1.0)))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) || false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((false) || false, true)), true && (bool(bvec2((false) || false, true)))), bool(bvec4(bool(bvec2((false) || false, true)), true, false, true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y))))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), false))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), bvec3(bvec3(bvec3(false, true, false))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), false || ((false)))))))), _GLF_IDENTITY(true, (true) && true), false), bvec3(bvec3(bvec3(false, true, false))))))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), true, false)))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec3(bvec3(bvec3(false, true, false))))), true)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, true, false)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, true, false)), true)), false))))))), true)), false))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false))))), true)), false))), true))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))))), true))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(9.2, 316.602, 2531.9033, 5.0).x)), float(0.0), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.1)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(784.695)), bool(false))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), bool(true)))))), (mat2x3(injectionSwitch, 0.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0)), mix(vec2((vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0)))[0], _GLF_FUZZED(-2534.7703)), vec2(_GLF_FUZZED(-8.2), (vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, abs(0.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4159.0535)), bool(false))), 1.0)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))).y))))))) && true))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
