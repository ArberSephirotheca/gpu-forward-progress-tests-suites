#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-49.08), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1])), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(1593.8093)), bvec2(true, false))).y)) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-49.08), min(_GLF_FUZZED(-49.08), _GLF_IDENTITY(_GLF_FUZZED(-49.08), clamp(_GLF_FUZZED(-49.08), _GLF_FUZZED(-49.08), _GLF_FUZZED(-49.08))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], mix(float(_GLF_FUZZED(2.1)), float(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), bool(true))), min(_GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1])), (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), (int(ivec2(1, 1))) | (int(ivec2(1, 1)))))]))), vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], _GLF_FUZZED(1593.8093)), bvec2(true, false))).y)) || (false))))))
      barrier();
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))), true))))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz = GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_size;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & int(true))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y)) || ((false))) && true)) && true), _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))) && (false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), true, true)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), false || (_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), bool(bvec3(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), true, true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), false || (_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), bool(bvec3(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), true, true)))))), ((_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), false || (_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), bool(bvec3(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), true, true))))))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), false || (_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), bool(bvec3(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), true, true)))))), ((_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), false || (_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), bool(bvec3(bool(bvec4(true && (_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), false))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x < injectionSwitch.y, true)), false)))))))), false)), true))))), true, true)), true, true))))))) || false), true), false, false)))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))), ! (! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), bool(bvec4(! (! (! (true))), true, true, true))))))))))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))) || false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec3(! (! (_GLF_IDENTITY(true, ! (! (true))))), false, false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (true)))))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! _GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), bool(bool((! (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), bool(bool((! (_GLF_IDENTITY(true, ! (! (true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), false || ((! (! (_GLF_IDENTITY(true, ! (! (true))))))))))) && true)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false)), true))), true)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 uvec2 GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6684.9320)))))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          barrier();
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))) || false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))) || false))))) || false))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(64482) : 1)), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(64482) : 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(64482) : 1)), clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(64482) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(64482) : 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(64482) : 1)))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(64482) : 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y = subgroup_local_id;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, 1 * (0)) ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))) || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)))) || false)), bool(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))) || (false), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))) || (false), false, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && (false || (false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))) || (false), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))) || (false), false, true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && (false || (false))))))) || false)), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-430.367)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) < injectionSwitch.y)) && (false || (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))) || (false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && (false || (false)))) || false)), false, false), bvec3(bvec4(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))) || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)))) || false)), false, false), true))), false)))))))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.3) : injectionSwitch.x)))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true, true)))) && true); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (_GLF_WRAPPED_IF_FALSE(false))))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 do
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), clamp(~ (_injected_loop_counter), ~ (_injected_loop_counter), ~ (_injected_loop_counter))))) > 0); _injected_loop_counter --)
    {
     _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.w = num_workgroup, (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.w = num_workgroup) | 0u);
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), gl_WorkGroupSize.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(51557u) : _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), gl_WorkGroupSize.x), max(min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), gl_WorkGroupSize.x), min(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), gl_WorkGroupSize.x))))))));
 _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.z = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u))), 1u, 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u))), 1u, 1u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + _GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))) + 0u, _GLF_IDENTITY(_GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp((workgroup_size) + 0u, (workgroup_size) + 0u, _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp((workgroup_size) + 0u, (workgroup_size) + 0u, _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u))))), 0u + (_GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (clamp((workgroup_size) + 0u, (workgroup_size) + 0u, _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u)))))))) >> (0u & 126165u)))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u), (_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)) | (_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))))), uint(uint(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u), (_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)) | (_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u))))))))), uint(uvec3(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), 0u, 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), ((_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)))) + 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), ((_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)))) + 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), ((_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)))) + 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (uvec3(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), ((_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)))) + 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) << (0u | 0u))) | 0u)))), uint(uvec3(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u))) ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), 0u, 0u))), clamp(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), uint(uvec3(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_id)))) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), 0u, 0u))), _GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uint(workgroup_size)), max(uint(uint(workgroup_size)), uint(uint(workgroup_size))))), _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), uint(uvec3(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), 0u, 0u))), _GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u, ((_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) | ((workgroup_size) + 0u)), (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u) - 0u))))), uint(uvec3(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u), (_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)) + 0u)) ^ 0u)))), 0u, 0u)))))))) / 1u), ~ (~ (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.z = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + _GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))) + 0u, _GLF_IDENTITY(clamp((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))), uint(uvec3(min(workgroup_size, _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))), 1u, (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))) + 0u, (workgroup_size) + 0u, _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id[0])))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))), clamp(_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))), _GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))))))), (_GLF_IDENTITY(0u, (0u) | 0u)) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (clamp((workgroup_size) + 0u, (workgroup_size) + 0u, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uaddCarry(subgroup_size, subgroup_size, subgroup_local_id)) : _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size) + 0u, max((workgroup_size) + 0u, (workgroup_size) + 0u)), ((workgroup_size) + 0u) | ((workgroup_size) + 0u))))) ^ 0u), ((workgroup_size) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (0u) | 0u)) - 0u))))))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) / 1u)) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), uint(uvec3(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size), 0u ^ ((workgroup_size))) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), 0u, 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) - 0u) + 0u, clamp((workgroup_size) + 0u, _GLF_IDENTITY((workgroup_size), min((workgroup_size), (workgroup_size))) + 0u, _GLF_IDENTITY((workgroup_size), ~ (_GLF_IDENTITY(~ ((workgroup_size)), (~ ((workgroup_size))) + 0u))) + 0u))) | 0u)))), uint(uvec3(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ (_GLF_IDENTITY((workgroup_size) + 0u, uint(uvec2((workgroup_size) + 0u, 0u))))), (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, ((_GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u)) + 0u) | ((workgroup_size) + 0u)), (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), 0u, 0u))), clamp(_GLF_IDENTITY(0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + _GLF_IDENTITY(0u, (0u) - (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (workgroup_size) + 0u))) | 0u)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), max(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), ~ (~ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u)))), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u))), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)))))))) | 0u))), 0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)))))))) | 0u)))))))))), ((~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), max(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_id)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), ~ (~ (_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u)))), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u))), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)))))))) | 0u))), 0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) * 1u), (workgroup_size), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) << 0u))) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)))))))) | 0u))))))))))) | 0u)), uint(uvec3(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) + 0u, _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), clamp((_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), (_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), (_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(subgroup_id))))), 0u, 0u)), uint(uvec4(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), clamp((_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), (_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), (_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(subgroup_id))))), 0u, 0u)), max(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), clamp((_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), (_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), (_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(subgroup_id))))), 0u, 0u)), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), clamp((_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), (_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))), (_GLF_IDENTITY((workgroup_size) + 0u, _GLF_IDENTITY(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u), uint(_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), ~ (~ (_GLF_IDENTITY(uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u)), (uint(clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) - 0u)))))))))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(subgroup_id))))), 0u, 0u)))), 0u, 1u, 1u)))) | 0u)))), 0u, 0u))), _GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + _GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), uint(uvec3(0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), clamp(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), clamp(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))))))), clamp(~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), clamp(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))))))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), clamp(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))))))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), clamp(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))))))))), 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), clamp(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))))))), clamp(~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), clamp(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))))))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), clamp(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))))))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), clamp(((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, 0u ^ ((workgroup_size) + 0u)), _GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) - 0u), (workgroup_size) + 0u))) | 0u)))))))))), 0u, 0u))))))), 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)) ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (true ? _GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))) : _GLF_FUZZED(138589u))) + 0u, (_GLF_IDENTITY((workgroup_size), (true ? _GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))) : _GLF_FUZZED(138589u))) + 0u) | (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (true ? _GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))) : _GLF_FUZZED(138589u))) + 0u, uint(uvec4(_GLF_IDENTITY((workgroup_size), (true ? _GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))) : _GLF_FUZZED(138589u))) + 0u, 1u, 1u, 0u))))), (_GLF_IDENTITY((workgroup_size) + 0u, clamp(_GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_size) + 0u, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, ((workgroup_size) + 0u) | 0u)) | ((workgroup_size) + 0u))) / 1u)))) | 0u)))), uint(uvec3(0u ^ ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) + 0u, (_GLF_IDENTITY((workgroup_size) + 0u, clamp((workgroup_size) + 0u, (workgroup_size) + 0u, (workgroup_size) + 0u))) | 0u)))), 0u, 0u)))))))) / 1u))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp2(49.54)) : injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, tan(_GLF_ZERO(0.0, injectionSwitch.x)) + (0.0)), 1.0, exp(0.0), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), min(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat3x2(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), transpose(transpose(mat3x2(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0)))))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(vec2(-4789.6666, 136.635)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-67.50))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), clamp(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), float(mat3x4(tan(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1407.6885)), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sqrt(0.0), 1.0, 0.0, abs(1.0), 0.0, 1.0, log(1.0), 0.0), (mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), sqrt(0.0), 1.0, 0.0, abs(1.0), 0.0, 1.0, log(1.0), 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch.y, injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0))), (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 1.0))) > injectionSwitch.y))), true), true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp2(49.54)) : injectionSwitch.y)), mix(float(_GLF_FUZZED((-8.5))), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp2(49.54)) : injectionSwitch.y))), bool(true))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), clamp(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)), float(float(injectionSwitch.y)))))) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(797.109) : 0.0)), 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), 0.0 + (sqrt(0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(vec2(0.8, 921.059)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), clamp(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), float(mat3x4(tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(356.656) : 0.0)))))) * 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))), injectionSwitch.y, injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)))).y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp2(49.54)) : injectionSwitch.y)), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))))), bool(bvec4(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))))), true, true, true))), true)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(93.61)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0)))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0)))))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) - 0.0))))), true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), true)))), false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), clamp(float(mat4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.7))))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), float(mat3x4(tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0)))) * 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.4)), float(1.0), bool(true))), 1.0)), float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, cos(0.0), 1.0)), (false ? _GLF_FUZZED(14.90) : float(vec4(1.0, 0.0, cos(0.0), 1.0)))))))))), injectionSwitch.y, injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp2(49.54)) : injectionSwitch.y)), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))))), bool(bvec4(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))))), true, true, true))), true)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(93.61)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0)))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0)))))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) - 0.0))))), true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), true)))), false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), clamp(float(mat4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.7))))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), float(mat3x4(tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0)))) * 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.4)), float(1.0), bool(true))), 1.0)), float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, cos(0.0), 1.0)), (false ? _GLF_FUZZED(14.90) : float(vec4(1.0, 0.0, cos(0.0), 1.0)))))))))), injectionSwitch.y, injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), true, false)), true && (bool(bvec3(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp2(49.54)) : injectionSwitch.y)), _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))))), bool(bvec4(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y))))))), true, true, true))), true)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(93.61)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0)))))) > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0)))))) > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), (float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) - 0.0))))), true), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0), (true ? (vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-9.9, 6.9, -62.29, -1857.2798, 50.60, 23.33)) : mat2x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))))))))), true)))), false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), clamp(float(mat4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.7))))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), float(mat3x4(tan(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0)))) * 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.4)), float(1.0), bool(true))), 1.0)), float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, cos(0.0), 1.0)), (false ? _GLF_FUZZED(14.90) : float(vec4(1.0, 0.0, cos(0.0), 1.0)))))))))), injectionSwitch.y, injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, (injectionSwitch.y) * 1.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true))), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))))), true, false))))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(exp2(49.54)) : injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * exp(0.0)), injectionSwitch.y), 1.0 * (_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(vec3(21.53, 0.1, -9709.8467))) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])), injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0)))))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2(injectionSwitch.y, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), true), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))), false)), false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))), false)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0)), 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), clamp(float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), float(mat3x4(tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) * 1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, tan(0.0), 0.0, 0.0, abs(1.0), 0.0, 1.0, sin(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0)))))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), max(float(_GLF_FUZZED(-3.3)), _GLF_IDENTITY(float(_GLF_FUZZED(-3.3)), 0.0 + (float(_GLF_FUZZED(-3.3)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), max(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y, (injectionSwitch.y) * 1.0)), bool(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), max(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y, (injectionSwitch.y) * 1.0)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))))))))))))))))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)) ^ 0), _injected_loop_counter)) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint workgroup_base = GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.z * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0), (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)) * mat2(1.0)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0), (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)) * mat2(1.0)))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0), (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)) * mat2(1.0)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0), (mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0)) * mat2(1.0)))).x > injectionSwitch.y)) && true)) && true))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)) | 0))
          {
           barrier();
          }
        }
      }
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false))))))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
            {
             for(int _injected_loop_counter = (int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1331, ~ (~ (_GLF_IDENTITY(1331, (1331) | (1331))))) & 0)); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(usubBorrow(127300u, _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))), num_workgroup)) : _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) + GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y = virtual_gid;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(-7.0))) + (injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 | (int(7)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), clamp(0u | (subgroup_id), 0u | (subgroup_id), 0u | (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) >> 0u) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), (0u | (subgroup_id)) | (0u | (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) >> 0u) * subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) >> 0u) * subgroup_size)) + ((_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y) << 0u)), (true ? (_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y) << 0u)) : _GLF_FUZZED(subgroup_local_id))), ((GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y)) - 0u)) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.4), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (false ? _GLF_FUZZED(asinh(vec2(7.4, -357.600))) : mix(vec2(_GLF_FUZZED(9.4), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 + (int(3)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 + (_GLF_IDENTITY(int(3), 0 ^ (int(3)))))))), max(int(int(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 ^ (3))), 0 + (int(3)))))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 + (int(3)))), 0 | (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 + (int(3)))))))))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0), (true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
     do
      {
       GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x = next_virtual_gid;
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))));
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), ((false) || false) || false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), ((false) || false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup, uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup)).xyz.y, uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup, uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup)).xyz.y, 0u, 1u))), GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y))], 4, 64, 0);
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))
      {
       do
        {
         atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id) << uvec2(0u, 0u)).x, uint(uint(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x, (GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x) / 1u))))], uint(_GLF_IDENTITY(read_1, (read_1) / 1u) + 1), _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), int(int(4))), (false ? _GLF_FUZZED(44333) : _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), int(int(4))))))))))), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-90360) : 64)), 4);
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y], ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y]), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y])))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y]), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y])), max((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y])), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y])), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y])))))))), ((_GLF_IDENTITY(~ (buf[_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup, uvec4(0u, 0u, 0u, 0u) + (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup)).xyz.y]), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y]), clamp(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y]), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y]), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y]))))))) * 1u)), uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y]), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y])), max((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y])), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y])), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y])))))))), ((_GLF_IDENTITY(~ (buf[_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup, uvec4(0u, 0u, 0u, 0u) + (GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup)).xyz.y]), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y]), clamp(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y]), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y]), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) ? _GLF_FUZZED(workgroup_size) : ~ (buf[GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.y]))))))) * 1u)), 0u, 0u, 0u))))), 4, 64, 0);
 GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x = read_2;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), (int(1)) | (int(1))), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.1)))))) * 1.0)))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (1 << _GLF_IDENTITY(int(0), int(0))) >> 0)) - 0), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), 0 | (int(ivec2(1, 0))))) << _GLF_IDENTITY(int(0), int(0))) / 1), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) ^ _GLF_IDENTITY(0, (0) << 0))))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           if(_GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.y + 1, (true ? _GLF_IDENTITY(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, min(GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id, GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id)).y + 1 : _GLF_FUZZED(workgroup_base))) < subgroup_size)
            {
             if(_GLF_DEAD(false))
              barrier();
             atomicStore(buf[GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x], uint(_GLF_IDENTITY(read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x, ! (! (read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) >> 0) == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x, ! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x, false || (_GLF_IDENTITY(read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x, ! (! (read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x))))))), true && ((! (_GLF_IDENTITY(read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x, false || (_GLF_IDENTITY(read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x, ! (! (read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x))))))))))), ! (! ((_GLF_IDENTITY(read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x, ! (! (_GLF_IDENTITY(read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x, false || (_GLF_IDENTITY(read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x, ! (! (read_1 + 1 == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x)))))))))))))))), true && _GLF_IDENTITY((read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))))) == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x), ((read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), clamp(ivec2(1, _GLF_IDENTITY(0, (0) + 0)), ivec2(1, 0), ivec2(1, 0))))) == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x)) || false)))))) + 1, 4, 64, 4);
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) || false))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((1 ^ 1), int(ivec3(_GLF_IDENTITY((1 ^ 1), max((1 ^ 1), _GLF_IDENTITY((1 ^ 1), 0 | ((1 ^ 1))))), 1, 1)))); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), (float(vec2(injectionSwitch.y, 1.0))) / 1.0)))) : _GLF_FUZZED(33.39)))))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.9)), float(injectionSwitch.x), bool(true))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y) + 0.0)))))
                        {
                         for(int _injected_loop_counter = _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
                                    {
                                     barrier();
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 ^ 0, (0 ^ 0) | (0 ^ 0)))); _injected_loop_counter --)
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_DEAD(false))
                                            barrier();
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                }
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (_GLF_IDENTITY(3, min(3, 3))))), _GLF_IDENTITY(int(3), (int(3)) - 0)))); _injected_loop_counter ++)
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                              }
                             else
                              {
                               barrier();
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                }
                               else
                                {
                                }
                              }
                            }
                          }
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false))), false, false)), (bool(bvec4((false), true, false, false))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), false, false))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))))))), ! (! ((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false))), false, false)), (bool(bvec4((false), true, false, false))) && true))), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false))), ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false)))))), false, false, false)))) || false), false, false)), (bool(bvec4((false), true, false, false))) && true)))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), false, false))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), false, false))))))), ! (! ((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))), true)))))))))))))))))) || false)))
                            {
                             do
                              {
                               do
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))), false, false))))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)), true, true, false)))))
                        barrier();
                       for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-36661)))); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.2) : injectionSwitch.x))), max(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.2) : injectionSwitch.x))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.2) : injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
                          barrier();
                         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0)))))
                            {
                             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(! (_GLF_DEAD(false)), true, _GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), bool(bvec3(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), true, true)))))), (injectionSwitch.x > injectionSwitch.y))))) || false)))))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             if(_GLF_DEAD(false))
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                {
                                 barrier();
                                }
                              }
                            }
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                      }
                    }
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(743.656), _GLF_FUZZED(391.520)), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))]) + determinant(mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * sqrt(vec2(1.0, 1.0)))[1]), bvec2(true, true))).y))))
                        {
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(0), (int(0)) + 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | (int(0))), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               barrier();
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             subgroupAll(false);
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), true && (bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))), false || _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), bool(bvec2((bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.1), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-1.1), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0), (mat2(_GLF_FUZZED(-1.1), round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), 0.0 + (length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), clamp(length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))), length(normalize(vec3(1.0, 1.0, 1.0))))), length(normalize(vec3(1.0, 1.0, 1.0)))))))), 1.0, 1.0)) * mat2(1.0))))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), false, false), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), false, false)))))));
                    }
                   else
                    {
                    }
                   for(int _injected_loop_counter = ((0 | 0) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | 0)) | (_GLF_IDENTITY(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.9)), vec2(_GLF_FUZZED((false ? 5.8 : -6481.4482)), (injectionSwitch)[1]), bvec2(false, true))))).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)), false), true, false))))))))))))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0)))).y))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))))), true, false, true))))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
             atomicStore(buf[GLF_merged2_0_1_16_1_1_17next_virtual_gidsubgroup_local_id.x], uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + _GLF_IDENTITY(1, 0 | (1)), read_1 + 1, read_1 + 1))) >> 0u) == GLF_merged2_0_3_62_3_1_13GLF_merged3_0_1_6_1_1_11_2_1_14read_2virtual_gidworkgroup_sizenum_workgroup.xyz.x) + 1, 4, 64, 4);
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               do
                {
                 subgroupAll(true);
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               else
                {
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))), false)), bool(bool(bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
}
