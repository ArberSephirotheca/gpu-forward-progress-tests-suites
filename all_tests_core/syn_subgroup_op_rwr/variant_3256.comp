#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.2), _GLF_FUZZED(-7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), sqrt(0.0), 1.0), transpose(transpose(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.2), _GLF_FUZZED(-7.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), sqrt(0.0), 1.0)))))).y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))), ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_IDENTITY(false, (false) && true))))))) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, false || (false)))))), false || (! ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, false || (false)))))))), ! (! (! ((! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(! (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true))), (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(! (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY(bool(! (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(! (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))))), true, false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y) && true)), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), max(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), min(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), vec4(injectionSwitch.x, 0.0, 1.0, 0.0)))))), min(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), max(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), min(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), vec4(injectionSwitch.x, 0.0, 1.0, 0.0)))))), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), max(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), min(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), vec4(injectionSwitch.x, 0.0, 1.0, 0.0))))))))) > injectionSwitch.y) && true)), false))))))))) || (true)), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0)), (float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0))) - 0.0)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(22.71) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) - 0.0), injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0), (true ? mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(7056.5535, 9.6, 9.8, _GLF_IDENTITY(-6.6, max(_GLF_IDENTITY(-6.6, (true ? -6.6 : _GLF_FUZZED(62.96))), -6.6)), -5.7, 5.7)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), 1.0), transpose(transpose(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0)))))))), (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-4.7), 0.0 + (_GLF_FUZZED(-4.7))))), injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), bool(bool(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y) && true)), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), max(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), min(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), vec4(injectionSwitch.x, 0.0, 1.0, 0.0)))))), min(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), max(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 0.0, 1.0, 0.0), min(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), vec4(injectionSwitch.x, 0.0, 1.0, 0.0)))))), float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), max(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), min(vec4(injectionSwitch.x, 0.0, 1.0, 0.0), vec4(injectionSwitch.x, 0.0, 1.0, 0.0))))))))) > injectionSwitch.y) && true)), false))))))))) || (true)), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0)), (float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2149.7402) : _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 1.0))) - 0.0)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(22.71) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))))) - _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.0))), float(_GLF_FUZZED(5.7)), bool(false)))), injectionSwitch.y)))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), (true ? mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat3x2(_GLF_IDENTITY(7056.5535, (_GLF_IDENTITY(7056.5535, float(mat2x4(7056.5535, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) / 1.0), 9.6, 9.8, _GLF_IDENTITY(-6.6, max(_GLF_IDENTITY(-6.6, (true ? -6.6 : _GLF_FUZZED(62.96))), -6.6)), -5.7, 5.7)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float((0.0) - 0.0), float(_GLF_FUZZED(1681.6787)), bool(false))))) / 1.0), 1.0), transpose(transpose(mat4x3(injectionSwitch.y, abs(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 1.0)))))))), (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-4.7), 0.0 + (_GLF_FUZZED(-4.7))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.3) : _GLF_IDENTITY(_GLF_FUZZED(-4.7), 0.0 + (_GLF_FUZZED(-4.7))))))), injectionSwitch.y))))))))))))), true)))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, injectionSwitch.x)), max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(-1.0), (injectionSwitch)[1]), bvec2(false, true))))).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(int(1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 0), ! (! (bool(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 0)))), ! (! (bool(_injected_loop_counter != 0))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), _GLF_FUZZED(-3519.1788)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))))
          barrier();
         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | _GLF_IDENTITY((_GLF_IDENTITY(int(6), 1 * (int(6)))), min((_GLF_IDENTITY(int(6), 1 * (int(6)))), (_GLF_IDENTITY(int(6), 1 * (int(6))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, true)))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), false || (true && (_GLF_DEAD(false))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-43.11) : injectionSwitch.x)) > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-919.651)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.9)))))), bool(true))), max(injectionSwitch.x, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.2))), sqrt(1.0), 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)), max(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))) / 1.0), sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, _GLF_IDENTITY(7.0, (7.0) / 1.0))))) : 1.0))), 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)))))), max(_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.2))), sqrt(1.0), 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)), max(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))) / 1.0), sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, _GLF_IDENTITY(7.0, (7.0) / 1.0))))) : 1.0))), 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)))))), _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.2))), sqrt(1.0), 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)), max(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))) / 1.0), sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, _GLF_IDENTITY(7.0, (7.0) / 1.0))))) : 1.0))), 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0))))))))) < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-1.6)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-919.651)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(5.9), (true ? injectionSwitch.x : _GLF_FUZZED(5.9)) + 0.0)))))), bool(true))), max(injectionSwitch.x, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.6)), bool(false))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.2))), sqrt(1.0), 1.0)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)), max(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))) / 1.0), sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, _GLF_IDENTITY(7.0, (7.0) / 1.0))))) : 1.0))), 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)), max(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))) / 1.0), sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, _GLF_IDENTITY(7.0, (7.0) / 1.0))))) : 1.0))), 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)))), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 0.0, 1.0, 0.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0)))))), (mat4x3(_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)), max(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))) / 1.0), sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, _GLF_IDENTITY(7.0, (7.0) / 1.0))))) : 1.0))), 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)))), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 0.0, 1.0, 0.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))))) * mat4(1.0)))))), max(_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(4.2))), sqrt(1.0), 1.0)), 1.0 * (_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, _GLF_IDENTITY(97.29, min(97.29, 97.29)), 7.0)))) : 1.0))), 1.0)), max(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, sin(0.0), 0.0, 0.0, log(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(mat4x2(-474.901, 432.849, 203.039, -9.4, 3962.2584, 2.4, -6635.3391, -4007.2801)) : mat4x2(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, sin(0.0), 0.0, 0.0, log(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(6004.9915))), min(1.0, 1.0))))) / 1.0), sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(_GLF_IDENTITY(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, _GLF_IDENTITY(7.0, (7.0) / 1.0))), (mod(vec3(_GLF_IDENTITY(-3032.7867, clamp(-3032.7867, -3032.7867, -3032.7867)), 8613.9699, -7951.8279), vec3(918.702, 97.29, _GLF_IDENTITY(7.0, (7.0) / 1.0)))) - sqrt(vec3(0.0, 0.0, 0.0))))) : 1.0))), 1.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(vec4(268.093, 78.57, -45.39, 93.35)) : vec4(0.0, 1.0, 1.0, 0.0))))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0)))))), _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.2))), sqrt(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0 * (_GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)), 0.0)), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0)), float(mat2x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0)))), 1.0)), max(float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-4.9)))), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), 1.0 * (_GLF_IDENTITY(min(1.0, 1.0), float(mat2(min(1.0, 1.0), 1.0, 1.0, 0.0))))))))) / 1.0), sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, _GLF_IDENTITY(7.0, (7.0) / 1.0))))) : 1.0))), 1.0)), float(mat3x4(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x3(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0))))), 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(length(mod(vec3(-3032.7867, 8613.9699, -7951.8279), vec3(918.702, 97.29, 7.0)))) : 1.0))), 1.0))))))))) < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (false ? _GLF_FUZZED(8.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(6.7)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true), false)))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true, bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0)), clamp(vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), 0.0, 0.0, 1.0, 0.0)), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0))) - vec2(0.0, 0.0))))).y)))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), false || (_GLF_WRAPPED_IF_FALSE(false))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y = workgroup_size;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), (false ? _GLF_FUZZED(-27.68) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))) || false));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.y * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), 0 | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) < ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, max(2, 2)) : _GLF_FUZZED((-- _injected_loop_counter)))))) - 0))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, _GLF_IDENTITY(0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, ~ (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid)), _GLF_IDENTITY((~ (0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid))) ^ 0u, 0u | ((~ (0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))), ((0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base)))))) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED((workgroup_base - workgroup_id)) : uint(4u))), uint(4u)))), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_IDENTITY(0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid), ~ (~ (0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, ~ (~ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid))))))))))), ((_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid)))))) | 0u), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.0)), bool(false))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.0)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.0)), bool(false))))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, abs(determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, 0.0, abs(determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)))))).x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.0)), bool(false))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), false)))) && true)) ? _GLF_FUZZED(uint((bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true))))))) == bvec2(_GLF_IDENTITY(false, true && (false)), false)))) : _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), virtual_gid)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid) | 0u)) / 1u), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))))).x < injectionSwitch.y)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))), ((0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))) < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))) < injectionSwitch.y)))) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base), 0u + (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x) - 0.0) < injectionSwitch.y)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))), ~ (~ (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x) - 0.0) < injectionSwitch.y)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base), 0u + (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x) - 0.0) < injectionSwitch.y)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))))))))) - 0u), (false ? _GLF_FUZZED(workgroup_base) : ~ (0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : ~ _GLF_IDENTITY((0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) / 1u), 5u, 5u))), _GLF_IDENTITY(clamp(uint(5u), uint(5u), uint(5u)), (true ? clamp(uint(5u), uint(5u), uint(5u)) : _GLF_FUZZED(num_workgroup)))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), min(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), ~ (~ (min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(((0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) / 1u), 5u, 5u))), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) : _GLF_FUZZED(subgroup_local_id)))))) >> 0u, (((0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) / 1u), 5u, 5u))), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) : _GLF_FUZZED(subgroup_local_id)))))) >> 0u) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : ~ _GLF_IDENTITY((0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) / 1u), 5u, 5u))), _GLF_IDENTITY(clamp(uint(5u), uint(5u), uint(5u)), (true ? clamp(uint(5u), uint(5u), uint(5u)) : _GLF_FUZZED(num_workgroup)))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), min(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), ~ (~ (min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(((0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) / 1u), 5u, 5u))), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) : _GLF_FUZZED(subgroup_local_id)))))) >> 0u, (((0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) / 1u), 5u, 5u))), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) : _GLF_FUZZED(subgroup_local_id)))))) >> 0u) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (true ? (false ? _GLF_FUZZED(workgroup_base) : ~ _GLF_IDENTITY((0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) / 1u), 5u, 5u))), _GLF_IDENTITY(clamp(uint(5u), uint(5u), uint(5u)), (true ? clamp(uint(5u), uint(5u), uint(5u)) : _GLF_FUZZED(num_workgroup)))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), min(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), ~ (~ (min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(((0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) / 1u), 5u, 5u))), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) : _GLF_FUZZED(subgroup_local_id)))))) >> 0u, (((0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) / 1u), 5u, 5u))), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), min(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) : _GLF_FUZZED(subgroup_local_id)))))) >> 0u) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) : _GLF_FUZZED(workgroup_size)))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base), 0u | (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_IDENTITY(0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), 0u | (0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))), (_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) ? _GLF_FUZZED(workgroup_base) : ~ (0u | _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | (1u))))), 1u, 1u)), 1u)))))) << 0u)), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u))), max(uint(_GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * uvec2(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | (1u))))), 1u, 1u)), 1u)))))) << 0u)), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))) / 1u)) >> 0u), (_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, 0u ^ (5u)), 5u, _GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, uint(uvec3(5u, 0u, 0u)))) - 0u)))) | (5u))), uint(5u))))))))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))))) : _GLF_FUZZED(injectionSwitch))).y, injectionSwitch.y)))) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))), (false ? _GLF_FUZZED(workgroup_base) : ~ _GLF_IDENTITY((0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), ((0u >> _GLF_IDENTITY(uint(3u), uint(3u))) & (165088u % 122951u)) ^ ((0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))), (_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))) ? _GLF_FUZZED(workgroup_base) : ~ (0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u)), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u)), min(_GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u)), _GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * _GLF_IDENTITY(uvec2(1u, 1u), max(_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))), uvec2(1u, 1u))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uint(uint(5u)), 0u ^ (uint(uint(5u)))))))), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u))), uint(_GLF_IDENTITY(uvec2(uint(5u), 0u), (uvec2(uint(5u), 0u)) * uvec2(1u, 1u)))))) << 0u)), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))) / 1u)) >> 0u), (_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = virtual_gid : _GLF_FUZZED(workgroup_base))))), (false ? _GLF_FUZZED(workgroup_base) : ~ (0u | (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x = _GLF_IDENTITY(virtual_gid, (virtual_gid) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) | (5u))), uint(5u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) | (5u))), uint(5u)), (true ? (1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) | (5u))), uint(5u)) : _GLF_FUZZED(subgroup_size)))), min(~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) | (5u))), uint(5u)), (true ? (1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) | (5u))), uint(5u)) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) | (5u))), uint(5u)), (true ? (1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) | (5u))), uint(5u)) : _GLF_FUZZED(subgroup_size)))), (true ? ~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) | (5u))), uint(5u)), (true ? (1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))) | (5u))), uint(5u)) : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(workgroup_id)))))))))))))) ^ 0u))) ^ 0u) >> 0u))) | 0u))) - 0u))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, _GLF_IDENTITY(false, bool(bool(false)))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-75.04)), bool(false)))) - abs(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))) + 0.0) > injectionSwitch.y))));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(subgroup_local_id)))))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (6u))), (_GLF_IDENTITY(6u, ~ (~ (6u)))) | (_GLF_IDENTITY(6u, ~ (~ (6u)))))), uint(6u)))) / 1u, (((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ _GLF_IDENTITY((~ (6u)), min((~ (6u)), (~ (6u))))), (_GLF_IDENTITY(6u, ~ (~ (6u)))) | (_GLF_IDENTITY(6u, _GLF_IDENTITY(~ (~ (6u)), (_GLF_IDENTITY(~ (~ (6u)), clamp(~ (~ (6u)), ~ (~ (6u)), ~ (~ (6u))))) | (~ (~ (6u)))))))), uint(6u)))) / 1u) - 0u)), 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), 0u | (0u)))))), 1u * (_GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(6u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))), (uvec2(uint(6u), 0u)) | (uvec2(uint(6u), 0u)))), (true ? uint(_GLF_IDENTITY(uvec2(uint(6u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))), (uvec2(uint(6u), 0u)) | (uvec2(uint(6u), 0u)))) : _GLF_FUZZED(floatBitsToUint(1523.8447)))))) | (uint(6u))), uint(6u)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u)) | (_GLF_FUZZED(num_workgroup)))))), 0u, 0u)), 0u ^ (uint(uvec4(subgroup_id * subgroup_size, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(6u, 0u ^ (6u))), 0u), (uvec2(uint(6u), 0u)) | (uvec2(uint(6u), 0u)))))) | (uint(6u))), uint(6u)) : _GLF_FUZZED(num_workgroup)))), 0u, 0u))))))) + ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], 4, 64, 0);
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ((_GLF_IDENTITY(true, false || (true)))) || false)))))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(sign(5.6)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).x) - 0.0))))) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((false ? -6.7 : 259.700))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4.4), mix(float(_GLF_FUZZED(60.52)), float(_GLF_FUZZED(-4.4)), bool(true)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, true))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(mat2x4((injectionSwitch.y), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0))) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(asin(-4.5))))) + 0.0)), injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, false, true))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false)))))), false, false, true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(false), false, false, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))) && true), false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(false), false, false, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(false), false, false, true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))) && true), false, true, false))) || false)))))) || false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y))))
        barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), false, false, true))))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint read_2 = atomicLoad(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_size.x], 4, 64, _GLF_IDENTITY(0, min(0, 0)));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != 1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (! (((injectionSwitch.x > injectionSwitch.y)))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (! (((injectionSwitch.x > injectionSwitch.y)))) || false), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bool(bool(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), false)), false || (bool(bvec2(_GLF_IDENTITY(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bool(bool(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))), ! (! ((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), bvec2(bvec4(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), false, true))))), ((bool(_GLF_IDENTITY(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), bvec2(bvec4(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), false, true)))))) || false), ! (! ((bool(bvec2(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), bvec2(bvec4(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), false, true))))), ((bool(_GLF_IDENTITY(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), bvec2(bvec4(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), false, true)))))) || false), ! (! ((bool(bvec2(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), bvec2(bvec4(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), false, true))))), ((bool(_GLF_IDENTITY(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), bvec2(bvec4(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), false, true)))))) || false), ! (! ((bool(bvec2(! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), (((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true)), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))), true)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false), bvec2(bvec2(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)))))), ! (! ((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9373.0824), _GLF_FUZZED(-2.8)), vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y)), true), true))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))), ! (! ((bool(bvec2(! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), false)))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))), ! (! ((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))), ! (! ((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), _GLF_IDENTITY(bool(bvec3((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))), ! (! ((bool(bvec2(! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), false)))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))), ! (! ((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))), ! (! ((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), false, false)), true && (bool(bvec3((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))), ! (! ((bool(bvec2(! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), false)))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))), ! (! ((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false))), ! (! ((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))), false, false))))) && true))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(_GLF_IDENTITY(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.7) : injectionSwitch.x)) > injectionSwitch.y))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-30.31))), injectionSwitch.y))))), false))))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))))))), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))))))), false), false)), false))))))))))), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((_GLF_IDENTITY(bool(bvec2(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y))))) > injectionSwitch.y))))))), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(bvec2(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))))) && true) || false)))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) && true))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)))), true && (! (! (((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(0.9), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y)))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true))))))), true && (! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))))), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), bool(bvec2(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), true))) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), true, true)), false, false)))))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))) || false)) && true))) && _GLF_IDENTITY(true, (true) && true)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))), bool(bvec2((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) && true))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)))), true && (! (! (((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(0.9), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y)))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true))))))), true && (! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))))), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), bool(bvec2(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), true))) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), true, true)), false, false)))))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))) || false)) && true))) && _GLF_IDENTITY(true, (true) && true)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))), false))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) && true))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)))), true && (! (! (((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(0.9), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y)))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true))))))), true && (! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))))), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), bool(bvec2(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), true))) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), true, true)), false, false)))))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))) || false)) && true))) && _GLF_IDENTITY(true, (true) && true)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))), bool(bvec2((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) && true))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)))), true && (! (! (((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(0.9), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y)))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true))))))), true && (! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))))), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), bool(bvec2(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), true))) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), true, true)), false, false)))))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))) || false)) && true))) && _GLF_IDENTITY(true, (true) && true)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))), false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) && true))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)))), true && (! (! (((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(0.9), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y)))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true))))))), true && (! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))))), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), bool(bvec2(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), true))) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), true, true)), false, false)))))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))) || false)) && true))) && _GLF_IDENTITY(true, (true) && true)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))), bool(bvec2((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) && true))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (((injectionSwitch.x > injectionSwitch.y)))), true && (! (! (((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), vec2(_GLF_FUZZED(0.9), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y)))))))), false)), true && (bool(bvec2(_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), true))))))), true && (! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false)))))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), false)), ! (! (bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))))), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, _GLF_IDENTITY(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), bool(bvec2(((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true), true))) || false))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true) || false))), bool(bvec3(! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true, false), true, true)), false, false)))))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), true && (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), ((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)))) || false)) && true))) && _GLF_IDENTITY(true, (true) && true)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))), false))), true, true), true)))))), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true, true, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(bvec2((((injectionSwitch.x > injectionSwitch.y))), true))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), false)))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), false || ((((injectionSwitch.x > injectionSwitch.y))))), false)), ! (! _GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), bool(bvec3(_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), bool(bvec2((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))), true))), false, false)))))), true))))), ! (! (_GLF_IDENTITY(bool(bvec2(! (((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.7), _GLF_FUZZED(11.14)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))), false)), _GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, ! (! (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > injectionSwitch.y))), false))) && true, (_GLF_IDENTITY((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false))), ! (! ((bool(bvec2(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false)))))) && true) || false)))))))))), true, true), false))))))) && true) && true))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (0 ^ 1))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-967.499) : min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))))
        {
         do
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, true)))) || false))))
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(mix(-7.1, 0.4, true)), (false ? _GLF_FUZZED(-7077.4795) : _GLF_IDENTITY(_GLF_FUZZED(mix(-7.1, 0.4, true)), clamp(_GLF_FUZZED(mix(-7.1, 0.4, true)), _GLF_FUZZED(mix(-7.1, 0.4, true)), _GLF_FUZZED(mix(-7.1, 0.4, true)))))) : injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, true, true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, clamp(1, 1, 1)))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(float(subgroup_id)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))), min(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))), ~ (~ (read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))))), read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))))), min(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))), (read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1)))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))), read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))))) == read_2) + 1, (false ? _GLF_IDENTITY(_GLF_FUZZED((read_1 >> _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (read_1), ((read_1) | (read_1)) | ((read_1) | (read_1)))))), _GLF_IDENTITY(uint(uvec3(_GLF_FUZZED((read_1 >> _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (read_1), ((read_1) | (read_1)) | ((read_1) | (read_1)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), (uint(uvec3(_GLF_FUZZED((read_1 >> _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (read_1), ((read_1) | (read_1)) | ((read_1) | (read_1)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) ^ 0u)) : _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) / 1))) == read_2) + 1, (uint(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) / 1))) == read_2) + 1) | 0u))), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), true))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, clamp((4) >> 0, _GLF_IDENTITY((4) >> 0, max((4) >> 0, (_GLF_IDENTITY(4, clamp(4, 4, 4))) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY((4) >> 0, _GLF_IDENTITY(max((4) >> 0, (4) >> 0), 0 | (max((4) >> 0, (4) >> 0)))), (true ? (4) >> 0 : _GLF_FUZZED(98196)))))));
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY((! (false)), bool(bool((! (false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(injectionSwitch)))).y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(33.98))))).x > injectionSwitch.y))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
        barrier();
       for(int _injected_loop_counter = (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1))))), ~ (~ (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1))))))))), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, clamp(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), clamp(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) / 1), 0, 1)))))), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, clamp(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) | (_injected_loop_counter)) != _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1)))))), (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, ((0) / 1) - 0)), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1))))))) | (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1)))))))), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, _GLF_IDENTITY(clamp(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sign(51878)) : clamp(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0, _GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, max(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0)))))))))))), bool(_GLF_IDENTITY(bool(false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) | (_injected_loop_counter)) != _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, (false ? _GLF_FUZZED(_injected_loop_counter) : (0) / 1))), 0, 1)))))), (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) / 1), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1))))))) | (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1), ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1)), clamp(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1)), ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1)), ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1)))))))))), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, clamp(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))))), ! (! (bool(false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) | (_injected_loop_counter)) != _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1)))))), (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1))))))) | (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) / 1), 0, 1)))))))), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, clamp(false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0, false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))))))))))))); _GLF_IDENTITY(_injected_loop_counter --, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_injected_loop_counter --)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, ! (! (false)))))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           subgroupAll(true);
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) * (0 ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(4), int(4))), 1 * (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(4), int(4))), min(~ (1 << _GLF_IDENTITY(int(4), int(4))), ~ (1 << _GLF_IDENTITY(int(4), int(4)))))))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY((1 | _GLF_IDENTITY(0, (0) / 1)), min((1 | 0), _GLF_IDENTITY((1 | 0), int(ivec3((1 | 0), _GLF_IDENTITY(1, 0 | (1)), 0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
}
