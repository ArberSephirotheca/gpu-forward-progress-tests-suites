#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), true && (! ((! (true)))))))), true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), (! (_GLF_IDENTITY(true, (true) || false))) || false))))), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true, false, true)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), false))), false, false)))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) || false))))), true), true, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(true, (true) || false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))), false))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))), false))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false))))) && true), false)))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true, false)))), false)))) && true), false))))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x))) >> 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))) && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), (true && _GLF_IDENTITY((false), ((false)) || false)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), (true && _GLF_IDENTITY((false), ((false)) || false)) || false)), bool(bvec3((_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), (true && _GLF_IDENTITY((false), ((false)) || false)) || false)), true, false)))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), (true && _GLF_IDENTITY((false), ((false)) || false)) || false)), bool(bvec3((_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), (true && _GLF_IDENTITY((false), ((false)) || false)) || false)), true, false))))) && true)), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), (true && _GLF_IDENTITY((false), ((false)) || false)) || false)), bool(bvec3((_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), (true && _GLF_IDENTITY((false), ((false)) || false)) || false)), true, false)))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), (true && _GLF_IDENTITY((false), ((false)) || false)) || false)), bool(bvec3((_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), (true && _GLF_IDENTITY((false), ((false)) || false)) || false)), true, false))))) && true)))))), ! (! ((_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), (true && _GLF_IDENTITY((false), ((false)) || false)) || false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.3)), bool(false))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))), bool(bool(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), determinant(mat2(1.0, 0.0, length(vec2(0.0, 0.0)), 1.0)), sqrt(sin(0.0)), 0.0, sin(length(0.0)), 0.0, 0.0, 0.0, 1.0))).y)))))))) || false), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false || (false), false || (false || (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (false), true)), bool(bool(_GLF_IDENTITY(bool(bvec2(false || (false), true)), false || (bool(bvec2(false || (false), true)))))))))), (_GLF_IDENTITY(false || (false), false || (false || (false)))) || false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true), false))) && true))))))), true && (! (bool(bvec3(_GLF_IDENTITY(false || _GLF_IDENTITY((false), bool(bvec3((false), true, false))), false || (false || (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(sqrt(-6.7))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4((bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, false))) || false)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (true ? _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (true ? gl_WorkGroupID[0] : _GLF_FUZZED(num_workgroup))), gl_WorkGroupID[1], gl_WorkGroupID[2])) : _GLF_FUZZED((61895u * uvec3(75969u, 114979u, 48490u))))).x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), false, false, true)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, uint(uvec3(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, 0u, 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true, false))), false, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), true, false))), false, false))) && true), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), false, false))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-881.554)), bool(false))) : _GLF_FUZZED(-5030.2080))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4138.0664) : injectionSwitch.y))) / 1.0))), sin(0.0), 1.0, 0.0, length(0.0), 1.0, 0.0, 0.0)), float(vec4(float(mat4x2(injectionSwitch.y, sin(0.0), 1.0, 0.0, length(0.0), 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0)))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, sin(0.0), 1.0, 0.0, length(0.0), 1.0, 0.0, 0.0)), float(vec4(float(mat4x2(injectionSwitch.y, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(length(0.0), (length(0.0)) / cos(sin(0.0))), 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0))))), mix(float(1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, sin(0.0), 1.0, 0.0, length(0.0), 1.0, 0.0, 0.0)), float(vec4(float(mat4x2(injectionSwitch.y, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(length(0.0), (length(0.0)) / cos(sin(0.0))), 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0)))))), float(_GLF_FUZZED((+ -12.12))), bool(false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))) || false), true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-439.012), _GLF_FUZZED(-727.146)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id)))) * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), subgroup_size)), max(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), subgroup_size)), _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-574.359), _GLF_FUZZED(-118.947)), bvec2(false, false))).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), _GLF_IDENTITY(4, (4) ^ 0), 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 ^ (4)))), (false ? _GLF_FUZZED(1631) : 4)), 4, 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-391.316 * -7.5))), bool(false))) > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))), false || (bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), true, true, false)))), false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, false)), false), bvec2(bvec4(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, false)), false), true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, false)), false))), false || (bool(bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, false)), false)))))), ! (! (bool(_GLF_IDENTITY(bool(bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, false)), false))), false || (bool(bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, false)), false))))))))))) && true, true && ((bool(bvec2(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), false, false)), false))) && _GLF_IDENTITY(true, ! (! (true))))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), false, _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, false, false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))) && true)) && true))))), (bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) || (_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec3(bvec2(bool(bvec2(false, true)), true), false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec3(bvec2(bool(bvec2(false, true)), true), _GLF_IDENTITY(false, ! (! (false)))))), false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, true), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec3(bvec2(bool(bvec2(false, true)), true), false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec3(bvec2(bool(bvec2(false, true)), true), false))), false))))))), false, true))))))))), false, false)), false))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(read_2, 1u, 0u)), 0u | (uint(uvec3(read_2, 1u, 0u)))))))) + 1, 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-40.31)), bool(false))), 1.0))) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))) > injectionSwitch.y)) || false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-40.31)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))))))), 1.0))) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(0.1, 9.6, 888.906, 28.81, 3.4, -88.96)) : mat3x2(1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))), 1.0, 1.0)))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))), 0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0))) > injectionSwitch.y)) || false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid)))], uint(read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(int(1))))), (1) - _GLF_IDENTITY(0, 0 ^ (0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))), (ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 ^ (0))), min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-71715) : 1))) * (1 & 1)), _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, true))))) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677)))))) >> (ivec2(0, 0) & ivec2(79883, 63189)))), (ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), _GLF_IDENTITY(0, clamp(0, 0, 0)) ^ (int(int(_GLF_IDENTITY(1, (0 & 30079) ^ (_GLF_IDENTITY(1, max(1, 1)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) ^ 0)), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(ivec4(int(1), 1, _GLF_IDENTITY(1, clamp(1, 1, 1)), (0 << _GLF_IDENTITY(int(0), int(0)))), ~ (_GLF_IDENTITY(~ (ivec4(int(1), 1, _GLF_IDENTITY(1, clamp(1, 1, 1)), (0 << _GLF_IDENTITY(int(0), int(0))))), ivec4(0, 0, 0, 0) + (~ (ivec4(int(1), 1, _GLF_IDENTITY(1, clamp(1, 1, 1)), (0 << _GLF_IDENTITY(int(0), int(0)))))))))))))))))) >> 0))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))))) ^ ivec2(0, 0))), min(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) / 1) ^ (0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 1.7)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-68.79)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))), (ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 ^ (0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), _GLF_IDENTITY(0, (0) ^ 0) ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677)))))) >> (ivec2(0, 0) & ivec2(79883, 63189)))), (ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, max(0, 0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, clamp(1, 1, 1)))), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, min(1, 1)))), int(_GLF_IDENTITY(ivec2(int(int(_GLF_IDENTITY(1, min(1, 1)))), 1), (ivec2(int(int(_GLF_IDENTITY(1, min(1, 1)))), 1)) | ivec2(0, 0)))))))))) >> 0))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))))) ^ ivec2(0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 ^ (0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))), (ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 ^ (0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677)))))) >> (ivec2(0, 0) & ivec2(79883, 63189)))), (ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), 0 | (_GLF_IDENTITY(1, (1) - 0)))))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, min((1) - 0, _GLF_IDENTITY((1) - 0, (true ? (1) - 0 : _GLF_FUZZED(85081)))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) >> 0))), 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))))) ^ ivec2(0, 0))), (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(_GLF_IDENTITY(0, 0 | (0)), (_GLF_IDENTITY(0, 0 | (0))) + 0)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (true ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(-46328))), _GLF_IDENTITY(0, 0 ^ (0)), _GLF_IDENTITY(0, 0 ^ (0))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))), (ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), ~ (~ (_GLF_IDENTITY(0, 0 ^ (0)))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677)))))) >> (ivec2(0, 0) & ivec2(79883, 63189)))), (ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-52610))))), 0 ^ (int(int(1)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(74162) : (1))) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), _GLF_IDENTITY(0, 0 ^ (0)) ^ (int(int(1)))))))) >> 0))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))))) ^ ivec2(0, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 ^ (0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))), (ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 ^ (0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)), true && (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true)), (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))) || false)))))) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677)))))) >> (ivec2(0, 0) & ivec2(79883, 63189)))), (ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(_GLF_IDENTITY(1, 0 ^ (1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) ^ 0)), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) >> 0))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))))) ^ ivec2(0, 0))), (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 ^ (0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ _GLF_IDENTITY((int(int(1))), (_GLF_IDENTITY((int(int(1))), min((int(int(1))), (int(int(1)))))) << (0 << _GLF_IDENTITY(int(5), int(5)))))))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))), (ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) - _GLF_IDENTITY(0, 0 ^ (0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677)))))) >> (ivec2(0, 0) & ivec2(79883, 63189)))), (ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))), 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) >> 0, ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) >> 0) | ((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) >> 0))))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))))) ^ ivec2(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, ~ (~ (0))), 0))))), 0)))) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(0, 0 | (0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 ^ (0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(_GLF_IDENTITY(ivec2(-50894, 72677), (ivec2(-50894, 72677)) - (ivec2(1, 1) ^ (ivec2(1, 1) | ivec2(1, 1)))))))), (ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, 0 ^ (0))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), 0), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? ivec2(1, 0) : _GLF_IDENTITY(_GLF_FUZZED(ivec2(-50894, 72677)), ivec2(0, 0) | (_GLF_FUZZED(ivec2(-50894, 72677)))))))) >> (ivec2(0, 0) & ivec2(79883, 63189)))), _GLF_IDENTITY((ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) >> 0))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))))) ^ ivec2(0, 0), ((ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), 0 ^ (int(int(1)))))))) >> 0))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(1, 0) : _GLF_FUZZED(ivec2(-50894, 72677))))))) ^ ivec2(0, 0)) ^ ivec2(0, 0)))))))))))) == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0)) * 1.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-874.488), _GLF_FUZZED(227.612)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-10.33)), bool(false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
}
