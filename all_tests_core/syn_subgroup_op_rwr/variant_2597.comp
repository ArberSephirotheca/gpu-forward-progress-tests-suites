#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) - tan(0.0))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0)))) - sin(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))).x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, bool(bvec3(false, false, false))) || ((_GLF_IDENTITY(false, false || (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true))))), true, true, false)))), bvec2(bvec3(bvec2(false, true), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(false, true)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(false, true)), false, false)), true, false)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), true)))))), true, false, false)))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)))))).x : _GLF_FUZZED(634.985)), float(vec3((true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)))))).x : _GLF_FUZZED(634.985)), 1.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)))))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) - 0u, ~ (~ ((gl_NumWorkGroups.x) - 0u)))), min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x, gl_NumWorkGroups.x))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), gl_NumWorkGroups.x)), gl_NumWorkGroups.x)))) / 1u, max(((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x)))) / 1u, ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x)))) / 1u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false || (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bool(bvec2(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), true, true, true)))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(refract(inversesqrt(-4208.8164), 310.607, -27.62))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1752.6774)), float(1.0), bool(true))), 1.0)), 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1752.6774)), float(1.0), bool(true))), 1.0)), 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1752.6774)), float(1.0), bool(true))), 1.0)), 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false, false))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1752.6774)), float(1.0), bool(true))), 1.0)), 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))), true, false, false)))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))))) : _GLF_FUZZED(uvec3(23169u, 106637u, 48855u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.8), _GLF_FUZZED(4.0)), bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))), false))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.8), _GLF_FUZZED(4.0)), bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, true)))))), false))))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.8), _GLF_FUZZED(4.0)), bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat3x2(mat2(1.0)), transpose(transpose(mat3x2(mat2(1.0)))))))) / vec2(1.0, 1.0))).y, false, true)))))), _GLF_IDENTITY(false, (false) && true)))))).x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.8), _GLF_FUZZED(4.0)), bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat3x2(mat2(1.0)), transpose(transpose(mat3x2(mat2(1.0)))))))) / vec2(1.0, 1.0))).y, false, true)))))), _GLF_IDENTITY(false, (false) && true)))))).x, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 0.0, abs(1.0), abs(1.0), 1.0, 0.0), mat3x4(mat4(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.8), _GLF_FUZZED(4.0)), bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat3x2(mat2(1.0)), transpose(transpose(mat3x2(mat2(1.0)))))))) / vec2(1.0, 1.0))).y, false, true)))))), _GLF_IDENTITY(false, (false) && true)))))).x, 1.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, 0.0, abs(1.0), abs(1.0), 1.0, 0.0)))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) && true)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(_GLF_IDENTITY(false, (false) || false)))), (false ? _GLF_FUZZED(9270.5890) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.5)), bool(false))))))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(unpackSnorm2x16(subgroup_size)))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))) && true)))) || false))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))) && true)))) || false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(712.642)), vec2(_GLF_FUZZED(813.502), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(vec2(152.100, 27.17), vec2(45.24, -3922.8171), injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(8183.6983)), vec2(_GLF_FUZZED(4419.1733), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch), max(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(5906.1815), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED((- 2997.0301))), bvec2(true, false))), injectionSwitch, injectionSwitch))))) * mat2(1.0))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, true, true)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-17.33)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || _GLF_IDENTITY(false, ! (! (false))))), (false ? _GLF_FUZZED((+ -47.34)) : mix(float(_GLF_IDENTITY(_GLF_FUZZED(-17.33), mix(float(_GLF_FUZZED(-17.33)), float(_GLF_FUZZED(39.58)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(1.0), 1.0, 1.0, length(0.0), sin(0.0), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bool(bool(bvec3(false, false, false))), false || (bool(bool(bvec3(false, false, false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))) && true)) || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), clamp(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), clamp(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465)), cos(0.0) * (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465)), ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) ? 0.0 : _GLF_FUZZED(601.465))) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x : _GLF_FUZZED(521.642)))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), float(mat4x2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))[0], _GLF_FUZZED(4899.3110)), vec2(_GLF_FUZZED(-2.3), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))[1]), bvec2(false, true)))) * cos(vec2(0.0, 0.0))).x), 1.0, 1.0, log(1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0)))))) ^ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - _GLF_IDENTITY(0u, (0u) / 1u))))), max(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))).x), float(mat4x2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), 1.0, 1.0, log(1.0), 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0)), 1.0)))))) ^ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - _GLF_IDENTITY(0u, (0u) / 1u)), min(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))).x), float(mat4x2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), 1.0, 1.0, log(1.0), 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0)), 1.0)))))) ^ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - _GLF_IDENTITY(0u, (0u) / 1u)), uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))).x), float(mat4x2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), 1.0, 1.0, log(1.0), 1.0, 1.0, determinant(mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, 0.0, 0.0)), 1.0)))))) ^ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - _GLF_IDENTITY(0u, (0u) / 1u))))))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)), min(mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0))))))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)), min(mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)))))), mix(vec2(_GLF_FUZZED(8798.1602), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)), min(mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)))))))[1]), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), _GLF_IDENTITY(mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)), min(mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)), mat2(1.0) * ((mat2(1.0) * (injectionSwitch)) * mat2(1.0)))))))[0], _GLF_FUZZED(430.811)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))).x))), clamp(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), (_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x)) + 0.0), _GLF_IDENTITY(float(mat4x2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)), false, true, false))))) ? 0.0 : _GLF_FUZZED(601.465), mix(float(_GLF_FUZZED(-6.6)), float(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465)), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0)), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0)), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)))) - vec2(0.0, 0.0)).x), 1.0, 1.0, log(1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), _GLF_IDENTITY(float(vec2(float(mat4x2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465), mix(float(_GLF_FUZZED(-6.6)), float(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465)), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0)), (mat2(1.0) * (injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0)), (mat2(1.0) * (injectionSwitch)) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))).x) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, log(1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), (_GLF_IDENTITY(float(vec2(float(mat4x2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465), mix(float(_GLF_FUZZED(-6.6)), float(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465)), bool(true))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)), (clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))).x), 1.0, 1.0, log(1.0), 1.0, 1.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)), 1.0)), min(float(vec2(float(mat4x2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y), true, true, false)))) ? 0.0 : _GLF_FUZZED(601.465), mix(float(_GLF_FUZZED(-6.6)), float(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465)), bool(true))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch))), 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0))), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-2936.3514), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-7.6)), bvec2(true, false)))))) * mat2(1.0))).x), 1.0, 1.0, log(1.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), float(vec4(float(vec2(1.0, 0.0)), 1.0, 1.0, 1.0)))), 1.0)))), float(vec2(float(mat4x2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465), mix(float(_GLF_FUZZED(-6.6)), float(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(601.465)), bool(true))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch)) * mat2(1.0))).x), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, log(1.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9312.8862)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7286.0826)), bool(false)))), bool(true))), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)))), 1.0)), 1.0))))) + length(vec3(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, abs(1.0), abs(1.0)), (mat3x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, abs(1.0), abs(1.0))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0)))))))) ^ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id))))) - _GLF_IDENTITY(0u, (0u) / 1u)))))))) + _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) : _GLF_FUZZED(26715u))) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), clamp(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))))) : _GLF_FUZZED(26715u))) + 1), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), clamp(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))))) : _GLF_FUZZED(26715u))) + 1), clamp((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), clamp(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))))) : _GLF_FUZZED(26715u))) + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), clamp(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))))) : _GLF_FUZZED(26715u))) + 1), ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), clamp(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))))) : _GLF_FUZZED(26715u))) + 1)) << 0u), (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), clamp(~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id))))), ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))))) : _GLF_FUZZED(26715u))) + 1))))) % subgroup_size)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x < injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(vec2(1.0, 1.0)), min(abs(vec2(1.0, 1.0)), _GLF_IDENTITY(abs(vec2(1.0, 1.0)), (_GLF_IDENTITY(abs(vec2(1.0, 1.0)), max(abs(vec2(1.0, 1.0)), abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)))) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(virtual_gid, 0u), clamp(uvec2(virtual_gid, 0u), _GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))), uvec2(virtual_gid, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(virtual_gid, 0u), ~ (~ (uvec2(virtual_gid, 0u))))), max(_GLF_IDENTITY((uvec2(virtual_gid, 0u)), clamp((uvec2(virtual_gid, 0u)), (uvec2(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(virtual_gid))), 0u)), _GLF_IDENTITY((uvec2(virtual_gid, 0u)), max((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))))), (uvec2(virtual_gid, 0u)))) | (uvec2(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY((uvec2(virtual_gid, 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), clamp(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), _GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))))), _GLF_IDENTITY((uvec2(virtual_gid, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u))), max(clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u))), clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))))), (uvec2(virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(virtual_gid, 0u), min(uvec2(virtual_gid, 0u), uvec2(virtual_gid, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY((uvec2(virtual_gid, 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), clamp(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), _GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))))), _GLF_IDENTITY((uvec2(virtual_gid, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u))), max(clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u))), clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))))), (uvec2(virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(virtual_gid, 0u), min(uvec2(virtual_gid, 0u), uvec2(virtual_gid, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY((uvec2(virtual_gid, 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), clamp(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), _GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))))), _GLF_IDENTITY((uvec2(virtual_gid, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u))), max(clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u))), clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))))), (uvec2(virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(virtual_gid, 0u), min(uvec2(virtual_gid, 0u), uvec2(virtual_gid, 0u)))))), ((_GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY((uvec2(virtual_gid, 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), clamp(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), _GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))))), _GLF_IDENTITY((uvec2(virtual_gid, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u))), max(clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u))), clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))))), (uvec2(virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(virtual_gid, 0u), min(uvec2(virtual_gid, 0u), uvec2(virtual_gid, 0u))))))) >> uvec2(0u, 0u))) / uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY((uvec2(virtual_gid, 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), clamp(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), _GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), _GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))))), _GLF_IDENTITY((uvec2(virtual_gid, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u))), max(clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u))), clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))))), (uvec2(virtual_gid, 0u)))) | (_GLF_IDENTITY(uvec2(virtual_gid, 0u), min(uvec2(virtual_gid, 0u), uvec2(virtual_gid, 0u)))))))) / _GLF_IDENTITY(uvec2(1u, 1u), min(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY((uvec2(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)), ~ (~ ((uvec2(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u))))) - uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u))) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u)), _GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 1u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(58252u, 165263u), max(_GLF_IDENTITY(uvec2(58252u, 165263u), (false ? _GLF_FUZZED(uvec2(43971u, 57273u)) : _GLF_IDENTITY(uvec2(58252u, 165263u), (false ? _GLF_FUZZED(uvec2(81131u, 119736u)) : uvec2(58252u, 165263u))))), uvec2(58252u, 165263u)))) : uvec2(1u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(virtual_gid, 0u), clamp(uvec2(virtual_gid, 0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(virtual_gid, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (0u))), clamp(_GLF_IDENTITY(uvec2(virtual_gid, 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(virtual_gid, 0u)), max(~ (uvec2(virtual_gid, 0u)), ~ (uvec2(virtual_gid, 0u)))), (_GLF_IDENTITY(~ (uvec2(virtual_gid, 0u)), max(~ (uvec2(virtual_gid, 0u)), ~ (uvec2(virtual_gid, 0u))))) << uvec2(0u, 0u)))), uvec2(virtual_gid, 0u), _GLF_IDENTITY(uvec2(virtual_gid, 0u), max(uvec2(virtual_gid, 0u), uvec2(virtual_gid, 0u))))), (uvec2(virtual_gid, 0u)) / (_GLF_IDENTITY((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))), _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u)))) >> uvec2(0u, 0u)) ^ ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u)))), uvec2(virtual_gid, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY(~ (~ (uvec2(virtual_gid, 0u))), min(_GLF_IDENTITY(~ (~ (uvec2(virtual_gid, 0u))), (_GLF_IDENTITY(~ (~ (uvec2(virtual_gid, 0u))), max(~ (~ (uvec2(virtual_gid, 0u))), ~ (~ (uvec2(virtual_gid, 0u)))))) | uvec2(0u, 0u)), _GLF_IDENTITY(~ (~ (uvec2(virtual_gid, 0u))), (~ (~ (uvec2(virtual_gid, 0u)))) - uvec2(0u, 0u)))))), max(_GLF_IDENTITY((uvec2(virtual_gid, 0u)), clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))), (uvec2(virtual_gid, 0u)))) | (uvec2(virtual_gid, 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY(~ (~ (uvec2(virtual_gid, 0u))), min(_GLF_IDENTITY(~ (~ (uvec2(virtual_gid, 0u))), (_GLF_IDENTITY(~ (~ (uvec2(virtual_gid, 0u))), max(~ (~ (uvec2(virtual_gid, 0u))), ~ (~ (uvec2(virtual_gid, 0u)))))) | uvec2(0u, 0u)), _GLF_IDENTITY(~ (~ (uvec2(virtual_gid, 0u))), (~ (~ (uvec2(virtual_gid, 0u)))) - uvec2(0u, 0u)))))), max(_GLF_IDENTITY((uvec2(virtual_gid, 0u)), clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))), (uvec2(virtual_gid, 0u)))) | (uvec2(virtual_gid, 0u))) >> uvec2(0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(virtual_gid, 0u)), uvec2(0u, 0u) ^ ((uvec2(virtual_gid, 0u)))), clamp((_GLF_IDENTITY(uvec2(virtual_gid, 0u), (_GLF_IDENTITY(uvec2(virtual_gid, 0u), ~ (~ (_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) | (uvec2(virtual_gid, 0u))))))) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY((uvec2(virtual_gid, _GLF_IDENTITY(0u, (0u) | (0u)))), clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), 0u)))), (uvec2(virtual_gid, 0u)))) | (uvec2(virtual_gid, 0u)))) / _GLF_IDENTITY(uvec2(1u, 1u), min(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) - uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 1u))))), (false ? _GLF_FUZZED(uvec2(58252u, 165263u)) : uvec2(1u, 1u))))), uvec2(0u, 0u) + ((_GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY((uvec2(virtual_gid, 0u)), clamp((_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY((uvec2(virtual_gid, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))))))), clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))), (uvec2(virtual_gid, 0u)))) | (uvec2(virtual_gid, 0u)))) / _GLF_IDENTITY(uvec2(1u, 1u), min(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) - uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_FUZZED(workgroup_id))) : 1u)), 1u))))), (false ? _GLF_FUZZED(uvec2(58252u, 165263u)) : uvec2(1u, 1u))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(virtual_gid, 0u), clamp(_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY((uvec2(virtual_gid, 0u)), uvec2(0u, 0u) ^ ((uvec2(virtual_gid, 0u)))) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec2(5u), (uvec2(5u)) | (uvec2(5u))), uvec2(5u)))), uvec2(virtual_gid, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(virtual_gid, 0u), ~ (~ (uvec2(virtual_gid, 0u))))), max(_GLF_IDENTITY((uvec2(virtual_gid, 0u)), clamp((uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))), (uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u), 0u)))) | (uvec2(virtual_gid, 0u))), (_GLF_IDENTITY(uvec2(virtual_gid, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(virtual_gid, 0u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec2((uvec2(virtual_gid, 0u))), (uvec2((uvec2(virtual_gid, 0u)))) * uvec2(1u, 1u))), (uvec2(_GLF_IDENTITY(uvec2((uvec2(virtual_gid, 0u))), (uvec2((uvec2(virtual_gid, 0u)))) * uvec2(1u, 1u)))) | (uvec2(0u, 0u) | uvec2(0u, 0u)))), clamp((_GLF_IDENTITY(uvec2(virtual_gid, 0u), (uvec2(virtual_gid, 0u)) ^ uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(virtual_gid, _GLF_IDENTITY(0u, (0u) | (0u)))), clamp((uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))), clamp(_GLF_IDENTITY((uvec2(virtual_gid, _GLF_IDENTITY(0u, (0u) | (0u)))), clamp((uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))), _GLF_IDENTITY((uvec2(virtual_gid, _GLF_IDENTITY(0u, (0u) | (0u)))), clamp((uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))), _GLF_IDENTITY((uvec2(virtual_gid, _GLF_IDENTITY(0u, (0u) | (0u)))), clamp((uvec2(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u), 0u)), (uvec2(virtual_gid, 0u)), (uvec2(virtual_gid, 0u)))))), (uvec2(virtual_gid, 0u)))) | (uvec2(virtual_gid, 0u)))) / _GLF_IDENTITY(uvec2(1u, 1u), min(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) - uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 1u)))), (_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)), 1u))))) ^ 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec2(58252u, 165263u)) : uvec2(1u, 1u)), max((false ? _GLF_FUZZED(uvec2(58252u, 165263u)) : uvec2(1u, 1u)), (false ? _GLF_FUZZED(uvec2(58252u, 165263u)) : uvec2(1u, 1u))))))))))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(acosh(injectionSwitch)[0]), float(vec3(_GLF_FUZZED(acosh(injectionSwitch)[0]), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, exp(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(1.0), 0.0), mat2x4(_GLF_IDENTITY(mat3x4(mat2x4(injectionSwitch, 0.0, 0.0, exp(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(1.0), 0.0)), (false ? _GLF_FUZZED(mat3x4(2031.0720, -7.4, -674.443, -63.75, 9.5, -567.753, -2220.7306, -165.013, 7.7, 1.4, 9443.6399, 6.0)) : mat3x4(mat2x4(injectionSwitch, 0.0, 0.0, exp(0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(1.0), 0.0)))))))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec3(! (bool(bvec2(false, true))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(! (bool(bvec2(false, true))), true, false))), true && (! (bool(bvec3(! (bool(bvec2(false, true))), true, false))))))))))))))))), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat4x2(vec2(1.0, 1.0), 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0)), min(vec2(mat4x2(vec2(1.0, 1.0), 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0)), vec2(mat4x2(vec2(1.0, 1.0), 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0))))), _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))).x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0))))))))) / 1.0)), float(_GLF_FUZZED(1.7)), bool(false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))], uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1), _GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(91327) : _GLF_IDENTITY(4, (4) >> 0)), min((false ? _GLF_FUZZED(91327) : _GLF_IDENTITY(4, (4) >> 0)), (false ? _GLF_FUZZED(91327) : _GLF_IDENTITY(4, (4) >> 0))))), 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(97949) : 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3891.9331))))))) * _GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), false))))), bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bool(false))))), false || (! ((_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, log(1.0), 0.0, 1.0))) > injectionSwitch.y)), false))))) ? _GLF_FUZZED(fract(injectionSwitch)) : mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))) * (_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0)))))))).x), 1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), 1.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), 1.0)))))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch, injectionSwitch)).y)) * (injectionSwitch)), min((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), false))))), bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bool(false))))), false || (! ((_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, log(1.0), 0.0, 1.0))) > injectionSwitch.y)), false))))) ? _GLF_FUZZED(fract(injectionSwitch)) : mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))) * (_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0)))))))).x), 1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), 1.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), 1.0)))))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch, injectionSwitch)).y)) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), false))))), bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bool(false))))), false || (! ((_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, log(1.0), 0.0, 1.0))) > injectionSwitch.y)), false))))) ? _GLF_FUZZED(fract(injectionSwitch)) : mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))) * (_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0)))))))).x), 1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), 1.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), 1.0)))))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch, injectionSwitch)).y)) * (injectionSwitch)), mat2(1.0) * ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), false))))), bool(bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bool(false))))), false || (! ((_GLF_IDENTITY(false, bool(bool(false))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, log(1.0), 0.0, 1.0))) > injectionSwitch.y)), false))))) ? _GLF_FUZZED(fract(injectionSwitch)) : mat2(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec4(0.0, length(vec2(0.0, 0.0)), 1.0, 0.0), vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))) * (_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0)))))))).x), 1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), 1.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), 1.0)))))))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch, injectionSwitch)).y)) * (injectionSwitch)))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.6)), vec2(_GLF_FUZZED(-2747.0748), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))) && true))))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))), (0u ^ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])))) * 1u)), 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | 0), int(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | 0), 1))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (subgroup_local_id + 1))), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(179816u) : subgroup_local_id)), subgroup_local_id)))) + 1))))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) - 0)) / 1)) / 1)))))), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid))) * (~ _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | 0), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (subgroup_local_id + 1))), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1), 1u * ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1))))))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) | (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), _GLF_IDENTITY((1) / 1, int(int(_GLF_IDENTITY((1) / 1, min((1) / 1, (1) / 1))))))) / 1, int(int((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) / _GLF_IDENTITY(1, (1) / 1))) / 1)))) ^ 0)))))))))))))) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) - 0u), (subgroup_size) ^ 0u), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)))), (~ ((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size))))) - 0u))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)) >> 0u)))), (~ ((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size))))) - 0u))) << 0u) << (0u ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) ^ (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) ^ 0u), subgroup_size))))) >> (0u & 46975u)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)), true, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false, true)), true && (bool(bvec3(! (_GLF_DEAD(false)), false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(41642))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), max(1, _GLF_IDENTITY(1, (1) - 0))), int(int(1))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), max(1, _GLF_IDENTITY(1, (1) - 0))), int(int(1)))))))) == read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(int(1)))))), 0u | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(int(1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(int(1)))))), (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), min(~ (~ (_GLF_IDENTITY(1, int(int(1))))), ~ (~ (_GLF_IDENTITY(1, int(int(1)))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), min(~ (~ (_GLF_IDENTITY(1, int(int(1))))), ~ (~ (_GLF_IDENTITY(1, int(int(1)))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), min(~ (~ (_GLF_IDENTITY(1, int(int(1))))), ~ (~ (_GLF_IDENTITY(1, int(int(1)))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) | (read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-43471)))))), (~ (_GLF_IDENTITY(1, int(int(1))))) - 0)))))) - 0u))) == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) << 0u) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565)))), 0 | (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))))))))))) == read_2), true && (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) << 0u) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565)))), 0 | (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))))))))))) == read_2), ! (! ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) << 0u) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565)))), 0 | (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))))))))))) == read_2)))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(int(1)))))), 0u | (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(int(1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(int(1)))))), (read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), min(~ (~ (_GLF_IDENTITY(1, int(int(1))))), ~ (~ (_GLF_IDENTITY(1, int(int(1)))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), min(~ (~ (_GLF_IDENTITY(1, int(int(1))))), ~ (~ (_GLF_IDENTITY(1, int(int(1)))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(int(1))))), min(~ (~ (_GLF_IDENTITY(1, int(int(1))))), ~ (~ (_GLF_IDENTITY(1, int(int(1)))))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) | (read_1 + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-43471)))))), (~ (_GLF_IDENTITY(1, int(int(1))))) - 0)))))) - 0u))) == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) << 0u) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565)))), 0 | (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))))))))))) == read_2), true && (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) << 0u) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565)))), 0 | (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))))))))))) == read_2), ! (! ((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) << 0u) + _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565)))), 0 | (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(int(1))))), ((~ (_GLF_IDENTITY(1, int(int(1)))))) - 0) : _GLF_FUZZED(76565))))))))))) == read_2)))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(947.117)), float(injectionSwitch.y), bool(true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(12.88) : injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, _GLF_IDENTITY(float(mat4x3((injectionSwitch.x) / 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((- 7315.5271))), bool(false))), 0.0, 1.0, 1.0, sqrt(1.0), 1.0)), (float(mat4x3((injectionSwitch.x) / 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0))) / 1.0))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(12.88) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, exp(0.0)))).y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3140.0438) : 0.0)), 0.0, 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y, injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) ^ 0))) == read_2) + 1, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-85172) : 4)), (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | ((4))) << _GLF_IDENTITY(0, 0 ^ (0))))))) / 1));
   subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (_GLF_IDENTITY(false, (false) || false))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (_GLF_IDENTITY(false, (false) || false)))))))) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.2)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
}
