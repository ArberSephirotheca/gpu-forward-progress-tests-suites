#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (false), bool(bvec4(false || (false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat2x3(injectionSwitch[1], 1.0, 0.0, 1.0, 0.0, 0.0), mat2x3(mat2x4(mat2x3(injectionSwitch[1], 1.0, 0.0, 1.0, 0.0, 0.0)))))))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(bvec3((false), false, false))))))), false || (! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + determinant(mat3(0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))) - 0.0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, min((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0)))))) && true))) || false)) && true), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float((injectionSwitch.y) - 0.0), float(_GLF_FUZZED(-8.0)), bool(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y) - 0.0, mix(float((injectionSwitch.y) - 0.0), float(_GLF_FUZZED(-8.0)), bool(false))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) && true))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false))))) && true))) || false)) && true), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(383.182)), bool(false)))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(383.182)), bool(false)))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(383.182)), bool(false)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(383.182)), bool(false)))), false, true))))), true, false))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(565.442)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))), true, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(14834u) : gl_WorkGroupID.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), min(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u), min(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) << 0u, (_GLF_IDENTITY((gl_WorkGroupID.x) << 0u, min((gl_WorkGroupID.x) << 0u, (gl_WorkGroupID.x) << 0u))) >> 0u)), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) << 0u)))) - 0u), gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size))) / 1u), ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) | (0u ^ 0u))))) : ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), workgroup_size))), max((workgroup_size), (workgroup_size)))))) - 0u))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))) << 0u)), workgroup_size)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), clamp(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ 0u), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : ~ _GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))))) - 0u))), 0u ^ (workgroup_size)), workgroup_size)))), (uint(uint(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : ~ _GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))))) - 0u))), 0u ^ (workgroup_size)), workgroup_size))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))))) ? _GLF_FUZZED(workgroup_id) : ~ (workgroup_size)))) - 0u))), 0u ^ _GLF_IDENTITY((workgroup_size), min(_GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size))), _GLF_IDENTITY((workgroup_size), ((workgroup_size)) + 0u)))), workgroup_size)))), ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))), (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), min(~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), 1u * (~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))), min(~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))))))))))) - 0u)), ((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))))))) - 0u))) >> 0u)), 0u ^ (workgroup_size)), workgroup_size), (clamp(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 1u, 0u))), ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec4(uint(5u), 1u, 0u, 0u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 1u)), 0u + (uint(uvec4(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 1u, 0u))), ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec4(uint(5u), 1u, 0u, 0u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 1u))))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) / 1u)) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)))), (~ (~ (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size))))) + 0u))))))))) - 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))))))) - 0u)), ((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))))))) - 0u))) / 1u)) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), ((workgroup_size)) / 1u), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) / 1u)) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)))))))))))) - 0u)), ((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), 0u + (~ (workgroup_size))), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))))))) - 0u))) >> 0u), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) / 1u)) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)), (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size))) | (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)), ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size))))), _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)))))))))))))) - 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ (workgroup_size))))), workgroup_size)))))))))))) - 0u))), (((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ (workgroup_size))))), workgroup_size)))))))))))) - 0u)))) << 0u) >> 0u)))) / 1u)), 0u | (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(false, true), true)), true))))), true && (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(false, true), true)), true)))))))) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) / 1u)) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)))))))))))) - 0u)), ((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, workgroup_size), min(clamp(workgroup_size, workgroup_size, workgroup_size), clamp(workgroup_size, workgroup_size, workgroup_size)))))))))))))) - 0u))) >> 0u), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) / 1u)) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), workgroup_size, workgroup_size)))))))))))) - _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), ((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : ~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))))))))))) - 0u))) >> 0u)) << 0u)))), 0u ^ (workgroup_size)), workgroup_size)) | 0u))))))) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u, (1u | 1u), (_GLF_IDENTITY(0u ^ 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u ^ 1u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u ^ 1u, 0u, 0u)))), max(uint(_GLF_IDENTITY(uvec3(0u ^ 1u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u ^ 1u, 0u, 0u)))), uint(_GLF_IDENTITY(uvec3(0u ^ 1u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u ^ 1u, 0u, 0u))))))))), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u, (1u | 1u), (0u ^ 1u))) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u, (1u | 1u), _GLF_IDENTITY((0u ^ 1u), ~ (~ ((0u ^ 1u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u, (1u | 1u), (_GLF_IDENTITY(0u ^ 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u ^ 1u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u ^ 1u, 0u, 0u)))), max(uint(_GLF_IDENTITY(uvec3(0u ^ 1u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u ^ 1u, 0u, 0u)))), uint(_GLF_IDENTITY(uvec3(0u ^ 1u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u ^ 1u, 0u, 0u))))))))), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u, (1u | 1u), (0u ^ 1u))) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u, (1u | 1u), _GLF_IDENTITY((0u ^ 1u), ~ (~ ((0u ^ 1u)))))))))))) >> 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 1u * (uint(6u))), uint(6u)))) + 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED((workgroup_base >> virtual_gid)))) + 1) % subgroup_size), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) / 1u) | (((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED((workgroup_base >> virtual_gid)))) + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, exp(0.0), 0.0, 0.0))), injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), true))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (buf[virtual_gid]), (~ (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u))))) | (~ (buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) >> 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) ^ (106130u & 0u)))), virtual_gid, virtual_gid))])))), 0u | ((_GLF_IDENTITY(~ (buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))]), (~ (buf[virtual_gid])) | (~ _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u) : _GLF_FUZZED(subgroup_size))), virtual_gid, virtual_gid))]), 0u ^ ((buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u) : _GLF_FUZZED(subgroup_size))), virtual_gid, virtual_gid))]))))))))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) >> 0))), (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) >> 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) >> 0))), ~ (~ (_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) >> 0)))))))), _GLF_IDENTITY(0, max(0, 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), bool(bvec4(! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), true, false, false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, true))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, true))), false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), false), bvec2(bvec2(bvec2((_GLF_DEAD(false)), false))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), false), bvec2(bvec2(bvec2((_GLF_DEAD(false)), false))))))), true, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false))))))), true, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), false), bvec2(bvec2(bvec2((_GLF_DEAD(false)), false))))), (bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), false), bvec2(bvec2(bvec2((_GLF_DEAD(false)), false)))))) && true))), true, false, false))))))))) && true)))))), false, true, true))), false, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)))))))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))), false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), false || (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), 0u ^ (next_virtual_gid))], uint(_GLF_IDENTITY(read_1 + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | 0u) + 1, ~ (~ (read_1 + 1))), read_1 + 1, read_1 + 1))), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, _GLF_IDENTITY(false, (false) && true), true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) && true), true))), ! (! (! (bool(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) && true), true)))))))))))), bool(bvec4(false, false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true), true)), bool(bool(bool(bvec2(false, true))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), min((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 0u, 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) << 0u, ((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), min((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 0u, 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) << 0u) | ((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))), min((_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : 0u)), 0u, 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u)))))))) << 0u)))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(84.79)))) - 0.0) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))), uint(_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (_GLF_IDENTITY(0u, (0u) - 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (_GLF_IDENTITY(uint(7u), uint(7u))))))))), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))), 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)))) | (_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))), (false ? _GLF_FUZZED(subgroup_size) : max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))), 1u, 1u, 1u)))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 1u, 1u, 1u)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 1u, 1u, 1u)))), clamp((_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 1u, 1u, 1u)))), (_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 1u, 1u, 1u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (true ? _GLF_IDENTITY((subgroup_local_id), uint(uint((subgroup_local_id)))) : _GLF_FUZZED(num_workgroup))), ((subgroup_local_id)) + 0u), (subgroup_local_id), (subgroup_local_id))), uint(uvec4(~ (subgroup_local_id), 1u, 1u, 1u)))))), uint(uvec3((_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 1u, 1u, 1u)))), 0u, 0u))), 1u, 0u, 0u)))), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), uint(uvec3(_GLF_IDENTITY((0u) | (0u), ~ (~ ((0u) | (0u)))), 0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(uint(8u), uint(8u))) ^ 0u)) ^ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 1u, 1u, 1u)))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) | (~ (subgroup_local_id))), uint(uvec4(~ (subgroup_local_id), 1u, 1u, 1u)))), uint(uvec3((_GLF_IDENTITY(~ (subgroup_local_id), uint(uvec4(~ (subgroup_local_id), 1u, 1u, 1u)))), 0u, 0u))), 1u, 0u, 0u))))))))) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) ^ 0), 1)) < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), bool(bvec4(! (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_1)))))) >> 0u)) + 1, 4, _GLF_IDENTITY(64, max(64, 64)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)) == _GLF_IDENTITY(read_2, uint(uvec4(_GLF_IDENTITY(read_2, (read_2) + 0u), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(1u, ~ (~ (1u)))))), ! (! (read_1 + 1 == read_2))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2)))))))), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2)))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2))))))))) || false)))))), (false ? _GLF_FUZZED(140050u) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u + (read_2)), ! (! (read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == _GLF_IDENTITY(read_2, 0u + (read_2)), ! (! (read_1 + 1 == read_2)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(read_1 + 1)), min(_GLF_IDENTITY(uint(uint(read_1 + 1)), (uint(uint(read_1 + 1))) + 0u), uint(uint(read_1 + 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0))), (uint(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)))) ^ 0u), 0u | (uint(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uint(read_1 + 1)), _GLF_IDENTITY(uint(uint(read_1 + 1)), (_GLF_IDENTITY(true ? uint(uint(read_1 + 1)) : _GLF_IDENTITY(_GLF_FUZZED(read_2), clamp(_GLF_FUZZED(read_2), _GLF_FUZZED(read_2), _GLF_FUZZED(read_2))), 1u * (true ? uint(uint(read_1 + 1)) : _GLF_FUZZED(read_2)))))))) == read_2))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))), (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u)))) << 0u) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)))))))))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)) == _GLF_IDENTITY(read_2, uint(uvec4(_GLF_IDENTITY(read_2, (read_2) + 0u), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(1u, ~ (~ (1u)))))), ! (! (read_1 + 1 == read_2))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2)))))))), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2)))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2))))))))) || false)))))), (false ? _GLF_FUZZED(140050u) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u + (read_2)), ! (! (read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == _GLF_IDENTITY(read_2, 0u + (read_2)), ! (! (read_1 + 1 == read_2)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(read_1 + 1)), min(_GLF_IDENTITY(uint(uint(read_1 + 1)), (uint(uint(read_1 + 1))) + 0u), uint(uint(read_1 + 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0))), (uint(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)))) ^ 0u), 0u | (uint(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uint(read_1 + 1)), _GLF_IDENTITY(uint(uint(read_1 + 1)), (_GLF_IDENTITY(true ? uint(uint(read_1 + 1)) : _GLF_IDENTITY(_GLF_FUZZED(read_2), clamp(_GLF_FUZZED(read_2), _GLF_FUZZED(read_2), _GLF_FUZZED(read_2))), 1u * (true ? uint(uint(read_1 + 1)) : _GLF_FUZZED(read_2)))))))) == read_2))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))), (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u)))) << 0u) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)))))))))))) + 1, min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)) == _GLF_IDENTITY(read_2, uint(uvec4(_GLF_IDENTITY(read_2, (read_2) + 0u), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(1u, ~ (~ (1u)))))), ! (! (read_1 + 1 == read_2))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2)))))))), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2)))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2))))))))) || false)))))), (false ? _GLF_FUZZED(140050u) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u + (read_2)), ! (! (read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == _GLF_IDENTITY(read_2, 0u + (read_2)), ! (! (read_1 + 1 == read_2)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(read_1 + 1)), min(_GLF_IDENTITY(uint(uint(read_1 + 1)), (uint(uint(read_1 + 1))) + 0u), uint(uint(read_1 + 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0))), (uint(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)))) ^ 0u), 0u | (uint(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uint(read_1 + 1)), _GLF_IDENTITY(uint(uint(read_1 + 1)), (_GLF_IDENTITY(true ? uint(uint(read_1 + 1)) : _GLF_IDENTITY(_GLF_FUZZED(read_2), clamp(_GLF_FUZZED(read_2), _GLF_FUZZED(read_2), _GLF_FUZZED(read_2))), 1u * (true ? uint(uint(read_1 + 1)) : _GLF_FUZZED(read_2)))))))) == read_2))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))), (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u)))) << 0u) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)))))))))))) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)) == _GLF_IDENTITY(read_2, uint(uvec4(_GLF_IDENTITY(read_2, (read_2) + 0u), 0u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(1u, ~ (~ (1u)))))), ! (! (read_1 + 1 == read_2))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2)))))))), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2)))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-40.85), _GLF_FUZZED(3.5)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (false ? _GLF_FUZZED(clamp(-754.671, -2026.7859, 69.84)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], min((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0])))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec3(read_1, 0u, 1u))), ((uint(uvec3(read_1, 0u, 1u)))) * 1u)))), read_1)) + 1 == read_2), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_size))), max(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 0u, 1u)), _GLF_IDENTITY(~ (~ (uint(uvec3(read_1, 0u, 1u)))), (~ (~ (uint(uvec3(read_1, 0u, 1u))))) >> 0u))), read_1)) + 1 == read_2)) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))) + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) - (0u ^ 0u)) == read_2))))))))) || false)))))), (false ? _GLF_FUZZED(140050u) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, 0u + (read_2)), ! (! (read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == _GLF_IDENTITY(read_2, 0u + (read_2)), ! (! (read_1 + 1 == read_2)))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), ! (! (_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(read_1 + 1)), min(_GLF_IDENTITY(uint(uint(read_1 + 1)), (uint(uint(read_1 + 1))) + 0u), uint(uint(read_1 + 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0))), (uint(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)))) ^ 0u), 0u | (uint(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, 0u + (read_1 + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uint(read_1 + 1)), _GLF_IDENTITY(uint(uint(read_1 + 1)), (_GLF_IDENTITY(true ? uint(uint(read_1 + 1)) : _GLF_IDENTITY(_GLF_FUZZED(read_2), clamp(_GLF_FUZZED(read_2), _GLF_FUZZED(read_2), _GLF_FUZZED(read_2))), 1u * (true ? uint(uint(read_1 + 1)) : _GLF_FUZZED(read_2)))))))) == read_2))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u))), (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, (read_1) - 0u)))) << 0u) + 1 == read_2, ! (! (read_1 + _GLF_IDENTITY(1, max(1, 1)) == read_2)))))))))))) + 1))) - 0u), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-6682)))) ^ 0), 1)), _GLF_IDENTITY(min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (true ? _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-86067) : 4)), 4)) : _GLF_FUZZED(-99003)))) * 1), (4) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, ((_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (0)))))) | 0) << (42797 & 0))), 0, 0))), _GLF_IDENTITY(1, (_GLF_IDENTITY(0, int(int(0))) & _GLF_IDENTITY((+ 6842), 0 | ((+ 6842)))) | (1)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (4) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 0))))), (0) | 0), 0, _GLF_IDENTITY(0, ~ (~ (0)))))), _GLF_IDENTITY(1, (0 & (+ 6842)) | (1))))), ((int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (4) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))), _GLF_IDENTITY(1, (0 & (+ 6842)) | (1)))))) | (_GLF_IDENTITY((int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (4) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))), _GLF_IDENTITY(1, (0 & (+ 6842)) | (1))))), min((int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (4) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))), _GLF_IDENTITY(1, (0 & (+ 6842)) | (1))))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (4) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))), _GLF_IDENTITY(1, (0 & (+ 6842)) | (1))))))))), (~ (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), max(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), (4) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(5), int(5))) | (1)), _GLF_IDENTITY(1, max(1, 1)))), (0 & (+ 6842)) | (1)))))) | 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) << 0)))), min(ivec2(_GLF_IDENTITY(4, (4) ^ 0), 1), ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, clamp(_GLF_IDENTITY((4) ^ 0, min((4) ^ 0, (4) ^ 0)), (4) ^ 0, (4) ^ 0))), 1)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-98601), max(_GLF_FUZZED(-98601), _GLF_FUZZED(-98601))) : int(ivec2(_GLF_IDENTITY(4, (4) ^ 0), 1))))), (min(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (4) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 ^ (0)), 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(0, int(ivec2(0, 0))) + (0))))), 1)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, (1 ^ 0), 1, (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0)))), 1 * (4))))) ^ 0), 1)), (false ? _GLF_FUZZED(-98601) : int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) ^ 0), 1), min(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(86201) : 4))) ^ 0), 1), ivec2(_GLF_IDENTITY(4, (4) ^ 0), 1)))))))) << 0))), 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 4 : _GLF_FUZZED(66240)))) >> 0)), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-49076) : (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) ^ 0)))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0), mix(vec4((vec4(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0))[3]), vec4(_GLF_FUZZED(0.3), _GLF_FUZZED(-7.9), _GLF_FUZZED(-6802.2301), _GLF_FUZZED(8.6)), bvec4(false, false, false, false)))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
