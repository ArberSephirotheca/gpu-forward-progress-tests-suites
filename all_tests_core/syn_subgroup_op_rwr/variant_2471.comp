#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.0) : injectionSwitch.x)), 0.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0)))), bool(true))) > injectionSwitch.y))))) && true))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(vec2(mat3x4(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)), min(vec2(mat3x4(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)), vec2(mat3x4(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), determinant(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)))))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) && true))))), ! (! (bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) && true)))))))))), bvec2(bvec3(bvec2(false, true), true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, abs(0.0), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), (! (injectionSwitch.x > injectionSwitch.y)) && true), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true), true, false)))))))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, ! (! (((false)) && true))))), _GLF_IDENTITY(bool(bvec4(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ! (! (((false)))))) || false) && _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(! (! _GLF_IDENTITY((false), ((false)) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((_GLF_IDENTITY(false, bool(bvec2(false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(59278))), bool(false)))), float(_GLF_FUZZED(5.7)), bool(false))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(5111.6976, -855.432, -60.94).t)), vec2(_GLF_FUZZED(-3535.3059), (injectionSwitch)[1]), bvec2(false, true))).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat3x2(mat2x4(-0.0, 36.30, 12.42, -4.3, -547.407, 6940.1940, 426.390, _GLF_IDENTITY(-6.7, max(-6.7, -6.7)))) * vec3(6.9, 236.541, -8.0))) : injectionSwitch))) - vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, log(1.0), abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0)), float(vec3(float(mat4(0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, log(1.0), abs(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0)), 1.0, 1.0)))), 0.0)), 0.0)).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(48.67, _GLF_IDENTITY(-57.69, mix(float(_GLF_IDENTITY(-57.69, float(mat4x3(-57.69, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), float(_GLF_FUZZED(207.807)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) / 1.0) > injectionSwitch.y))))))))).y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)))))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)))).y, injectionSwitch.y, injectionSwitch.y))))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))), true))))), false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bool(! (false)))), true && (_GLF_IDENTITY((bool(bool(! (false)))), false || ((bool(bool(! (false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bool(! (false))))), ! (! (! (! (bool(bool(! (false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bool(! (false))))), ! (! (! (! (bool(bool(! (false)))))))), bool(bvec2(_GLF_IDENTITY(! (! (bool(bool(! (false))))), ! (! (! (! (bool(bool(! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bool(! (false)))), true && (_GLF_IDENTITY((bool(bool(! (false)))), false || ((bool(bool(! (false))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (bool(bool(! (false))))), ! (! (! (! (bool(bool(! (false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bool(! (false))))), ! (! (! (! (bool(bool(! (false)))))))), bool(bvec2(_GLF_IDENTITY(! (! (bool(bool(! (false))))), ! (! (! (! (bool(bool(! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(abs(length(injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || (_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(bool(bvec3(true, false, false)), false)))))) && (true)), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), false || (_GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(bool(bvec3(true, false, false)), false)))))) && (true)), false, false)), false))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), clamp(_GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.8) : float(vec2(injectionSwitch.y, 1.0)))), float(vec2(injectionSwitch.y, 1.0)), float(vec2(injectionSwitch.y, 1.0))))), injectionSwitch.y)))) ? injectionSwitch.y : _GLF_FUZZED(abs(length(injectionSwitch)))))) * 1.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size : _GLF_FUZZED(subgroup_id))) * _GLF_IDENTITY(workgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(uint(_GLF_FUZZED(subgroup_local_id)), _GLF_IDENTITY(uint(_GLF_FUZZED(subgroup_local_id)), (uint(_GLF_FUZZED(subgroup_local_id))) ^ 0u)))), (uint(uint(_GLF_FUZZED(subgroup_local_id)))) + 0u)) : _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))))).y)), false, false)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(1.0), bool(true)))) * (injectionSwitch)))).y)), false, false))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), false, false)), false || (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-0.8, (_GLF_IDENTITY(-0.8, clamp(-0.8, -0.8, -0.8))) / 1.0))), (false ? _GLF_FUZZED(37.11) : float(_GLF_FUZZED(_GLF_IDENTITY(-0.8, (_GLF_IDENTITY(-0.8, clamp(-0.8, -0.8, -0.8))) / 1.0))))), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))))), false, false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.7, 4.0)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))))))).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), vec2(1.0, 1.0) * (abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))).y)), false, false)), _GLF_IDENTITY(false, (false) || false) || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), false, false))))), true), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))) || false), true && (false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true && _GLF_IDENTITY((false), ((false)) && true)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true && (false)), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, (false) || false))), (bool(bvec2(false, _GLF_IDENTITY(false, (false) || false)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false))))), false)))), true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (1u ^ _GLF_IDENTITY(1u, (1u) | (1u))) + (subgroup_id)))))) / 1u), 1u, 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))) / 1u), 1u, 0u)) << uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) / 1u), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) / 1u), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id)))))) / 1u)) | 0u), 1u, 0u)) << uvec3(0u, 0u, 0u)))) / 1u)) ^ 0u)) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, 1))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)), clamp(_GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)), clamp((true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), true && (bool(_GLF_IDENTITY(true, false || (true)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), true && (bool(_GLF_IDENTITY(true, false || (true)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), true && (bool(_GLF_IDENTITY(true, false || (true)))))), true, true))))))) ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)), _GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)), max((true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)), (true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)))))), (true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)), _GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)), (_GLF_IDENTITY((true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)), min((true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)), (true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u))))) >> 0u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_IDENTITY(_GLF_FUZZED(153127u), (_GLF_FUZZED(153127u)) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u))), (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)))) << (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u))), (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)))) | (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u) : _GLF_FUZZED(_GLF_IDENTITY(153127u, clamp(153127u, 153127u, 153127u)))))))) << 0u, uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, (true) && true) ? subgroup_local_id + 1 : _GLF_FUZZED(153127u))), (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)))) | (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)))))) << 0u)))) >> 0u)), (false ? _GLF_FUZZED(uaddCarry(workgroup_base, workgroup_id, workgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) << 0), 1), (clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) << 0), 1)) | (clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) << 0), _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), int(int(int(int(1)))))))))), (true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)))) << 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(153127u)))) << 0u)) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) | ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED((-24579 & -7786)) : 4)), max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED((-24579 & -7786)) : 4)), _GLF_IDENTITY(4, (false ? _GLF_FUZZED((-24579 & -7786)) : 4)))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, false)))) && true))), false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY((4) | 0, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((4), max((4), (4))) | 0)), ~ (~ ((~ (_GLF_IDENTITY((4), max((4), (4))) | 0)))))))), _GLF_IDENTITY(1 * (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((4) | 0, ~ (~ (_GLF_IDENTITY((4), max((4), (4))) | 0))))), (false ? _GLF_FUZZED(39033) : ~ (~ (_GLF_IDENTITY((4) | 0, ~ (~ (_GLF_IDENTITY((4), max((4), (4))) | 0)))))))), int(int(1 * (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY((4) | 0, ~ (~ (_GLF_IDENTITY((4), max((4), (4))) | 0))))), (false ? _GLF_FUZZED(39033) : ~ (~ (_GLF_IDENTITY((4) | 0, ~ (~ (_GLF_IDENTITY((4), max((4), (4))) | 0)))))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), false, true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, (false) && true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) && true))), true))))), false))))))), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), false, _GLF_IDENTITY(true, true && (true)), true))), false, true, false))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + 1 == read_2), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(0u | (uint(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) / 1u), min(read_2, read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | 0u), min(read_2, read_2))) << 0u), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))), min((_GLF_IDENTITY(read_2, min(read_2, read_2))), (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), 0u ^ (_GLF_IDENTITY(min(read_2, read_2), max(min(read_2, read_2), min(read_2, read_2))))))))) << 0u)))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), (min(read_2, read_2)) / 1u))) << 0u)))) : _GLF_FUZZED(workgroup_base))))))), ~ (~ (0u | (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) << 0u)))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) << 0u)))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, _GLF_IDENTITY(min(read_2, read_2), (false ? _GLF_FUZZED(virtual_gid) : min(read_2, read_2))))) << 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) << 0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) << 0u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) << 0u)))))))), ! (! (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1))) >> 0) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) << 0u))))), 1u * (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))), max((_GLF_IDENTITY(read_2, min(read_2, read_2))), (_GLF_IDENTITY(read_2, min(read_2, read_2))))) << 0u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))), max((_GLF_IDENTITY(read_2, min(read_2, read_2))), (_GLF_IDENTITY(read_2, min(read_2, read_2))))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))), max((_GLF_IDENTITY(read_2, min(read_2, read_2))), (_GLF_IDENTITY(read_2, min(read_2, read_2))))) << 0u)))), max((_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))), max((_GLF_IDENTITY(read_2, min(read_2, read_2))), (_GLF_IDENTITY(read_2, min(read_2, read_2))))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))), max((_GLF_IDENTITY(read_2, min(read_2, read_2))), (_GLF_IDENTITY(read_2, min(read_2, read_2))))) << 0u)))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))), max((_GLF_IDENTITY(read_2, min(read_2, read_2))), (_GLF_IDENTITY(read_2, min(read_2, read_2))))) << 0u)))))))))))))), ! (! (read_1 + 1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_base)))) << 0u), 1u))))), (_GLF_IDENTITY(read_2, min(read_2, read_2))) << 0u))))))))))))))))))) | 0u) + 1, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), min(ivec2(4, _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0)))))), (0 >> _GLF_IDENTITY(int(2), int(2))) | _GLF_IDENTITY(((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0))))))), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0))))))), min(((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0))))))), ((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0)))))))))), min((_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0))))))), min(((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0))))))), ((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0)))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0))))))), min(((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0))))))), ((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) | ((~ (0)))))))))))) ^ 0)) - 0)))), ivec2(4, 0))))), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || _GLF_IDENTITY((bool(bvec4(false, true, true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool((bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < injectionSwitch.y)), false))))), ! (! (_GLF_IDENTITY(bool(bvec4(bool((bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true))), ! (! (! (true)))))), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! _GLF_IDENTITY((bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < injectionSwitch.y)), false))), ! (! ((bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x < injectionSwitch.y)), false))))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ((bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true)), ((! _GLF_IDENTITY((bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ((bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true))) && true)))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), false || (_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), ! (! (bool((bool(bvec4(false, true, true, false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), ! (! (bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false), true, true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)), false))))))), false, true), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(false, true, true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true)))))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_IDENTITY(bool(bool(bool((bool(bvec4(false, true, true, false)))))), (bool(bool(bool((bool(bvec4(false, true, true, false))))))) || false)), _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_IDENTITY(bool(bool(bool((bool(bvec4(false, true, true, false)))))), (bool(bool(bool((bool(bvec4(false, true, true, false))))))) || false)), _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_IDENTITY(bool(bool(bool((bool(bvec4(false, true, true, false)))))), (bool(bool(bool((bool(bvec4(false, true, true, false))))))) || false)), _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_IDENTITY(bool(bool(bool((bool(bvec4(false, true, true, false)))))), (bool(bool(bool((bool(bvec4(false, true, true, false))))))) || false)), _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_IDENTITY(bool(bool(bool((bool(bvec4(false, true, true, false)))))), (bool(bool(bool((bool(bvec4(false, true, true, false))))))) || false)), _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true))))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_IDENTITY(bool(bool(bool((bool(bvec4(false, true, true, false)))))), (bool(bool(bool((bool(bvec4(false, true, true, false))))))) || false)), _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_IDENTITY(bool(bool(bool((bool(bvec4(false, true, true, false)))))), (bool(bool(bool((bool(bvec4(false, true, true, false))))))) || false)), _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_IDENTITY(bool(bool(bool((bool(bvec4(false, true, true, false)))))), (bool(bool(bool((bool(bvec4(false, true, true, false))))))) || false)), _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool((bool(bvec4(false, true, true, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), _GLF_IDENTITY(bool(bool(bool((bool(bvec4(false, true, true, false)))))), (bool(bool(bool((bool(bvec4(false, true, true, false))))))) || false)), _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(bool((bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true)))), false || (bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), false, true))))))), true, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true))))))), true)))), false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)), false))))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), clamp(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), clamp(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)))))], uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, (read_1) ^ 0u)), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ 0u), clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((read_1), (1u & 1u) * ((read_1))), ~ (_GLF_IDENTITY(~ ((read_1)), clamp(~ ((read_1)), ~ ((read_1)), ~ ((read_1)))))), (_GLF_IDENTITY(_GLF_IDENTITY((read_1), (1u & 1u) * ((read_1))), ~ (_GLF_IDENTITY(~ ((read_1)), clamp(~ ((read_1)), ~ ((read_1)), ~ ((read_1))))))) << 0u) ^ 0u), _GLF_IDENTITY(read_1, (read_1) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ 0u), 0u ^ (_GLF_IDENTITY(read_1, (read_1) ^ 0u)))))) : _GLF_FUZZED(read_1)))))) | _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) - _GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) - _GLF_IDENTITY(0u, (0u) - 0u))), max((_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, clamp(_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) | ((0u) - 0u)), (0u) - 0u, _GLF_IDENTITY((0u) - 0u, max((0u) - 0u, (0u) - 0u))))))), (_GLF_IDENTITY(read_1, (read_1) - _GLF_IDENTITY(0u, (0u) - 0u)))))) << 0u)) + 1 == read_2) + 1, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) - 0))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (0 & -17155) | (64))) << 0), _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, clamp(4, 4, 4))), (max(4, _GLF_IDENTITY(4, (4) << (0 >> _GLF_IDENTITY(int(5), int(5)))))) << (0 | 0))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), false || (bool(bvec3(_GLF_DEAD(false), false, true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(0.5, -851.426, -5376.2238, -7.9))))), transpose(transpose(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(0.5, -851.426, -5376.2238, -7.9))))), transpose(transpose(mat4x2(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat2(0.5, -851.426, -5376.2238, -7.9))))))))))))), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(0.5), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3445.0570) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-905.931)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))[1], (true ? _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))))[1], ((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))[1]) * 1.0) : _GLF_FUZZED(-43.53)))), vec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))))))[0], _GLF_FUZZED(-137.189)), bvec2(true, false)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(0.2)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5741.6267), exp(0.0) * (_GLF_FUZZED(-5741.6267))), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(47.49, -601.191)) : injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(47.49, -601.191)) : injectionSwitch)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(47.49, -601.191)) : injectionSwitch)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(47.49, -601.191)), (_GLF_FUZZED(vec2(47.49, -601.191))) * mat2(1.0)) : injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(47.49, -601.191)) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(47.49, -601.191)) : injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(47.49, -601.191)) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(47.49, -601.191)) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(47.49, -601.191)) : injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(47.49, -601.191)) : injectionSwitch)).y))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0), (mat4x2(injectionSwitch.x, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(float(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0), (mat4x2(injectionSwitch.x, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(3608.7304)), bool(false)))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))), (vec2(vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))))) + vec2(0.0, 0.0))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 0.0))))), 1.0)))).x), float(_GLF_FUZZED(-842.058)), bool(_GLF_IDENTITY(false, (false) || false)))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), abs(0.0), 1.0))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-23.50))), injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-5.7))) > injectionSwitch.y))))) || _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(bool(false), true && (bool(false)))) && true))), (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((- -6308.6704)) : injectionSwitch.y))), float(_GLF_FUZZED(3.3)), bool(false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-2676.1946, 322.146, 99.25, 14.97).p)), bool(false))) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-2676.1946, 322.146, 99.25, 14.97).p)), bool(false))) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-2676.1946, 322.146, 99.25, 14.97).p)), bool(false))) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-2676.1946, 322.146, 99.25, 14.97).p)), bool(false))) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), true, true))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))), true, false))))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), _GLF_IDENTITY(true, true && (true)) && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))) && true, false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), false || (! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(457.802) : injectionSwitch.x)), 0.0, sqrt(0.0), 0.0))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), true && (! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
}
