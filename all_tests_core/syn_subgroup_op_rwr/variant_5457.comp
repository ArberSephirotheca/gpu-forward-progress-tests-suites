#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), bool(bvec2(bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), false)))), false || (bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bool(bvec2(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true))), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), mix(vec2((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[0], (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_FUZZED(float(161462u)), _GLF_FUZZED(7053.2352)), bvec2(false, false))))).x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))) * (injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), true, false, true))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), (false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x)) : _GLF_FUZZED((abs(-9.8) * -87.23)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4((injectionSwitch), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x4((injectionSwitch), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), max(vec2(_GLF_IDENTITY(mat3x4((injectionSwitch), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x4((injectionSwitch), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))), vec2(_GLF_IDENTITY(mat3x4((injectionSwitch), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat3x4((injectionSwitch), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, 1.0))), (injectionSwitch)))))).x > injectionSwitch.y), true, false, true))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), (false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((- cosh(injectionSwitch))) : injectionSwitch)).y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(1.1), (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], (false ? _GLF_FUZZED(-418.264) : (mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2860.8684)), bvec2(true, false)))), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2860.8684)), bvec2(true, false))))) - vec2(0.0, 0.0)))[0])), _GLF_FUZZED(635.839)), bvec2(true, false)))).x > injectionSwitch.y), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), true, false, true))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0)), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)), (false || ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true), bvec3(bvec3(bvec3(! (! (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((injectionSwitch.x > injectionSwitch.y))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)) || false))) || false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (false ? _GLF_FUZZED(-0.9) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(927.012)), float(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0))), bool(true))))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2.2)), bool(false))), injectionSwitch.y)), injectionSwitch.y))))), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (false ? _GLF_FUZZED(vec3(164.867, -5.9, -909.827)) : vec3(injectionSwitch, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1345.9935) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), false, true, true)))))) || false)))), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.y : _GLF_FUZZED(dot(1.9, _GLF_IDENTITY(4.1, mix(float(_GLF_FUZZED(-6.1)), float(4.1), bool(true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(-5.6)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), true), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, false))), true), false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), true), false, false))), true), false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.8)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(61.85)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) | (subgroup_local_id)), min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), clamp(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))), ~ (~ (0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))))))) | (0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), (true ? (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_IDENTITY(uvec2(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), clamp(uvec2(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec2(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(uvec2(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec2(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) - uvec2(0u, 0u))))))))))), ~ (~ (0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), clamp((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))))))))) | (0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u))), uint(6u))), (false ? _GLF_FUZZED(workgroup_id) : (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) : _GLF_FUZZED(packSnorm4x8(vec4(-868.507, -227.237, -9411.9112, -340.487))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), uint(uvec4(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), uint(uvec2(_GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), uint(uvec4(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), 0u))), 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)))), min(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base)))), (clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_base))))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) - 0u), (workgroup_base + subgroup_id * subgroup_size) - 0u), 1u))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))), (workgroup_base + subgroup_id * subgroup_size) + 0u))) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), clamp((workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))), (workgroup_base + subgroup_id * subgroup_size), (workgroup_base + subgroup_id * subgroup_size))) - 0u)) * 1u) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (workgroup_base + subgroup_id * subgroup_size))))) ^ 0u), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (workgroup_base + subgroup_id * subgroup_size), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) ? _GLF_IDENTITY(0u, max(0u, 0u)) ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) : _GLF_FUZZED((-- workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) ^ (workgroup_base + subgroup_id * subgroup_size), uint(uvec4(0u ^ (workgroup_base + subgroup_id * subgroup_size), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), 0u ^ (workgroup_base + subgroup_id * subgroup_size)))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) - 0u), (workgroup_base + subgroup_id * subgroup_size) - 0u), 1u))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) + 0u))) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) ^ 0u);
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) / 1u)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) >> 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1)))))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), min(~ (subgroup_local_id + 1), ~ _GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1)))))))) | (subgroup_local_id + 1))) + 0u)))) % subgroup_size)) - 0u), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))))) | (((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(false, (false) && true)))), false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)), true && (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), _GLF_IDENTITY(uint(uint(read_1)), _GLF_IDENTITY(0u | (uint(uint(read_1))), 1u * (0u | (uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) + 0u))))))) + 1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 1)), clamp(int(ivec2(64, 1)), _GLF_IDENTITY(int(ivec2(64, 1)), (_GLF_IDENTITY(int(ivec2(64, 1)), _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) ^ (int(ivec2(64, _GLF_IDENTITY(1, (1) - 0)))), (false ? _GLF_FUZZED(88901) : (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (int(ivec2(64, 1))))))) | (_GLF_IDENTITY(int(ivec2(64, 1)), (int(ivec2(64, 1))) | 0))), int(ivec2(64, 1)))))), max((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(64, 1)), clamp(int(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (_GLF_IDENTITY(ivec2(64, 1), _GLF_IDENTITY(ivec2(ivec3(ivec2(64, 1), 0)), ivec2(0, 0) | (ivec2(ivec3(ivec2(64, 1), 0)))))))), _GLF_IDENTITY(int(ivec2(64, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-68213))))))), (_GLF_IDENTITY(int(ivec2(64, 1)), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(1))) ^ (int(ivec2(64, 1))))) | (_GLF_IDENTITY(int(ivec2(64, 1)), (int(ivec2(64, 1))) | 0))), int(ivec2(64, 1)))), (_GLF_IDENTITY(int(ivec2(64, 1)), clamp(int(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), clamp(ivec2(64, 1), _GLF_IDENTITY(ivec2(64, 1), ivec2(ivec4(_GLF_IDENTITY(ivec2(64, 1), max(ivec2(64, 1), ivec2(64, 1))), 0, 1))), ivec2(64, 1))), _GLF_IDENTITY(ivec2(ivec3(ivec2(64, 1), 0)), ivec2(0, 0) | (ivec2(ivec3(ivec2(64, 1), 0)))))))), _GLF_IDENTITY(int(ivec2(64, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-68213))))))), (_GLF_IDENTITY(int(ivec2(64, 1)), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(1))) ^ (int(ivec2(64, 1))))) | (_GLF_IDENTITY(int(ivec2(64, 1)), (int(ivec2(64, 1))) | 0))), int(ivec2(64, 1))))) / 1))), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 1)), _GLF_IDENTITY(clamp(int(ivec2(64, 1)), _GLF_IDENTITY(int(ivec2(64, _GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(64, 1)), (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(64, 1)), int(ivec2(64, 1)))))), (0 >> _GLF_IDENTITY(int(6), int(6))) + (_GLF_IDENTITY(int(ivec2(64, 1)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(16361) : 0)) >> _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(64, 1)), int(ivec2(64, 1))))))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1)))))), (int(ivec2(64, 1))) | _GLF_IDENTITY(0, int(ivec2(0, 1)))))), int(ivec2(64, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(int(ivec2(64, 1)), _GLF_IDENTITY(int(ivec2(64, 1)), (_GLF_IDENTITY(int(ivec2(64, 1)), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> (1 ^ 1)))) ^ _GLF_IDENTITY((int(ivec2(64, 1))), ((int(ivec2(_GLF_IDENTITY(64, (64) - 0), 1)))) | 0))) | (_GLF_IDENTITY(int(ivec2(64, 1)), (int(ivec2(64, 1))) | 0))), int(ivec2(64, 1)))))))))), (~ _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 1)), clamp(int(ivec2(64, 1)), _GLF_IDENTITY(int(ivec2(64, 1)), (_GLF_IDENTITY(int(ivec2(64, 1)), _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) ^ (int(ivec2(64, _GLF_IDENTITY(1, (1) - 0)))), (false ? _GLF_FUZZED(88901) : (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (int(ivec2(64, 1))))))) | (_GLF_IDENTITY(int(ivec2(64, 1)), (int(ivec2(64, 1))) | 0))), int(ivec2(64, 1)))))), max((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(64, 1)), clamp(int(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (_GLF_IDENTITY(ivec2(64, 1), _GLF_IDENTITY(ivec2(ivec3(ivec2(64, 1), 0)), ivec2(0, 0) | (ivec2(ivec3(ivec2(64, 1), 0)))))))), _GLF_IDENTITY(int(ivec2(64, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-68213))))))), (_GLF_IDENTITY(int(ivec2(64, 1)), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(1))) ^ (int(ivec2(64, 1))))) | (_GLF_IDENTITY(int(ivec2(64, 1)), (int(ivec2(64, 1))) | 0))), int(ivec2(64, 1)))), (_GLF_IDENTITY(int(ivec2(64, 1)), clamp(int(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), clamp(ivec2(64, 1), _GLF_IDENTITY(ivec2(64, 1), ivec2(ivec4(_GLF_IDENTITY(ivec2(64, 1), max(ivec2(64, 1), ivec2(64, 1))), 0, 1))), ivec2(64, 1))), _GLF_IDENTITY(ivec2(ivec3(ivec2(64, 1), 0)), ivec2(0, 0) | (ivec2(ivec3(ivec2(64, 1), 0)))))))), _GLF_IDENTITY(int(ivec2(64, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-68213))))))), (_GLF_IDENTITY(int(ivec2(64, 1)), (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (1))), int(1))) ^ (int(ivec2(64, 1))))) | (_GLF_IDENTITY(int(ivec2(64, 1)), (int(ivec2(64, 1))) | 0))), int(ivec2(64, 1))))) / 1))), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 1)), _GLF_IDENTITY(clamp(int(ivec2(64, 1)), _GLF_IDENTITY(int(ivec2(64, _GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(64, 1)), (0 >> _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(64, 1)), int(ivec2(64, 1)))))), (0 >> _GLF_IDENTITY(int(6), int(6))) + (_GLF_IDENTITY(int(ivec2(64, 1)), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(16361) : 0)) >> _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(int(ivec2(64, 1)), max(int(ivec2(64, 1)), int(ivec2(64, 1))))))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(64, 1), ivec2(0, 0) | (_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1)))))), (int(ivec2(64, 1))) | _GLF_IDENTITY(0, int(ivec2(0, 1)))))), int(ivec2(64, 1))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(int(ivec2(64, 1)), _GLF_IDENTITY(int(ivec2(64, 1)), (_GLF_IDENTITY(int(ivec2(64, 1)), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> (1 ^ 1)))) ^ _GLF_IDENTITY((int(ivec2(64, 1))), ((int(ivec2(_GLF_IDENTITY(64, (64) - 0), 1)))) | 0))) | (_GLF_IDENTITY(int(ivec2(64, 1)), (int(ivec2(64, 1))) | 0))), int(ivec2(64, 1))))))))))) << (0 >> _GLF_IDENTITY(int(2), int(2))))), clamp(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 1)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(1, ~ (~ (1))) * (64)), 1), ~ (~ (ivec2(_GLF_IDENTITY(64, 1 * (64)), 1))))), int(_GLF_IDENTITY(ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1), (_GLF_IDENTITY(ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1), (ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1)) << ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (int(int(64))) + 0)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(64, int(int(64)))), (1 * (_GLF_IDENTITY(64, int(int(64))))) ^ 0)), 1)), int(ivec2(64, 1)))))), clamp((_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 1)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(1, ~ (~ (1))) * (64)), 1), ~ (~ (ivec2(_GLF_IDENTITY(64, 1 * (64)), 1))))), int(_GLF_IDENTITY(ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1), (_GLF_IDENTITY(ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1), (ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1)) << ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (int(int(64))) + 0)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(64, int(int(64)))), (1 * (_GLF_IDENTITY(64, int(int(64))))) ^ 0)), 1)), int(ivec2(64, 1)))))), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 1)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(1, ~ (~ (1))) * (64)), 1), ~ (~ (ivec2(_GLF_IDENTITY(64, 1 * (64)), 1))))), int(_GLF_IDENTITY(ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1), (_GLF_IDENTITY(ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1), (ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1)) << ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (int(int(64))) + 0)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(64, int(int(64)))), (1 * (_GLF_IDENTITY(64, int(int(64))))) ^ 0)), 1)), int(ivec2(64, 1)))))), (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 1)), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(1, ~ (~ (1))) * (64)), 1), ~ (~ (ivec2(_GLF_IDENTITY(64, 1 * (64)), 1))))), int(_GLF_IDENTITY(ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1), (_GLF_IDENTITY(ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1), (ivec3(int(ivec2(_GLF_IDENTITY(64, 1 * (64)), 1)), 0, 1)) << ivec3(0, 0, 0))) >> ivec3(0, 0, 0)))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (int(int(64))) + 0)), _GLF_IDENTITY(1 * (_GLF_IDENTITY(64, int(int(64)))), (1 * (_GLF_IDENTITY(64, int(int(64))))) ^ 0)), 1)), int(ivec2(64, 1))))))))), (~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), max(_GLF_IDENTITY((64), ((64)) / 1), _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(-10233)))))) | ((64))) - 0), 1), (false ? _GLF_FUZZED(ivec2(40872, -67399)) : ivec2(_GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), max(_GLF_IDENTITY((64), ((64)) / 1), _GLF_IDENTITY((64), (true ? (64) : _GLF_FUZZED(-10233)))))) | ((64))) - 0), 1)))), _GLF_IDENTITY(clamp(int(_GLF_IDENTITY(ivec2(64, 1), ~ (~ (_GLF_IDENTITY(ivec2(64, 1), max(ivec2(64, 1), ivec2(64, 1))))))), int(ivec2(64, 1)), int(ivec2(64, 1))), (clamp(int(_GLF_IDENTITY(ivec2(64, 1), ~ (~ (_GLF_IDENTITY(ivec2(64, 1), _GLF_IDENTITY(max(ivec2(64, 1), ivec2(64, 1)), (_GLF_IDENTITY(max(ivec2(64, 1), ivec2(64, 1)), (max(ivec2(64, 1), ivec2(64, 1))) - ivec2(0, 0))) / ivec2(1, 1))))))), int(ivec2(64, 1)), int(ivec2(64, 1)))) / 1)))))) / 1), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(int(ivec2(64, 1)), clamp(int(ivec2(64, 1)), int(ivec2(64, 1)), int(ivec2(64, 1))))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) - 0), _GLF_IDENTITY(int(ivec2(64, 1)), clamp(int(ivec2(64, 1)), int(ivec2(64, 1)), int(ivec2(64, 1)))))))) - (0 & -61666)), ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 1)), clamp(int(_GLF_IDENTITY(ivec2(64, 1), (_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1)))) ^ ivec2(0, 0))), int(ivec2(64, 1)), int(ivec2(64, 1)))))))))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u))), _GLF_IDENTITY(max(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))) | 0u), virtual_gid))) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))]), (_GLF_IDENTITY(max(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), buf[virtual_gid]), ~ (~ (max(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) + 0u), buf[virtual_gid]))))) | (max(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) + 0u, (true ? _GLF_IDENTITY((buf[virtual_gid]) + 0u, 1u * ((buf[virtual_gid]) + 0u)) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(buf[virtual_gid], (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u))))))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), min((64), (64)))) + (0 | 0)) | (_GLF_IDENTITY(64, _GLF_IDENTITY((64) / 1, ~ (~ ((64) / _GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * (1)))))))), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(uvec3(90186u, 19793u, 129683u)[0]) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))) < subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size) || false)), ! (! ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (_GLF_IDENTITY(uvec4(186335u, 171722u, 52207u, 50541u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(186335u, 171722u, 52207u, 50541u), (false ? _GLF_FUZZED(uvec4(171035u, 76656u, 186079u, 86373u)) : uvec4(186335u, 171722u, 52207u, 50541u))))).a & 0u)) + 1 < subgroup_size)))) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))), false, true))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)), false || (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == read_2), (uint(read_1 + _GLF_IDENTITY(1, clamp(1, 1, 1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)))) + 1, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (64))) | 0), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-8.2 * 16.76))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8223.0434)))))), float(_GLF_FUZZED(-8.2)), bool(false)))))))))))))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.0), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((267.999))), bvec2(_GLF_IDENTITY(true, false || (true)), false))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((267.999))), bvec2(true, false))).y)))) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3301.1384) : injectionSwitch.y))))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(48882))), 64, 4);
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! ((true)))))) && true));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
}
