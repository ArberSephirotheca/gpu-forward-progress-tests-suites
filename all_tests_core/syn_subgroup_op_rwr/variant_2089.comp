#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x)), _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))));
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 uint workgroup_base = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x, min(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x, (_GLF_IDENTITY(true ? GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x : _GLF_FUZZED(num_workgroup), (true ? GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x : _GLF_FUZZED(num_workgroup)) - 0u)))));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), uint(uvec4(workgroup_base, _GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u))) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) * 1u), (subgroup_size) ^ 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)], 4, 64, 0);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (true ? _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)) : _GLF_FUZZED(virtual_gid)))], (buf[virtual_gid]) * 1u), _GLF_IDENTITY(4, (4) * 1), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), int(ivec4(~ ((1)), 0, 0, 1))))) : _GLF_FUZZED(-46756))) | 0))), int(ivec3(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0))), 1, 0))) == read_2, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2((_GLF_IDENTITY(true, ! (! (true)))), true)))))) && true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2((_GLF_IDENTITY(true, ! (! (true)))), true)))))) && true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) || false)) || false)))))), bool(bvec2((_GLF_IDENTITY(true, ! (! (true)))), true)))))) && true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) || false)) || false)))))), bool(bvec2((_GLF_IDENTITY(true, ! (! (true)))), true)))))) && true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2((_GLF_IDENTITY(true, ! (! (true)))), true)))))) && true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), false || ((true)))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2((_GLF_IDENTITY(true, ! (! (true)))), true)))))) && true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) || false)) || false)))))), bool(bvec2((_GLF_IDENTITY(true, ! (! (true)))), true)))))) && true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) || false)) || false)))))), bool(bvec2((_GLF_IDENTITY(true, ! (! (true)))), true)))))) && true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), true))), false)), true)))))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), true))), false)), true)))))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), true))), false)), true)))))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))))))))), false || (bool(_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), true))), false)), true)))))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))))))))))))))))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), ! (! ((true))))), ! (! (! (_GLF_IDENTITY((true), ! (! ((true))))))))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), bool(bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true))))))), false || (true)), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))))))))), true && (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), false))))))))))))))))))) && _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (! ((read_1 + 1 == read_2))) && true))) || false)), (bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY((read_1 + 1 == read_2), ! (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (! ((read_1 + 1 == read_2))) && true))) || false))) || false), (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)) + 1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_2) : read_1)), min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)) + 1 == read_2))))) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), bool(bvec3(bool(read_1 + 1 == read_2), false, true)))) && true)) || false))))), true && (read_1 + 1 == read_2)))) && _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.3)), float(injectionSwitch.y), bool(true)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))))))), max(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0))) == read_2, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (! (true)))) && true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true && (! ((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), true && ((! (true)))), true, true, true))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), true && ((! (true)))), true, true, true))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), true && ((! (true)))), true, true, true))))), false || ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), true && ((! (true)))), true, true, true))))))), false, false)))) && true)))))) && true)) && true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (! ((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (! (_GLF_IDENTITY(true, ! (! (true))))))))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))), false || (true)), true, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true)))), true, false)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)) || ((true)))), true, false)))))))), bool(bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), ((bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))) && true)), true && (! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true))))))))))))))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), false)), true, true)))) && (read_1 + 1 == read_2))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), _GLF_IDENTITY((bool(read_1 + 1 == read_2)), false || (_GLF_IDENTITY((bool(read_1 + 1 == read_2)), ((bool(read_1 + 1 == read_2))) && true))) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-72.01)), vec2(_GLF_FUZZED(2.3), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-72.01)), vec2(_GLF_FUZZED(2.3), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))).x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0))) == read_2, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), true && ((_GLF_IDENTITY(true, ! (! (true)))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), bool(bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))))))))))))) && _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == _GLF_IDENTITY(read_2, 0u + (read_2))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), false || (bool(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))), true && (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0))) == read_2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), true && ((_GLF_IDENTITY(true, ! (! (true)))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), bool(bool(_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))), true && (! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))))))))))))) && _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == _GLF_IDENTITY(read_2, 0u + (read_2))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), false || (bool(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(1.0, 1.0), vec2(1.0, 1.0)))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-449.919)), float(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-892.924) : dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), bool(true)))), 0.0, exp(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - sin(vec2(0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))))) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), true && ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(24.74))) > injectionSwitch.y)))))))))) && true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)), true && (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))))), ! (_GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))), true && (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), true, false))))))))))))))))) && _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == _GLF_IDENTITY(read_2, 0u + (read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))) && true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, uint(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u))))) | (read_1 + 1)) == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2)) && true)) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))), true, false, false)))))))), true && (read_1 + 1 == read_2)))) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec2(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true), bvec2(bvec2(bvec2(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true)))))))))), false || (_GLF_IDENTITY(bool(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) << 0u)), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(atomicXor(workgroup_id, uvec3(37246u, 64357u, 115776u).p)) : _GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u))) == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), (bool(((_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 + 1 == read_2), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(read_1 + 1 == read_2)) && true)) || false)), true && (bool(_GLF_IDENTITY(bool(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) << 0u)), (_GLF_IDENTITY(bool(read_1 + 1 == read_2), (bool(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(atomicXor(workgroup_id, uvec3(37246u, 64357u, 115776u).p)) : _GLF_IDENTITY(read_1 + 1, (read_1 + 1) - 0u))) == read_2)) && true)) || false))))), true && (read_1 + 1 == read_2)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))) || false))))))) && true))))))) + 1, 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) / ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), 64, 64)), 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1, (read_1 + 1) >> 0u) == read_2), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u) + 1, (read_1 + 1) >> 0u) == read_2), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) + 1, (read_1 + _GLF_IDENTITY(1, 1 * (1))) >> 0u) == read_2))) + 1, 4, 64, 4);
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     subgroupAll(true);
    }
   else
    {
    }
  }
}
