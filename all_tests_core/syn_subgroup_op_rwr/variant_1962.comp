#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)), float(float(float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)))))) > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0)), dot(vec2(0.0, 1.0), vec2(abs(0.0), 1.0))), abs(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec3(bvec2(false, true), true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))))) / _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(injectionSwitch)))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch[0])), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))), false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) || false)))))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.8)), float(injectionSwitch.y), bool(true)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bvec2(true, true))), true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3291.5668)), bool(false))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(278.095), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + (_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0))), _GLF_FUZZED(2.8)), bvec2(true, false))).y)) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.8))), injectionSwitch.y, injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(81.31)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false))))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(81.31)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false))))), true)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false, false))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-123.921))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x)), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(min(gl_WorkGroupID, gl_WorkGroupID), (_GLF_IDENTITY(min(gl_WorkGroupID, gl_WorkGroupID), (min(gl_WorkGroupID, gl_WorkGroupID)) * uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u))).x) << 0u);
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) | (workgroup_size)) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 1u * (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))), (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) ? workgroup_id : _GLF_FUZZED(subgroup_id)))) ^ 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.4)), float(1.0), bool(true))), 1.0)) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) + vec2(0.0, 0.0))).y, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) + vec2(0.0, 0.0))).y, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) + vec2(0.0, 0.0))).y, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), min(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : ((injectionSwitch)) / vec2(1.0, 1.0)))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) + vec2(0.0, 0.0))).y, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(mat4(18.97, -8146.3728, -9.1, 40.50, -8.5, -0.3, -217.953, 1.8, 3.5, 4343.9353, -94.50, 0.6, -408.855, 6.3, -9.1, 1532.1196)) : mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : ((injectionSwitch)) / vec2(1.0, 1.0)))) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))) + vec2(0.0, 0.0))).y, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) * mat2(1.0), min((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(835.328)), vec2(_GLF_FUZZED((3.2 * 7.3)), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))) + vec2(0.0, 0.0))).y, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-303.881), _GLF_FUZZED(-1.1)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(2.4)), vec2(_GLF_FUZZED(-9.0), (mat2(1.0) * (injectionSwitch))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))), clamp((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ (0u | 0u))), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid), (true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)) | 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, 0u | (3u))))) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), _GLF_IDENTITY(uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), clamp(uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), _GLF_IDENTITY(uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), (uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u))) ^ 0u)))))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))))) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u)) << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u)))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))), uint(uint((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u), _GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), uint(uint(uint(3u))))) / 1u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid)))))))))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid)), 0u | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid)), max(false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid)), false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid))))))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))))), min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))), clamp((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ (0u | 0u))), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid), (true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)) | 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, 0u | (3u))))) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), _GLF_IDENTITY(uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), clamp(uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), _GLF_IDENTITY(uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), (uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u))) ^ 0u)))))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))))) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u)) << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u)))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))), uint(uint((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u), _GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), uint(uint(uint(3u))))) / 1u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid)))))))))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid)), 0u | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid)), max(false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid)), false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid))))))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))))), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))), clamp((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) ^ (0u | 0u))), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid), (true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)) | 0u)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, 0u | (3u))))) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), _GLF_IDENTITY(uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), clamp(uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), _GLF_IDENTITY(uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u)), (uint(uvec4((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), 1u, 0u, 1u))) ^ 0u)))))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ (uint(3u)), clamp(~ (uint(3u)), ~ (uint(3u)), ~ (uint(3u)))))) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) | (0u)) << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u)))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))), uint(uint((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))) : _GLF_FUZZED(virtual_gid))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u), _GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(_GLF_IDENTITY(3u, clamp(3u, 3u, 3u)))))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? _GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), uint(uint(uint(3u))))) / 1u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), _GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid)))))))))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (~ (_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))) : _GLF_FUZZED(virtual_gid)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid)), 0u | (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid)), max(false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid)), false ? _GLF_FUZZED(subgroup_local_id) : (true ? _GLF_IDENTITY(uint(3u), (uint(3u)) | 0u) : _GLF_FUZZED(virtual_gid))))))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uint(3u)))) / 1u)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, uint(uint(3u))))))) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : uint(0u))), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), max((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), ~ (~ (_GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(3u, min(3u, 3u))))) ^ 0u)) : _GLF_FUZZED(virtual_gid))))))))), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), uint(_GLF_IDENTITY(uint((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))), uint(uvec3(uint((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))), 0u, 1u))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), 0u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), max((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))))))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, uint(uint(0u))))))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u), uint(3u))), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(3u), 1u, 1u), uvec3(uvec4(uvec3(uint(3u), 1u, 1u), 1u)))), ~ (~ (uint(_GLF_IDENTITY(uvec3(uint(3u), 1u, 1u), uvec3(uvec4(uvec3(uint(3u), 1u, 1u), 1u)))))))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << (0u ^ 0u)) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(_GLF_IDENTITY(3u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, ~ (_GLF_IDENTITY(~ (3u), clamp(~ (3u), ~ (3u), ~ (3u)))))) << 0u), uint(uint(3u))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (uint(3u)) - 0u)) ^ 0u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((true ? uint(_GLF_IDENTITY(3u, (3u) * (1u & 1u))) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))), uint(uint(~ (_GLF_IDENTITY((true ? uint(3u) : _GLF_FUZZED(virtual_gid)), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? uint(3u) : _GLF_FUZZED(virtual_gid))))))))) - (0u | (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (false ? _GLF_FUZZED(workgroup_id) : uint(3u)))) | (1u ^ 1u)), uint(3u))), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (0u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))))))))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) - 0u))))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(virtual_gid)))))))))) + 0u)) | 0u);
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u)], uint(read_1 + _GLF_IDENTITY(1, int(int(1)))), 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-56412))), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), true), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), true), false))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) * 1.0) : _GLF_FUZZED(-444.921))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.2)), bool(false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) | 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - (173604u & 0u))) - 0u), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - 0u), (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) - 0u, ((buf[virtual_gid]) - 0u) * 1u))) | 0u)))) / 1u), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec3(bvec3(bvec3(false, false, true)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! ((! (false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))), (_GLF_IDENTITY(false, true && (false))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bool(bool(bvec4(false, true, false, false)))))), (false) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(6.9)), max(_GLF_IDENTITY(float(_GLF_FUZZED(6.9)), clamp(float(_GLF_FUZZED(6.9)), float(_GLF_FUZZED(6.9)), _GLF_IDENTITY(float(_GLF_FUZZED(6.9)), min(float(_GLF_FUZZED(6.9)), _GLF_IDENTITY(float(_GLF_FUZZED(6.9)), float(mat2(float(_GLF_FUZZED(6.9)), 0.0, 1.0, 1.0))))))), float(_GLF_FUZZED(6.9)))), bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(false, true && (false))))), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))), false))))))) * 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + _GLF_IDENTITY(1, 0 ^ (1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2), clamp((read_2), (read_2), (read_2))), ((read_2)) << 0u) | 0u)), clamp(uint(read_1 + _GLF_IDENTITY(1, 0 ^ (1)) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) << (0u | 0u)), _GLF_IDENTITY((read_2), ((read_2)) << 0u) | _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, 0 ^ (1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((read_2), ((read_2)) << _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (0u) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)))), (false ? _GLF_FUZZED(120240u) : _GLF_IDENTITY((read_2), ((read_2)) << _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))), 0u, 0u)), 0u))) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)))))) | 0u)), min(uint(read_1 + _GLF_IDENTITY(1, 0 ^ (1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), _GLF_IDENTITY(((read_2)), (((read_2))) | (((read_2)))) << _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (0u) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)))) | 0u)), uint(read_1 + _GLF_IDENTITY(1, 0 ^ (1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) << _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (0u) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), 0u)))) | 0u)))), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, 0 ^ (1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) << 0u) | 0u)), (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 ^ (1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) << 0u) | 0u))) + _GLF_IDENTITY(0u, (0u) >> 0u)))) + 1, 4, 64, _GLF_IDENTITY(4, max(4, 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true, true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-8476.5761), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8476.5761), _GLF_IDENTITY(float(vec3(_GLF_FUZZED(-8476.5761), 0.0, 1.0)), max(float(_GLF_IDENTITY(vec3(_GLF_FUZZED(-8476.5761), 0.0, 1.0), min(vec3(_GLF_FUZZED(-8476.5761), 0.0, 1.0), vec3(_GLF_FUZZED(-8476.5761), 0.0, 1.0)))), float(vec3(_GLF_FUZZED(-8476.5761), 0.0, 1.0)))))), float(_GLF_FUZZED(-89.67)), bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8476.5761, clamp(-8476.5761, -8476.5761, -8476.5761))), _GLF_IDENTITY(float(vec3(_GLF_FUZZED(-8476.5761), 0.0, 1.0)), max(float(vec3(_GLF_FUZZED(-8476.5761), 0.0, 1.0)), float(vec3(_GLF_FUZZED(-8476.5761), 0.0, 1.0)))))), float(_GLF_FUZZED(-89.67)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(_GLF_FUZZED(1514.9081)), float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8476.5761), _GLF_IDENTITY(float(vec3(_GLF_FUZZED(-8476.5761), 0.0, 1.0)), max(float(vec3(_GLF_FUZZED(-8476.5761), 0.0, 1.0)), float(vec3(_GLF_FUZZED(-8476.5761), 0.0, 1.0)))))), _GLF_IDENTITY(float(_GLF_FUZZED(-89.67)), max(float(_GLF_FUZZED(-89.67)), float(_GLF_FUZZED(-89.67)))), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(true)))) + 0.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-8476.5761, max(_GLF_IDENTITY(-8476.5761, min(-8476.5761, -8476.5761)), -8476.5761)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(mat4x2(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0))), abs(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(mat4x2(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0))), abs(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))))))))), ((_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-8476.5761, max(_GLF_IDENTITY(-8476.5761, min(-8476.5761, -8476.5761)), -8476.5761)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(mat4x2(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0))), abs(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0), transpose(transpose(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(mat4x2(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), max(mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8476.5761)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0, 1.0, 0.0, exp(0.0), 1.0, 0.0, 0.0))), abs(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0)))))))))) / 1.0) / 1.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(0.0), 1.0))).y, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(0.0), 1.0))).y, exp(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, abs(0.0)), (mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, sqrt(0.0), 1.0))).y, exp(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, abs(0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))) || false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))), bool(bool(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, true))))))))), false, false)))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, false)))), true))) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))))))))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, sqrt(1.0), exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, 0.0, sqrt(1.0), exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), clamp(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, sqrt(1.0), exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, 0.0, sqrt(1.0), exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, sqrt(1.0), exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, 0.0, sqrt(1.0), exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, sqrt(1.0), exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, 0.0, sqrt(1.0), exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (! (! (injectionSwitch.x > injectionSwitch.y))), false, false, true))))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(55.91)), vec2(_GLF_FUZZED((53.80)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y) && true))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true)))))))))))))) || false))) && true)) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0))).y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true))))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.6, 8.4)) : injectionSwitch)).x, (false ? _GLF_FUZZED(-11.88) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), float(vec2(float(injectionSwitch.y), 1.0)))), float(vec3(float(_GLF_IDENTITY(float(injectionSwitch.y), float(vec2(float(injectionSwitch.y), 1.0)))), 0.0, 0.0)))))))) && true), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(63.92) : 1.0))))[1]), vec2(_GLF_FUZZED(vec4(985.005, -9.9, 7.1, -9213.4264).b), _GLF_FUZZED(-9774.0942)), bvec2(false, false)))), min(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0))[1]), vec2(_GLF_FUZZED(vec4(985.005, -9.9, 7.1, -9213.4264).b), _GLF_FUZZED(-9774.0942)), bvec2(false, false)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0))[1]), vec2(_GLF_FUZZED(vec4(985.005, -9.9, 7.1, -9213.4264).b), _GLF_FUZZED(-9774.0942)), bvec2(false, false)))), max(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0))[1]), vec2(_GLF_FUZZED(vec4(985.005, -9.9, 7.1, -9213.4264).b), _GLF_FUZZED(-9774.0942)), bvec2(false, false)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0))[1]), vec2(_GLF_FUZZED(vec4(985.005, -9.9, 7.1, -9213.4264).b), _GLF_FUZZED(-9774.0942)), bvec2(false, false)))), (float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), 1.0))[1]), vec2(_GLF_FUZZED(vec4(985.005, -9.9, 7.1, -9213.4264).b), _GLF_FUZZED(-9774.0942)), bvec2(false, false))))) / 1.0)))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))).y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false))) || (false)), true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))).y))))))) && true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) || false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.7, 0.0)))).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, abs(0.0), 1.0, 0.0, 1.0, abs(0.0), 0.0, 1.0)), 1.0), vec3(1.0, 1.0, 1.0) * (vec3(injectionSwitch.x, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), clamp(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), mix(vec3((vec3(1.0, 0.0, 1.0))[0], (vec3(1.0, 0.0, 1.0))[1], _GLF_FUZZED(0.1)), vec3(_GLF_FUZZED(2.8), _GLF_FUZZED(-6.9), (vec3(1.0, 0.0, 1.0))[2]), bvec3(false, false, true))), vec3(1.0, 0.0, 1.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, abs(0.0), 1.0, 0.0, 1.0, abs(0.0), 0.0, 1.0)), 1.0))))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec4(bvec3(false, false, false), false)))), true)))), false || (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)), true))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), true, true, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((injectionSwitch + injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 1.8))), bool(false))), 0.0)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false))))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false))))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false))))), true, false)))))))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)), true, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! ((false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! ((false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! ((false))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, false || (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.0)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.3, -20.35)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), false))), false, false, true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))), true, _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-30.68), _GLF_FUZZED(21.78)), bvec2(false, false))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-30.68, (false ? _GLF_FUZZED(5.5) : -30.68))), _GLF_FUZZED(21.78)), bvec2(false, _GLF_IDENTITY(false, false || (false))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-30.68), _GLF_FUZZED(21.78)), bvec2(false, false))).x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-30.68), _GLF_FUZZED(21.78)), bvec2(false, false))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-30.68), _GLF_FUZZED(21.78)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-30.68), _GLF_FUZZED(21.78)), bvec2(false, false))).x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(cos(vec2(0.0, 0.0)), (false ? _GLF_FUZZED((-3.7 * injectionSwitch)) : cos(vec2(0.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))), (cos(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0)))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))))) - vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))) ^ 0u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) / 1), 1)))), _GLF_IDENTITY(0u, (0u) + 0u) | (uint(read_1 + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 ^ (1)))) == read_2) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(7), int(7)))))), (1) / 1), 1)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, 0u)) + (0u)) ^ (uint(read_1 + 1 == read_2) + 1), (_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, min(0u, 0u)) + (0u)) ^ (uint(read_1 + 1 == read_2) + 1)) << ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) | 0u)))) - 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), _GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.0)), float(injectionSwitch.y), bool(true))))) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.4) : injectionSwitch.x))) / 1.0) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, false))), false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
}
