#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) && true))), true))))) && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(false))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec3(-745.640, -2094.4375, 963.253)[1]) : injectionSwitch.x)))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))) && _GLF_IDENTITY(true, false || (true))))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), mix(float(_GLF_FUZZED(690.962)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) / 1.0)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false, true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7564.9657)), bool(false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), true && (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), true && (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))), true, true, true))) || false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), true && (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), true && (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))), true, true, true))) || false))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), true && (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), true && (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))), true, true, true))) || false))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), true && (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), true && (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))))), true, true, true))) || false))), false))))))) && true)))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u) / 1u))) + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, (1u & 1u), 0u, 1u), uvec4(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), 0u, 0u, 0u) + (uvec4(subgroup_size, (1u & 1u), 0u, 1u))))), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, (1u & 1u), 0u, 1u), uvec4(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) + (uvec4(subgroup_size, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) - 0u), 0u, 1u)))))) | _GLF_IDENTITY(0u, max(0u, 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) / 1), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (false ? _GLF_FUZZED(81483) : _GLF_IDENTITY(4, (4) >> 0))), 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), min(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (false ? _GLF_FUZZED(81483) : _GLF_IDENTITY(4, (4) >> 0))), 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (false ? _GLF_FUZZED(81483) : _GLF_IDENTITY(4, (4) >> 0))), 0, (0 << _GLF_IDENTITY(int(5), int(5))), 0))))), (4) | (4)))), 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), bool(bvec3(! ((! (true))), true, false))))) || false)))))), true && (true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-823.456) : injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))), true && (_GLF_IDENTITY((! (! (false))), bool(bvec3((! (! (false))), true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-2616.4203) : injectionSwitch.y))), false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(workgroup_size) : next_virtual_gid))], uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1))) / 1u) + 1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(vec2(72.62, 6258.0857)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false)))))) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0), (mat2x3(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 1.0)) * mat2(1.0)))) < injectionSwitch.y)), false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))) + (injectionSwitch)).x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(515.239), _GLF_FUZZED(32.97)), bvec2(false, false)))) * vec2(1.0, 1.0)) + (injectionSwitch)).x)), float(_GLF_FUZZED(308.012)), bool(false))) : _GLF_FUZZED(95.92)), clamp((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))) + (injectionSwitch)).x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(515.239), _GLF_FUZZED(32.97)), bvec2(false, false)))) * vec2(1.0, 1.0)) + (injectionSwitch)).x)), float(_GLF_FUZZED(308.012)), bool(false))) : _GLF_FUZZED(95.92)), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))) + (injectionSwitch)).x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(515.239), _GLF_FUZZED(32.97)), bvec2(false, false)))) * vec2(1.0, 1.0)) + (injectionSwitch)).x)), float(_GLF_FUZZED(308.012)), bool(false))) : _GLF_FUZZED(95.92)), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))) + (injectionSwitch)).x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(515.239), _GLF_FUZZED(32.97)), bvec2(false, false)))) * vec2(1.0, 1.0)) + (injectionSwitch)).x)), float(_GLF_FUZZED(308.012)), bool(false))) : _GLF_FUZZED(95.92))))), cos(0.0), 0.0, 1.0, 0.0)))), _GLF_IDENTITY(max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0))))), min(max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0))))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0)))))))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(40.19)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(7092.3026) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-15.40)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-759.773) : float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.3) : 1.0)), 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), (float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0))) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7369.0040) : float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), mix(float(_GLF_FUZZED(-403.878)), float(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0))))))), bool(true))), _GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0))))))), bool(true)))))), bool(true)))), max(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))))).x), cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(84.17)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), float(_GLF_FUZZED(45.30)), bool(false))), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0 * (determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)))), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, log(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0)))), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), cos(0.0), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(91.94)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-9322.2990))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), cos(0.0), 0.0, 1.0, 0.0)))))))))) > injectionSwitch.y) || false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false), ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true, false), bvec3(bvec4(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true, false), true))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(143629u))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), bool(true))) > injectionSwitch.y))))))) && true))))))), true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))) + (injectionSwitch)).x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(515.239), _GLF_FUZZED(32.97)), bvec2(false, false)))) * vec2(1.0, 1.0)) + (injectionSwitch)).x)), float(_GLF_FUZZED(308.012)), bool(false))) : _GLF_FUZZED(95.92)), clamp((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))) + (injectionSwitch)).x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(515.239), _GLF_FUZZED(32.97)), bvec2(false, false)))) * vec2(1.0, 1.0)) + (injectionSwitch)).x)), float(_GLF_FUZZED(308.012)), bool(false))) : _GLF_FUZZED(95.92)), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))) + (injectionSwitch)).x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(515.239), _GLF_FUZZED(32.97)), bvec2(false, false)))) * vec2(1.0, 1.0)) + (injectionSwitch)).x)), float(_GLF_FUZZED(308.012)), bool(false))) : _GLF_FUZZED(95.92)), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0))) + (injectionSwitch)).x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), vec2(_GLF_FUZZED(515.239), _GLF_FUZZED(32.97)), bvec2(false, false)))) * vec2(1.0, 1.0)) + (injectionSwitch)).x)), float(_GLF_FUZZED(308.012)), bool(false))) : _GLF_FUZZED(95.92))))), cos(0.0), 0.0, 1.0, 0.0)))), _GLF_IDENTITY(max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0))))), min(max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0))))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), cos(0.0), 0.0, 1.0, 0.0)))))))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(40.19)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(7092.3026) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-15.40)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-759.773) : float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.3) : 1.0)), 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), (float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0))) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7369.0040) : float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), mix(float(_GLF_FUZZED(-403.878)), float(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0))))))), bool(true))), _GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0))), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0))))))), bool(true)))))), bool(true)))), max(_GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))))).x), cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(84.17)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), float(_GLF_FUZZED(45.30)), bool(false))), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), clamp(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0 * (determinant(mat2(1.0, 0.0, 0.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)))), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, log(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0)))), injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.4) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), cos(0.0), 0.0, 1.0, 0.0)))), clamp(_GLF_IDENTITY(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), min(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, determinant(mat2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(91.94)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0)), 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), max(float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))), float(float(float(mat3x2(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 1.0, 0.0)))))), float(float(float(mat3x2(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-9322.2990))), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), cos(0.0), 0.0, 1.0, 0.0)))))))))) > injectionSwitch.y) || false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false), ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true, false), bvec3(bvec4(bvec3((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true, false), true))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(143629u))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), bool(true))) > injectionSwitch.y))))))) && true))))))), true))), true), false, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))), (injectionSwitch.x > injectionSwitch.y)))) || false), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((- -5362.1593)), _GLF_FUZZED(-695.391)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), true, true))))).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((- -5362.1593)), _GLF_FUZZED(-695.391)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), true, true))))).x < injectionSwitch.y)))), false))))))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(4, (4) | (4)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true)))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true)))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true)))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec2(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(-232.874)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))).x))) * 1.0), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(mat3x4(mat3(injectionSwitch, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.5))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}
