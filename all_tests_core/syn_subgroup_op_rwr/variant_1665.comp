#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, _GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4((! (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || (false)), false)), (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) || (false)), false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(-685.198)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.y), bool(true)))), bool(true)))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.4)), float(injectionSwitch.y), bool(true)))), bool(true))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(11.03)), bool(false))))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true)))), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))) && true)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.5), _GLF_FUZZED((-5.0 - -8.8))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.4)), bool(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, true && (false)) || (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true))))))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((-1.8 + vec2(72.26, 2.7))) : (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) - abs(vec2(0.0, 0.0)))[0], injectionSwitch[1]), (true ? vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED((-1.8 + vec2(72.26, 2.7))) : (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))) - abs(vec2(0.0, 0.0)))[0], injectionSwitch[1]) : _GLF_FUZZED(vec2(7.1, -5559.9128))))).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))) ? _GLF_FUZZED((-1.8 + vec2(72.26, 2.7))) : (injectionSwitch))) - abs(vec2(0.0, _GLF_IDENTITY(0.0, exp(0.0) * (_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-1294.0664))))))))[0], (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, false))) ? _GLF_FUZZED((-1.8 + vec2(72.26, 2.7))) : (injectionSwitch))) - abs(vec2(0.0, 0.0)))[0] : _GLF_FUZZED(_GLF_IDENTITY(3.0, clamp(3.0, 3.0, 3.0))))), injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(8.0) : injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[1])).y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, 0u ^ (0u))))), (subgroup_id) | (subgroup_id)) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(~ (~ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(13235u) : (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_IDENTITY(_GLF_FUZZED(13235u), 1u * (_GLF_IDENTITY(_GLF_FUZZED(13235u), min(_GLF_FUZZED(13235u), _GLF_FUZZED(13235u))))) : (subgroup_id))))) - 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u)))), (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED((workgroup_size ++))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(13235u) : (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_IDENTITY(_GLF_FUZZED(13235u), 1u * (_GLF_IDENTITY(_GLF_FUZZED(13235u), min(_GLF_FUZZED(13235u), _GLF_FUZZED(13235u))))) : (subgroup_id))))) - 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u)))), (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED((workgroup_size ++))))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(13235u) : (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_IDENTITY(_GLF_FUZZED(13235u), 1u * (_GLF_IDENTITY(_GLF_FUZZED(13235u), min(_GLF_FUZZED(13235u), _GLF_FUZZED(13235u))))) : (subgroup_id))))) - 0u)) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u)))), (true ? _GLF_IDENTITY(0u, 0u ^ (0u)) : _GLF_FUZZED((workgroup_size ++)))))))))) / 1u), (subgroup_id) | (subgroup_id)) * subgroup_size + subgroup_local_id)), ~ (~ (~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(_GLF_IDENTITY(13235u, clamp(13235u, _GLF_IDENTITY(13235u, (13235u) | (_GLF_IDENTITY(13235u, _GLF_IDENTITY(min(13235u, 13235u), max(min(13235u, 13235u), min(13235u, _GLF_IDENTITY(13235u, (_GLF_IDENTITY(13235u, _GLF_IDENTITY((13235u), ((13235u)) ^ 0u) | 0u)) - 0u))))))), 13235u))) : (subgroup_id))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, 0u ^ (0u))))), (subgroup_id) | (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(_GLF_IDENTITY(13235u, clamp(13235u, _GLF_IDENTITY(13235u, (13235u) | (_GLF_IDENTITY(13235u, _GLF_IDENTITY(min(13235u, 13235u), max(min(13235u, 13235u), min(13235u, _GLF_IDENTITY(13235u, (_GLF_IDENTITY(13235u, _GLF_IDENTITY((13235u), ((13235u)) ^ 0u) | 0u)) - 0u))))))), 13235u))) : (subgroup_id))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, 0u ^ (0u))))), (subgroup_id) | (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), (subgroup_id) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(_GLF_IDENTITY(13235u, clamp(13235u, _GLF_IDENTITY(13235u, (13235u) | (_GLF_IDENTITY(13235u, _GLF_IDENTITY(min(13235u, 13235u), max(min(13235u, 13235u), min(13235u, _GLF_IDENTITY(13235u, (_GLF_IDENTITY(13235u, _GLF_IDENTITY((13235u), ((13235u)) ^ 0u) | 0u)) - 0u))))))), 13235u))) : (subgroup_id))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, 0u ^ (0u))))), (subgroup_id) | (subgroup_id)) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false)))), _GLF_IDENTITY(true, false || (true)) && (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))))) ? _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) : _GLF_FUZZED(workgroup_size))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id), (clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id)) ^ 0u), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id), _GLF_IDENTITY((clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id)) ^ 0u, (_GLF_IDENTITY((clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id)) ^ 0u, ~ (~ ((clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id)) ^ 0u)))) - 0u))) << 0u)), max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id), 0u | (clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id)))) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id), (clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id)) ^ 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id), (clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id)) ^ 0u)), 1u * (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id), (clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), 1u * (uint(uvec2(subgroup_id, 0u))))), min(~ (_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), 1u * (uint(uvec2(subgroup_id, 0u))))), ~ (_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), 1u * (uint(uvec2(subgroup_id, 0u)))))))))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id)) ^ 0u)))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | _GLF_IDENTITY((uint(uvec2(subgroup_id, _GLF_IDENTITY(0u, 0u | (0u))))), ((uint(uvec2(subgroup_id, _GLF_IDENTITY(0u, 0u | (0u)))))) - 0u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u)))))) << 0u)) - (0u << _GLF_IDENTITY(uint(7u), uint(7u)))), subgroup_id, subgroup_id), (clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u)))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id)), 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))) - 0u)), subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id, ((0u & 95199u) | 0u), 1u), ~ (~ (uvec3(subgroup_id, ((0u & 95199u) | 0u), 1u))))), uint(uint(uint(_GLF_IDENTITY(uvec3(subgroup_id, ((0u & 95199u) | 0u), 1u), ~ (~ (uvec3(subgroup_id, ((0u & 95199u) | 0u), 1u))))))))))) ^ _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), clamp(_GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), ~ (~ (uint(uvec2(subgroup_id, 0u))))), uint(uvec2(subgroup_id, 0u)), uint(uvec2(subgroup_id, 0u))))))), 0u + ((uint(uvec2(subgroup_id, 0u))))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id), (clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (uint(uvec2(subgroup_id, 0u))) | (uint(uvec2(subgroup_id, 0u))))), subgroup_id, subgroup_id)) ^ 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, 0u | (_GLF_IDENTITY(4u, (4u) | (4u)))), 4u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, _GLF_IDENTITY(~ (~ (4u)), 1u * (~ (~ (4u)))))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, min(1u, 1u)) : _GLF_FUZZED(workgroup_base))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp(((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))))) / 1u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)), ((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u))) + 0u) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> 0u)) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), subgroup_size)), min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))), ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, (4u) - (0u | 0u)))))) << 0u)) | (uint(4u))))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)))))) | ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(subgroup_size, subgroup_size)))))) - 0u), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> 0u)) | (1u)) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(141650u) : 0u)), min(0u, _GLF_IDENTITY(0u, (0u) << 0u)))) | (0u)))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))))), clamp(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), uint(uvec4(_GLF_IDENTITY((uint(4u)), min((uint(4u)), (uint(4u)))), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u))) << 0u)) | (_GLF_IDENTITY(uint(4u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), 1u * (uint(4u)))), clamp((_GLF_IDENTITY(uint(4u), 1u * (uint(4u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), 1u * (uint(4u)))), max((_GLF_IDENTITY(uint(4u), 1u * (uint(4u)))), (_GLF_IDENTITY(uint(4u), 1u * (uint(4u)))))), (_GLF_IDENTITY(uint(4u), 1u * (uint(4u)))))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size))))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(_GLF_IDENTITY(4u, (4u) >> 0u))), (1u ^ 0u) * ((uint(_GLF_IDENTITY(4u, (4u) >> 0u))))) << 0u)) | (uint(4u)))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)))))) | (uint(4u)))), ~ (~ (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)))))))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) | (4u))))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))))), _GLF_IDENTITY(min(_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(4u), 1u), ~ (~ (uvec2(uint(4u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 1u))))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(4u), 1u), ~ (~ (uvec2(uint(4u), 1u))))), (uint(_GLF_IDENTITY(uvec2(uint(4u), 1u), ~ (~ (uvec2(uint(4u), 1u)))))) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(4u), 1u), ~ (~ (uvec2(uint(4u), 1u))))), (true ? uint(_GLF_IDENTITY(uvec2(uint(4u), 1u), ~ (~ (uvec2(uint(4u), 1u))))) : _GLF_FUZZED(173436u)))))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))), min(_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (_GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) + 0u))))))))), ((uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) - 0u) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(workgroup_base) : 4u)), _GLF_IDENTITY(4u, (4u) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) / 1u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), clamp((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) | ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u)), 1u, 1u)) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))))) * 1u), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size))), clamp(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), max((_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) / 1u)), (uint(4u)) << 0u)) | (uint(4u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), 0u | ((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(uvec2(uint(4u), 1u), (uvec2(uint(4u), 1u)) << uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)), min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << _GLF_IDENTITY(0u, ~ (~ (0u))))) | (uint(4u)))), max(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << _GLF_IDENTITY(0u, ~ (~ (0u))))) | (uint(4u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << _GLF_IDENTITY(0u, ~ (~ (0u))))) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), min(uint(uint(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4u, uint(uvec2(4u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))), (~ (_GLF_IDENTITY(4u, uint(uvec2(4u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (~ (_GLF_IDENTITY(4u, uint(uvec2(4u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), _GLF_IDENTITY(clamp(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), max((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << _GLF_IDENTITY(0u, ~ (~ (0u))))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (clamp(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), max((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << _GLF_IDENTITY(0u, ~ (~ (0u))))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(_GLF_IDENTITY(4u, 0u | (_GLF_IDENTITY(4u, (4u) / 1u))))) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), max((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << _GLF_IDENTITY(0u, ~ (~ (0u))))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))), (uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))))) ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) | ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) | 0u)))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), max((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ~ (~ (((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), max((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), max((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)))))) | _GLF_IDENTITY(0u, 0u ^ (0u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), _GLF_IDENTITY(((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))), (((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size)))) / 1u), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u + (4u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))), (_GLF_IDENTITY(uint(4u), (uint(4u)) << _GLF_IDENTITY(0u, ~ (~ (0u))))) | (uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << _GLF_IDENTITY(0u, ~ (~ (0u))))) | (uint(_GLF_IDENTITY(4u, min(_GLF_IDENTITY(4u, clamp(4u, 4u, 4u)), 4u))))))) | 0u)) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))))) | (uint(uint(_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))))) | 0u)) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)), min((uint(4u)), (uint(4u)))) << 0u)) | (uint(4u)), max((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u))))), (_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u)))) << 0u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)))), max(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uvec3((0u), 0u, (0u ^ 1u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3((0u), 0u, (0u ^ 1u)) : _GLF_FUZZED(uvec3(59400u, 167339u, 70043u)))))))))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))))))))), (min(_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))), clamp((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))), (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))), (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) | 0u) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), 0u | (~ (_GLF_IDENTITY(uint(4u), uint(4u)))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), 0u | (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) | (4u))) << 0u)), uint(4u))))))))))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), _GLF_IDENTITY((uint(4u)) << 0u, 0u + ((uint(4u)) << 0u)))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))))), ((uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, max(4u, 4u))))), (((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, max(4u, 4u)))))) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u), (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(91574u) : uint(4u)))) << 0u)) - 0u)) | (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(subgroup_size, subgroup_size))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), max(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)), ~ (~ ((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) << 0u))))))) * 1u), (uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)))), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)))), (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) | (1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u)))))), 1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), clamp(((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | (4u))), min(uint(_GLF_IDENTITY(4u, (4u) | (4u))), uint(_GLF_IDENTITY(4u, (4u) | (4u))))))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)), ((_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 0u, 1u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), 0u | (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(uvec3(uint(4u), 0u, 1u))), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (uint(4u))), (uint(4u)) << 0u)) | (uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))))))))) >> 0u)) ^ 0u))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED((31890 << -64745)) : 4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.0)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), true && (! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, true, false))), bool(bvec3((bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, true, false))), false, false))) || false, bool(bool((bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true, false))) || false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1))))), (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1)) == read_2) + 1, _GLF_IDENTITY((uint(read_1 + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1))) | 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1)) == read_2) + 1), clamp((uint(read_1 + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1))) | 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1)) == read_2) + 1), (uint(read_1 + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1))) | 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1)) == read_2) + 1), _GLF_IDENTITY((uint(read_1 + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1))) | 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1)) == read_2) + 1), ((uint(read_1 + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ((1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1))) | 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1)) == read_2) + 1)) - 0u))) - 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(((vec2(4.6, -31.07) * 9.6) + _GLF_IDENTITY(vec2(4.4, -10.02), (vec2(4.4, -10.02)) * exp(vec2(0.0, 0.0))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y)))))))))), false, false, false))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) && true)))) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || false), false)))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-29.04)), bool(false))))), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(109.665), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, _GLF_IDENTITY(((_GLF_IDENTITY(0, (0) << 0)) << 0), (((_GLF_IDENTITY(0, (0) << 0)) << 0)) | 0) | (_GLF_IDENTITY((0) << 0, ~ (~ ((0) << 0))))))], _GLF_FUZZED(-1.4)), bvec2(true, false))).x, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, (4) >> 0));
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
