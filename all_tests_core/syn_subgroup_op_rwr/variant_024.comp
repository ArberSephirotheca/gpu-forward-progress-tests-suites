#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY(max(uvec3(0u, 0u, 1u), uvec3(0u, 0u, 1u)), uvec3(uvec4(max(uvec3(0u, 0u, 1u), uvec3(0u, 0u, 1u)), 0u))))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 1u), _GLF_IDENTITY(max(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))), clamp(max(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 1u), ~ (~ (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 1u), uvec3(uvec3(uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 1u))))))), _GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u))))), (uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | 0u))), 0u, 1u)) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 1u)))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) - uvec3(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u))) << uvec3(0u, 0u, 0u))), ~ (~ (max(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(0u, 0u, 1u), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 1u), (uvec3(0u, 0u, 1u)) - uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(0u, (0u) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, 0u))) << uvec3(0u, 0u, 0u)))))), max(uvec3(0u, 0u, 1u), _GLF_IDENTITY(uvec3(0u, 0u, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))), 0u)), 0u))))), clamp((_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))), 0u)), 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))), 0u)), 0u))))), uvec3(uvec4((_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))), 0u)), 0u))))), 0u))), (_GLF_IDENTITY(uvec3(0u, 0u, 1u), (uvec3(0u, 0u, 1u)) - uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))), 0u)), 0u))))))) << uvec3(0u, 0u, 0u))))))) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) / _GLF_IDENTITY(1u, 0u ^ (1u))))) / uvec3(1u, 1u, 1u)))), clamp(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u, 1u)) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), clamp(uvec3(workgroup_base, 0u, 1u), uvec3(workgroup_base, 0u, 1u), uvec3(workgroup_base, 0u, 1u))), (uvec3(workgroup_base, 0u, 1u)) / uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 0u), (uvec4(1u, 0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))))) << uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) * 1u), uint(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), _GLF_IDENTITY((uvec3(workgroup_base, 0u, 1u)), (false ? _GLF_FUZZED(uvec3(72900u, 194617u, 33286u)) : (uvec3(workgroup_base, 0u, 1u)))) / uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 0u), (uvec4(1u, 0u, 0u, 0u)) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), ~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u))), 0u, 0u), _GLF_IDENTITY((uvec4(1u, 0u, 0u, 0u)), (_GLF_IDENTITY((uvec4(1u, 0u, 0u, 0u)), ((uvec4(1u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) * 1u)) + 0u), 0u))) << uvec4(0u, 0u, 0u, 0u))) | ((uvec4(1u, 0u, 0u, 0u)))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u, 0u)) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) / (uvec4(0u, 0u, 0u, 0u) ^ uvec4(1u, 1u, 1u, 1u))), uvec4(0u, 0u, 0u, 0u))))))))), (uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(1u, 0u, 0u, 0u), min(uvec4(1u, 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) >> 0u))), 0u, 0u, 0u)))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), (~ (0u)) ^ _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) * 1u)))), (uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u))))) - 0u)), 1u, 1u))))) << (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u))))), clamp(uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u))))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u))))), uvec3(uvec4(uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u))))), 1u))), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), clamp(uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u), uvec3(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), 1u))), 0u, 1u)))))))), uvec3(uvec4(uvec3(workgroup_base, 0u, 1u), 0u)))) - _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(uvec3(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u, (1u) >> 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), clamp(uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u), uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)))))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), (_GLF_IDENTITY((0u) | (0u), ~ (~ ((0u) | (0u))))) / 1u))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), min(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), _GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))))) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(104894u, 189893u, 17121u)))), _GLF_IDENTITY(0u, (0u) | (0u))), max(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), min(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), _GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))))) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(104894u, 189893u, 17121u)))), _GLF_IDENTITY(0u, (0u) | (0u))), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), min(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)), _GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (uvec3(workgroup_base, 0u, 1u)) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u))))) - uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(104894u, 189893u, 17121u)))), _GLF_IDENTITY(0u, (0u) | (0u)))))) | (uvec4(_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), (_GLF_IDENTITY(uvec3(workgroup_base, 0u, 1u), max(uvec3(workgroup_base, 0u, 1u), uvec3(workgroup_base, 0u, 1u)))) / uvec3(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), 1u)), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))))))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, _GLF_IDENTITY(_GLF_IDENTITY(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), clamp(_GLF_IDENTITY(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), clamp(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), _GLF_IDENTITY(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), uint(uint(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u)))), max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))), max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))), (0u & 77044u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), clamp(_GLF_IDENTITY(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), clamp(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), _GLF_IDENTITY(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), uint(uint(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u)))), max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))), max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))), 0u | (_GLF_IDENTITY(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), clamp(_GLF_IDENTITY(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), clamp(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), _GLF_IDENTITY(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), uint(uint(max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u)))), max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))), max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u), max((subgroup_local_id) - 0u, (subgroup_local_id) - 0u)))))))));
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size)), 0u ^ _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) * 1u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1) % subgroup_size) << (0u | 0u)))) - 0u)) - 0u);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (0) | _GLF_IDENTITY(_GLF_IDENTITY((0), (false ? _GLF_FUZZED(48557) : _GLF_IDENTITY((0), ((0)) / 1))), ((0)) | ((_GLF_IDENTITY(0, (0) / 1))))));
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, (1) | (1))), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) ^ 0u, _GLF_IDENTITY(clamp((virtual_gid) ^ 0u, (virtual_gid) ^ 0u, (virtual_gid) ^ 0u), (clamp(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))), 0u | ((~ (_GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))))))))) - 0u) ^ 0u, (virtual_gid) ^ 0u, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u), min(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), clamp((false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), min(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(virtual_gid) : uint(8u)))))))))) / 1u)))], 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ _GLF_IDENTITY((64), ((64)) << 0))), max(_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ _GLF_IDENTITY((64), ((64)) - 0))), _GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), _GLF_IDENTITY(~ (64), int(int(_GLF_IDENTITY(~ (64), (~ (64)) + 0)))))))), _GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64))), (_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64)))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64))), clamp(_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), _GLF_IDENTITY(~ (64), clamp(_GLF_IDENTITY(~ (64), (true ? ~ (64) : _GLF_FUZZED(1512))), ~ (64), ~ (64))))), _GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64))), _GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64)))))) | (_GLF_IDENTITY(~ (64), clamp(~ (64), ~ (64), ~ (64))))))))), 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)], uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) - 0u)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((! (! (read_1 + 1 == read_2))), ((! (! (read_1 + 1 == read_2)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), bool(bvec4(! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u), uint(uvec2(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u), 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u), (true ? _GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) : _GLF_FUZZED(read_1))))) == read_2))), ((! (! (read_1 + 1 == read_2)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))), true, false, true))), bool(bool(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2))), (! (_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2)))) && true)))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ((! (! (! (read_1 + 1 == read_2))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (! (! _GLF_IDENTITY((! (! (! (read_1 + 1 == read_2)))), ((! (! (! (read_1 + 1 == read_2))))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-667.011)), float(injectionSwitch.y), bool(true)))))))))))))))))))), true && (bool(! (! (! (read_1 + 1 == read_2)))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) == read_2), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) == read_2), ((_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) == read_2)) || false)) && true), _GLF_IDENTITY(! (! (! (read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, ~ (~ (1))), 1)) == read_2))), bool(_GLF_IDENTITY(bool(! (! _GLF_IDENTITY((! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((! (read_1 + 1 == read_2)))))), _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((bool(! (! (! (_GLF_IDENTITY(read_1, (read_1) + (0u & 54074u)) + 1 == read_2))))), ((bool(! (! (! (_GLF_IDENTITY(read_1, (read_1) + (0u & 54074u)) + 1 == read_2)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 | (1)) == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! (_GLF_IDENTITY((! (read_1 + 1 == read_2)), (_GLF_IDENTITY((! (read_1 + 1 == read_2)), bool(bool((! (read_1 + 1 == read_2)))))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == read_2))))), ! (! (! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (read_2))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true))) && (! (! _GLF_IDENTITY(_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + _GLF_IDENTITY(1, (1) ^ 0) == read_2))))), (_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! _GLF_IDENTITY((read_1 + 1 == read_2), bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2)), ! (! (bool((read_1 + 1 == read_2)))))))))))) && true))))) || false), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0)), float(_GLF_FUZZED(52.56)), bool(false))) > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, false))))))), _GLF_IDENTITY(true && (bool(! (! (! (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u))))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u))))), (uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u)))))) | (uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u)))))))) / 1u)) + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(_GLF_IDENTITY(bool(! (! (read_1 + 1 == read_2))), (bool(! (! (read_1 + 1 == read_2)))) || false)))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true))) || false)))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true)), (bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true))) && true)))))))) || false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))), true && (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), bool(bvec2(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), false))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && _GLF_IDENTITY((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))), (_GLF_IDENTITY((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))), false || ((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))))))) && true)) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! _GLF_IDENTITY((! (! (read_1 + 1 == read_2))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (read_1 + 1 == read_2)))))))) || false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), true))))))))) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false, true && ((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), (_GLF_IDENTITY(true, (true) && true) && (bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) || false)))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bool(! (! (read_1 + 1 == read_2))))))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), true))))))))) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false, true && ((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), (_GLF_IDENTITY(true, (true) && true) && (bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) || false)))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bool(! (! (read_1 + 1 == read_2))))))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, false, false)))) || _GLF_IDENTITY(false, true && (false)))))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, false, false)))) || _GLF_IDENTITY(false, true && (false)))))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((read_1 + 1 == read_2))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) + ivec3(0, 0, 0)))) == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), bool(bvec2(true && (bool(! (! (! (read_1 + 1 == read_2))))), false)))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))))))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2))))))))))))))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), true && (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), bool(bvec3(true && (bool(! (! (! (read_1 + 1 == read_2))))), false, false)))))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))) || false)))))) || false, ! (! ((true && (bool(! (! (! _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))) || false), (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true))), false || (! ((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true))))))))) || false)) && true)))))) || false))))), false || (bool(_GLF_IDENTITY(true && _GLF_IDENTITY((bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u)))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4((bool(! (! (! (read_1 + 1 == read_2))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5859.0523, 9.6)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), false || (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true), false, false, false)), true, false)))))))))), (_GLF_IDENTITY(true, false || (true)) && (bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1)) == read_2)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) >> 0u))))))))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) - 0u)), (uint(_GLF_IDENTITY(uint(read_1), _GLF_IDENTITY((uint(read_1)), uint(uvec4((uint(read_1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u), 1u))) - 0u))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u))) + 1 == read_2), ! (! ((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), _GLF_IDENTITY((uint(read_1)) - 0u, (_GLF_IDENTITY((uint(read_1)) - 0u, uint(uvec4((uint(read_1)) - 0u, 1u, 1u, 1u)))) - 0u))), (uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) - 0u))) - 0u)) + 1 == read_2))))))))) || false)))), false), _GLF_IDENTITY(false, (false) || false)))))))))))))))))), bool(_GLF_IDENTITY(bvec3(! (! ((_GLF_IDENTITY(! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 | (1)) == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! (_GLF_IDENTITY((! (read_1 + 1 == read_2)), (_GLF_IDENTITY((! (read_1 + 1 == read_2)), bool(bool((! (read_1 + 1 == read_2)))))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == read_2))))), ! (! (! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (read_2))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true))) && (! (! _GLF_IDENTITY(_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + _GLF_IDENTITY(1, (1) ^ 0) == read_2))))), (_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! _GLF_IDENTITY((read_1 + 1 == read_2), bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2)), ! (! (bool((read_1 + 1 == read_2)))))))))))) && true))))) || false), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0)), float(_GLF_FUZZED(52.56)), bool(false))) > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, false))))))), _GLF_IDENTITY(true && (bool(! (! (! (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u))))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u))))), (uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u)))))) | (uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u)))))))) / 1u)) + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(_GLF_IDENTITY(bool(! (! (read_1 + 1 == read_2))), (bool(! (! (read_1 + 1 == read_2)))) || false)))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true))) || false)))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true)), (bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true))) && true)))))))) || false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))), true && (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), bool(bvec2(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), false))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && _GLF_IDENTITY((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))), (_GLF_IDENTITY((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))), false || ((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))))))) && true)) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! _GLF_IDENTITY((! (! (read_1 + 1 == read_2))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (read_1 + 1 == read_2)))))))) || false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), true))))))))) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false, true && ((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), (_GLF_IDENTITY(true, (true) && true) && (bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) || false)))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bool(! (! (read_1 + 1 == read_2))))))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), true))))))))) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false, true && ((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), (_GLF_IDENTITY(true, (true) && true) && (bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) || false)))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bool(! (! (read_1 + 1 == read_2))))))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, false, false)))) || _GLF_IDENTITY(false, true && (false)))))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, false, false)))) || _GLF_IDENTITY(false, true && (false)))))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((read_1 + 1 == read_2))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) + ivec3(0, 0, 0)))) == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), bool(bvec2(true && (bool(! (! (! (read_1 + 1 == read_2))))), false)))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))))))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2))))))))))))))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), true && (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), bool(bvec3(true && (bool(! (! (! (read_1 + 1 == read_2))))), false, false)))))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))) || false)))))) || false, ! (! ((true && (bool(! (! (! _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))) || false), (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true))), false || (! ((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true))))))))) || false)) && true)))))) || false))))), false || (bool(_GLF_IDENTITY(true && _GLF_IDENTITY((bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u)))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4((bool(! (! (! (read_1 + 1 == read_2))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5859.0523, 9.6)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), false || (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true), false, false, false)), true, false)))))))))), (_GLF_IDENTITY(true, false || (true)) && (bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1)) == read_2)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) >> 0u))))))))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) - 0u)), (uint(_GLF_IDENTITY(uint(read_1), _GLF_IDENTITY((uint(read_1)), uint(uvec4((uint(read_1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u), 1u))) - 0u))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u))) + 1 == read_2), ! (! ((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), _GLF_IDENTITY((uint(read_1)) - 0u, (_GLF_IDENTITY((uint(read_1)) - 0u, uint(uvec4((uint(read_1)) - 0u, 1u, 1u, 1u)))) - 0u))), (uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) - 0u))) - 0u)) + 1 == read_2))))))))) || false)))), false), _GLF_IDENTITY(false, (false) || false)))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (! ((_GLF_IDENTITY(! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 | (1)) == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! (_GLF_IDENTITY((! (read_1 + 1 == read_2)), (_GLF_IDENTITY((! (read_1 + 1 == read_2)), bool(bool((! (read_1 + 1 == read_2)))))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == read_2))))), ! (! (! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (read_2))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true))) && (! (! _GLF_IDENTITY(_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + _GLF_IDENTITY(1, (1) ^ 0) == read_2))))), (_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! _GLF_IDENTITY((read_1 + 1 == read_2), bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2)), ! (! (bool((read_1 + 1 == read_2)))))))))))) && true))))) || false), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0)), float(_GLF_FUZZED(52.56)), bool(false))) > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, false))))))), _GLF_IDENTITY(true && (bool(! (! (! (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u))))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u))))), (uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u)))))) | (uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u)))))))) / 1u)) + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(_GLF_IDENTITY(bool(! (! (read_1 + 1 == read_2))), (bool(! (! (read_1 + 1 == read_2)))) || false)))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true))) || false)))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true)), (bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true))) && true)))))))) || false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))), true && (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), bool(bvec2(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), false))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && _GLF_IDENTITY((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))), (_GLF_IDENTITY((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))), false || ((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))))))) && true)) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! _GLF_IDENTITY((! (! (read_1 + 1 == read_2))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (read_1 + 1 == read_2)))))))) || false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), true))))))))) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false, true && ((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), (_GLF_IDENTITY(true, (true) && true) && (bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) || false)))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bool(! (! (read_1 + 1 == read_2))))))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), true))))))))) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false, true && ((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), (_GLF_IDENTITY(true, (true) && true) && (bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) || false)))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bool(! (! (read_1 + 1 == read_2))))))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, false, false)))) || _GLF_IDENTITY(false, true && (false)))))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, false, false)))) || _GLF_IDENTITY(false, true && (false)))))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((read_1 + 1 == read_2))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) + ivec3(0, 0, 0)))) == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), bool(bvec2(true && (bool(! (! (! (read_1 + 1 == read_2))))), false)))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))))))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2))))))))))))))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), true && (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), bool(bvec3(true && (bool(! (! (! (read_1 + 1 == read_2))))), false, false)))))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))) || false)))))) || false, ! (! ((true && (bool(! (! (! _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))) || false), (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true))), false || (! ((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true))))))))) || false)) && true)))))) || false))))), false || (bool(_GLF_IDENTITY(true && _GLF_IDENTITY((bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u)))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4((bool(! (! (! (read_1 + 1 == read_2))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5859.0523, 9.6)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), false || (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true), false, false, false)), true, false)))))))))), (_GLF_IDENTITY(true, false || (true)) && (bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1)) == read_2)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) >> 0u))))))))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) - 0u)), (uint(_GLF_IDENTITY(uint(read_1), _GLF_IDENTITY((uint(read_1)), uint(uvec4((uint(read_1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u), 1u))) - 0u))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u))) + 1 == read_2), ! (! ((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), _GLF_IDENTITY((uint(read_1)) - 0u, (_GLF_IDENTITY((uint(read_1)) - 0u, uint(uvec4((uint(read_1)) - 0u, 1u, 1u, 1u)))) - 0u))), (uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) - 0u))) - 0u)) + 1 == read_2))))))))) || false)))), false), _GLF_IDENTITY(false, (false) || false)))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(! (! ((_GLF_IDENTITY(! (read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 | (1)) == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! (_GLF_IDENTITY((! (read_1 + 1 == read_2)), (_GLF_IDENTITY((! (read_1 + 1 == read_2)), bool(bool((! (read_1 + 1 == read_2)))))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == read_2))))), ! (! (! _GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (read_2))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)) && true))) && (! (! _GLF_IDENTITY(_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! (read_1 + _GLF_IDENTITY(1, (1) ^ 0) == read_2))))), (_GLF_IDENTITY((! (read_1 + 1 == read_2)), ! (! ((! _GLF_IDENTITY((read_1 + 1 == read_2), bool(_GLF_IDENTITY(bool((read_1 + 1 == read_2)), ! (! (bool((read_1 + 1 == read_2)))))))))))) && true))))) || false), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0)), float(_GLF_FUZZED(52.56)), bool(false))) > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bvec4(! (! (read_1 + 1 == read_2)), true, false, false))))))), _GLF_IDENTITY(true && (bool(! (! (! (_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u))))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u))))), (uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u)))))) | (uint(uvec3(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)), 1u, _GLF_IDENTITY((0u | 1u), 0u + ((0u | 1u)))))))) / 1u)) + 1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(_GLF_IDENTITY(bool(! (! (read_1 + 1 == read_2))), (bool(! (! (read_1 + 1 == read_2)))) || false)))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true))) || false)))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true)), true && (_GLF_IDENTITY(bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true)), (bool(bvec4(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(false, (false) && true), false, true))) && true)))))))) || false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))), true && (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), bool(bvec2(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), false))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && _GLF_IDENTITY((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))), (_GLF_IDENTITY((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))), false || ((bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))))))) && true)) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! _GLF_IDENTITY((! (! (read_1 + 1 == read_2))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (! (read_1 + 1 == read_2)))))))) || false))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), true))))))))) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false, true && ((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), (_GLF_IDENTITY(true, (true) && true) && (bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) || false)))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bool(! (! (read_1 + 1 == read_2))))))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (read_1 + 1 == read_2))))))))) && true)), true))))))))) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false, true && ((true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), (_GLF_IDENTITY(true, (true) && true) && (bool(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) || false)))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (_GLF_IDENTITY(! (! (read_1 + 1 == read_2)), bool(bool(! (! (read_1 + 1 == read_2))))))))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, false, false)))) || _GLF_IDENTITY(false, true && (false)))))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(bool(! (_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec4(read_1 + 1 == read_2, true, false, false)))) || _GLF_IDENTITY(false, true && (false)))))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), ((read_1 + 1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true && (bool(! (! (_GLF_IDENTITY(! _GLF_IDENTITY((read_1 + 1 == read_2), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((read_1 + 1 == read_2))), bool(bool(! (read_1 + 1 == read_2))))))))) && true)) || false), (true && (bool(! (! (! (read_1 + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0), (ivec3(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)) + ivec3(0, 0, 0)))) == read_2)))))) || false)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), bool(bvec2(true && (bool(! (! (! (read_1 + 1 == read_2))))), false)))) || false)), ! (! (bool(_GLF_IDENTITY(true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2)))))))), ! (! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), ! (! (! (read_1 + 1 == read_2))))))))))))))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false))))))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (bool(! (! (! (read_1 + 1 == read_2))))), (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), true && (_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), bool(bvec3(true && (bool(! (! (! (read_1 + 1 == read_2))))), false, false)))))) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY((true && (bool(! (! (! _GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))) || false)))))) || false, ! (! ((true && (bool(! (! (! _GLF_IDENTITY(_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! (! ((read_1 + 1 == read_2))))) || false), (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true))), false || (! ((_GLF_IDENTITY(! ((read_1 + 1 == read_2)), (_GLF_IDENTITY(! ((read_1 + 1 == read_2)), ! (! (! (_GLF_IDENTITY((read_1 + 1 == read_2), (_GLF_IDENTITY((read_1 + 1 == read_2), false || ((read_1 + 1 == read_2)))) && true)))))) && true))))))))) || false)) && true)))))) || false))))), false || (bool(_GLF_IDENTITY(true && _GLF_IDENTITY((bool(! (! (! (read_1 + 1 == read_2))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(! (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) | 0u)))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4((bool(! (! (! (read_1 + 1 == read_2))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5859.0523, 9.6)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))), (true && (bool(! (! (! (read_1 + 1 == read_2)))))) || false)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(! (! (_GLF_IDENTITY(! (read_1 + 1 == read_2), false || (_GLF_IDENTITY(! (read_1 + 1 == read_2), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(! (read_1 + 1 == read_2), (! (read_1 + 1 == read_2)) && true), false, false, false)), true, false)))))))))), (_GLF_IDENTITY(true, false || (true)) && (bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1)) == read_2)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) >> 0u))))))))))) || false)), false || (bool(_GLF_IDENTITY(true && (bool(! (! (! (read_1 + 1 == read_2))))), (true && (bool(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) - 0u)), (uint(_GLF_IDENTITY(uint(read_1), _GLF_IDENTITY((uint(read_1)), uint(uvec4((uint(read_1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u), 1u))) - 0u))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u))) + 1 == read_2), ! (! ((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), _GLF_IDENTITY((uint(read_1)) - 0u, (_GLF_IDENTITY((uint(read_1)) - 0u, uint(uvec4((uint(read_1)) - 0u, 1u, 1u, 1u)))) - 0u))), (uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) - 0u))) - 0u)) + 1 == read_2))))))))) || false)))), false), _GLF_IDENTITY(false, (false) || false)))))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0)), clamp((1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0)), (1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0)), _GLF_IDENTITY((1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0)), ((1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0))) | ((1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / 1), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(51763)))))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0)))) << 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))), 0 ^ (4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, int(ivec2(0, int(_GLF_ONE(1.0, injectionSwitch.y))))) ^ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-13748) : 4)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, 0 ^ (4)))), (true ? ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, 0 ^ (4)))), ((~ (_GLF_IDENTITY(4, 0 ^ (4))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), ~ (~ (0 ^ (4))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), ~ (~ (0 ^ (4)))))) / 1))))) : _GLF_FUZZED(-83279)))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), int(ivec3(int(7), 0, 0)))))))), 64, _GLF_IDENTITY(4, (4) | (4)));
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true && (read_1 + 1 == read_2), ! (! (true && (read_1 + 1 == read_2))))), bool(bool(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(true && (read_1 + 1 == read_2), ! (! (true && (read_1 + 1 == read_2))))))))), (uint(read_1 + 1 == read_2)) << _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), clamp(~ (~ (0u)), ~ (~ (0u)), _GLF_IDENTITY(~ (~ (0u)), (~ (~ _GLF_IDENTITY((0u), ((0u)) - 0u))) << 0u))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) | (1), ((1) | (1)) - (1 ^ 1)), (_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) / 1) | (1), int(_GLF_IDENTITY(ivec4((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 | (~ (0)))))), min(1, 1))), 0, 1, 1), (false ? _GLF_FUZZED(ivec4(-29444, 56752, -6986, 51080)) : ivec4((1) | (_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 | (0)))), 1, 1)))))) | (_GLF_IDENTITY((1), min((1), (1))) | (1)))), 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(true, (true) || false));
  }
}
