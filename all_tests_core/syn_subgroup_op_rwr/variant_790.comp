#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 0.0)), sqrt(1.0), cos(0.0), 1.0, log(1.0), 0.0))).y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), false || (! (true))))))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-71.87), mix(float(_GLF_FUZZED(-71.87)), float(_GLF_FUZZED(7385.0856)), bool(false))))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)))) || false)))) && (! (true))))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-71.87), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-71.87, max(_GLF_IDENTITY(-71.87, clamp(-71.87, -71.87, _GLF_IDENTITY(-71.87, mix(float(_GLF_FUZZED(-5350.4684)), float(-71.87), bool(true))))), -71.87)))), float(_GLF_FUZZED(7385.0856)), bool(false))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (! (true))))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-71.87), mix(float(_GLF_FUZZED(-71.87)), float(_GLF_FUZZED(7385.0856)), bool(false))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (! (true))))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-71.87), mix(float(_GLF_FUZZED(-71.87)), float(_GLF_FUZZED(7385.0856)), bool(false))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (! (true))))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-71.87), mix(float(_GLF_FUZZED(-71.87)), float(_GLF_FUZZED(7385.0856)), bool(false))))) > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (! (true))))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-71.87), mix(float(_GLF_FUZZED(-71.87)), float(_GLF_FUZZED(7385.0856)), bool(false))))) > injectionSwitch.y))))))))), bool(bool(! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-71.87), mix(float(_GLF_FUZZED(-71.87)), float(_GLF_FUZZED(7385.0856)), bool(false))))) > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uint(workgroup_size)), _GLF_IDENTITY(uint(uvec3(uint(uint(workgroup_size)), _GLF_IDENTITY(0u, (0u) >> 0u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | 0u))))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))) ? uint(uint(workgroup_size)) : _GLF_FUZZED(subgroup_local_id))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(workgroup_size)), clamp(uint(uint(workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(workgroup_size)), min(_GLF_IDENTITY(uint(uint(workgroup_size)), (uint(uint(workgroup_size))) | (uint(uint(workgroup_size)))), uint(uint(workgroup_size)))), uint(uvec4(uint(uint(workgroup_size)), 0u, 0u, 0u))), uint(uint(workgroup_size)))), max(_GLF_IDENTITY(uint(uint(workgroup_size)), clamp(uint(uint(workgroup_size)), _GLF_IDENTITY(uint(uint(workgroup_size)), uint(uvec4(uint(uint(workgroup_size)), 0u, 0u, 0u))), uint(uint(workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(workgroup_size)), clamp(uint(uint(workgroup_size)), _GLF_IDENTITY(uint(uint(workgroup_size)), uint(uvec4(uint(_GLF_IDENTITY(uint(workgroup_size), (_GLF_IDENTITY(uint(workgroup_size), (_GLF_IDENTITY(uint(workgroup_size), clamp(uint(workgroup_size), uint(workgroup_size), uint(workgroup_size)))) >> 0u)) >> 0u)), 0u, 0u, 0u))), uint(uint(workgroup_size)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_size), (uint(workgroup_size)) << 0u)), clamp(uint(uint(workgroup_size)), _GLF_IDENTITY(uint(uint(workgroup_size)), uint(uvec4(uint(uint(workgroup_size)), 0u, 0u, 0u))), uint(uint(workgroup_size)))), _GLF_IDENTITY(uint(uint(workgroup_size)), _GLF_IDENTITY(clamp(uint(uint(workgroup_size)), _GLF_IDENTITY(uint(uint(workgroup_size)), uint(uvec4(uint(uint(workgroup_size)), 0u, 0u, 0u))), uint(uint(workgroup_size))), (clamp(uint(uint(workgroup_size)), _GLF_IDENTITY(uint(uint(workgroup_size)), uint(uvec4(uint(uint(workgroup_size)), 0u, 0u, 0u))), uint(uint(workgroup_size)))) | (clamp(uint(uint(workgroup_size)), _GLF_IDENTITY(uint(uint(workgroup_size)), uint(uvec4(uint(uint(workgroup_size)), 0u, 0u, 0u))), uint(uint(workgroup_size)))))))))), uint(uint(workgroup_size)))), 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, min(6u, 6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), (uint(6u)) | 0u))), min(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, min(6u, 6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), (uint(6u)) | 0u))), clamp(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, min(6u, 6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), (uint(6u)) | 0u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, min(6u, 6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), (uint(6u)) | 0u))), min(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, min(6u, 6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), (uint(6u)) | 0u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, min(6u, 6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), (uint(6u)) | 0u))))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, min(6u, 6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), (uint(6u)) | 0u))))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, min(6u, 6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), (uint(6u)) | 0u))), max(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, min(6u, 6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), (uint(6u)) | 0u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, _GLF_IDENTITY(6u, min(6u, 6u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(uint(uint(6u)))), (uint(6u)) | 0u)))))))))) / 1u))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), ~ (~ (clamp(workgroup_base, workgroup_base, workgroup_base))))) + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (true ? injectionSwitch.x : _GLF_FUZZED(-15.22))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_IDENTITY(_GLF_FUZZED(-1335.6530), mix(float(_GLF_FUZZED(206.470)), float(_GLF_IDENTITY(_GLF_FUZZED(-1335.6530), max(_GLF_FUZZED(-1335.6530), _GLF_FUZZED(-1335.6530)))), bool(true)))), bool(false)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), _GLF_IDENTITY((_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), _GLF_IDENTITY(0.0 + (_GLF_FUZZED(-15.22)), min(_GLF_IDENTITY(0.0 + (_GLF_FUZZED(-15.22)), (0.0 + (_GLF_FUZZED(-15.22))) + 0.0), 0.0 + (_GLF_FUZZED(-15.22)))))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-15.22, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-9.8 + -5.1)) : -15.22))), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(_GLF_IDENTITY(mat4x2((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, abs(1.0), 0.0, abs(0.0)), (mat4x2((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, abs(1.0), 0.0, abs(0.0))) * mat4(1.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((-42.77 + 7910.3363)))), 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, clamp((_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)) : _GLF_FUZZED(-735.315), _GLF_IDENTITY(float(mat4(true ? _GLF_IDENTITY((_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(_GLF_IDENTITY(mat4x2((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, abs(1.0), 0.0, abs(0.0)), (mat4x2((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, abs(1.0), 0.0, abs(0.0))) * mat4(1.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((-42.77 + 7910.3363)))), 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, clamp((_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)) : _GLF_FUZZED(-735.315), 1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(9309.2213) : _GLF_IDENTITY(float(mat4(true ? _GLF_IDENTITY((_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(_GLF_IDENTITY(mat4x2((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, abs(1.0), 0.0, abs(0.0)), (mat4x2((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, abs(1.0), 0.0, abs(0.0))) * mat4(1.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((-42.77 + 7910.3363)))), 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, clamp((_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)) : _GLF_FUZZED(-735.315), 1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), float(mat2x3(float(mat4(true ? _GLF_IDENTITY((_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(_GLF_IDENTITY(mat4x2((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, abs(1.0), 0.0, abs(0.0)), (mat4x2((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 0.0, abs(1.0), 0.0, abs(0.0))) * mat4(1.0)))), 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED((-42.77 + 7910.3363)))), 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, clamp((_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0, (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)) : _GLF_FUZZED(-735.315), 1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), max(_GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))))), _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(_GLF_IDENTITY(-15.22, tan(0.0) + (-15.22)))))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), injectionSwitch.x), mix(float(_GLF_FUZZED(-4.0)), float(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.5) : _GLF_IDENTITY(0.0, (0.0) * 1.0)))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), injectionSwitch.x)), bool(true)))) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.3))), mix(float(_GLF_FUZZED(255.326)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) * 1.0)) - 0.0)), bool(true))), injectionSwitch.y))))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-989.957))), cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) + 0.0))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-290.150))), 0.0)), mix(float(_GLF_FUZZED(8508.0046)), float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + (_GLF_FUZZED(-15.22)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0))) * 1.0)) - sin(0.0)), injectionSwitch.x)) > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-200.301), _GLF_FUZZED(float((159847u * 194358u)))), bvec2(false, false))).x > injectionSwitch.y))), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0), mix(float(_GLF_FUZZED(534.448)), float(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), bool(true)))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0)))), 0.0 + (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y)))) && true), (bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-15.22)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.9)), determinant(mat2(sin(0.0), 0.0, 1.0, 0.0)) + (float(_GLF_FUZZED(7.9)))), _GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (true ? float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) : _GLF_FUZZED(-39.38)))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), clamp(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))), bool(true)))), (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-15.22)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.9)), determinant(mat2(sin(0.0), 0.0, 1.0, 0.0)) + (float(_GLF_FUZZED(7.9)))), _GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (true ? float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) : _GLF_FUZZED(-39.38)))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), clamp(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))), bool(true)))), clamp(true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-15.22)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.9)), determinant(mat2(sin(0.0), 0.0, 1.0, 0.0)) + (float(_GLF_FUZZED(7.9)))), _GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (true ? float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) : _GLF_FUZZED(-39.38)))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), clamp(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))), bool(true)))), true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-15.22)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.9)), determinant(mat2(sin(0.0), 0.0, 1.0, 0.0)) + (float(_GLF_FUZZED(7.9)))), _GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (true ? float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) : _GLF_FUZZED(-39.38)))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), clamp(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))), bool(true)))), true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-15.22)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.9)), determinant(mat2(sin(0.0), 0.0, 1.0, 0.0)) + (float(_GLF_FUZZED(7.9)))), _GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (_GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (true ? float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) : _GLF_FUZZED(-39.38)))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), clamp(float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), float(_GLF_IDENTITY((_GLF_FUZZED(-15.22)), ((_GLF_FUZZED(-15.22))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))), bool(true))))))) - 0.0)), float(mat4x3(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), min((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))))), _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), float(vec4(_GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22))), 1.0, 1.0, 0.0)))))))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(-15.22), (_GLF_FUZZED(-15.22)) + log(1.0))))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y)))) && true), (bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + _GLF_IDENTITY((_GLF_FUZZED(-15.22)), mix(float(_GLF_FUZZED(7.9)), float((_GLF_FUZZED(-15.22))), bool(true))))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(635.326) : 0.0)), tan(0.0))))) / 1.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y))), (bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), float(mat4x3((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y))))))) && true), (bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), (_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-15.22), mix(float(_GLF_FUZZED(-15.22)), float(_GLF_FUZZED(-70.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), mix(float(_GLF_FUZZED(7.9)), float((_GLF_FUZZED(-15.22))), bool(true))))), float(mat4x3((_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-15.22), 0.0 + (_GLF_FUZZED(-15.22)))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, tan(0.0))))) / 1.0)), injectionSwitch.x)) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true, false))))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1]), max(vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1]), vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y))))) || false), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)) + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) || false)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u)), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) >> 0), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))), (bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))) || false)), (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) && true)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6935.3504)), float(injectionSwitch.y), bool(true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(993.873))), injectionSwitch.x)) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) * (injectionSwitch.y)))), true), bvec2(bvec3(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true), false)))), false || (bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, injectionSwitch)))))).y)), true), bvec2(bvec3(bvec2(! ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), true), false)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) * (injectionSwitch.y)))), true), bvec2(bvec3(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true), false)))), false || (bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, injectionSwitch)))))).y)), true), bvec2(bvec3(bvec2(! ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), true), false)))))))))), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))) * (injectionSwitch.y)))), true), bvec2(bvec3(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), true), false)))), false || (bool(_GLF_IDENTITY(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (min(injectionSwitch, injectionSwitch)))))).y)), true), bvec2(bvec3(bvec2(! ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), true), false))))))))))))))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(6), int(6))) + (1)) == read_2) + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 + _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(6), int(6))) + (1)) == read_2) + 1)), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false)))), (bool(_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(false))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u), (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | 0u)) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) == read_2) + 1, 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-89417) : 4)));
   if(_GLF_DEAD(false))
    return;
   subgroupAll(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (true))), false || (! (_GLF_IDENTITY(! (! (true)), ! (! (! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec3((true), true, true)))) || false)))))))), (! (! (! (true)))) || false))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, _GLF_IDENTITY(true, ! (! (true)))))) || false))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), bool(bvec4(bool(bvec4(true, false, true, false)), true, true, false)))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
}
