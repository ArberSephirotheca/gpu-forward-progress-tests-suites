#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size;
 uvec4 GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 0, 1))) != 0); _injected_loop_counter --)
  {
   GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy = GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.xy;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(log2(injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(569.913)), max(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(569.913)), (true ? (true ? injectionSwitch.y : _GLF_FUZZED(569.913)) : _GLF_FUZZED(-8.1))), (true ? injectionSwitch.y : _GLF_FUZZED(569.913))))), bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(569.913))), true, _GLF_IDENTITY(false, bool(bool(false))), true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.z = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))) >> uvec3(0u, 0u, 0u)), 0u), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), 0u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) / 1u)) | (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), max(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize))), uvec3(uvec3(_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), max(max(gl_WorkGroupSize, gl_WorkGroupSize), max(gl_WorkGroupSize, gl_WorkGroupSize))))))), 0u))), uvec4(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), 0u)))), (_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u) + (_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) >> 0u)))))), uvec3(uvec3(uvec3(uvec4(gl_WorkGroupSize, 0u)))))))) + _GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (false ? _GLF_FUZZED(atomicAdd(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY(0u, (0u) / 1u)))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (false ? _GLF_FUZZED(atomicAdd(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY(0u, (0u) / 1u)))) ^ uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) + ((uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (false ? _GLF_FUZZED(atomicAdd(subgroup_local_id, subgroup_size)) : _GLF_IDENTITY(0u, (0u) / 1u)))) ^ uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)) ^ _GLF_IDENTITY(uvec3(0u, 0u, 0u), (true ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(42454u, 45795u, 79584u)))))) ^ uvec3(0u, 0u, 0u)))).x;
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, ((_GLF_IDENTITY(1, (1) - 0) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) * (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w = workgroup_size;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy.y = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w, max(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w, GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w)), GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w)), (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy.y = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w, max(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w, GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w)), GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy.y = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w, max(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w, max(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w, GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w)), GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.w)) : _GLF_FUZZED(136847u)))) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy.x = _GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))), (~ (_GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), workgroup_id, workgroup_id)))) + 0u)));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4x2(1579.7797, -93.50, 64.87, -35.17, 5.6, -27.47, -1.7, 9.5))))), mix(float(_GLF_FUZZED(8.7)), float(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4x2(1579.7797, -93.50, 64.87, -35.17, 5.6, -27.47, -1.7, 9.5)))))), bool(true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-13.63)), float(1.0), bool(true)))) / 1.0), 1.0)), 1.0, 1.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.7), _GLF_FUZZED(-285.841)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-799.621) : 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4x2(1579.7797, -93.50, 64.87, -35.17, 5.6, _GLF_IDENTITY(-27.47, max(_GLF_IDENTITY(-27.47, min(-27.47, _GLF_IDENTITY(-27.47, max(-27.47, -27.47)))), -27.47)), -1.7, 9.5))))), mix(float(_GLF_FUZZED(8.7)), float(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat4x2(1579.7797, -93.50, 64.87, -35.17, 5.6, -27.47, -1.7, 9.5)))))), bool(true))))) || false)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true)), false, false))), (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0)))), mat2(mat3x4(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0)))))))), (float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0), transpose(transpose(mat2(injectionSwitch.x, 1.0, sqrt(0.0), 0.0)))))) - 0.0)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(mat2x4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2((vec2(mat2x4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat2x4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))[1]), vec2(_GLF_FUZZED(-7.1), _GLF_FUZZED(2.8)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true)) || false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy.y * _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy, ~ (_GLF_IDENTITY(~ (GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy), ~ (~ (~ (GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy)))))).x, 0u, 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((~ workgroup_size)))), 0u, 0u), clamp(clamp(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, ~ (~ (0u))))))), 0u), clamp(0u, 0u, 0u), _GLF_IDENTITY(_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) << _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) << _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), max(_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) << _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) << _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 1u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) << _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), max(_GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) << _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) << _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 1u))))))))), min(uvec4(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy.x, 0u, 1u, 0u), _GLF_IDENTITY(uvec4(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy.x, 0u, _GLF_IDENTITY(1u, (1u) / 1u), 0u), (uvec4(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.xy.x, 0u, 1u, 0u)) >> uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), ~ (~ (0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), ~ (~ (0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(~ (~ (0u)), 0u | (~ (~ (0u))))))))) - 0u), 0u, 0u, 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y)), true, true))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), false, false, true))) || false))))) || _GLF_IDENTITY(false, true && (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y))))))), false))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y))))))), false))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y))))))), false))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(4845.2254, (_GLF_IDENTITY(4845.2254, float(mat2(4845.2254, 0.0, 0.0, 1.0)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.4) : injectionSwitch.y))))))), false)))))))))))) || false))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-2937.2563)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w, (GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w) * 1u), 0u | (GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w)) + GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.z;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, abs(1.0), 1.0, exp(0.0), 0.0))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.w = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0)))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w + _GLF_IDENTITY(((GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w), clamp(((GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))) % GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, max(1, 1))), ~ (_GLF_IDENTITY(~ ((GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, max(1, 1)))), clamp(~ ((GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, max(1, 1)))), ~ ((GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, max(1, 1)))), ~ ((GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.z + _GLF_IDENTITY(1, max(1, 1)))))))) % GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w), ((GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.z + 1) % GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w)));
 GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.z = _GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)) - 0u), next_virtual_gid));
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w) : GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.w))), ((_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.w, (false ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w) : GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.w)))) ^ 0u) | (GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.w))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.y = read_1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z = GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.z, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.z, (GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.z) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), 0u | (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.z, (GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.z) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0)))).x))), (uvec3(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.z, (GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.z) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0), transpose(_GLF_IDENTITY(transpose(mat4x3(injectionSwitch.x, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0)), (transpose(mat4x3(injectionSwitch.x, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, exp(0.0), 1.0))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))))) * (injectionSwitch)), 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0)))).x)))) ^ uvec3(0u, 0u, 0u))))], uint(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size, (_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size, uvec4(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size[0], GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size[1], GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size[2], _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size[3], (GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size[3]) << 0u)))) + uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) << 0u), 0u, 0u)).z + 1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.w], uint(uvec4(buf[GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.w], uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false))), false))))) || (false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
          }
        }
      }
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, true, true))), ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, true, true))), ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), ! (! (false))), false, false), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, true, true))), ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, true, true))), ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec4(false, false, true, _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))), _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false, false), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true)))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), bool(bvec4(false, false, true, true))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! (false)))))))), bool(bvec4(false, false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((! (false)))))))), bool(bvec4(false, false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && ((_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))) && true))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))) && true))), false), bvec2(bvec4(bvec2(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))) && true))), false), false, false))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))) && true))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))) && true))), false), bvec2(bvec4(bvec2(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))) && true))), false), false, false))))))), true, true)), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))) && true))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))) && true))), false), bvec2(bvec4(bvec2(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), ! (! (bool(bvec3(true, false, true))))))))) && true))), false), false, false))))))), true, true))) || false)))), ! (! (false))), false, false), _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(4878.6487)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-41.08) : 0.0)))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))))) / 1.0), 0.0, 1.0, exp(0.0), sqrt(1.0))), (_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-41.08) : 0.0)))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))))) / 1.0), 0.0, 1.0, exp(0.0), sqrt(1.0))), (false ? _GLF_FUZZED(-8.6) : float(mat4x3(injectionSwitch.y, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), abs(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-41.08) : 0.0)))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, round(length(normalize(1.0))), 0.0)))))) / 1.0), 0.0, 1.0, exp(0.0), sqrt(1.0)))))) - 0.0))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, ! (! (false)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (! (false)))), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2((_GLF_IDENTITY(false, ! (! (false)))), true), true, true)), false))))), false || (bool(bvec2((false), true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))));
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true, true)), true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6515.7407)), bool(false)))) - length(0.0))))))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), false)))) || false)))))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.z + 1 < GLF_merged4_0_1_13_1_1_6_2_1_17_3_1_13num_workgroupread_1subgroup_local_idsubgroup_size.w)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid, (GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).z], uint(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z, _GLF_IDENTITY(uint(uvec3(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z, 1u, 0u)), ~ (~ (uint(uvec3(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z, 1u, 0u)))))) + 1 == read_2) + 1, 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))))));
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         subgroupAll(false);
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
              barrier();
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (injectionSwitch.x) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-24.33)), float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0)), bool(true)))), injectionSwitch.x)) > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(7.5, 2.2, -37.28, 4.7, 8.3, -5.7, 1814.4087, 290.624, 0.1)))))) - 0.0))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))), true, true))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, true))))) && true)))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7034.9107)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9737.9531) : injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(buf[GLF_merged3_0_2_51_2_1_16_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizenext_virtual_gidvirtual_gid.z], _GLF_IDENTITY(uint(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z + 1 == read_2), clamp(_GLF_IDENTITY(uint(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z + 1 == read_2), (uint(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z + 1 == read_2)) - 0u), uint(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z + 1, _GLF_IDENTITY(0u ^ (GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z + 1), clamp(0u ^ (GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z + 1), 0u ^ (GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z + 1), 0u ^ (GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z + 1)))) == read_2), uint(GLF_merged3_0_2_51_2_1_6_3_1_14GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_1workgroup_size.z + 1 == read_2))) + 1, 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0), 0.0), vec3(0.0, 1.0, 0.0))))), float(float(float(vec4(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))) > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-564.517)), bvec2(true, false))), injectionSwitch)).y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-5269.6277)), bool(false))), injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-5269.6277)), bool(false))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.3))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-5269.6277)), bool(false)), max(mix(float(injectionSwitch[0]), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-5269.6277, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0)))), mix(float(_GLF_FUZZED(826.358)), float(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0))))), bool(true)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(-5269.6277, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0)))), mix(float(_GLF_FUZZED(826.358)), float(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0))))), bool(true)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(-5269.6277, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0)))), mix(float(_GLF_FUZZED(826.358)), float(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0))))), bool(true)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec4(float(_GLF_FUZZED(_GLF_IDENTITY(-5269.6277, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0)))), mix(float(_GLF_FUZZED(826.358)), float(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0))))), bool(true)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec4(float(_GLF_FUZZED(_GLF_IDENTITY(-5269.6277, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0)))), mix(float(_GLF_FUZZED(826.358)), float(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0))))), bool(true)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), float(mat4x3(float(_GLF_IDENTITY(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(-5269.6277, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0)))), mix(float(_GLF_FUZZED(826.358)), float(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0))))), bool(true)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), clamp(vec4(float(_GLF_FUZZED(_GLF_IDENTITY(-5269.6277, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0)))), mix(float(_GLF_FUZZED(826.358)), float(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0))))), bool(true)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec4(float(_GLF_FUZZED(_GLF_IDENTITY(-5269.6277, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0)))), mix(float(_GLF_FUZZED(826.358)), float(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0))))), bool(true)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec4(float(_GLF_FUZZED(_GLF_IDENTITY(-5269.6277, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0)))), mix(float(_GLF_FUZZED(826.358)), float(float(_GLF_IDENTITY(mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0), (false ? _GLF_FUZZED(mat4x2(-9350.9804, -3312.6415, 3.6, -9.8, 485.020, -2635.4855, -83.48, 20.86)) : mat4x2(-5269.6277, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), 1.0), vec3(0.0, 0.0, 1.0))), 1.0))))), bool(true)))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), bool(false)), mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-5269.6277)), bool(false))))), injectionSwitch[1])).x, float(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-5269.6277)), bool(false)), max(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(_GLF_IDENTITY(-5269.6277, (_GLF_IDENTITY(-5269.6277, clamp(_GLF_IDENTITY(-5269.6277, clamp(-5269.6277, -5269.6277, -5269.6277)), -5269.6277, -5269.6277))) - length(vec4(0.0, 0.0, 0.0, 0.0))))), bool(false)), mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-5269.6277)), bool(false))))), injectionSwitch[1])).x, _GLF_IDENTITY(log(1.0), 1.0 * (log(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), log(1.0), 0.0))) > injectionSwitch.y) && true)) && _GLF_IDENTITY(true, false || (true)))))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(float(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
