#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_25 {
 bvec3 _f0;
 vec2 _f1;
 mat3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_24 {
 vec4 _f0;
 mat4x2 _f1;
 bvec3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_23 {
 bvec3 _f0;
 mat2x4 _f1;
 uvec4 _f2;
 float _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_26 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_25 _f2;
} ;

struct _GLF_struct_21 {
 vec4 _f0;
 float _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_20 {
 bvec2 _f0;
 vec2 _f1;
 vec4 _f2;
 vec2 _f3;
 uvec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
 mat3 _f1;
 bool _f2;
 mat2 _f3;
} ;

struct _GLF_struct_22 {
 vec4 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
 mat2 _f3;
 mat4x3 _f4;
 _GLF_struct_21 _f5;
} ;

struct _GLF_struct_27 {
 uint next_virtual_gid;
 _GLF_struct_22 _f0;
 float _f1;
 ivec3 _f2;
 _GLF_struct_26 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_16 {
 vec2 _f0;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
} ;

struct _GLF_struct_17 {
 _GLF_struct_15 _f0;
 bvec2 _f1;
 ivec2 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_14 {
 mat4 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_11 {
 uvec4 _f0;
 mat3x4 _f1;
 uint workgroup_id;
 mat4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_17 _f3;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 ivec2 _f1;
 uvec4 _f2;
 ivec4 _f3;
 uvec2 _f4;
 vec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 mat4x3 _f1;
 float _f2;
} ;

struct _GLF_struct_6 {
 float _f0;
 mat4 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 bool _f1;
 bvec2 _f2;
 mat4x2 _f3;
 int _f4;
} ;

struct _GLF_struct_9 {
 float _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 mat4x2 _f1;
 int _f2;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 mat2 _f1;
 vec2 _f2;
 uvec2 _f3;
 vec3 _f4;
 ivec3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 bool _f1;
 mat2x3 _f2;
 ivec3 _f3;
 float _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 uint virtual_gid;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_4 _f0;
 _GLF_struct_9 _f1;
 bvec2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max(min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.2) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(770.340, (false ? _GLF_FUZZED(-15.69) : _GLF_IDENTITY(770.340, (770.340) - 0.0)))))))), true))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), false)))))) || false) || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))), false)))))) || false) || (false)), (bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))), false)))))) || false) || (false))) || false)), true && (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec2(! (_GLF_IDENTITY(false, false || (false))), false)))))) || false) || (false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackHalf2x16(subgroup_size)) : injectionSwitch)).y)) ? clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)), injectionSwitch.x) : _GLF_FUZZED(1.3)))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, false)), false || (bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, false)))))))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-74.76)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(ivec2(1), _GLF_struct_12(_GLF_struct_11(uvec4(1u), mat3x4(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)))), gl_WorkGroupID.x, mat4(1.0), ivec3(1))), _GLF_struct_14(mat4(1.0), _GLF_struct_13(mat2(1.0), mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), max(clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))))), 1.0))))))), _GLF_struct_17(_GLF_struct_15(_GLF_IDENTITY(ivec4(1), (ivec4(1)) ^ ivec4(0, 0, 0, 0))), bvec2(true), ivec2(1), _GLF_struct_16(vec2(1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_18._f1._f0.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_4(_GLF_struct_0(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))) >> 0)), true, mat2x3(1.0), ivec3(1), 1.0, uvec4(1u)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u) + subgroup_local_id, _GLF_struct_1(vec4(1.0), mat2(1.0), vec2(1.0), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) - 0u)), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) | (_GLF_IDENTITY(int(ivec2(1, 0)), (true ? int(ivec2(1, 0)) : _GLF_FUZZED(-4966))))))), mat2(1.0)), _GLF_struct_2(vec3(1.0), mat4x2(1.0), 1), _GLF_struct_3(mat3x4(1.0), mat3x2(1.0))), _GLF_struct_9(1.0, _GLF_struct_5(mat3x4(1.0), true, bvec2(true), mat4x2(1.0), 1), _GLF_struct_6(1.0, mat4(1.0), bvec3(true)), _GLF_struct_7(mat2x3(1.0), mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0), _GLF_struct_8(uvec3(1u), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 + (~ (1)))))), (ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 + (~ (1))))))) | (ivec2(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 + (~ (1)))))))), uvec4(1u), ivec4(1), _GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(182464u, 5798u)))), vec2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY(vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0)), mix(vec3((vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0)))[0], _GLF_FUZZED(-9.2), _GLF_FUZZED(-531.301)), vec3(_GLF_FUZZED(4.6), (vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0)))[1], (vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0)))[2]), bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(vec3(mat3x2(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), _GLF_IDENTITY(log(1.0), mix(float(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0)))), float(_GLF_FUZZED(7050.5248)), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), 1.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(vec3(mat3x2(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), 1.0, 0.0, 0.0)), (true ? vec3(mat3x2(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 0.0))), 1.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(-38.64, -869.912, -74.94)))), mix(vec3((vec3(mat3x2(_GLF_IDENTITY(vec3(1.0), vec3(mat4(_GLF_IDENTITY(vec3(1.0), vec3(mat2x3(vec3(1.0), 0.0, 0.0, tan(0.0)))), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-7.1))))), (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-7.1))), mix(float(_GLF_FUZZED(vec3(7999.2242, -8.2, 95.46).x)), float(_GLF_IDENTITY(false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-7.1))), min(false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-7.1))), false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-7.1)))))), bool(true)))))) / cos(0.0)), 0.0)))[0], (vec3(mat3x2(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.7)), bool(false))), 1.0, sqrt(0.0), 0.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))[1], (vec3(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(vec3(mat2x4(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, sqrt(0.0), 0.0))), 0.0, tan(0.0), 1.0, 0.0, 1.0)), mix(vec3(_GLF_FUZZED(float(-82007)), (vec3(mat2x4(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, sqrt(0.0), 0.0))), 0.0, tan(0.0), 1.0, 0.0, 1.0)))[1], (vec3(mat2x4(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, sqrt(0.0), 0.0))), 0.0, tan(0.0), 1.0, 0.0, 1.0)))[2]), vec3((vec3(mat2x4(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, sqrt(0.0), 0.0))), 0.0, tan(0.0), 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(-8449.5661), _GLF_FUZZED(19.89)), bvec3(true, false, false)))), mix(vec3((_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))))[0], _GLF_FUZZED(0.2), _GLF_FUZZED(-24.65)), vec3(_GLF_IDENTITY(_GLF_FUZZED(376.315), min(_GLF_IDENTITY(_GLF_FUZZED(376.315), length(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_FUZZED(376.315), mix(float(_GLF_FUZZED(376.315)), float(_GLF_FUZZED(-4.5)), bool(false))))), _GLF_IDENTITY(_GLF_FUZZED(376.315), 1.0 * (_GLF_FUZZED(376.315))))), (_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))))[1], (_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))))[2]), bvec3(false, true, true))), 1.0, 0.0, 0.0)))[2]), vec3(_GLF_FUZZED(1.4), _GLF_FUZZED(1.1), _GLF_FUZZED(8.7)), bvec3(false, false, false)))) * vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec3(1.0), vec3(_GLF_IDENTITY(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(0.0), 0.0), transpose(transpose(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-8.8, -885.983, -2.7), max(vec3(-8.8, -885.983, -2.7), vec3(-8.8, -885.983, -2.7)))) : _GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, sqrt(0.0), 0.0)))), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), _GLF_IDENTITY(log(1.0), 1.0 * (log(1.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(cos(0.0), 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(cos(0.0), 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), (false ? _GLF_FUZZED(vec3(-8.8, -885.983, -2.7)) : _GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0)))), (clamp(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))), (false ? _GLF_FUZZED(vec3(-8.8, -885.983, -2.7)) : _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0))), vec3(mat4(vec3(1.0), log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(932.135))), 1.0, 0.0, 1.0, sqrt(0.0), 0.0))))), _GLF_IDENTITY(vec3(1.0), vec3(mat4(_GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), _GLF_IDENTITY(log(1.0), min(_GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), log(1.0))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0))))) - vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-844.913) : 0.0)))) : _GLF_FUZZED(vec3(320.422, 6411.6035, 0.6))))))), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(true), true, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(true), true, false))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) + 0.0)))) % subgroup_size), _GLF_struct_22(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(-1734.4044, 49.43, 881.184, -854.103)) : vec4(1.0))), _GLF_struct_19(mat2x3(1.0), mat3(_GLF_IDENTITY(1.0, (1.0) / 1.0)), true, mat2(1.0)), _GLF_struct_20(bvec2(true), vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), vec4(1.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(926.829)), float(1.0), bool(true)))), mix(float(_GLF_FUZZED(-7.4)), float(min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(926.829)), float(1.0), bool(true))))), bool(true))))), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), uvec2(uvec3((uvec2(1u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))) ^ uvec2(0u, 0u)) ^ uvec2(0u, 0u)))), true), mat2(1.0), mat4x3(1.0), _GLF_struct_21(vec4(1.0), 1.0, mat4x2(1.0))), 1.0, ivec3(1), _GLF_struct_26(_GLF_struct_23(bvec3(true), mat2x4(1.0), uvec4(1u), 1.0, ivec4(1)), _GLF_struct_24(vec4(1.0), mat4x2(1.0), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (true) || false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || false), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || false), false))), true))))), (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))) && true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (true) || false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || false), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || false), false))), true))))), (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))) && true))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (true) || false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || false), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || false), false))), true))))), (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false))) && true))), false)))))), uvec2(1u)), _GLF_struct_25(bvec3(true), vec2(1.0), mat3(1.0), _GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0) : _GLF_FUZZED(mat2(-19.18, 25.28, -8.2, -984.824)))))), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.6)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false), bvec2(bvec3(bvec2(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false), false)))))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), false), false, true))))))))))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_10._f0.virtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_10._f0.virtual_gid), max((_GLF_struct_replacement_10._f0.virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_10._f0.virtual_gid), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_struct_replacement_10._f0.virtual_gid))), clamp(_GLF_IDENTITY((_GLF_struct_replacement_10._f0.virtual_gid), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_struct_replacement_10._f0.virtual_gid))), _GLF_IDENTITY((_GLF_struct_replacement_10._f0.virtual_gid), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_struct_replacement_10._f0.virtual_gid))), _GLF_IDENTITY((_GLF_struct_replacement_10._f0.virtual_gid), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_struct_replacement_10._f0.virtual_gid))))))) << 0u)], 4, 64, _GLF_IDENTITY(0, int(ivec2(0, 0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_27.next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + _GLF_IDENTITY(1, min(1, 1)), read_1 + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, min(read_1 + _GLF_IDENTITY(1, min(1, 1)), read_1 + 1)), min(_GLF_IDENTITY(read_1 + 1, min(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(int(_GLF_IDENTITY(1, min(1, 1))))), read_1 + 1)), _GLF_IDENTITY(read_1 + 1, min(read_1 + _GLF_IDENTITY(1, min(1, 1)), read_1 + 1))))) + 0u)), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 ^ (4)))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-26.28), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(18.80)), bvec2(true, false))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY((0 & 79454), (_GLF_IDENTITY((0 & 79454), ((0 & 79454)) << 0)) << 0) | (1))], clamp(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY((0 & 79454), (_GLF_IDENTITY((0 & 79454), ((0 & 79454)) << 0)) << 0) | (1))], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY((0 & 79454), (_GLF_IDENTITY((0 & 79454), ((0 & 79454)) << 0)) << 0) | (1))], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY((0 & 79454), (_GLF_IDENTITY((0 & 79454), ((0 & 79454)) << 0)) << 0) | (1))])))), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) * (0 ^ 1))], mix(float(_GLF_FUZZED(_GLF_IDENTITY(170.075, mix(float(_GLF_FUZZED(-7.4)), float(170.075), bool(true))))), float(injectionSwitch[0]), bool(true)))), mix(float(_GLF_FUZZED(-7.4)), float(float(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (0) * (0 ^ 1))], mix(float(_GLF_FUZZED(_GLF_IDENTITY(170.075, mix(float(_GLF_FUZZED(-7.4)), float(170.075), bool(true))))), float(injectionSwitch[0]), bool(true))))), bool(true))), float(_GLF_FUZZED(-7.5)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), injectionSwitch[1])).y))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_10._f0.virtual_gid, (_GLF_struct_replacement_10._f0.virtual_gid) | (_GLF_struct_replacement_10._f0.virtual_gid))], _GLF_IDENTITY(4, _GLF_IDENTITY(1 * (4), 0 ^ (1 * (4)))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), (bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   atomicStore(buf[_GLF_struct_replacement_27.next_virtual_gid], uint(read_1 + 1 == _GLF_IDENTITY(read_2, 1u * (read_2))) + 1, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, min(4, 4)))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(4, min(4, 4)))), int(ivec4((~ (_GLF_IDENTITY(4, min(4, 4)))), 1, 1, 0))), _GLF_IDENTITY((~ (_GLF_IDENTITY(4, min(4, 4)))), ~ (~ ((~ (_GLF_IDENTITY(4, min(4, 4))))))), (~ (_GLF_IDENTITY(4, min(4, 4))))))), (4) | 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, abs(1.0), 0.0, 1.0), _GLF_IDENTITY(mat3x2(mat4x3(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, abs(1.0), 0.0, 1.0))), (true ? mat3x2(mat4x3(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, abs(1.0), 0.0, 1.0))) : _GLF_FUZZED(mat3x2(3.7, 9.3, -5372.6146, -3.7, 293.799, -26.50))))))), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + (min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sin(injectionSwitch)))).y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_27.next_virtual_gid], uint(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), min(~ (read_1), _GLF_IDENTITY(~ (read_1), 0u ^ (~ (read_1))))))) + 1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) / 1)) | 0) | (1)), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
