#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_6_1_1_17_2_1_11read_1subgroup_local_idvirtual_gid;
 uvec4 GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenum_workgroup;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged2_0_2_51_2_2_49GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uvec4 GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id;
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_49GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size, (GLF_merged2_0_2_51_2_2_49GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.xy = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size) - uvec2(0u, 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_49GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, clamp(GLF_merged2_0_2_51_2_2_49GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_2_51_2_2_49GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_2_51_2_2_49GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)), uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged2_0_2_51_2_2_49GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)).xy;
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base;
 GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenum_workgroup.xyz = GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz = GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenum_workgroup.xyz;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))) || false)) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec4 GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   else
    {
    }
  }
 GLF_merged2_0_2_51_2_2_49GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw = GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy = GLF_merged2_0_2_51_2_2_49GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.zw;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.y = subgroup_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.w = GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.y;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (false)), false), true), bvec3(bvec4(bvec3(bvec2((! (false)), false), true), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (false)), false), true), bvec3(bvec4(bvec3(bvec2((! (false)), false), true), true)))), false, true)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (false)), false), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2((! (false)), false), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2((! (false)), false), true), true)), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2((! (false)), false), true), bvec3(bvec4(bvec3(bvec2((! (false)), false), true), true)))), false, true))))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))).y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), false)))), true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / _GLF_IDENTITY(dot(vec4(0.0, log(1.0), 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0)), dot(vec4(0.0, log(1.0), 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0)))) > injectionSwitch.y)))))) || false))))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.z = subgroup_size, ~ (~ _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.z = subgroup_size), ~ (~ ((GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.z = subgroup_size))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.x = GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.z, 0u ^ (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.x = GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.z));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_6_1_1_17_2_1_11read_1subgroup_local_idvirtual_gid.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.w = GLF_merged3_0_1_6_1_1_17_2_1_11read_1subgroup_local_idvirtual_gid.y;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true, true, false)))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec2(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))), true, true, false)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, false))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (true ? _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base)))) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_base) : (gl_NumWorkGroups))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / 1u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(184642u, 73996u, _GLF_IDENTITY(194614u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(GLF_merged3_0_1_6_1_1_17_2_1_11read_1subgroup_local_idvirtual_gid.y) : _GLF_IDENTITY(194614u, 0u + (194614u)))))), clamp(_GLF_FUZZED(uvec3(184642u, 73996u, 194614u)), _GLF_IDENTITY(_GLF_FUZZED(uvec3(184642u, 73996u, 194614u)), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(184642u, 73996u, 194614u)), (_GLF_FUZZED(uvec3(184642u, 73996u, 194614u))) | uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), ~ (~ ((~ (1u)))))), 1u, 1u)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(184642u, 73996u, 194614u), uvec3(0u, 0u, 0u) + (uvec3(184642u, 73996u, 194614u)))), ~ (~ (_GLF_FUZZED(uvec3(184642u, 73996u, 194614u))))))) : _GLF_IDENTITY((gl_NumWorkGroups) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenum_workgroup.xyz) : uvec3(0u, 0u, 0u))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenum_workgroup.xyz) : uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(min((gl_NumWorkGroups) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 0u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), (gl_NumWorkGroups) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec3(0u, 0u, 0u) & uvec3(7928u, 88526u, 101683u)) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))), (uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(subgroup_id)))), (uvec3(7u)) / uvec3(1u, 1u, 1u)))))), (min((gl_NumWorkGroups) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) << _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), (uvec3(7u)) / uvec3(1u, 1u, 1u))))))) / uvec3(1u, 1u, 1u)))))))).x;
 GLF_merged2_0_3_67_3_1_13GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenum_workgroup.w = num_workgroup;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x)), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x), (clamp(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))))).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x) ^ (0u | 0u)))) * 1u)), min(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (gl_WorkGroupSize))).x)), 0u | _GLF_IDENTITY((gl_WorkGroupSize.x), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((gl_WorkGroupSize.x))));
 _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy.y = workgroup_size, (GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy.y = workgroup_size) | uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy.x = _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), clamp(~ (~ (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), uint(uint(~ (~ (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))))))), ~ (~ (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true, true, false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy.y * GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.xy.x;
 _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w = workgroup_base, (GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w = workgroup_base) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.z = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w), ((GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w), ((GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u), (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w), ((GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w), ((GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.w)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) / 1u)))) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.z, uint(uvec4(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.z, clamp(GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.z, GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.z, GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.z)), 0u, 1u, (0u ^ 1u)))) + GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy, min(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy, uvec2(0u, 0u) ^ (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy)), GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy)).x, clamp(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy, min(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy, uvec2(0u, 0u) ^ (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy)), GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy)).x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy, min(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy, uvec2(0u, 0u) ^ (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy)), GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy)).x, uint(uvec2(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy, min(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy, uvec2(0u, 0u) ^ (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy)), GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy)).x, 1u))), _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy, min(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy, uvec2(0u, 0u) ^ (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy)), GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy)).x)) + GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.w;
 GLF_merged3_0_1_6_1_1_17_2_1_11read_1subgroup_local_idvirtual_gid.z = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-8.5)), _GLF_FUZZED(9.4)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0)))) + vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.y = GLF_merged3_0_1_6_1_1_17_2_1_11read_1subgroup_local_idvirtual_gid.z;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz, (GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec4(GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz, 0u)), (uvec3(uvec4(GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz, 0u))) << uvec3(0u, 0u, 0u))).z + GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.w * GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.x + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.w + 1, (true ? GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.w + 1 : _GLF_FUZZED(118410u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.w + 1)), (~ ((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.w + 1))) << 0u), (~ ((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.w + 1))) >> 0u))) % GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.x);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.w = next_virtual_gid;
 _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.x = _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid, (true ? _GLF_IDENTITY(GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid, uvec4(GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid[0], GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid[1], GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid[2], GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid[3])) : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id))).w, ~ (~ (GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.x = GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.w)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.y], 1u * (buf[GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.y])), 4, 64, 0);
 GLF_merged3_0_1_6_1_1_17_2_1_11read_1subgroup_local_idvirtual_gid.x = read_1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))), false, false)), ! (! (bool(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))), false, false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z = GLF_merged3_0_1_6_1_1_17_2_1_11read_1subgroup_local_idvirtual_gid.x, (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z = GLF_merged3_0_1_6_1_1_17_2_1_11read_1subgroup_local_idvirtual_gid.x) << (0u & 39995u));
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED((-7.1 - -64.56)), _GLF_FUZZED(-920.896)), bvec2(false, false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))), ! (! (false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED((-7.1 - -64.56)), _GLF_FUZZED(-920.896)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(vec2(9.5, -43.85)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED((-7.1 - -64.56)), _GLF_FUZZED(-920.896)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(vec2(9.5, -43.85)) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0))))))) && true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    return;
   return;
  }
 atomicStore(buf[GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.x], uint(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1), 4, 64, 4);
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.y], clamp(buf[GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.y], buf[GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.y], buf[GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.y])), 4, 64, 0);
 GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.x = read_2;
 GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.z = GLF_merged4_0_1_6_1_1_11_2_1_13_3_1_14read_2subgroup_idsubgroup_sizeworkgroup_base.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y = GLF_merged3_0_2_51_2_1_6_3_1_11GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_sizeread_2subgroup_id.z;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     break;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0)))) + 0.0)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.w, (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.w) - 0u) + 1, (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.w, (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.w) - 0u) + 1) ^ 0u) < GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.xy.x)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) + 0)), min(int(1), int(1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), 1 * (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) + 0)), min(int(1), int(1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), 1 * (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) + 0)), min(int(1), int(1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), 1 * (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) + 0)), min(int(1), int(1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))), 1 * (_GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) | (_injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) | (_injected_loop_counter), (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) | (_injected_loop_counter), ((_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) | (_injected_loop_counter)) / 1)) / 1))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), _injected_loop_counter)) < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-60.06)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-60.06)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), cos(0.0), 0.0, 1.0, tan(0.0))), 0.0, sqrt(length(0.0)), 1.0, 0.0, 0.0, 0.0)), (float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-60.06)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), log(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), cos(0.0), 0.0, 1.0, tan(0.0))), 0.0, sqrt(length(0.0)), 1.0, 0.0, 0.0, 0.0))) / 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((_GLF_IDENTITY(-9.9 + 6.2, clamp(-9.9 + 6.2, -9.9 + 6.2, _GLF_IDENTITY(-9.9 + 6.2, max(-9.9 + 6.2, -9.9 + 6.2))))))), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-60.06)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(-60.06)), float(injectionSwitch.y), bool(true))) - log(1.0))), injectionSwitch.y))) - length(vec4(0.0, 0.0, 0.0, 0.0)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(25.54)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec3(bool(bvec4(false, true, true, false)), false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     atomicStore(buf[GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, uint(uint(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, _GLF_IDENTITY((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1), 0u | ((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))), 0u ^ (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, _GLF_IDENTITY((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1), 0u | ((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))), max(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, _GLF_IDENTITY((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1), 0u | ((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))), _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, _GLF_IDENTITY((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1), 0u | ((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))), uint(uvec3(false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, _GLF_IDENTITY((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1), 0u | ((GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))), 0u, 0u))))))))) == GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))) == GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y), (0u ^ 1u))), clamp(uint(uvec2(uint(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))) == GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y), (0u ^ 1u))), uint(uvec2(uint(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))) == GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y), (0u ^ 1u))), uint(uvec2(uint(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))) == GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y), (0u ^ 1u))))), (_GLF_IDENTITY(uint(uvec2(uint(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))) == GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y), (0u ^ 1u))), clamp(uint(uvec2(uint(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))) == GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y), (0u ^ 1u))), uint(uvec2(uint(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))) == GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y), (0u ^ 1u))), uint(uvec2(uint(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1) | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)))) == GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y), (0u ^ 1u)))))) | 0u)) + 1, 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))), vec2(vec4(injectionSwitch, 1.0, 1.0))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), true, true, true))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), true, true, true)))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      continue;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), true && (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) : _GLF_FUZZED(atan(4.0, 47.83)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (1 ^ 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(-48833)))) | (int(7)))) / 1)), max(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 0 | (int(7)))) << 0)) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1)), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)), max((int(7)), (int(7)))) / 1))) ^ 0))), 0 | ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1)))))) | (1)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, 7))), _GLF_IDENTITY(int(7), (int(7)) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(max(61386, 69809)) : _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) / 1, (true ? (int(7)) / 1 : _GLF_FUZZED(_injected_loop_counter)))))))) ^ 0))))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (1)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) >> 0)) * _GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))), _GLF_IDENTITY(int(7), (int(7)) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (_GLF_IDENTITY(true, ! (! (true))) ? int(7) : _GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) / 1))))) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) / 1))) ^ 0))), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) << 0) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, min(7, 7)), clamp(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(_GLF_IDENTITY(7, min(7, 7)), clamp(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(7, min(7, 7))))))), int(7)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (int(7))), int(7)), min(1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(int(7), int(7))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0) << _GLF_IDENTITY(int(7), int(7)), min(1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) | (7)))), 1 << _GLF_IDENTITY(int(7), int(7))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), min(1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(int(7), int(7)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), min(1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 ^ (_GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(int(7), int(7)))))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), min(1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(int(7), int(7)))), (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), min(1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) << 0))), min(1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(int(7), int(7)))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1)), max(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, 0 | _GLF_IDENTITY((7), max((7), _GLF_IDENTITY((7), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((7), ((7)) >> 0)), 0 | (~ (_GLF_IDENTITY((7), ((7)) >> 0)))))))))), (int(7)) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) ^ 0), _GLF_IDENTITY(int(7), (int(7)) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))), (int(7)) / _GLF_IDENTITY(1, (1) | (0 ^ 0))))), ((_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), min(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))), (int(7)) / _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) >> 0)), 1 * (int(_GLF_IDENTITY(0, (0) >> 0)))))) ^ 0)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))), (int(7)) / _GLF_IDENTITY(1, (1) | (0 ^ 0))))), min((_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) >> 0)) ^ 0)), (int(7)) - 0))), _GLF_IDENTITY((int(7)) / _GLF_IDENTITY(1, (1) | (0 ^ 0)), 1 * (_GLF_IDENTITY((int(7)) / _GLF_IDENTITY(1, (1) | (0 ^ 0)), (false ? _GLF_FUZZED((_injected_loop_counter ++)) : (int(7)) / _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 ^ 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 ^ 0)), 0 ^ (_GLF_IDENTITY(1, (1) | (0 ^ 0))))) ^ (0 << _GLF_IDENTITY(int(3), int(3))))))))))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))), (_GLF_IDENTITY(int(7), int(int(int(7))))) / _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY((1) | (0 ^ 0), int(ivec3((1) | (0 ^ 0), 1, 0))))))))))) ^ 0)))))))) && true); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        break;
       atomicStore(buf[GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.x], uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, (true ? _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1, 0u | (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1)) : _GLF_FUZZED(next_virtual_gid))) == GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y, _GLF_IDENTITY(true, (true) && true) && (GLF_merged3_0_2_49_2_1_6_3_1_17GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidread_1subgroup_local_id.z + 1 == GLF_merged2_0_3_67_3_1_16GLF_merged3_0_1_16_1_1_6_2_1_14next_virtual_gidread_2workgroup_basenext_virtual_gid.xyz.y))) + 1, 4, 64, 4);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, true, true)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   subgroupAll(true);
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x2(injectionSwitch[1], 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, log(1.0), 1.0))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          continue;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        continue;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))))))), (bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))))))))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y)))))) && true)), ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y)), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 1.0, 1.0))) > injectionSwitch.y)))))) && true))) || false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
}
