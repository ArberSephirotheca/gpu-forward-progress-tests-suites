#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))), false || (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))))))))))), false), true, false)))), true, false)))) && true, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) && true, bool(bool(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) && true, bool(bool(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) && true)))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0)), mix(float(float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0))), 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(-6618.9916)), bool(false)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, false)))))))))))))), false), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-59.87)), float(injectionSwitch.x), bool(true)))))) > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), false), true, false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), false), true, false))), bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), false), true, false))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), false), true, false))), bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))), false), true, false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)))) && true, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) && true)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), true, false)))), true, false)))) && true, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), true, false)))), true, false)))) && true, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) && true)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(777.167), _GLF_FUZZED(5.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - log(vec2(1.0, 1.0))).x > injectionSwitch.y)))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(clamp(-196.331, -6.8, 47.17))))))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(false, ! (! (false)))), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - log(vec2(1.0, 1.0))).x > injectionSwitch.y)))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(clamp(-196.331, -6.8, 47.17))))))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(false, ! (! (false)))), true, false)))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (((injectionSwitch.x > injectionSwitch.y))), false || (true && (((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.0, 5.9)) : injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), true && (((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.2)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(346.602))))), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true), true && (((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.2)), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(346.602))))), true && (((injectionSwitch.x > injectionSwitch.y)))))))))), false), true, false)), false))))), true, false)))) && true, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (true && (((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (true && (((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (true && (((injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))), false), true, false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))), ((! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))))), ((! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))))))) && true)))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))), true, false)))) && true, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) && true))))))))))))))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), _GLF_IDENTITY((bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false || ((bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)), clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), clamp((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u), max((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(10102u, 51564u, 3983u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))), max(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))))))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))))), (true ? (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))))) : _GLF_FUZZED(uvec3(3802u, 92601u, 191784u)))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u) * ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, (0u) * 1u), 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), _GLF_IDENTITY(max((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), (max((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u))), uvec3(1u, 1u, 1u) * ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) | uvec3(0u, 0u, 0u)))))) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))) - uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((false ? -4803.3367 : -7.9))), bool(false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7990.0998)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(1.0), 0.0, 0.0, sqrt(1.0), 1.0, 0.0)), clamp(float(mat3(injectionSwitch.y, 1.0, 1.0, abs(1.0), 0.0, 0.0, sqrt(1.0), 1.0, 0.0)), float(mat3(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED((5.1 + -82.14)) : abs(1.0))), 0.0, 0.0, sqrt(1.0), 1.0, 0.0)), float(mat3(injectionSwitch.y, 1.0, 1.0, abs(1.0), 0.0, 0.0, sqrt(1.0), 1.0, 0.0))))))), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))), mix(vec2((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[0], _GLF_FUZZED(-4611.4766)), vec2(_GLF_FUZZED(70.96), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), (false ? _GLF_FUZZED(vec4(47.10, -736.848, -7501.2756, 950.862)) : vec4(injectionSwitch, 0.0, 1.0))), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)), clamp(vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)), vec4(mat2(vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0))))), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))))[1]), bvec2(false, true)))).y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), mix(vec2((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-55.88) : 1.0)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[0], _GLF_FUZZED(-4611.4766)), vec2(_GLF_FUZZED(70.96), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * _GLF_IDENTITY((vec4(injectionSwitch, 0.0, 1.0)), _GLF_IDENTITY(vec4(mat3x4(_GLF_IDENTITY((vec4(injectionSwitch, 0.0, 1.0)), mat4(1.0) * ((vec4(injectionSwitch, 0.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0)), (vec4(mat3x4(_GLF_IDENTITY((vec4(injectionSwitch, 0.0, 1.0)), mat4(1.0) * ((vec4(injectionSwitch, 0.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))) - vec4(0.0, 0.0, 0.0, 0.0))))))[1]), bvec2(false, true)))).y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))), mix(vec2((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[0], _GLF_FUZZED(-4611.4766)), vec2(_GLF_FUZZED(70.96), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[1]), bvec2(false, true)))).y), bool(bvec2(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))), mix(vec2((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[0], _GLF_FUZZED(-4611.4766)), vec2(_GLF_FUZZED(70.96), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[1]), bvec2(false, true)))).y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))), mix(vec2((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[0], _GLF_FUZZED(-4611.4766)), vec2(_GLF_FUZZED(70.96), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[1]), bvec2(false, true))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))), mix(vec2((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[0], _GLF_FUZZED(-4611.4766)), vec2(_GLF_FUZZED(70.96), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))), mix(vec2((vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[0], _GLF_FUZZED(-4611.4766)), vec2(_GLF_FUZZED(70.96), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 0.0, 1.0)))))[1]), bvec2(false, true)))))).y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true, false, true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, bool(bvec3(true, true, true)))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), true))))))) || false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, 0u ^ (read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) ? read_1 : _GLF_FUZZED(workgroup_base))), read_1)))) + 1 == read_2))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, 0u ^ (read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) ? read_1 : _GLF_FUZZED(workgroup_base))), read_1)))) + 1 == read_2))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, false))), (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, 0u ^ (read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) ? read_1 : _GLF_FUZZED(workgroup_base))), read_1)), (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, 1u * (read_1)))), read_1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u ^ (read_1)), min(_GLF_IDENTITY(read_1, 0u ^ (read_1)), _GLF_IDENTITY(read_1, 0u ^ (read_1)))), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, true, false)), ! (! (bool(bvec4((true), false, true, false)))))))), (bool(bool(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), false, true, false)), ! (! (bool(bvec4((true), false, true, false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))) ? read_1 : _GLF_FUZZED(workgroup_base))), read_1)))))) + 1 == read_2), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, 0u ^ (read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) ? read_1 : _GLF_FUZZED(workgroup_base))), read_1)))) + 1 == read_2)), bool(_GLF_IDENTITY(bvec3(bool((_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, 0u ^ (read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false))) ? read_1 : _GLF_FUZZED(workgroup_base))), read_1))), ((_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, 0u ^ (read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))), false))) ? read_1 : _GLF_FUZZED(workgroup_base))), read_1)))) ^ 0u)) + 1 == read_2)), true, false), bvec3(bvec3(bvec3(bool((_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, 0u ^ (read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) ? read_1 : _GLF_FUZZED(workgroup_base))), read_1)), uint(uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, 0u ^ (read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) ? read_1 : _GLF_FUZZED(workgroup_base))), read_1))))))) + 1 == read_2)), true, false))))))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, 1u * (read_1 + 1))) | (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)))) == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (read_1)), _GLF_IDENTITY(read_1, (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) ? read_1 : _GLF_FUZZED(workgroup_base))), read_1)))) + 1 == read_2)))))) / 1u) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), min(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), min(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), vec2(_GLF_IDENTITY(vec2(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), clamp(vec2(max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0)), injectionSwitch)), vec2(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)), injectionSwitch)), vec2(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))))), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), min(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch))), (max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)) * mat2(1.0))))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) || false)) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true), (_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) || false)) || false)) + 1, min(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(uint(_GLF_FUZZED(subgroup_local_id))), (uint(uint(_GLF_FUZZED(subgroup_local_id)))) - 0u)) : read_2))) + 1, uint(read_1 + 1 == read_2) + 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), 0u | (read_2))) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), 0u | (read_2))) + 1, (uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), 0u | (read_2))) + 1) | (uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), 0u | (read_2))) + 1))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, false || (read_1 + 1 == read_2)))))) + 1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1)) == read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), max((read_1), (read_1))) >> 0u)) / 1u) + 1 == read_2) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, ~ (~ (1))) : _GLF_FUZZED((-83715 ^ 47313)))) == read_2))) + 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, min(1, 1)), uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, min(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) + 1, uint(read_1 + 1 == read_2) + 1)))), clamp(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) / 1u))) | (read_2))) + 1, (false ? _GLF_FUZZED(subgroup_local_id) : uint(read_1 + 1 == read_2) + 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (read_1))) >> 0u)) / 1u) + _GLF_IDENTITY(1, min(1, 1)) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2) && true)), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (read_1))) >> 0u)) / 1u) + _GLF_IDENTITY(1, min(1, 1)) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2) && true)), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (read_1))) >> 0u)) / 1u) + _GLF_IDENTITY(1, min(1, 1)) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2) && true)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u | (read_1))) >> 0u)) / 1u) + _GLF_IDENTITY(1, min(1, 1)) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2) && true)))) : _GLF_FUZZED(subgroup_size))) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) + 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1)) + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, min(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) : read_2))) + 1, uint(read_1 + 1 == read_2) + 1)))), clamp(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), 1))) ^ 0) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), 0u | (_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED((workgroup_size & read_1))))))) + 1, (false ? _GLF_FUZZED(subgroup_local_id) : uint(read_1 + 1 == read_2) + 1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) / 1) == read_2, true && (read_1 + 1 == read_2))) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED((+ subgroup_id)))) == read_2) && true)) + 1, min(uint(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED(subgroup_local_id) : read_1 + 1)) == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) + 1, uint(read_1 + 1 == read_2) + 1)))), clamp(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), 0u | (read_2))) + 1, (false ? _GLF_FUZZED(subgroup_local_id) : uint(read_1 + 1 == read_2) + 1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1)) == _GLF_IDENTITY(read_2, (read_2) - ((1u ^ 1u) ^ 0u))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + 1, clamp(uint(read_1 + 1 == read_2) + 1, uint(read_1 + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)) + 1, min(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (read_2) * 1u))), (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) + 1, uint(read_1 + 1 == read_2) + 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), 0u | (read_2))) + 1, (false ? _GLF_FUZZED(subgroup_local_id) : uint(read_1 + 1 == read_2) + 1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) + 1), uint(uvec3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), 0u | (read_2))) + 1, (false ? _GLF_FUZZED(subgroup_local_id) : uint(read_1 + 1 == read_2) + 1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) + 1), uint(uvec2(clamp(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), 0u | (read_2))) + 1, (false ? _GLF_FUZZED(subgroup_local_id) : uint(read_1 + 1 == read_2) + 1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) + 1), uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))), 1)), clamp(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) + 0u) == read_2) + _GLF_IDENTITY(1, (1) << 0), uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))), (read_1 + 1 == read_2) && true)) + 1, min(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) + 1, uint(read_1 + 1 == read_2) + 1)))), clamp(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) ^ 0u), 0u | (read_2))) + 1, (false ? _GLF_FUZZED(subgroup_local_id) : uint(read_1 + 1 == read_2) + 1)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2), false, false))), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) >> 0u), (_GLF_IDENTITY(read_1, (read_1) >> 0u)) / 1u) + 1 == read_2) && true)) + 1, uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))) + 1)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-84.36), _GLF_IDENTITY((injectionSwitch)[1], float(vec2((injectionSwitch)[1], 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2549.7856)), bvec2(true, false))).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))) && true)))), true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
}
