#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, 0u))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u))))) ^ 0u)) << 0u) >> 0u)))));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), max((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(uint(3u), uint(3u))))), 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, ((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(uvec3(~ (1u), 0u, 1u))))) << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(uint(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1)))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(64, (64) + 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(64, (64) + 0)), ((_GLF_IDENTITY(64, (64) + 0))) | ((_GLF_IDENTITY(64, (64) + 0)))) : _GLF_FUZZED(-59155))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(65086, clamp(65086, _GLF_IDENTITY(65086, clamp(65086, 65086, 65086)), 65086))), clamp(_GLF_FUZZED(_GLF_IDENTITY(65086, clamp(65086, _GLF_IDENTITY(65086, clamp(65086, 65086, 65086)), 65086))), _GLF_FUZZED(_GLF_IDENTITY(65086, clamp(65086, _GLF_IDENTITY(65086, clamp(65086, 65086, 65086)), 65086))), _GLF_FUZZED(_GLF_IDENTITY(65086, clamp(65086, _GLF_IDENTITY(65086, clamp(65086, 65086, 65086)), 65086))))) : _GLF_IDENTITY(~ (64), clamp(_GLF_IDENTITY(~ (64), ~ (_GLF_IDENTITY(~ (~ (64)), (~ _GLF_IDENTITY((~ _GLF_IDENTITY((64), ((64)) / 1)), (false ? _GLF_FUZZED(-40136) : (~ _GLF_IDENTITY((64), ((64)) / 1))))) + (0 >> _GLF_IDENTITY(int(2), int(2)))))), ~ (64), ~ (64)))))))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (_GLF_IDENTITY(64, 0 | _GLF_IDENTITY((64), min((64), (_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, clamp(64, 64, 64)), 64))))))) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (_GLF_IDENTITY(64, 0 | (64))) ^ 0)))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), 0 | (_GLF_IDENTITY(4, (4) | (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), ~ (~ (_GLF_IDENTITY(4, (4) | (4)))))))), clamp((_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), 0 + _GLF_IDENTITY(((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(85626), (0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_FUZZED(85626))) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))))))), max(((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))), ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(40265) : 0))), 4))), ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(85626, clamp(85626, 85626, 85626))) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))))))), ~ (~ (((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))))))))))) | (((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))), ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))))))))))))), min((4), (4))) | (4))), ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), 0 + _GLF_IDENTITY(((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))), ((false ? _GLF_IDENTITY(_GLF_FUZZED(85626), (0 >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_FUZZED(85626))) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))))))), max(((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))), ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + _GLF_IDENTITY(0, (false ? _GLF_FUZZED(40265) : 0))), 4))), ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(85626, clamp(85626, 85626, 85626))) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))))))), ~ (~ (((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))))))))))) | (((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))), ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4)))) | ((false ? _GLF_FUZZED(85626) : _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) + 0), 4))))))))))))), min((4), (4))) | (4)))) / 1), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, (4) | (4)))), int(ivec4(~ ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) | (4)))), 1, 1, 0))))))) * _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, _GLF_IDENTITY(((1) ^ 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(((1) ^ 0), (((1) ^ 0)) << 0), 1, 0, 1)), 0 ^ (int(ivec4(_GLF_IDENTITY(((1) ^ 0), _GLF_IDENTITY((((1) ^ 0)), (_GLF_IDENTITY((((1) ^ 0)), ((((1) ^ 0))) / 1)) / 1) << 0), 1, 0, 1))))) << 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ((1) ^ 0) << 0)), max(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ((1) ^ 0) << 0)), _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ((1) ^ _GLF_IDENTITY(0, 0 | (0))) << 0))))), int(ivec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) ^ 0, ((1) ^ 0) << 0)), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ((1) ^ _GLF_IDENTITY(0, ~ (~ (0)))) << 0))) | (_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ((1) ^ 0) << 0)))), max(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ((1) ^ 0) << _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ 0, ((1) ^ 0) << 0))))), 1, 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0)) >> 0)))));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) | 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), (1) >> _GLF_IDENTITY(0, (0) | 0)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1))))) - 0)) >> 0)) ^ 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) ^ 0)))), _GLF_IDENTITY(1, (1) >> 0))))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, min(4, 4))))), 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))).y))))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), max(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))), _GLF_IDENTITY(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), max(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), _GLF_IDENTITY(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), clamp(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), ~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), ~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)))))))))) / 1u), clamp(_GLF_IDENTITY(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))), _GLF_IDENTITY(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), max(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), _GLF_IDENTITY(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), clamp(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), ~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), ~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)))))))))) / 1u), _GLF_IDENTITY(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))), _GLF_IDENTITY(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), max(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), _GLF_IDENTITY(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), clamp(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), ~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), ~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)))))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))), _GLF_IDENTITY(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), max(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), _GLF_IDENTITY(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), clamp(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), ~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), ~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)))))))))) / 1u), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))), _GLF_IDENTITY(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), max(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), _GLF_IDENTITY(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), clamp(~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), ~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))))), ~ (~ ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)))))))))) / 1u), 0u))))))) : _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), max(_GLF_FUZZED(clamp(read_1, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), subgroup_size)), _GLF_IDENTITY(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(clamp(read_1, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))), ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)))) / 1u), max(_GLF_IDENTITY((_GLF_FUZZED(clamp(read_1, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))), ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FUZZED(clamp(read_1, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))), ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)))) / 1u), (_GLF_IDENTITY((_GLF_FUZZED(clamp(read_1, _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))), ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)))) / 1u)) >> 0u))) / 1u))) : next_virtual_gid), ((false ? _GLF_IDENTITY(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), max(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size))), ((_GLF_FUZZED(clamp(read_1, subgroup_size, subgroup_size)))) / 1u) / 1u))) : next_virtual_gid)) * 1u))) - 0u)], _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), min(_GLF_IDENTITY(read_2, ~ (~ (read_2))), _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), clamp(~ (read_2), ~ (read_2), ~ (read_2)))))) - 0u)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), true)), true))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec4(bvec3(false, false, true), true))), false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), false)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), false)))))), true)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), false)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), false)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (false)), true), false)))))))))))), bvec3(bvec4(bvec3(false, false, true), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || (false || (true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))))), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec4(bvec3(false, false, true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))))), true)))) ? _GLF_FUZZED(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u ^ (read_2)), (_GLF_IDENTITY(read_2, 0u ^ (read_2))) | (_GLF_IDENTITY(read_2, 0u ^ (read_2)))), clamp(read_2, read_2, read_2)), read_2, _GLF_IDENTITY(read_2, 0u ^ _GLF_IDENTITY((read_2), ~ (~ (_GLF_IDENTITY((read_2), ((read_2)) / 1u)))))))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))), _GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))) | (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uint(uint(read_1 + 1 == read_2))))), clamp(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uint(uint(read_1 + 1 == read_2))))), max(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uint(uint(read_1 + 1 == read_2))))), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uint(uint(read_1 + 1 == read_2))))))), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uint(uint(read_1 + 1 == read_2))))), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uint(uint(read_1 + 1 == read_2)))))))), uint(read_1 + 1 == read_2))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (read_1 + 1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), true), bvec2(bvec3(bvec2(! (read_1 + 1 == read_2), true), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), true), bvec2(bvec3(bvec2(! (read_1 + 1 == read_2), true), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (read_1 + 1 == read_2), true), bvec2(bvec3(bvec2(! (read_1 + 1 == read_2), true), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (false ? _GLF_FUZZED(subgroup_local_id) : uint(read_1 + 1 == read_2))), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))), min((_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), min(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 + 1 == read_2)))))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))))) == read_2)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1, min(read_1, read_1)) + 1 == read_2)))))))), ~ (~ (min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2)), (true ? ~ (uint(read_1 + 1 == read_2)) : _GLF_FUZZED(read_1))))), uint(read_1 + 1 == read_2))))), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + _GLF_IDENTITY(1, (1) | (1))) ^ 0u) == read_2))), uint(read_1 + 1 == read_2)), ~ (~ (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))) | (_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), ~ (~ (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(read_1 + 1 == read_2)), ~ (~ (min(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(atomicMin(workgroup_size, subgroup_local_id)))) + 1 == read_2), uint(read_1 + 1 == read_2)))))), (_GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(read_1 + 1 == read_2)), ~ (~ (min(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(atomicMin(workgroup_size, subgroup_local_id)))) + 1 == read_2), uint(read_1 + 1 == read_2)))))), 0u ^ ((_GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(read_1 + 1 == read_2)), ~ (~ (min(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(atomicMin(workgroup_size, subgroup_local_id)))) + 1 == read_2), uint(read_1 + 1 == read_2))))))))) >> 0u) | (_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), ~ (~ (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))), 1u))))) << _GLF_IDENTITY(0u, ~ (~ (0u))))), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(! (! (read_1 + 1 == read_2)), _GLF_IDENTITY(bool(bool(! (! (read_1 + 1 == read_2)))), false || (bool(_GLF_IDENTITY(bool(! (! (read_1 + 1 == read_2))), bool(_GLF_IDENTITY(bvec3(bool(! (! (read_1 + 1 == read_2))), true, false), bvec3(bvec4(bvec3(bool(! (! (read_1 + 1 == read_2))), true, false), false)))))))))))), ~ (~ (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(read_1 + 1 == read_2)), ~ (~ (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))) | (_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))), ~ (~ _GLF_IDENTITY((min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uvec4(uint(read_1 + 1 == read_2), 1u, 1u, 0u))), uint(read_1 + 1 == read_2))), (true ? (min(_GLF_IDENTITY(uint(read_1 + 1 == read_2), uint(uvec4(uint(read_1 + 1 == read_2), 1u, 1u, 0u))), uint(read_1 + 1 == read_2))) : _GLF_FUZZED((subgroup_size * subgroup_id))))))))) << _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2))))), ~ (~ (min(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2), uint(read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), clamp(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), (min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2))) << 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), 0u | (min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)))))), ~ (~ (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))) | (_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), ~ (~ (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2))))), ~ (~ (min(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2), uint(read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), clamp(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), (min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2))) << 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), 0u | (min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)))))), ~ (~ (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))) | (_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), ~ (~ (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (_GLF_IDENTITY(read_1 + 1, ~ (~ (read_1 + 1))) == read_2))))), ~ (~ (min(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2), uint(read_1 + 1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), clamp(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), (min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2))) << 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)), 0u | (min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), max(uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ 0u) == read_2))), uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u)) - 0u) == read_2)))))), ~ (~ (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))) | (_GLF_IDENTITY(min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)), ~ (~ (min(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))))))))) | 0u) << _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))))))) / 1u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1)))), 1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), 0 | ((_GLF_IDENTITY(1, ~ (~ (1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), ~ (~ (1))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), 1, 1)), int(ivec4(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-6518))), 0, 0, 0))), ~ (~ (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) | 0), 1), _GLF_IDENTITY(clamp(ivec4(1, 0, 0, 1), ivec4(1, 0, 0, 1), ivec4(1, 0, 0, 1)), (true ? clamp(ivec4(1, 0, 0, 1), ivec4(1, 0, 0, 1), ivec4(1, 0, 0, 1)) : _GLF_FUZZED(ivec4(98157, 78164, 11911, 70006)))))))))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0 | 0) + (0)), 1 * (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) >> 0))))), _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(-91743)))), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) ? 0 : _GLF_FUZZED(-91743), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)), injectionSwitch)).y)))))) ? 0 : _GLF_FUZZED(-91743)) * 1))))) / 1) / 1)), 4, 64, 4);
   subgroupAll(true);
  }
}
