#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + 0.0), round(length(normalize(1.0)))))))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)))), ! (! (bool(_GLF_DEAD(false))))), true))))), _GLF_IDENTITY(true && (true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)))), ! (! (bool(_GLF_DEAD(false))))), true))), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)))), ! (! (bool(_GLF_DEAD(false))))), true)))))))), ! (! (_GLF_IDENTITY(true && (true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)))), ! (! (bool(_GLF_DEAD(false))))), true))), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)))), ! (! (bool(_GLF_DEAD(false))))), true)))))))), true && (true && (true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)))), ! (! (bool(_GLF_DEAD(false))))), true))), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), (((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))), true))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(min(injectionSwitch[0], injectionSwitch[0]), mix(float(_GLF_IDENTITY(min(injectionSwitch[0], injectionSwitch[0]), (min(injectionSwitch[0], injectionSwitch[0])) - 0.0)), float(_GLF_FUZZED(553.996)), bool(false)))), _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(4251.2990)), bool(false))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8850.7077) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))), 1u, 0u)), uint(uint(uint(uvec3(_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))), 1u, 0u))))))) << 0u)), ((~ (workgroup_size))) | (_GLF_IDENTITY((~ (workgroup_size)), clamp((~ (workgroup_size)), (~ (workgroup_size)), (~ (workgroup_size))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, (true) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) + 0.0) > injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(-1.7, 4.3))))).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), max(_GLF_IDENTITY(uint(uvec2(subgroup_size, 1u)), clamp(uint(uvec2(subgroup_size, 1u)), uint(uvec2(subgroup_size, 1u)), uint(uvec2(subgroup_size, 1u)))), uint(uvec2(subgroup_size, 1u))))))))) ^ _GLF_IDENTITY((0u & 166713u), (_GLF_IDENTITY((0u & 166713u), (false ? _GLF_FUZZED(135895u) : (0u & 166713u)))) | ((0u & 166713u)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, determinant(mat3(sqrt(1.0), abs(0.0), 0.0, length(vec2(0.0, 0.0)), abs(1.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0)), 0.0, 0.0, 1.0, sin(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.7)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.7)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))) ? injectionSwitch.y : _GLF_FUZZED(791.971)))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.7)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.7)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))) ? injectionSwitch.y : _GLF_FUZZED(791.971))))), float(_GLF_FUZZED(346.131)), bool(false))), float(_GLF_FUZZED(-34.98)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(132528u) : subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, ~ (~ (read_1))), _GLF_IDENTITY(read_1, uint(uvec3(read_1, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u))), read_1)))))) + 1, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, (_GLF_IDENTITY(read_1, 0u | (read_1)) + 1) | 0u), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(-21025)) : injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(165708u) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1)))), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) - 0u)) + 1)), min(max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1)))), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) - 0u)) + 1)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1)))), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))) - 0u)) + 1))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) << 0u) : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1)))))) : _GLF_FUZZED(next_virtual_gid)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) << 0u) : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1)))))) : _GLF_FUZZED(next_virtual_gid)), uint(uint(_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) << 0u) : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1)))))) : _GLF_FUZZED(next_virtual_gid)), ((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) << 0u) : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1)))))) : _GLF_FUZZED(next_virtual_gid))) * 1u)))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) << 0u) : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1)))))) : _GLF_FUZZED(next_virtual_gid)), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) << 0u) : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 ^ (1)), 1))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1)))))) : _GLF_FUZZED(next_virtual_gid))))), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY(_GLF_IDENTITY((read_1), (true ? _GLF_IDENTITY((read_1), min((read_1), (read_1))) : _GLF_FUZZED(workgroup_base))), ((read_1)) << 0u)) - 0u)) + 1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)), max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)), (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, 0u | (read_1))))))) / 1u), _GLF_IDENTITY(read_1, 0u | (read_1)))) + 1), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(next_virtual_gid))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(4u, _GLF_IDENTITY(~ (~ (4u)), (_GLF_IDENTITY(~ (~ (4u)), ~ (~ (_GLF_IDENTITY(~ (~ (4u)), ~ (~ (~ (~ (4u))))))))) | (~ (~ (4u)))))))), uint(4u))) ^ _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))), ~ (~ ((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1)))))))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (0u | _GLF_IDENTITY((_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(4u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (99521u & 0u)), (true ? read_1 : _GLF_FUZZED(read_1)))))), ((_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(4u, ~ (~ (4u)))))), uint(4u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (99521u & 0u)), (true ? read_1 : _GLF_FUZZED(read_1))))))) | 0u)) / 1u)) - 0u)), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u), 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << 0u)) - 0u)) + 1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | (read_1), (true ? 0u | (read_1) : _GLF_FUZZED((workgroup_size + read_1))))) + 1), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << 0u)) - 0u)) + 1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, _GLF_IDENTITY((true ? read_1 : _GLF_FUZZED(read_1)), 0u | ((true ? read_1 : _GLF_FUZZED(read_1))))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << 0u)) - 0u)) + 1)), (true ? max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, _GLF_IDENTITY((true ? read_1 : _GLF_FUZZED(read_1)), 0u | ((true ? read_1 : _GLF_FUZZED(read_1))))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), ((read_1)) << 0u)) - 0u)) + 1)) : _GLF_FUZZED(bitfieldExtract(num_workgroup, -6299, -40677)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << 0u)) - 0u)) + 1)), ~ (~ (max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << 0u)) - 0u)) + 1))))))) : _GLF_FUZZED(subgroup_local_id)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_IDENTITY(_GLF_FUZZED(read_1), clamp(_GLF_FUZZED(read_1), _GLF_IDENTITY(_GLF_FUZZED(read_1), (_GLF_IDENTITY(_GLF_FUZZED(read_1), 0u + (_GLF_FUZZED(read_1)))) >> (0u ^ 0u)), _GLF_FUZZED(read_1))))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u)))) - 0u)) + 1))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_IDENTITY(_GLF_FUZZED(read_1), clamp(_GLF_FUZZED(read_1), _GLF_IDENTITY(_GLF_FUZZED(read_1), (_GLF_IDENTITY(_GLF_FUZZED(read_1), 0u + (_GLF_FUZZED(read_1)))) >> (0u ^ 0u)), _GLF_FUZZED(read_1))))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u)))) - 0u)) + 1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_IDENTITY(_GLF_FUZZED(read_1), clamp(_GLF_FUZZED(read_1), _GLF_IDENTITY(_GLF_FUZZED(read_1), (_GLF_IDENTITY(_GLF_FUZZED(read_1), 0u + (_GLF_FUZZED(read_1)))) >> (0u ^ 0u)), _GLF_FUZZED(read_1))))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 0u, 0u)))) - 0u)) + 1)))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 0u, (0u | (137319u & 0u))))), 0u | (read_1)) + 1), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))), 0u))) | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) / 1u)), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << 0u)) - 0u)) + 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) : uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((_GLF_IDENTITY(read_1, (read_1) << 0u))) << 0u)) - 0u)) + _GLF_IDENTITY(1, int(ivec3(1, 0, 1)))))))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1, (_GLF_IDENTITY(read_1, 0u | (read_1)) + 1) | (_GLF_IDENTITY(read_1, 0u | (read_1)) + 1))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_local_id) : read_1)) : _GLF_FUZZED(read_1))))))), _GLF_IDENTITY((_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u, ((_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) / (0u | 1u))) + 1), uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))), ((read_1)) << 0u)) - 0u), 0u ^ (0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))), ((read_1)) << 0u)) - 0u)))) + 1))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.1, -6.0)))).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true)), true, false)))) || false)), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.1, -6.0)))).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)) || (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.y)))))))) && true)), true, false)))) || false))) && true) || false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(7.1, -6.0), max(_GLF_IDENTITY(vec2(7.1, -6.0), (vec2(7.1, -6.0)) + vec2(0.0, 0.0)), vec2(7.1, -6.0)))))).y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false)) || false))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(7.1, -6.0), max(_GLF_IDENTITY(vec2(7.1, -6.0), (vec2(7.1, -6.0)) + vec2(0.0, 0.0)), vec2(7.1, -6.0)))))).y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(7.1, -6.0), max(_GLF_IDENTITY(vec2(7.1, -6.0), (vec2(7.1, -6.0)) + vec2(0.0, 0.0)), vec2(7.1, -6.0)))))).y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false)) || false), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(_GLF_IDENTITY(7.1, max(7.1, 7.1)), -6.0), max(_GLF_IDENTITY(vec2(7.1, -6.0), (vec2(7.1, -6.0)) + vec2(0.0, 0.0)), vec2(7.1, -6.0)))))).y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) || false)) || false)) && true)))))))))))) ? _GLF_FUZZED(165708u) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : read_1)))) + 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : read_1)))) + 1), min(uint(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : read_1)))) + 1), uint(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : read_1)))) + 1))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : read_1)))) + 1), min(uint(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : read_1)))) + 1), uint(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : read_1)))) + 1)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(workgroup_id))), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) * 1u)))) ^ 0u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) * 1u)))) ^ 0u) + 1) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) - 0u)) + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(7.1, _GLF_IDENTITY(float(float(7.1)), 0.0 + (float(float(7.1))))), -6.0)))).y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))) || false)) || false)))) ? _GLF_FUZZED(165708u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : read_1)))) + 1), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u) | (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) - 0u)) + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.1, -6.0)))).y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false, ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.1, -6.0)))).y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false) && true))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.1, -6.0)))).y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(165708u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : read_1))), min(0u | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(num_workgroup) : read_1))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u), (false ? _GLF_FUZZED(num_workgroup) : read_1)))))) + 1), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, 0u | (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), uint(uvec4(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 1u * (_GLF_IDENTITY(uint(4u), clamp(_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))), uint(4u), uint(4u)))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (~ (_GLF_IDENTITY(uint(4u), (uint(4u)) - 0u)))), uint(4u))) / 1u), (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 1u, 0u))), 0u << _GLF_IDENTITY(uint(4u), uint(4u))))) ^ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))))))), (_GLF_IDENTITY(read_1, 0u | (read_1))) ^ 0u) + 1), uint(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) - 0u)) + 1)))) ^ _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min((0u), _GLF_IDENTITY((0u), max((0u), (0u))))) / 1u), 0u, 0u)))) | 0u))) - 0u)), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, sqrt(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), float(_GLF_IDENTITY(mat3x2(length(normalize(vec3(1.0, 1.0, 1.0))), 1.0, abs(1.0), 1.0, 1.0, 0.0), transpose(transpose(mat3x2(length(normalize(vec3(1.0, 1.0, 1.0))), 1.0, abs(1.0), 1.0, 1.0, 0.0)))))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5.4)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true && (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, cos(0.0), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0)))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, cos(0.0), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 1.0, cos(0.0), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0)))).y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true) ? _GLF_FUZZED(virtual_gid) : subgroup_size)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(0, (0) ^ 0))) + (1)), ~ (~ _GLF_IDENTITY((1), ((1)) | ((1))))) == read_2), (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), 0u | (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2))), 1u), clamp(uvec2(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), 0u | (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2))), 1u), uvec2(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), 0u | (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2))), 1u), uvec2(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), 0u | (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2))), 1u)))))) / 1u), ~ (~ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), int(ivec2(_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ~ (~ ((1)))))), 1)))), ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> (0 << _GLF_IDENTITY(int(7), int(7)))))), min(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1))) >> 0)))), read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))), ~ (~ (1))))) == read_2))))), 1u * (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), 0u | (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2))), 1u), clamp(uvec2(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), 0u | (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2))), 1u), uvec2(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), 0u | (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2))), 1u), uvec2(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), 0u | (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2))), 1u)))))) / 1u), ~ (~ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((1), int(ivec2(_GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ~ (~ ((1)))))), 1)))), ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> (0 << _GLF_IDENTITY(int(7), int(7)))))), min(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | 0), 1, 1))) >> 0)))), read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, ~ (~ (1))))), ~ (~ (1))))) == read_2)))))))), (uint(uint(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ (1))) == read_2), ~ (~ (uint(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), ~ (~ _GLF_IDENTITY((1), max((1), _GLF_IDENTITY((1), ((1)) | ((1))))))) == read_2))))))) - 0u))) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) | (_GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(83079)))) + 0)) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-46945), (_GLF_FUZZED(-46945)) ^ 0))), 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(83079)))) + 0)) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-46945))), 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(83079), (_GLF_IDENTITY(_GLF_FUZZED(83079), int(ivec4(_GLF_FUZZED(83079), 0, 0, 0)))) | 0)))) + 0)) - _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-46945), min(_GLF_FUZZED(-46945), _GLF_FUZZED(-46945))))), 0))), 0 ^ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(83079), (_GLF_IDENTITY(_GLF_FUZZED(83079), (_GLF_FUZZED(83079)) << 0)) | (_GLF_IDENTITY(_GLF_FUZZED(83079), clamp(_GLF_IDENTITY(_GLF_FUZZED(83079), (false ? _GLF_FUZZED(53988) : _GLF_FUZZED(83079))), _GLF_IDENTITY(_GLF_FUZZED(83079), ~ (~ (_GLF_FUZZED(83079)))), _GLF_FUZZED(83079)))))))) + 0), (false ? _GLF_FUZZED(40944) : _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(83079)))) + 0), ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(_GLF_IDENTITY(83079, ~ (~ (_GLF_IDENTITY(83079, (83079) << 0)))))))) + 0))))))) - _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), max(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-46945))), 0))))))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), false || (bool(false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), false || (bool(false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(bool(false), true))))), false || (bool(false))))) || false), true, true)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) * 1.0)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) * 1.0)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(90.50) : injectionSwitch.y)))))) * 1.0))))) || false))))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) * 1.0)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) + (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(148.816, -3.0, -4733.0220, 6.8).b), _GLF_FUZZED(-1.2)), bvec2(false, false))).y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(148.816, -3.0, -4733.0220, 6.8).b), _GLF_FUZZED(-1.2)), bvec2(false, false))).y : _GLF_FUZZED(0.2))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.6))))), injectionSwitch.y, injectionSwitch.y)))))) - 0.0)) * 1.0)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(90.50) : injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(90.50) : injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(90.50) : injectionSwitch.y)))))))) * 1.0))))) || false)))))))) && true))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.6), _GLF_FUZZED(-46.10)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((- injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), (bool(bvec3(true, false, true))) && true)), true, false, true))) && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false, false))), true), true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((- injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((- injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((- injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))), false, true)))))) || false), false, true))))) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (_GLF_IDENTITY(~ (read_1), max(~ (read_1), ~ (read_1)))) | (~ (read_1))))) + 1, read_1 + 1)) == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (read_2) * 1u)))))))))) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 1, 1)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(64, 1, 1)), (int(ivec3(64, 1, 1))) / 1), (_GLF_IDENTITY(int(ivec3(64, 1, 1)), (int(ivec3(64, 1, 1))) / 1)) >> 0)))))) ^ 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec3(64, 1, 1)), int(int(_GLF_IDENTITY(int(ivec3(64, 1, 1)), (int(ivec3(64, 1, 1))) / 1)))))) ^ 0)) ^ 0), 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-491.476)), bool(false))) + (injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-483.835)), float(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))), bool(true))) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-491.476)), bool(false))) + (injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
