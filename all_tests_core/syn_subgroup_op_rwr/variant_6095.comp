#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 for(int _injected_loop_counter = (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-80667) : _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 | (6)))), max(false ? _GLF_FUZZED(-80667) : _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 | (6)))), false ? _GLF_FUZZED(-80667) : _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 | (6))))))))) * (~ (1))), int(ivec2(~ (1), 1))))) & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0)))) && true); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(45520))), 1 * (_GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(true, ! (! (true))) ? _injected_loop_counter -- : _GLF_IDENTITY(_GLF_FUZZED(45520), (_GLF_FUZZED(45520)) + 0))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch)).y)), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(int(5), int(int(int(5)))), int(5), int(5)))))); _injected_loop_counter --)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) < 1); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(1656.6217), _GLF_FUZZED(-285.336)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(1656.6217), _GLF_FUZZED(-285.336)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(1656.6217), _GLF_FUZZED(-285.336)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-246.253, (_GLF_IDENTITY(-246.253, max(-246.253, _GLF_IDENTITY(-246.253, float(vec2(_GLF_IDENTITY(-246.253, (-246.253) / 1.0), 1.0)))))) * 1.0)) : _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))))
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) || false) || (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && true))), true)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (true), ! (! (! _GLF_IDENTITY((true), ((true)) && true))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))))
                        {
                         for(int _injected_loop_counter = ((0 ^ ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(atomicCompSwap(_injected_loop_counter, _injected_loop_counter, 69488)))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           do
                            {
                             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))))
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter --), ((0 ^ 0) << _GLF_IDENTITY(int(6), int(6))) ^ ((false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter --)))))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))
                                  {
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, length(0.0), 0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), min(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(1.0)), _GLF_FUZZED(injectionSwitch))) : vec2(mat2(injectionSwitch, length(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0)), 0.0))))).x < injectionSwitch.y))))
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0))
                                        {
                                         for(int _injected_loop_counter = (1 ^ 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || false); _injected_loop_counter ++)
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                                            {
                                            }
                                           else
                                            {
                                             do
                                              {
                                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   do
                                                    {
                                                     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.9)), float(injectionSwitch.y), bool(true)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))) || (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                                                      {
                                                       return;
                                                      }
                                                    }
                                                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), true))));
                                                  }
                                                }
                                              }
                                             while(_GLF_WRAPPED_LOOP(false));
                                            }
                                          }
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                           while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ! (! ((false)))))))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ! (! ((false))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(36509u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (true) && true) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, _GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(subgroup_size))), num_workgroup))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id)), uint(_GLF_IDENTITY(uvec2((true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, _GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(subgroup_size))), num_workgroup))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id)), 1u), max(uvec2((true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, _GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(subgroup_size))), num_workgroup))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id)), 1u), uvec2((true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, _GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(subgroup_size))), num_workgroup))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id)), 1u)))))))) * subgroup_size))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (true) && true) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))), (true ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id))))) * subgroup_size))), (_GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (true) && true) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))), (true ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id))))) * subgroup_size))), max(0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (true) && true) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))), (true ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id))))) * subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (true) && true) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))), (true ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id))))) * subgroup_size)))))) >> 0u)) | (0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))) && true) ? subgroup_id : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u), _GLF_FUZZED(num_workgroup))), (true ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id))))), clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), true)))))) && true) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))), clamp(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))))))) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup)))) | (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, _GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)), num_workgroup))))))) : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (true ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (false ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id))))))) * subgroup_size)))))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u)) | (subgroup_local_id)) + 1) % subgroup_size), 0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) ? subgroup_id : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(uvec3(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) + 0u), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u)))), (true ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), false)))))))))) ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id))), ~ (~ (_GLF_IDENTITY(true, (true) && true) ? subgroup_id : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | _GLF_IDENTITY((num_workgroup), ((num_workgroup)) / 1u))), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(uvec3(_GLF_FUZZED(num_workgroup), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> 0u), (true ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), false)), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(false, false, false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), true))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), false)))))))))) ? _GLF_FUZZED(subgroup_id) : _GLF_FUZZED(num_workgroup))) : _GLF_FUZZED(workgroup_id)))))))) * subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u) % subgroup_size)));
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(buf[virtual_gid]), (uint(buf[virtual_gid])) + 0u), (uint(buf[virtual_gid])) << 0u))), buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(1u, (1u) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))])), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(-56843), (true ? 4 : _GLF_FUZZED(-56843)) << 0))))), _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-29146) : 64)), 64)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), clamp(0, 0, 0)))), _GLF_IDENTITY((0), min((0), (0))) ^ 0));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), uint(uvec4(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))), 1u * (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))))))) & _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), max(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), (~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))) << 0u))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), ((_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u)), max(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), uint(uint(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))), (1u) | (1u))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))), 1u * (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))))))) & _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), max(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), (~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))) << 0u))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), ((_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u)), max(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), uint(uint(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))), (1u) | (1u))), 0u | ((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))), 1u * (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))))))) & _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), max(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), (~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))) << 0u))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), ((_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u)), max(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), uint(uint(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))), (1u) | (1u)))))) - 0u), 0u, _GLF_IDENTITY(0u, (0u) | 0u)))), (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ (1))), uint(uvec4(read_1 + 1, (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) << 0u)))), 1u * (~ (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id)))))))) & _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), ~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u), ~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), (~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), max(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), 0u | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), max(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))), uint(uint(~ (~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))), _GLF_IDENTITY((1u), ((1u)) - (0u & 93180u)) | (1u))), 0u, _GLF_IDENTITY(0u, (0u) | 0u))))) << 0u)), 4, 64, 4);
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, 0 + (64))))), _GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true)) || false)) ? _GLF_FUZZED(65658) : int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(65658) : int(0))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(65658) : int(0))), max(_GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), min(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY(0, 0 ^ (0)) ^ (int(0)))))) | (int(0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(65658) : int(0))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 ^ (0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(65658) : int(0)))))) - 0)) - 0), int(0)))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), clamp(_GLF_IDENTITY(int(2), int(ivec2(int(2), 1))), int(2), int(2))))) * 1), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))) : _GLF_FUZZED(22360)))), 0 | (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), max(int(2), _GLF_IDENTITY(int(2), min(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))))), int(2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) * 1), _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2)))) : _GLF_FUZZED(22360)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(floatBitsToUint(-4.2)) : subgroup_size))), (~ (subgroup_size)) * 1u))), _GLF_IDENTITY(true, false || (true)) && (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)) < subgroup_size)))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, true))) && true)))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), false || _GLF_IDENTITY((bool(bvec2(true, false))), ! (! (_GLF_IDENTITY((bool(bvec2(true, false))), bool(bvec3((bool(bvec2(true, false))), false, false))))))), bool(bvec2(bool(bvec2(true, false)), true)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))))) < injectionSwitch.y)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec2(bool(bvec2(true, false)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (false ? _GLF_FUZZED(-1392.7435) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), _GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && true, (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(341.415))))))) && true) && true)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.4)), vec2(_GLF_FUZZED((49.27 - 7.0)), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) && true, false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))) + abs(vec2(0.0, 0.0))).x < injectionSwitch.y)) && true, (((injectionSwitch.x < injectionSwitch.y)) && true) && true))))))), ! (! (_GLF_IDENTITY(((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.4)), vec2(_GLF_FUZZED((49.27 - 7.0)), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) && true, false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))) + abs(vec2(0.0, 0.0))).x < injectionSwitch.y)) && true, (((injectionSwitch.x < injectionSwitch.y)) && true) && true))))))), (((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.4)), vec2(_GLF_FUZZED((49.27 - 7.0)), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) && true, false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))) + abs(vec2(0.0, 0.0))).x < injectionSwitch.y)) && true, (((injectionSwitch.x < injectionSwitch.y)) && true) && true)))))))) && true)))), (_GLF_IDENTITY(! ((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, log(1.0)))).y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, true && (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, ! (! (((injectionSwitch.x < injectionSwitch.y)) && true))))), false || (_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y)) && true, (((injectionSwitch.x < injectionSwitch.y)) && true) && true))))))), bool(bool(! ((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)), false || (bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))))), (((injectionSwitch.x < injectionSwitch.y)) && true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true, (((injectionSwitch.x < injectionSwitch.y)) && true) && true))))))))))))) || false))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, bool(bool((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2(injectionSwitch, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)))), (vec2(mat2(injectionSwitch, tan(0.0), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, log(1.0) + (0.0))))))) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(vec2(mat2(injectionSwitch, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)))), (vec2(mat2(injectionSwitch, tan(0.0), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, log(1.0) + (0.0))))))) / vec2(1.0, 1.0)), log(1.0), sqrt(cos(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), 0.0), mat3(mat3x4(mat3(_GLF_IDENTITY(vec2(mat2(injectionSwitch, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)))), (vec2(mat2(injectionSwitch, tan(0.0), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, log(1.0) + (0.0))))))) / vec2(1.0, 1.0)), log(1.0), sqrt(cos(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), 0.0))))))).x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)))), (vec2(mat2(injectionSwitch, tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / cos(0.0))), length(vec4(0.0, 0.0, 0.0, 0.0))))) / vec2(1.0, 1.0))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)))), (vec2(mat2(injectionSwitch, tan(0.0), length(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.6)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), 0.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 0.0))))))) / vec2(1.0, 1.0))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)))), (vec2(mat2(injectionSwitch, tan(0.0), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))))))))) / vec2(1.0, 1.0))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, tan(0.0), length(vec4(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.8)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-227.301)), bool(false)))), bool(true))), 0.0)), 0.0, 0.0)))), (vec2(mat2(injectionSwitch, tan(0.0), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 0.0, 0.0))))))) / vec2(1.0, 1.0))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((vec2(mat2(injectionSwitch, tan(0.0), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))))))))), mix(vec2(((vec2(mat2(injectionSwitch, tan(0.0), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))))))))))[0], ((vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((false ? 8368.7288 : 9.9)), _GLF_FUZZED(-1210.8475)), bvec2(false, false))), tan(0.0), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mat4(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), mix(vec4((vec4(0.0, 0.0, 0.0, 0.0))[0], (vec4(0.0, 0.0, 0.0, 0.0))[1], (vec4(0.0, 0.0, 0.0, 0.0))[2], (vec4(0.0, 0.0, 0.0, 0.0))[3]), vec4(_GLF_FUZZED(-46.63), _GLF_FUZZED(831.812), _GLF_FUZZED(-68.34), _GLF_FUZZED(float(-55370))), bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))))))))))[1]), vec2(_GLF_FUZZED(-8284.3347), _GLF_FUZZED(-279.044)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) / vec2(1.0, 1.0))).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))))))))) && true)))), _GLF_IDENTITY(true, false || (true)), false)))))
            {
             do
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, min(1, 1))) - 0))) : _GLF_FUZZED(_injected_loop_counter))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | 0u, (_GLF_IDENTITY((next_virtual_gid), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), ((_GLF_IDENTITY(! (false), false || (! (false))))) || false), (! (_GLF_IDENTITY(! (false), false || (! (false))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), (! (_GLF_IDENTITY(! (false), false || (! (false))))) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), (! (_GLF_IDENTITY(! (false), false || (! (false))))) && true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), (! (_GLF_IDENTITY(! (false), false || (! (false))))) && true)))), (bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), (! (_GLF_IDENTITY(! (false), false || (! (false))))) && true))))) || false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), (! (_GLF_IDENTITY(! (false), false || (! (false))))) && true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), (! (_GLF_IDENTITY(! (false), false || (! (false))))) && true)))), (bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), (! (_GLF_IDENTITY(! (false), false || (! (false))))) && true))))) || false))))) || false))) && true))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : (next_virtual_gid))) | 0u) | ((next_virtual_gid) | 0u)))], _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) << _GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) >> 0u)) + 1, 4, _GLF_IDENTITY(64, (64) | (64)), 4);
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
        }
       subgroupAll(false);
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true)))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), ((_GLF_IDENTITY(1, (1) | 0))) | ((_GLF_IDENTITY(1, (1) | 0)))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(1, (1) | 0))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(1, (1) | 0))), int(ivec4(((_GLF_IDENTITY(1, (1) | 0))), 1, 1, 1)))))), max(_GLF_IDENTITY(((_GLF_IDENTITY(1, (1) | 0))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(1, (1) | 0))), int(ivec4(((_GLF_IDENTITY(1, (1) | 0))), 1, 1, 1)))))), _GLF_IDENTITY(((_GLF_IDENTITY(1, (1) | 0))), ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(1, (1) | 0))), int(ivec4(((_GLF_IDENTITY(1, (1) | 0))), 1, 1, 1)))))))) | ((_GLF_IDENTITY(1, (1) | 0)))), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1)))), (1) | 0))) | ((_GLF_IDENTITY(1, (1) | 0)))))))) == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(read_1 + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) | (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), (ivec3(-56956, 67510, 34817)) << ivec3(0, 0, 0)), ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), _GLF_IDENTITY(ivec3(-56956, 67510, 34817), max(ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), ivec3(-56956, 67510, 34817)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))))))))))))), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, min(1, 1)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) | (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), (ivec3(-56956, 67510, 34817)) << ivec3(0, 0, 0)), ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), _GLF_IDENTITY(ivec3(-56956, 67510, 34817), max(ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), ivec3(-56956, 67510, 34817)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))))))))))))), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, min(1, 1))))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) | (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), (ivec3(-56956, 67510, 34817)) << ivec3(0, 0, 0)), ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), _GLF_IDENTITY(ivec3(-56956, 67510, 34817), max(ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), ivec3(-56956, 67510, 34817)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))))))))))))), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, min(1, 1))))), int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) | (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), (ivec3(-56956, 67510, 34817)) << ivec3(0, 0, 0)), ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), _GLF_IDENTITY(ivec3(-56956, 67510, 34817), max(ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), ivec3(-56956, 67510, 34817)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))))))))))))), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, min(1, 1))))))))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), 0u ^ ((read_2))) ^ 0u)) << (1u ^ 1u)), ! (! (_GLF_IDENTITY(read_1, 0u | (read_1)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) | (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, min(-56956, -56956)), 67510, 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, int(int(1)))), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), (ivec3(-56956, 67510, 34817)) << ivec3(0, 0, 0)), ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), _GLF_IDENTITY(ivec3(-56956, 67510, 34817), max(ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), ivec3(-56956, 67510, 34817)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, _GLF_IDENTITY(34817, clamp(34817, 34817, 34817)))) : ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))))))))))))), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, min(1, 1)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) | (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), 1, 1))), (false ? _GLF_FUZZED(ivec3(95929, -92828, -31191)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, clamp(_GLF_IDENTITY((1) / 1, ((1) / 1) << 0), (1) / 1, (1) / 1))), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), 1, 1)))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) | 0)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), min(_GLF_IDENTITY(0 | (1), (0 | (1)) | (0 | (1))), _GLF_IDENTITY(0 | (1), max(0 | (1), 0 | (1))))))), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), (ivec3(-56956, 67510, 34817)) << ivec3(0, 0, 0)), ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), _GLF_IDENTITY(ivec3(-56956, 67510, 34817), max(ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), ivec3(-56956, 67510, 34817)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 + (1))))), (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2))))) >> ivec3(0, 0, 0))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))))))))))))), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, min(1, 1))))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) | (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), (ivec3(-56956, 67510, 34817)) << ivec3(0, 0, 0)), ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), _GLF_IDENTITY(ivec3(-56956, 67510, 34817), max(ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), ivec3(-56956, 67510, 34817)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))))))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) | (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), (ivec3(-56956, 67510, 34817)) << ivec3(0, 0, 0)), ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), _GLF_IDENTITY(ivec3(-56956, 67510, 34817), max(ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), ivec3(-56956, 67510, 34817)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) | (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), (ivec3(-56956, 67510, 34817)) << ivec3(0, 0, 0)), ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), _GLF_IDENTITY(ivec3(-56956, 67510, 34817), max(ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), ivec3(-56956, 67510, 34817)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) | (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, ((1) / 1) << 0)), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), (ivec3(-56956, 67510, 34817)) << ivec3(0, 0, 0)), ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), _GLF_IDENTITY(ivec3(-56956, 67510, 34817), max(ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), ivec3(-56956, 67510, 34817)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), clamp(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))))))))))))))), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), clamp(_GLF_IDENTITY(min(1, 1), clamp(_GLF_IDENTITY(min(1, 1), (min(1, 1)) / 1), min(1, 1), min(1, 1))), min(1, 1), min(1, 1))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) - 0), _GLF_IDENTITY(1, (1) / 1))), 1, 1)) | (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), (false ? _GLF_FUZZED(ivec3(-56956, _GLF_IDENTITY(67510, (67510) - 0), 34817)) : ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1))) / 1, ((1) / 1) << 0)), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), ((1)) - 0))), 1, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), clamp(_GLF_IDENTITY(ivec3(-56956, 67510, 34817), (ivec3(-56956, 67510, 34817)) << ivec3(0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) ^ 0))), 0)), ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), _GLF_IDENTITY(ivec3(-56956, 67510, 34817), max(ivec3(-56956, 67510, 34817), ivec3(-56956, 67510, 34817))), ivec3(-56956, _GLF_IDENTITY(67510, (67510) - 0), 34817)))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), _GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), 1)), int(ivec2(int(ivec2(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)) / ivec3(1, 1, 1))))), 1)), 0)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1)))), ((false ? _GLF_FUZZED(ivec3(-56956, 67510, 34817)) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, _GLF_IDENTITY(1, max(1, 1))))) / (((ivec3(1, 1, 1) | ivec3(1, 1, 1)) << _GLF_IDENTITY(ivec3(2), ivec3(2))) >> _GLF_IDENTITY(ivec3(2), ivec3(2)))))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, 0 | (1))), 1, 1), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0))))), min(~ (_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0))))), ~ (_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), clamp(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)))), _GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), _GLF_IDENTITY(_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817)), (_GLF_FUZZED(ivec3(_GLF_IDENTITY(-56956, (-56956) | (-56956)), 67510, 34817))) - ivec3(0, 0, 0))))))))) : ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))))))))))))), min(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY(1, min(1, 1))))))))) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), 0u ^ ((read_2))) ^ 0u)) << (1u ^ 1u)))))))) + 1, 4, _GLF_IDENTITY(64, max(64, 64)), 4);
            }
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), false, false, false)))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             subgroupAll(true);
            }
           else
            {
            }
          }
        }
       else
        {
        }
      }
    }
  }
 else
  {
  }
}
