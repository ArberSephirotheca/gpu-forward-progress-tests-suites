#version 460
struct _GLF_struct_5 {
 mat2 _f0;
 uint workgroup_base;
 mat3x2 _f1;
 ivec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 bool _f1;
 int _f2;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 ivec3 _f1;
 _GLF_struct_4 _f2;
 float _f3;
 _GLF_struct_5 _f4;
 ivec2 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_7 {
 uvec4 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_3 {
 uint virtual_gid;
 vec4 _f0;
 mat3x4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 uvec4 _f1;
 mat3x2 _f2;
 mat4x3 _f3;
 uvec3 _f4;
 _GLF_struct_0 _f5;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 uint subgroup_id;
 int _f1;
 _GLF_struct_1 _f2;
 mat4 _f3;
 mat4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(ivec4(1), gl_SubgroupID, 1, _GLF_struct_1(uvec2(1u), uvec4(1u), mat3x2(1.0), mat4x3(1.0), uvec3(1u), _GLF_struct_0(mat3(1.0))), mat4(1.0), mat4(1.0));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(uvec4(1u), _GLF_struct_6(uvec2(1u), ivec3(1), _GLF_struct_4(bvec2(true), true, 1), 1.0, _GLF_struct_5(mat2(1.0), workgroup_size * workgroup_id, mat3x2(1.0), ivec4(1), vec4(1.0)), ivec2(1), vec4(1.0)));
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_replacement_7._f1._f4.workgroup_base + _GLF_struct_replacement_2.subgroup_id * subgroup_size + subgroup_local_id, vec4(1.0), mat3x4(1.0), uvec2(1u));
 uint next_virtual_gid = _GLF_struct_replacement_7._f1._f4.workgroup_base + _GLF_struct_replacement_2.subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_3.virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 + 1), 4, 64, 4);
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_3.virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 + 1 == read_2) + 1, 4, 64, 4);
   subgroupAll(true);
  }
}
