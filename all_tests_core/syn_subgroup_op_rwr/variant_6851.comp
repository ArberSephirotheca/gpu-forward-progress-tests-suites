#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y, (false ? _GLF_FUZZED(dot(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y))))))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id;
 uvec2 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        break;
       continue;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(true, bool(bool(true))), true, true)), true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0)) / 1))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     return;
    }
   else
    {
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), (false ? _GLF_FUZZED(exp2(1.2)) : float(float(injectionSwitch.x))))) > injectionSwitch.y)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-11.73), _GLF_FUZZED(302.797)), bvec2(false, false))).y))));
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(58.99, -9778.1297)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-602.468), _GLF_FUZZED(-38.19)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).y))))
        continue;
       break;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), true, true, false))), true, true), false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)))) || false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, false))))))))))
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.z = subgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)).z, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id))), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)) : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)))) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)))).z, 1u * (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, _GLF_IDENTITY(max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id), (_GLF_IDENTITY(max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id), ~ (~ (_GLF_IDENTITY(max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id), min(max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id), max(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id))))))) << uvec4(0u, 0u, 0u, 0u))), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)).z))) | 0u);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
          continue;
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-84445)))), (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-84445))))) | 0)) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                break;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))));
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          continue;
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.2)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
    break;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0))))), (! ((_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))))) || false), bool(bvec2(! ((_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0))))), true)))))))); _injected_loop_counter --)
  {
   GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.x = num_workgroup;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.x, uint(uvec3(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.x, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, min(7u, 7u))), uint(7u)), min(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) * 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) / 1u), uint(7u)))) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint((_GLF_IDENTITY((_GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(uint(7u), uint(7u)))) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0u)) << 0u)))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, (7u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(7u, 7u))), 1u * (uint(7u))))), 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
      }
     return;
    }
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(1 ^ 1, 0 | (1 ^ 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1), true && (_GLF_IDENTITY(_injected_loop_counter < (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1), (_injected_loop_counter < (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1)) || false)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
             if(_GLF_DEAD(false))
              break;
            }
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(8.0)))) * 1.0) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)), _GLF_IDENTITY((_injected_loop_counter ++) / 1, (_GLF_IDENTITY((_injected_loop_counter ++) / 1, ((_injected_loop_counter ++) / 1) >> 0)) ^ 0)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (int(2))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(0 ^ (int(2)), (0 ^ (int(2))) ^ 0)), int(2))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(max(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))), 0 ^ (_GLF_IDENTITY(max(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))), (_GLF_IDENTITY(max(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))), max(max(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5)))), max(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))))) | (max(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)), true, false)))))), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))), false, true, false))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), true)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))) && _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), ! (! ((bool(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), bool(bvec3(bool(bvec4(true, true, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)) || (_GLF_DEAD(false))))
            break;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           break;
          }
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u);
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(610.902, -2193.8627)))), (false ? _GLF_FUZZED(vec2(1.0, 73.26)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))))
    return;
   return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(smoothstep(-18.14, -7.7, -68.57)) : 1.0), clamp((false ? _GLF_FUZZED(smoothstep(-18.14, -7.7, -68.57)) : 1.0), (false ? _GLF_FUZZED(smoothstep(-18.14, -7.7, -68.57)) : 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(smoothstep(-18.14, -7.7, -68.57)) : 1.0), (_GLF_IDENTITY((false ? _GLF_FUZZED(smoothstep(-18.14, -7.7, -68.57)) : 1.0), ((false ? _GLF_FUZZED(smoothstep(-18.14, -7.7, -68.57)) : 1.0)) / 1.0)) / 1.0)))), 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), float(mat2x4(0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), _GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), clamp(_GLF_IDENTITY((0.0), max((0.0), (0.0))), (0.0), _GLF_IDENTITY((0.0), max((0.0), (0.0)))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3177.3863)), bool(false))), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0))), _GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-21.50)), bool(false))), 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(8709.7607)))), clamp(1.0 * (0.0), _GLF_IDENTITY(1.0 * (0.0), mix(float(_GLF_FUZZED(((-2.1 - -31.53)))), float(1.0 * (0.0)), bool(true))), 1.0 * (0.0)))), 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0 * (determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(0.0, float(mat2x4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(789.527)), bool(false))), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, float(mat2x4(0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat3x4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) * 1.0)) * 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 1.0, 0.0)))))))))), _GLF_IDENTITY(float(_GLF_FUZZED((1.9))), max(float(_GLF_FUZZED((1.9))), float(_GLF_FUZZED((1.9))))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) || false), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(false), (bool(false)) || false), true, false, false)))))))), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y = GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.w;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 uint workgroup_base = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.y * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, max(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y) ^ 0u), max(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y) ^ 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y) ^ 0u), 0u), ~ (~ (uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y) ^ 0u), 0u)))))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, min(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y))), 0u + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, max(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y) ^ 0u), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, min(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y))), (clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, max(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y)), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y) ^ 0u), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, min(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y, GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y)))) << 0u))));
 GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x = workgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(92.61)), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-94.69, 6033.7399)))).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w = virtual_gid;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 1.0, 1.0))), injectionSwitch[1]))))[1])))))).x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0)))), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
            }
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = GLF_merged2_0_1_14_1_1_14workgroup_baseworkgroup_size.x + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id, (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id) >> uvec2(0u, 0u)), (GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id) | uvec2(0u, 0u)).x * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false)))), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false)))), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false)))), false))))) && true)), false || (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false)))), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) || false), false, false))), false)))), false))))) && true)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY((! (_GLF_DEAD(false))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(false))) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, _GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid))))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid)))))))), (false ? _GLF_FUZZED(min(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id ++))) : max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid)))).w], (buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid)).w]) ^ 0u), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (0 + (_GLF_IDENTITY(int(4), int(4)))) >> 0)))), (~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))) * 1)))), clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 4))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), clamp(0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))))), ~ (_GLF_IDENTITY(~ (0 + (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (0 + (_GLF_IDENTITY(int(4), int(4)))) >> 0)))), (~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))) * 1)))), clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 4))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), clamp(0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))))))), (_GLF_IDENTITY(~ (0 + (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (0 + (_GLF_IDENTITY(int(4), int(4)))) >> 0)))), (~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))) * 1)))), clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 4))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), clamp(0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))))))), (~ (0 + (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (0 + (_GLF_IDENTITY(int(4), int(4)))) >> 0)))), (~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))) * 1)))), clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 4))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), clamp(0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))))))) >> 0)) << 0)))), (false ? _GLF_FUZZED(60357) : _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (0 + (_GLF_IDENTITY(int(4), int(4)))) >> 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (0 + (_GLF_IDENTITY(int(4), int(4)))) >> 0))))))), (~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))) * 1)))), clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 4))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), clamp(0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), max(1 << _GLF_IDENTITY(int(4), int(4)), 1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) << 0))) + (_GLF_IDENTITY(int(4), int(4))))))))), ~ (_GLF_IDENTITY(~ (0 + (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), int(4)))) >> 0)))), (~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))) * 1)))), clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), int(int(_GLF_IDENTITY(64, ~ (~ (64))))))) ^ 0)) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 4))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), clamp(0 + (_GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4))))))), 0 + (_GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (_GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (false ? _GLF_FUZZED(2635) : _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), 1 * (0 + (_GLF_IDENTITY(int(4), int(4)))))))) << 0)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ (64)), ~ (~ (_GLF_IDENTITY((~ (64)), ((~ (64))) | ((~ (64))))))))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4))))), 0 + (_GLF_IDENTITY(int(4), int(4)))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), ivec3(1, 1, 1) * (ivec3(0, 1, 1))))) : _GLF_FUZZED(findMSB(subgroup_id)))) + (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), max((_GLF_IDENTITY(64, ~ (~ (64)))), (_GLF_IDENTITY(64, ~ (~ (64)))))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (0 + (_GLF_IDENTITY(int(4), int(4)))) >> 0)), ~ (~ ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, ~ (~ (0))))), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (0 + (_GLF_IDENTITY(int(4), int(4)))) >> 0))))))), _GLF_IDENTITY((~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))) * 1, ((~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))) * 1) ^ 0))))), clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 4))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), clamp(0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, 4))), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), clamp(_GLF_IDENTITY(~ (64), (~ (64)) >> 0), ~ (64), ~ (64)))))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))))))), (~ (0 + (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0)))))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) ^ 0)), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), (0 + (_GLF_IDENTITY(int(4), int(4)))) >> 0)))), (~ ((_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))) * 1)))), clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 4))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), clamp(0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 4))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), clamp(0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4)))))), int(ivec4((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(findMSB(num_workgroup)) : 4))), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(4), int(4))), clamp(0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4))), 0 + (_GLF_IDENTITY(int(4), int(4)))))), 0, 1, 1)))) + (-4895 & 0)))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) / ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 + (_GLF_IDENTITY(int(4), int(4))))))))))) >> 0)) << 0)))))), 0);
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id.y = read_1;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | (0u))), 0u + (~ (_GLF_IDENTITY(0u, (0u) | (0u))))))), ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) >> 0u))), 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))), 0u, 0u), (uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), ~ (~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (0u)), 0u | ((~ (0u)))), (~ _GLF_IDENTITY((~ (0u)), _GLF_IDENTITY(0u | ((~ (0u))), max(0u | ((~ _GLF_IDENTITY((0u), ((0u)) | 0u))), 0u | ((~ (0u))))))) - 0u))))))), uint(uvec4(~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), 1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y)) ? _GLF_FUZZED(workgroup_base) : (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), uint(uvec4(~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u))))), 1u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.0), _GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED((237.164 * -5803.7739))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))))))))), 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[0], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[1], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[2], GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid[3]))) : (_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u), (uvec4(0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY(~ (~ (~ (0u))), (~ (~ (~ (0u)))) - 0u)))))), ((~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (_GLF_IDENTITY(~ (~ (0u)), min(_GLF_IDENTITY(~ (~ (0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(~ (~ (0u)), ~ (~ (~ (~ (0u))))))), ~ (~ (0u))))))))))) / 1u)), 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))) | uvec4(0u, 0u, 0u, 0u)))))) << uvec4(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_size & clamp(workgroup_base, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), workgroup_id))))), 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))))) << uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), ((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)) | ((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))) << uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(next_virtual_gid))), 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) - uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u)), GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id), ~ (~ ((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)))) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec4(8u), uvec4(8u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(8u), uvec4(8u)), ~ (~ (_GLF_IDENTITY(uvec4(8u), uvec4(8u))))))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u))), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), _GLF_IDENTITY(uvec4(8u), (uvec4(8u)) / uvec4(1u, 1u, 1u, 1u)))), max(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u)))))) | (uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u))))))) + (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), uint(uvec3(uint(uvec2(0u, 1u)), 0u, 0u)))))))))))))) << uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(21087u, 184829u, 19296u, 48776u)) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(21087u, 184829u, 19296u, 48776u)), (_GLF_FUZZED(uvec4(21087u, 184829u, 19296u, 48776u))) ^ uvec4(0u, 0u, 0u, 0u)) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u), ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(_GLF_IDENTITY(0u, 1u * (0u)), 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(21087u, 184829u, 19296u, 48776u)) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, 0u, 0u))))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << 0u)) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))) << uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) << uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid) : _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (false ? _GLF_FUZZED((bvec4(false, true, false, true) , (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id % GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id))) : GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id))))))), (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))))), 0u))) << uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, (0u) + 0u)))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid)), (false ? _GLF_FUZZED(uvec4(156962u, 168307u, 153119u, 156739u)) : (true ? _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), 0u))) << uvec4(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - (67420u & 0u)), 0u)), 0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), 0u))) << uvec4(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - (67420u & 0u)), 0u)), 0u, 0u, 0u), ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) - 0u))), 0u))) << uvec4(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - (67420u & 0u)), 0u)), 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid)))))) / uvec4(1u, 1u, 1u, 1u), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u), (true ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))))) : _GLF_FUZZED(_GLF_IDENTITY((true ? uvec4(91628u, 76782u, 98982u, _GLF_IDENTITY(162075u, (162075u) | 0u)).rrbb : GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id), ((true ? uvec4(91628u, 76782u, 98982u, 162075u).rrbb : GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)) >> ((uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u)) << _GLF_IDENTITY(uvec4(1u), uvec4(1u))))))))) << uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) && _GLF_IDENTITY((true), false || ((true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))) && _GLF_IDENTITY((true), false || ((true)))))), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))) && _GLF_IDENTITY((true), false || ((true))), false || (_GLF_IDENTITY(true, bool(bvec2(true, true))) && _GLF_IDENTITY((true), false || ((true)))))), false)))) && true) ? (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id), ((GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_12num_workgroupread_1subgroup_idworkgroup_id)) + uvec4(0u, 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u))) << uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) - 0u), 0u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid), clamp(~ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid), ~ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid), ~ (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid))))))))) / uvec4(1u, 1u, 1u, 1u)))))))).y;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) != 0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0)), _GLF_IDENTITY(! (! (_injected_loop_counter != 0)), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), bool(bvec2(_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), ! (! (_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_injected_loop_counter != 0))))))), true)))), bool(bool((_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), bool(bvec2(_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), ! (! (_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_injected_loop_counter != 0))))))), true)))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)), bool(bool(! (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && (_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_injected_loop_counter != 0), bool(bool(_GLF_IDENTITY((_injected_loop_counter != 0), ((_injected_loop_counter != 0)) || false))))), true), bvec2(bvec4(bvec2(! (! (_injected_loop_counter != 0)), true), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! ((_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, (0) - 0), ! (! (_injected_loop_counter != 0))))), true && (_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_injected_loop_counter != 0), (! (_injected_loop_counter != 0)) || false)), true), bvec2(bvec4(bvec2(! (! (_injected_loop_counter != 0)), true), _GLF_IDENTITY(true, (true) || false), true)))))))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)), bool(bool(! (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && (_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_injected_loop_counter != 0), bool(bool(_GLF_IDENTITY((_injected_loop_counter != 0), ((_injected_loop_counter != 0)) || false))))), true), bvec2(bvec4(bvec2(! (! (_injected_loop_counter != 0)), true), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! ((_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, (0) - 0), ! (! (_injected_loop_counter != 0))))), true && (_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_injected_loop_counter != 0), (! (_injected_loop_counter != 0)) || false)), true), bvec2(bvec4(bvec2(! (! (_injected_loop_counter != 0)), true), _GLF_IDENTITY(true, (true) || false), true)))))))))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)), bool(bool(! (_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && (_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), bool(_GLF_IDENTITY(bvec2(! (! _GLF_IDENTITY((_injected_loop_counter != 0), bool(bool(_GLF_IDENTITY((_injected_loop_counter != 0), ((_injected_loop_counter != 0)) || false))))), true), bvec2(bvec4(bvec2(! (! (_injected_loop_counter != 0)), true), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! ((_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, (0) - 0), ! (! (_injected_loop_counter != 0))))), true && (_GLF_IDENTITY(! (! (_injected_loop_counter != 0)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_injected_loop_counter != 0), (! (_injected_loop_counter != 0)) || false)), true), bvec2(bvec4(bvec2(! (! (_injected_loop_counter != 0)), true), _GLF_IDENTITY(true, (true) || false), true))))))))))))))))) && true)))))); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(87635) : _injected_loop_counter --)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u)))), clamp((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u)))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u))))))) + 1), min(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u)))) - 0u), _GLF_IDENTITY(1u, (1u) | 0u))), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, uint(uvec2(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, min(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid)).z, 1u)))) - 0u), 1u))) | 0u)))) + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid), max((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid), (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid))) - uvec4(0u, 0u, 0u, 0u)).z, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(clamp(uint(1u), uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : uint(1u)))), (clamp(uint(1u), uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : uint(1u))))) ^ 0u)), uint(1u))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, _GLF_IDENTITY(uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u)), _GLF_IDENTITY((uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u))), (true ? _GLF_IDENTITY((uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u))), ((_GLF_IDENTITY(uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u)), clamp(uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u)), uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u)), uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u)))))) | (18897u & 0u)) : _GLF_FUZZED(subgroup_id))) / 1u)))) + 1), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z)), _GLF_IDENTITY(uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u)), ~ (~ _GLF_IDENTITY((uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u))), ((uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u)))) ^ 0u)))))) + 1), uint(uvec3(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, min(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z), 0u + ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z)))), clamp((~ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z), 0u + ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z)))), (~ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z), 0u + ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z)))), (~ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z), 0u + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z), clamp(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z), 0u | ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z))), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z), ~ (~ ((GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z)))), (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z))))))))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u))), ~ (~ (_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))))), uint(_GLF_IDENTITY(1u, 0u | (1u))))) ^ 0u)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, uint(uvec2(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, 1u))))) + 1), 0u, 1u)))))))), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - 0), 4, 4)));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, (true) || false), true)))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read_2 = atomicLoad(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.w], _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), max((4), (4)))), (0 | (0 >> _GLF_IDENTITY(int(4), int(4)))) | (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), max((4), (4)))), clamp(~ (~ _GLF_IDENTITY((4), max((4), (4)))), ~ (~ _GLF_IDENTITY((4), max((4), (4)))), ~ (~ _GLF_IDENTITY((4), max((4), (4))))))))), 64, 0);
 for(int _injected_loop_counter = (1 & _GLF_IDENTITY(1, (1) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), int(5)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), (bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (_GLF_IDENTITY(bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), (bool(bool((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))) || false))))))), false || _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), _GLF_IDENTITY(bool(bvec4(((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-925.330, 1.8)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-925.330, 1.8)))).y), true, true)))))), true && (bool(bvec4(((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), _GLF_IDENTITY(bool(bvec4(((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-925.330, 1.8)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-925.330, 1.8)))).y), true, true)))))), true && (bool(bvec4(((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, true))) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.9)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), _GLF_IDENTITY(bool(bvec4(((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), false, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-925.330, 1.8)))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-925.330, 1.8)))).y), true, true)))))), true && (bool(bvec4(((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))) || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(0), int(0)))) < subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(0), int(0)))) < subgroup_size)) || false), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1) << 0), false ? _GLF_FUZZED(_injected_loop_counter) : 1))) / 1)))) | (0 << _GLF_IDENTITY(int(0), int(0)))) < subgroup_size), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (0 << _GLF_IDENTITY(int(0), int(0)))), (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) | (0 << _GLF_IDENTITY(int(0), int(0)))) : _GLF_FUZZED(subgroup_id))) < subgroup_size))), true)))))
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x], uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + 1 == read_2) + 1, 4, 64, 4);
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       subgroupAll(false);
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sin(0.0), 1.0, 0.0, 1.0))).x > injectionSwitch.y))))
        break;
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false) ? _GLF_IDENTITY(_GLF_FUZZED(12.14), max(_GLF_FUZZED(12.14), _GLF_FUZZED(12.14))) : injectionSwitch.x), tan(0.0) + (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false) ? _GLF_IDENTITY(_GLF_FUZZED(12.14), max(_GLF_FUZZED(12.14), _GLF_FUZZED(12.14))) : injectionSwitch.x), ((_GLF_IDENTITY(false, (false) || false) ? _GLF_IDENTITY(_GLF_FUZZED(12.14), max(_GLF_FUZZED(12.14), _GLF_FUZZED(12.14))) : injectionSwitch.x)) / 1.0)))) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             break;
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.x], _GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + _GLF_IDENTITY(1, (1) >> 0) == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + _GLF_IDENTITY(1, (1) >> 0) == read_2), 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, _GLF_IDENTITY(((1) >> 0), (((1) >> 0)) * 1) | ((1) >> 0))) == read_2), max(_GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | ((_GLF_IDENTITY(1, max(1, 1))) >> 0))) == read_2), (uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | ((1) >> 0))) == read_2)) >> 0u), _GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | ((1) >> 0))) == read_2), (uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | ((1) >> 0))) == read_2)) | (uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | ((1) >> 0))) == read_2))))), 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z)), GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z)), GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z)) + _GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 0), max(ivec2((1), 0), ivec2((1), 0))))) >> 0) == read_2), 0u, 1u, 0u), (uvec4(uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + _GLF_IDENTITY(1, (1) >> 0) == read_2), 0u, 1u, _GLF_IDENTITY(0u, (0u) | (0u)))) - uvec4(0u, 0u, 0u, 0u)))) - 0u)), ~ (~ (uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_11next_virtual_gidnum_workgroupread_1virtual_gid.z + _GLF_IDENTITY(1, (1) >> 0) == read_2)))) + 1, _GLF_IDENTITY(4, (4) / int(_GLF_ONE(1.0, injectionSwitch.y))), 64, 4);
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
                break;
               return;
              }
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-66038))), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> 0), 1))) | (1))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           subgroupAll(true);
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           break;
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(false))
  return;
}
