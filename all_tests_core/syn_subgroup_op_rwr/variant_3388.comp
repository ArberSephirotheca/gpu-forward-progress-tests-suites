#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && _GLF_IDENTITY(true, true && (true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id))))), (true ? _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (false) && true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(false, false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(false, false)))), true, _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))))), (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, true && (false)), false))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(false, false)))))))))), false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) - 0u), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (true ? workgroup_base + subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(workgroup_id) : (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(1u * (workgroup_base), (1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) | 0u))) * 1u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 0u, 0u)))) % subgroup_size);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | 0u)) | (read_1)), read_1, read_1)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uint(read_1))), (read_1) | 0u)) | (read_1)), read_1, read_1)))), max(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | 0u)) | (read_1)), read_1, read_1)))), _GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | 0u)) | (read_1)), read_1, read_1))))))) | (_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | 0u, clamp(_GLF_IDENTITY((read_1) | 0u, max((read_1) | 0u, (read_1) | 0u)), (read_1) | 0u, _GLF_IDENTITY((read_1) | 0u, min((read_1) | 0u, (read_1) | 0u)))))) | (read_1)), read_1, read_1)))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) + 1, min(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, (read_1) - (1u ^ 1u)))))) + 1, _GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | _GLF_IDENTITY((_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) << 0u), read_1, read_1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u)))) << 0u), read_1, read_1)))))) + 1)), _GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(uint(3u), uint(3u)))))) | (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))))) + 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> (_GLF_IDENTITY(184723u & 0u, (184723u & 0u) * 1u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(158572u) : virtual_gid)), _GLF_IDENTITY((virtual_gid) | (virtual_gid), 0u + (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ 0u) | (virtual_gid)))), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(158572u) : virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), clamp(_GLF_IDENTITY((virtual_gid), clamp((virtual_gid), _GLF_IDENTITY((virtual_gid), uint(uvec3((virtual_gid), 0u, 1u))), (virtual_gid))), (virtual_gid), (virtual_gid))) | (virtual_gid), 0u + ((virtual_gid) | (virtual_gid)))), 0u ^ (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) ? _GLF_FUZZED(158572u) : virtual_gid)), _GLF_IDENTITY((virtual_gid) | (virtual_gid), 0u + ((virtual_gid) | (virtual_gid)))))))))))))], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), ((0)) << 0), (0))), (0), (0))) * 1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-674.282, -2.8)))).y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))))), ((uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))) >> 0u)), (~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))))))) | (~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-41426, (-41426) ^ 0)) : 1)) == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1, uint(uvec3(_GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(vec4(679.891, -1933.2861, -1857.3996, 543.055).t), _GLF_FUZZED(5488.0962)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))[0], _GLF_FUZZED(7.1)), vec2(_GLF_FUZZED(-94.91), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, sqrt(1.0), 0.0))))))), true))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.1)), vec2(_GLF_FUZZED(-94.91), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y, 1.0, 0.0, 0.0, 1.0, 1.0))))), 1u))), 1u, 1u))) == read_2))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(workgroup_base))))))))) | (max(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) * 1u) + 1 == read_2, false || (read_1 + 1 == read_2))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, 1u * (read_1)), read_1)), read_1, read_1)) + 1 == read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))), uint(uvec4(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))), 0u, 0u, 0u))) : _GLF_FUZZED(subgroup_local_id))), (true ? _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) ^ (0u & uint(60812))) == read_2)))) : _GLF_FUZZED(subgroup_id)))) * 1u)))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), clamp((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))))))))) | ((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))))))))) + 0u)), clamp(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), clamp((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))))))))) | ((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))))))))) + 0u)), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), clamp((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))))))))) | ((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))))))))) + 0u)), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (_GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), clamp((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false))))))))) | ((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))))))))) + 0u))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-41426) : 1)) == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(virtual_gid)))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(virtual_gid)))) / 1u))), read_1 + 1)) == read_2))), uint(uint(~ (~ (uint(_GLF_IDENTITY(read_1 + 1, min(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((true ? read_1 + 1 : _GLF_FUZZED(virtual_gid)), clamp((true ? read_1 + 1 : _GLF_FUZZED(virtual_gid)), _GLF_IDENTITY((true ? read_1 + 1 : _GLF_FUZZED(virtual_gid)), uint(uint((true ? read_1 + 1 : _GLF_FUZZED(virtual_gid))))), _GLF_IDENTITY((true ? read_1 + 1 : _GLF_FUZZED(virtual_gid)), min(_GLF_IDENTITY((true ? read_1 + 1 : _GLF_FUZZED(virtual_gid)), 0u | ((true ? read_1 + 1 : _GLF_FUZZED(virtual_gid)))), (true ? read_1 + 1 : _GLF_FUZZED(virtual_gid))))))), read_1 + 1)) == read_2)))))))), _GLF_IDENTITY((max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) - 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(read_1))) == read_2), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2)), _GLF_IDENTITY(~ (~ (~ (uint(read_1 + 1 == read_2)))), clamp(_GLF_IDENTITY(~ (~ (~ (uint(read_1 + 1 == read_2)))), (~ (~ (~ (uint(read_1 + 1 == read_2))))) | (~ (~ (~ (uint(read_1 + 1 == read_2)))))), _GLF_IDENTITY(~ (~ (~ _GLF_IDENTITY((uint(read_1 + 1 == read_2)), max((uint(read_1 + 1 == read_2)), (uint(read_1 + 1 == read_2)))))), uint(uvec3(~ (~ (~ (uint(read_1 + 1 == read_2)))), 0u, 0u))), ~ (~ (~ (uint(read_1 + 1 == read_2))))))))))), 0u ^ ((max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 + 1 : _GLF_FUZZED(read_1))) == read_2), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), ~ (~ (~ (uint(read_1 + 1 == read_2)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), ~ (~ (~ (uint(read_1 + 1 == read_2)))))), 0u | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), ~ (~ (~ (uint(read_1 + 1 == read_2)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), ~ (~ (~ (uint(read_1 + 1 == read_2))))))))))))) | (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(50001), 0 | (true ? 1 : _GLF_FUZZED(50001)))))))) | 0) == read_2))))))), (max(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, min(read_1 + 1, read_1 + 1))) | 0u) == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 0u)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), clamp(~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), _GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), clamp(~ (_GLF_IDENTITY(read_2, _GLF_IDENTITY(max(read_2, read_2), (max(read_2, read_2)) - 0u))), ~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), ~ _GLF_IDENTITY((_GLF_IDENTITY(read_2, max(read_2, read_2))), min((_GLF_IDENTITY(read_2, max(read_2, read_2))), _GLF_IDENTITY((_GLF_IDENTITY(read_2, max(read_2, read_2))), ((_GLF_IDENTITY(read_2, max(read_2, read_2)))) | 0u)))))))))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, _GLF_IDENTITY(bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)), (bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))) || false))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 1)), int(ivec3(int(ivec2(_GLF_IDENTITY(1, 0 | (1)), 1)), 1, 1)))) - 0)) == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(read_2, (read_2) / 1u))), read_2, read_2)), false)))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), bool(bvec2(! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) | (read_2)), read_2))), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2))))))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), false || (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) || false)))), ~ _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))), ((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))))) << 0u))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1) * 1u), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))) - 0u)), clamp(max(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ (0u & 119822u))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))) - 0u)), clamp(max(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2)), (~ (uint(read_1 + 1 == read_2))) >> 0u))))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))) - 0u)), clamp(max(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), max(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), clamp(read_2, read_2, read_2)), false))))))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))) - 0u)), clamp(max(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) - 0u) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))) | 0u), uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))))) - 0u)), clamp(max(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(4u), uint(4u)), 0u), ~ (~ (uvec2(_GLF_IDENTITY(uint(4u), uint(4u)), 0u))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(4u), uint(4u)), 0u), ~ (~ (uvec2(_GLF_IDENTITY(uint(4u), uint(4u)), 0u)))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))) ^ (1u ^ 1u))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))), (0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))) | (0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))))))))) << 0u)) + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), max(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, read_2, read_2), (_GLF_IDENTITY(clamp(read_2, read_2, read_2), clamp(_GLF_IDENTITY(clamp(read_2, read_2, read_2), (clamp(read_2, read_2, read_2)) | (clamp(read_2, read_2, read_2))), _GLF_IDENTITY(clamp(read_2, read_2, read_2), (clamp(read_2, read_2, read_2)) | (clamp(read_2, read_2, read_2))), clamp(read_2, read_2, read_2)))) | (clamp(read_2, read_2, read_2)))), false)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) / 1u))), bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, min(read_2, read_2)), read_2)), false))))))))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2)), max(~ (uint(read_1 + 1 == read_2)), ~ (uint(read_1 + 1 == read_2))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(_GLF_IDENTITY(read_1 + 1, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + (read_1 + 1)) == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2), ~ (~ (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (true ? _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)) : _GLF_FUZZED(workgroup_id)))))))), 0u ^ (max(_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) << 0) == read_2, false || (read_1 + 1 == read_2)))) | (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), 0u ^ (~ (read_1))))) + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (uint(read_1 + 1 == read_2))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u + (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(read_2, ~ (~ (read_2)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, min(1, 1)), 1)) == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)) == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == _GLF_IDENTITY(read_2, 0u ^ (read_2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_1, (read_1) * 1u), 1u), _GLF_IDENTITY(uvec2(uvec4(uvec2(_GLF_IDENTITY(read_1, (read_1) * 1u), 1u), 0u, 0u)), uvec2(0u, 0u) | (uvec2(uvec4(uvec2(_GLF_IDENTITY(read_1, (read_1) * 1u), 1u), 0u, 0u)))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_1, (read_1) * 1u), 1u), _GLF_IDENTITY(uvec2(uvec4(uvec2(_GLF_IDENTITY(read_1, (read_1) * 1u), 1u), 0u, 0u)), uvec2(0u, 0u) | (uvec2(uvec4(uvec2(_GLF_IDENTITY(read_1, (read_1) * 1u), 1u), 0u, 0u))))))) | 0u)) + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1)))))), (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), ~ (~ (~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(read_1 + 1 == read_2, false), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), false, false))), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))), true))))))))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2))))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2)))))))), uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))))))))))), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (true ? _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_2)) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), clamp(~ (~ (uint(read_1 + 1 == read_2))), _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), (true ? ~ (~ (uint(read_1 + 1 == read_2))) : _GLF_FUZZED((workgroup_id >> virtual_gid)))), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) / 1u), _GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(read_1, 1u)), (uint(uvec2(read_1, 1u))) | (uint(uvec2(read_1, 1u))))))) + 1 == read_2)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) / 1u), read_1)) + 1 == read_2)))), max(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) / 1u), read_1)) + 1 == read_2)))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) / 1u), read_1)) + 1 == read_2)))))))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) ^ 0u), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1) / (0u ^ 1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(read_2, read_2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), clamp(~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), _GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), clamp(~ (_GLF_IDENTITY(read_2, _GLF_IDENTITY(max(read_2, read_2), (max(read_2, read_2)) - 0u))), ~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (_GLF_IDENTITY(read_2, max(read_2, read_2)))))))))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))), (false ? _GLF_FUZZED(184573u) : _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))) | 0u)) + 0u)))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) | 0u), read_1)) + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) >> 0u))))))))) + 1, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == _GLF_IDENTITY(read_2, 0u ^ (read_2)))))), bool(bvec2(! (_GLF_IDENTITY(read_1 + 1 == read_2, bool(bool(read_1 + 1 == read_2)))), true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, uint(uint(read_1 + 1)))) ^ 0u) == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(uint(-3.1)))), ! (! (read_1 + 1 == read_2))))))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), (read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))) && true), false || (_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), (read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(max(read_2, read_2), max(_GLF_IDENTITY(max(read_2, read_2), clamp(_GLF_IDENTITY(max(read_2, read_2), uint(uvec4(max(read_2, read_2), 1u, 1u, 0u))), max(read_2, read_2), max(read_2, read_2))), max(read_2, read_2))))) || false)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))), ~ (~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))))))), ((~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) / ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), false))))))) << 0u))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true)), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ _GLF_IDENTITY((max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))), min(_GLF_IDENTITY((max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))), ~ (_GLF_IDENTITY(~ ((max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (~ ((max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))))) | (~ ((max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))))))), _GLF_IDENTITY((max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))), (_GLF_IDENTITY((max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))), ((max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))) ^ 0u)) | 0u)))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, (false ? _GLF_FUZZED((num_workgroup --)) : read_1 + 1)) == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1) * 1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(uint(read_2)))))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), max(_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), min(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), max(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))))), _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), false)))))))) - 0u)), clamp(max(uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))), clamp((_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))), _GLF_IDENTITY((_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))), max((_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))), (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))))))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u | (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) / 1u)), min(uint(_GLF_IDENTITY(0u, (0u) / 1u)), uint(_GLF_IDENTITY(0u, (0u) / 1u))))), ~ (~ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) / 1u)), min(uint(_GLF_IDENTITY(0u, (0u) / 1u)), uint(_GLF_IDENTITY(0u, (0u) / 1u)))))))))), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)))), false))))))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))) - 0u)), clamp(max(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1, max(_GLF_IDENTITY(read_1 + 1, (read_1 + 1) | (read_1 + 1)), read_1 + 1)) == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), min(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2))))), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(max(uint(_GLF_IDENTITY(read_1 + 1, 0u ^ (read_1 + 1)) == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(_GLF_IDENTITY(read_1 + 1, (true ? read_1 + 1 : _GLF_FUZZED(num_workgroup))) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), false))))))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))), (true ? ~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, 0u | (read_2)), read_2)), clamp(read_2, _GLF_IDENTITY(read_2, 0u + (_GLF_IDENTITY(read_2, (read_2) - 0u))), read_2)), false))))) : _GLF_FUZZED(subgroup_local_id)))))) - 0u)), clamp(max(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, read_1 + 1, read_1 + 1)) == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | 0u), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), max(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), clamp(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))))) - 0u)), clamp(max(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(read_1 + 1, 0u, 0u))), read_1 + 1))) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ _GLF_IDENTITY((uint(read_1 + 1 == read_2)), ((uint(read_1 + 1 == read_2))) << (0u ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))) / 1u), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) << (0u & 31183u)), bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false))))))), (_GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) - 0u)), clamp(max(uint(_GLF_IDENTITY(read_1 + 1, (_GLF_IDENTITY(read_1 + 1, clamp(read_1 + 1, _GLF_IDENTITY(read_1 + 1, uint(uvec3(_GLF_IDENTITY(read_1 + 1, uint(uvec2(read_1 + 1, 0u))), 0u, 0u))), read_1 + 1))) / ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ _GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), clamp(_GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), ((~ (uint(read_1 + 1 == read_2)))) | 0u), (~ (uint(read_1 + 1 == read_2))), _GLF_IDENTITY((~ (uint(read_1 + 1 == read_2))), (false ? _GLF_FUZZED(subgroup_size) : (~ (uint(read_1 + 1 == read_2))))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, 0u | (read_1)))) + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-14965) : _GLF_IDENTITY(1, (1) | (1)))) == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))))))))) << 0u)) + 1) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))), 1u * (max(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, read_2, read_2), max(clamp(read_2, read_2, read_2), _GLF_IDENTITY(clamp(read_2, read_2, read_2), (clamp(read_2, read_2, read_2)) >> 0u)))), false))))))))))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))), 1u * (max(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, read_2, read_2), max(clamp(read_2, read_2, read_2), _GLF_IDENTITY(clamp(read_2, read_2, read_2), (clamp(read_2, read_2, read_2)) >> 0u)))), false)))))))))))))))) | (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))), 1u * (max(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, read_2, read_2), max(clamp(read_2, read_2, read_2), _GLF_IDENTITY(clamp(read_2, read_2, read_2), (clamp(read_2, read_2, read_2)) >> 0u)))), false))))))))))))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, _GLF_IDENTITY(0u ^ (read_1 + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 0u ^ (read_1 + 1)))) == read_2), ~ (~ (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (true ? _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)) : _GLF_FUZZED(workgroup_id)))))))), 0u ^ (max(_GLF_IDENTITY(uint(read_1 + 1 == read_2), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(_GLF_IDENTITY(read_1 + 1 == read_2, false || (_GLF_IDENTITY(read_1 + 1, (read_1 + 1) / 1u) == _GLF_IDENTITY(read_2, (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (uint(2u))))) ^ (read_2)))))) | (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), ~ (~ (uint(read_1 + 1 == read_2)))), (_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2), ~ (~ (uint(read_1 + 1 == read_2))))) ^ 0u)))), (_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), ~ (~ (uint(read_1 + 1 == read_2))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), 0u + (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2)))))))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, ! (! (read_1 + 1 == read_2)))), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1, (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_1) : read_1)), ~ (~ (read_1))) + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u | (read_1)) + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), false)))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) << 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ _GLF_IDENTITY((uint(read_1 + 1 == read_2)), ((uint(read_1 + 1 == read_2))) | ((uint(read_1 + 1 == read_2))))))), 0u ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0), min(1, 1)), 1)) == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1, max(read_1 + 1, read_1 + 1)) == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), clamp(uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2), uint(read_1 + 1 == read_2)))))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1) | (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (~ (uint(_GLF_IDENTITY(read_1 + _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2, bool(bvec2(read_1 + 1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u + (read_2)), read_2, read_2)), false)))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(read_1 + 1 == read_2)))))) + 0u), max(uint(read_1 + 1 == _GLF_IDENTITY(read_2, 0u ^ (read_2))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, (read_1 + 1 == read_2) && true))))))))) + 1)))))), (_GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), _GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, bool(bvec2(read_1 + 1 == read_2, false)))))), ~ (~ (~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) + 1 == read_2, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(read_1 + _GLF_IDENTITY(1, ~ (~ (1))) == read_2, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), bvec2(bvec4(bvec2(read_1 + 1 == read_2, _GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, bool(bool(false)))))), bvec2(bvec4(bvec2(read_1 + 1 == read_2, false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), true))))))))))))), clamp(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))))), ~ (~ (uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) - 0u), read_1, _GLF_IDENTITY(read_1, (read_1) | (read_1)))) + 1 == read_2)))))))), uint(_GLF_IDENTITY(read_1 + 1 == read_2, true && (_GLF_IDENTITY(read_1 + 1 == read_2, true && (read_1 + 1 == read_2))))))))))), _GLF_IDENTITY(max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(uint(read_1 + 1 == _GLF_IDENTITY(read_2, (true ? _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (read_2)) : _GLF_FUZZED(num_workgroup)))), _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), clamp(~ (~ (uint(read_1 + 1 == read_2))), _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), (true ? _GLF_IDENTITY(~ (~ (uint(read_1 + 1 == read_2))), uint(uint(~ (~ (uint(read_1 + 1 == read_2)))))) : _GLF_FUZZED((workgroup_id >> virtual_gid)))), ~ (_GLF_IDENTITY(~ (uint(read_1 + 1 == read_2)), (~ (uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (_GLF_IDENTITY(1, min(1, 1)))) == read_2))) / (1u & 1u))))))), (max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) + 0u), (read_1) / 1u), read_1)) + 1 == read_2)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(read_1)), (_GLF_IDENTITY(uint(uint(read_1)), (uint(uint(read_1))) * 1u)) << 0u)), (read_1) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))), read_1)) + 1 == read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) / 1u), read_1)) + 1 == read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) / 1u), read_1)) + 1 == read_2)))), _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) ^ (_GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) / 1u), read_1)) + 1 == read_2))))))) | 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (1) | (1)) == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) / 1u), read_1)) + 1 == read_2)))), _GLF_IDENTITY(uint(read_1 + 1 == read_2), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) / 1u), read_1)) + 1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) / 1u), read_1)) + 1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) / 1u), read_1)) + 1 == read_2, true, false, false)))) || false))))))))))) + 0u), max(uint(read_1 + 1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) ^ 0u), ~ (~ (uint(read_1 + 1 == read_2)))))))) + 1) / (0u ^ 1u)) : _GLF_FUZZED(subgroup_local_id)))) | 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) * 1)) >> 0) == _GLF_IDENTITY(read_2, (read_2) ^ 0u)), (uint(read_1 + 1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, cos(0.0), 1.0, 1.0)))), (0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0))))) - 0.0))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, cos(0.0), 1.0, 1.0)))), (0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))))], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(48.59)), bool(false))), injectionSwitch[1])))).y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 1.0))))) - 0.0))), true, false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false, false), false))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), float(_GLF_FUZZED((530.724 * -9306.3613))), bool(false)))))))
  return;
}
