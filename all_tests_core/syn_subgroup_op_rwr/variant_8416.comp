#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0))) > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, _GLF_IDENTITY((injectionSwitch.x) / 1.0, (_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))) * cos(0.0))))) > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)))))))))) && true), _GLF_IDENTITY(false || (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, false)), true && (bool(bvec3((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, false)))))), ! (_GLF_IDENTITY(! (false || (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, false)), true && (bool(bvec3((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, false))))))), bool(bool(! (false || (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, false)), true && (bool(bvec3((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, false))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)) || false)) || false))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false, true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0) > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0) > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))), ! (! ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))))) && true) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(179.814)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(179.814)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(179.814)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) > injectionSwitch.y)))), false, true)))))))))))) && true, false || ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))))))) && true))), (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, -10.55)))))).x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true))) && true))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) && true))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, ! (! ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true)))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true, false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true)))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / sqrt(vec2(1.0, 1.0)))[1]), bvec2(false, true))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y, mix(float(_GLF_FUZZED(-17.01)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y)))))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)) || false)) || false))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false, true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0) > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0) > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))), ! (! ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))))) && true) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(179.814)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(179.814)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(179.814)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) > injectionSwitch.y)))), false, true)))))))))))) && true, false || ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))))))) && true))), (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, -10.55)))))).x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true))) && true))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) && true))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, ! (! ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true)))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true, false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true)))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / sqrt(vec2(1.0, 1.0)))[1]), bvec2(false, true))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y, mix(float(_GLF_FUZZED(-17.01)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y)))))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y)) || false)) || false))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false, true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) / 1.0) > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0) > injectionSwitch.y)))), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))), ! (! ((! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))))) && true) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(179.814)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(179.814)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_FUZZED(179.814)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))))) > injectionSwitch.y)))), false, true)))))))))))) && true, false || ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))), true && (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))))))) && true))), (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5.6, -10.55)))))).x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true))) && true))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) && true))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true, ! (! ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true)))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true, false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))) && true)))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / sqrt(vec2(1.0, 1.0)))[1]), bvec2(false, true))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y, mix(float(_GLF_FUZZED(-17.01)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-91.15)), vec2(_GLF_FUZZED(9800.5406), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true, false))))).y)))))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))) && true)))), false, false))))))), false), true, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), 0u ^ ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), gl_NumWorkGroups)).x) / 1u), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)).x) ^ 0u), gl_NumWorkGroups.x)), _GLF_IDENTITY((gl_NumWorkGroups.x) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x) >> 0u, ((gl_NumWorkGroups.x) >> 0u) | 0u)) | 0u, ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))).x) >> 0u, _GLF_IDENTITY(((gl_NumWorkGroups.x) >> 0u) | 0u, (((gl_NumWorkGroups.x) >> 0u) | 0u) << 0u))) | 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(9.1, mix(float(_GLF_FUZZED(7504.8863)), _GLF_IDENTITY(float(9.1), min(float(9.1), float(9.1))), bool(true))))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(9.1, mix(float(_GLF_FUZZED(7504.8863)), _GLF_IDENTITY(float(9.1), min(float(9.1), float(9.1))), bool(true))))), (float(_GLF_FUZZED(_GLF_IDENTITY(9.1, mix(float(_GLF_FUZZED(7504.8863)), _GLF_IDENTITY(float(9.1), min(float(9.1), float(9.1))), bool(true)))))) / 1.0), float(_GLF_FUZZED(_GLF_IDENTITY(9.1, mix(float(_GLF_FUZZED(7504.8863)), _GLF_IDENTITY(float(9.1), min(float(9.1), float(9.1))), bool(true))))), _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(9.1, mix(float(_GLF_FUZZED(7504.8863)), _GLF_IDENTITY(float(9.1), min(float(9.1), float(9.1))), bool(true))))), 0.0 + (float(_GLF_FUZZED(_GLF_IDENTITY(9.1, mix(float(_GLF_FUZZED(7504.8863)), _GLF_IDENTITY(float(9.1), min(float(9.1), float(9.1))), bool(true))))))))), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(true)))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), false))))))) ? _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))));
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], _GLF_IDENTITY(uint(read_1 + _GLF_IDENTITY(1, 0 ^ (1))), (uint(read_1 + _GLF_IDENTITY(1, int(int(1))))) | 0u), 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, max(64, 64)))), 4);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), (virtual_gid) + 0u), 0u, 1u)))], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)) || false)) && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) - 0.0) : _GLF_FUZZED(2.2)))) * 1.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false))))))))) || false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))))), ! (! ((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))))))))))))), ! (! (true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec3(_GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || ((! ((injectionSwitch.x > injectionSwitch.y))))))))))))), true, false))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))))), ! (! ((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))))))))))))), ! (! (true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec3(_GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || ((! ((injectionSwitch.x > injectionSwitch.y))))))))))))), true, false)))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (false), (_GLF_IDENTITY(true, true && (true)) && (false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true, bool(bool(true))) && (false))), (_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true, bool(bool(true))) && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (false), (_GLF_IDENTITY(true, true && (true)) && (false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true, bool(bool(true))) && (false))), (_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true, bool(bool(true))) && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (false), (_GLF_IDENTITY(true, true && (true)) && (false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true, bool(bool(true))) && (false))), (_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true, bool(bool(true))) && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (false), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (true)) && (false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true, bool(bool(true))) && (false))), (_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bool(true))) && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 + _GLF_IDENTITY(1, 0 ^ (1)) == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) | 0), (1 ^ 0) * ((1) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) | 0)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.0)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(tan(0.0), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(tan(0.0), 1.0, 0.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(tan(0.0), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(tan(0.0), 1.0, 0.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(tan(0.0), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(tan(0.0), 1.0, 0.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true, true && ((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))) && true))) || false)))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (! (! (true)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), ! (! (true)))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((! (! (true))), false || ((! (! (true))))) && true)))))), true)))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))) && true))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))))))), true)))))))))), false || ((! (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), bool(bvec3(bool(bool(! (true))), true, true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true)))), ! (! (_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), ! (! ((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), ! (! (true)))))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))), true)))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))), true)))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))))))), true)))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (! (! (true)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && ((true))) && true)))), ! (! (true)))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(! (! (true)), (! (! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), (! (! (true))) && true)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY((! (! (true))), false || ((! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)))))), true)))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) || false)), (_GLF_IDENTITY(! (! (true)), true && (_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))) && true)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))))))), true)))))))))), false || ((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(! (true))), bool(bvec3(bool(bool(! (true))), true, true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), ! (! ((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), ! (! ((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), ! (! ((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))))))), ! (! (! (! (! (_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), ! (! ((_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! (! (true)))), true && ((! (! (! (true)))))))))))))))))))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), ! (! (true)))))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! (true)))), (_GLF_IDENTITY(! (! (true)), false || (! (! (true))))) && true))))))), true)))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (! (true))))))), (! (! (true))) && true)))), true)))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))), false))))))), true))))))))))), (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bool(! (true))), bool(bvec3(bool(bool(! (true))), true, true))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), ! (! ((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), ! (! ((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), ! (! ((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))))))))), ! (! (! (! (! (_GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))), ! (! ((_GLF_IDENTITY(! (! (true)), ! _GLF_IDENTITY((! (! (! (true)))), true && ((! (! (! (true)))))))))))))))))))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), ! (! (true)))))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), false || (! (true)))), (_GLF_IDENTITY(! (! (true)), false || (! (! (true))))) && true))))))), true)))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))), bvec3(bvec4(bvec3(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (! (true))))))), (! (! (true))) && true)))), true)))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))), false))))))), true)))))))))))) && true))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (true ? min(next_virtual_gid, next_virtual_gid) : _GLF_FUZZED(virtual_gid))), uint(uint(_GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), (false ? _GLF_FUZZED(read_1) : min(next_virtual_gid, next_virtual_gid)))))))], _GLF_IDENTITY(uint(read_1 + 1 == read_2), (uint(read_1 + 1 == read_2)) | 0u) + 1, 4, _GLF_IDENTITY(64, (64) << 0), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(-74.97)), bool(false)), (true ? mix(float(injectionSwitch.y), float(_GLF_FUZZED(-74.97)), bool(false)) : _GLF_FUZZED(-8.9)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))) && (false))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat2(transpose(mat2(1.0))))))) * (injectionSwitch), 0.0, 1.0)), vec2(vec3(vec2(mat2(mat2(1.0) * (injectionSwitch), 0.0, 1.0)), 0.0))))))).x > injectionSwitch.y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)).x > injectionSwitch.y)))))))) && true)), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(81978)), _GLF_FUZZED(-41.66)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), _GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0)))) * (injectionSwitch)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), 0.0), (mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), 0.0)) * mat3(1.0)))))).y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch))), clamp(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch)))), injectionSwitch)))).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.703) : 1.0))) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.703) : 1.0))) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(900.404, (900.404) * 1.0), 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)))) : _GLF_FUZZED(vec2(4.5, -584.500)))).x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false)), false || (_GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, _GLF_IDENTITY(1297.3072, max(1297.3072, _GLF_IDENTITY(1297.3072, min(1297.3072, 1297.3072)))))) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.703) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)))), injectionSwitch)))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, _GLF_IDENTITY(1297.3072, max(1297.3072, _GLF_IDENTITY(1297.3072, min(1297.3072, 1297.3072)))))) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.703) : _GLF_IDENTITY(1.0, (1.0) / 1.0)))) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)))), injectionSwitch)))).x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))), false))), false)), (bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.703) : 1.0))) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-568.703) : 1.0))) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch)))).x > injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false))) || false))), bool(bvec4(bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (injectionSwitch)))), injectionSwitch), max(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch))), clamp(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(900.404, 1297.3072)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(900.404, 1297.3072)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(900.404, 1297.3072)), (_GLF_FUZZED(vec2(900.404, 1297.3072))) / vec2(1.0, 1.0))) + sin(sqrt(vec2(0.0, 0.0)))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))), injectionSwitch)))).x > injectionSwitch.y))), true, false)), true, false, false))))))), true, _GLF_IDENTITY(true, true && (true)), false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, 0.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), ! (! (((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))))))), true && (! (! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))), ! (! (((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))))))))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_IDENTITY(_GLF_FUZZED(-0.4), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-0.4), clamp(_GLF_FUZZED(-0.4), _GLF_FUZZED(-0.4), _GLF_FUZZED(-0.4)))))), vec2(_GLF_FUZZED(5.9), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), true)), false || (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_IDENTITY(_GLF_FUZZED(-0.4), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-0.4), clamp(_GLF_FUZZED(-0.4), _GLF_FUZZED(-0.4), _GLF_FUZZED(-0.4)))))), vec2(_GLF_FUZZED(5.9), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), true)), false || (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), true))))))), false, true, true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_IDENTITY(_GLF_FUZZED(-0.4), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-0.4), clamp(_GLF_FUZZED(-0.4), _GLF_FUZZED(-0.4), _GLF_FUZZED(-0.4)))))), vec2(_GLF_FUZZED(5.9), (injectionSwitch)[1]), bvec2(false, true))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), true)), false || (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)))), true))))))), false, true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
