#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0, 0.0))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0, 0.0))) > injectionSwitch.y))), false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_DEAD(false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false), false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))), true))) || false)), false)), (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false)))))), true))) || false)), _GLF_IDENTITY(false, (false) && true)))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), 0u)), (uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))))), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) - 0u)) | (gl_WorkGroupSize)), 0u)), (uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))))) / uvec3(1u, 1u, 1u)).x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), 0u))).x))), (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))), (0u & 49473u) ^ (clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec3((subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (true ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_size)), (~ (_GLF_FUZZED(subgroup_size))) + 0u))))) : 1u)))))), 1u))))), 0u ^ _GLF_IDENTITY((min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), max((min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))))), min(_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))), 0u ^ (min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)))), ~ (~ (uint(uvec2(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))), workgroup_base + subgroup_id * subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), max(_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (min(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (subgroup_size))) << 0u), workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), (false ? _GLF_FUZZED(floatBitsToUint(roundEven(2.1))) : _GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))))))) | (_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), min((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u ^ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(0.0), bool(true))), 0.0)), injectionSwitch.x)))), 0u ^ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), uint(uvec3(_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), uint(uvec3((subgroup_id * subgroup_size), 0u, 1u))) - 0u), (subgroup_id * subgroup_size) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))), 0.0)), injectionSwitch.x)))), 0u ^ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))), 0u, 0u))), (_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u ^ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))))))), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), 0u ^ (min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), ~ (~ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_size) / 1u), _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), clamp(0u + (subgroup_id * subgroup_size), _GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)) / 1u), (subgroup_id) >> 0u) * subgroup_size), _GLF_IDENTITY((128370u & 0u), ((128370u & 0u)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, 1u * (_GLF_IDENTITY((subgroup_id) ^ 0u, min((subgroup_id) ^ 0u, (subgroup_id) ^ 0u))))))) * subgroup_size))), (_GLF_IDENTITY(0u + _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY((128370u & 0u), ((128370u & 0u)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size))), (0u + _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY((128370u & 0u), ((_GLF_IDENTITY(128370u, _GLF_IDENTITY((128370u), ((128370u)) - 0u) ^ 0u) & 0u)) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uint(uvec3(_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 1u, 0u), 1u), min(uvec4(uvec3(0u, 1u, 0u), 1u), _GLF_IDENTITY(uvec4(uvec3(0u, 1u, 0u), 1u), min(uvec4(uvec3(0u, 1u, 0u), 1u), uvec4(uvec3(0u, 1u, 0u), 1u))))))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size)))) * 1u)) | 0u), _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), 1u, 1u)))), _GLF_IDENTITY(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), max(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), _GLF_IDENTITY(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), (((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u)))))) * 1u))) - 0u)) ^ ((0u ^ 0u) & 96288u), min(_GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), 1u, 1u)))), _GLF_IDENTITY(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), max(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), _GLF_IDENTITY(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), (((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u)))))) * 1u))) - 0u)) ^ ((0u ^ 0u) & 96288u), (_GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), 1u, 1u)))), _GLF_IDENTITY(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), max(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), _GLF_IDENTITY(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), (((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u)))))) * 1u))) - 0u)) ^ ((0u ^ 0u) & 96288u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), 1u, 1u)))), _GLF_IDENTITY(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), max(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), _GLF_IDENTITY(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), (((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u)))))) * 1u))) - 0u)) ^ ((0u ^ 0u) & 96288u), 1u * (_GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), 1u, 1u)))), _GLF_IDENTITY(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), max(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), _GLF_IDENTITY(((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u))))), (((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) << 0u) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * subgroup_size))), 1u, 1u)))))) * 1u))) - 0u)) ^ ((0u ^ 0u) & 96288u)))))))))))), min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (_GLF_IDENTITY(0u, ~ (~ (0u))) + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), clamp(0u + (subgroup_id * subgroup_size), _GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size), _GLF_IDENTITY((128370u & _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))), ((128370u & 0u)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) ^ 0u, uint(uint((subgroup_id) ^ 0u)))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(0u + _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY((128370u & 0u), ((128370u & 0u)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size))), (0u + _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY((128370u & 0u), ((_GLF_IDENTITY(128370u, (128370u) ^ 0u) & 0u)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size)))) * 1u)) | 0u), _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size)), _GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + _GLF_IDENTITY((subgroup_id * subgroup_size), uint(uint((subgroup_id * subgroup_size)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, ~ (~ ((subgroup_size) << 0u))))))))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) << 0u) + (subgroup_id * subgroup_size))), 1u, 1u)))), ((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), _GLF_IDENTITY(uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), 1u, 1u)), max(uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), 1u, 1u)), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), 1u, 1u))))))) - 0u)) ^ _GLF_IDENTITY(((0u ^ 0u) & 96288u), (((0u ^ 0u) & 96288u)) - 0u)))))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(77228u, (77228u) << 0u)) : 1u))), _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(0u + (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (subgroup_size) ^ 0u)), clamp(0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), uint(_GLF_IDENTITY(uvec4(uint(subgroup_size), 1u, 0u, 0u), (uvec4(uint(subgroup_size), 1u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))))))))), _GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((128370u & 0u), ((128370u & 0u)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size)), (false ? _GLF_FUZZED(137323u) : _GLF_IDENTITY((128370u & 0u), ((128370u & 0u)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size))))), (_GLF_IDENTITY(0u + _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY((128370u & 0u), ((128370u & 0u)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), _GLF_IDENTITY((subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (_GLF_IDENTITY((subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), min((subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)), (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) * subgroup_size))), (0u + _GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY((128370u & 0u), ((_GLF_IDENTITY(128370u, (128370u) ^ 0u) & 0u)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))) * subgroup_size)))) * 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) << 0u)) ^ 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size)), _GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), (0u + (subgroup_id * subgroup_size)) ^ 0u))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(0u + (subgroup_id * subgroup_size), 0u | (_GLF_IDENTITY(0u + (subgroup_id * subgroup_size), clamp(0u + (subgroup_id * subgroup_size), 0u + (subgroup_id * subgroup_size), 0u + (subgroup_id * subgroup_size))))))), 1u, 1u)))), ((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), 1u, 1u))), (_GLF_IDENTITY(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), uint(uvec3(((false ? _GLF_FUZZED(num_workgroup) : 0u + (subgroup_id * subgroup_size))), 1u, 1u)))) << 0u))) - 0u)) ^ ((0u ^ _GLF_IDENTITY(0u, (0u) ^ 0u)) & 96288u)))))))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((uvec3(14771u, 54036u, 137267u) , _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))))) + 1, (subgroup_local_id + 1) + 0u)) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (0u | 0u) + (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true && (bool(_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true && (bool(_GLF_IDENTITY((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))) && true)) || false)))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   int i = _GLF_IDENTITY(0, (0) << 0);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.1)), vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), bvec2(false, true))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.1)), vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), bvec2(false, true))).y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, abs(1.0), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))), (mat4x2(injectionSwitch, 0.0, 1.0, 0.0, abs(1.0), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2(_GLF_FUZZED(559.657), (vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, abs(1.0), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))), (mat4x2(injectionSwitch, 0.0, 1.0, 0.0, abs(1.0), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), vec2((vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, abs(1.0), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))), (mat4x2(injectionSwitch, 0.0, 1.0, 0.0, abs(1.0), sin(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[0], _GLF_FUZZED(-544.747)), bvec2(true, false)))).y, injectionSwitch.y))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-15.11, 36.30)) : injectionSwitch)))).y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))), _GLF_IDENTITY(true && (false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0))), false, false, false)))))), (true && (false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0))), false, false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, abs(0.0)), mix(vec4((vec4(injectionSwitch, 0.0, abs(0.0)))[0], (vec4(injectionSwitch, 0.0, abs(0.0)))[1], _GLF_FUZZED(vec2(9.1, 45.12).g), _GLF_FUZZED(-716.325)), vec4(_GLF_FUZZED(-94.65), _GLF_FUZZED((-4.0 / -7418.1275)), (vec4(injectionSwitch, 0.0, abs(0.0)))[2], (vec4(injectionSwitch, 0.0, abs(0.0)))[3]), bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))), ! (! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(853.267)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), false, false, false))))))))))))))) && true))), bool(bvec4((_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true))))) || false), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))))))), true, false, false))))))), ! (! (bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, false, false))))), true && (false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0))), false, false, false))))))))))))), (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))), ! (! (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(853.267)), bool(false))))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false))))))))))))))) && true))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true))))) || false), (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.9)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (bool(true)) && true))))) || false)))) && true), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), false, false)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false, false, false))))))))))))), _GLF_IDENTITY(true, (true) && true), false, false)))))))))), true && (bool(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, false, false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))))))), (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, ! (! (true)))))) && true)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))), ! (! (false || (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false))))))))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, ! (! (true)))))) && true)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))), ! (! (false || (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false))))))))))))), true, true, true)), ! (! (bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, ! (! (true)))))) && true)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))), ! (! (false || (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false))))))))))))), true, true, true)))))))) && true))), bool(bvec4((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))) && true))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))) && true))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.4)), bool(false))) > injectionSwitch.y, false, false, false)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))) && true)), bool(bvec4((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))) && true)), true, true, false)))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))))))))))), true, false, false)))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))))))) && true))))))), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) && true)) || false))))))), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, log(1.0)), (vec3(0.0, 0.0, log(1.0))) / vec3(1.0, 1.0, 1.0))), (float(_GLF_IDENTITY(vec3(0.0, 0.0, log(1.0)), (vec3(0.0, 0.0, log(1.0))) / vec3(1.0, 1.0, 1.0)))) - 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(4.1, float(vec2(4.1, length(vec2(0.0, 0.0)))))), _GLF_FUZZED(-379.242)), bvec2(false, false))))).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  return;
}
