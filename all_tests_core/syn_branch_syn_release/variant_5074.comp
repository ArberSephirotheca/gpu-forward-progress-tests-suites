#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 mat4x3 _f0;
 mat3 _f1;
 uint virtual_gid;
 mat2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_0 {
 uint subgroup_size;
 mat4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2(injectionSwitch[0], 0.0, 0.0, 1.0))), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), 0.0, 0.0), (mat4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), 0.0, 0.0)) * mat4(1.0))), clamp(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), 0.0, 0.0), (mat4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), 0.0, 0.0)) * mat4(1.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), 0.0, 0.0), (mat4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), 0.0, 0.0)) * mat4(1.0))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), 0.0, 0.0), (mat4(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), 0.0, 0.0)) * mat4(1.0)))))).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.2), _GLF_IDENTITY(_GLF_FUZZED(950.691), (_GLF_IDENTITY(_GLF_FUZZED(950.691), max(_GLF_FUZZED(950.691), _GLF_FUZZED(950.691)))) / 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).y)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-7476.2759, 2.1)) : vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]))))) - vec2(0.0, 0.0)).y)) * (injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-7476.2759, 2.1)) : vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]))))) - vec2(0.0, 0.0)).y)) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-7476.2759, 2.1)) : vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]))))) - vec2(0.0, 0.0)).y)) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-7476.2759, 2.1)) : vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]))))) - vec2(0.0, 0.0)).y)) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]), (false ? _GLF_FUZZED(vec2(-7476.2759, 2.1)) : vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]))))) - vec2(0.0, 0.0)).y)) * (injectionSwitch)))).y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0)))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0)))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0)))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(9316.9975)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0)))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0)))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), vec2(_GLF_IDENTITY(vec3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), exp(0.0)), mix(vec3((vec3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), exp(0.0)))[0], _GLF_FUZZED((7.9)), _GLF_FUZZED(40.74)), vec3(_GLF_FUZZED(-2.7), (vec3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), exp(0.0)))[1], (vec3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), exp(0.0)))[2]), bvec3(false, true, true)))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, sqrt(1.0)), (mat4x2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, sqrt(1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).y))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0)))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0)))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0)))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(9316.9975)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0)))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y), bool(true))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0)))), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) / 1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)).y))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), vec2(_GLF_IDENTITY(vec3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), exp(0.0)), mix(vec3((vec3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), exp(0.0)))[0], _GLF_FUZZED((7.9)), _GLF_FUZZED(40.74)), vec3(_GLF_FUZZED(-2.7), (vec3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), exp(0.0)))[1], (vec3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), exp(0.0)))[2]), bvec3(false, true, true)))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, sqrt(1.0)), (mat4x2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch), mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) * (injectionSwitch))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, sqrt(1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).y))))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), false, false))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_SubgroupSize, mat4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true))), true, false, false)))))) || false))))) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))), true, false, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))), true, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, false, false)), false || (bool(bvec3(false, false, false)))), true, false, false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false, true)), bool(bvec2(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(96.54)), vec2(_GLF_FUZZED(-8.9), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) - log(vec2(1.0, 1.0))).x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))), true && ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))))))) || false), false, true)), true))), (bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-205.853) : injectionSwitch.y)))), false, true))) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) || false))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))))))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), (true && (_GLF_IDENTITY(false, false || (false)))) || false))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), true && (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), false || _GLF_IDENTITY((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))), ! (! ((bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(subgroup_id))))))) : _GLF_FUZZED(subgroup_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, clamp(_GLF_IDENTITY(-0.7, mix(float(_GLF_FUZZED(8892.1829)), float(-0.7), bool(true))), -0.7, _GLF_IDENTITY(-0.7, clamp(-0.7, -0.7, _GLF_IDENTITY(-0.7, max(-0.7, -0.7)))))), 6168.4767).p)), bool(false)))))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(941.956, -1.7)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(abs(1.0), (abs(1.0)) * 1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-69.63)), float((injectionSwitch.y)), bool(true))))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), bool(false)), (_GLF_IDENTITY(true, false || (true)) ? mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, min(_GLF_IDENTITY(-0.7, max(-0.7, -0.7)), -0.7)), 6168.4767).p)), (true ? float(_GLF_FUZZED(vec3(6.2, -0.7, _GLF_IDENTITY(6168.4767, (false ? _GLF_FUZZED(4.9) : 6168.4767))).p)) : _GLF_FUZZED(-0.7))), bool(false)) : _GLF_FUZZED(503.306)))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), bool(false))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), bool(false))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), bool(false)))))))) - 0.0)))) || false))))))), ! (_GLF_IDENTITY(! (true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(abs(1.0) * (injectionSwitch.y), clamp(abs(1.0) * (injectionSwitch.y), abs(1.0) * (injectionSwitch.y), _GLF_IDENTITY(abs(1.0) * (injectionSwitch.y), float(mat4(abs(1.0) * (injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), bool(false)))))), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)))), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), bool(false))))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[0], _GLF_FUZZED(9.5)), vec2(_GLF_FUZZED(-502.234), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-503.111))), abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).y, abs(1.0) * _GLF_IDENTITY((injectionSwitch.y), determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-116.821) : (injectionSwitch.y))))))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))))))), false || (_GLF_IDENTITY(! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(_GLF_IDENTITY(6.2, (false ? _GLF_FUZZED(8.1) : 6.2)), -0.7, 6168.4767).p)), bool(false))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), bool(false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-48.71, -9634.1007)) : injectionSwitch)).y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-2.9), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(-2.9), 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(mat4(-7.1, -4.8, -86.83, 99.65, -636.257, 4956.1699, -5524.1931, -42.89, -6.1, 5.2, -6981.5989, 6029.7192, 69.99, -0.4, -1.3, -6.2)) : mat4(_GLF_FUZZED(-2.9), 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))))), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 1.0))).y)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), 6168.4767).p)), bool(false)), clamp(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), 6168.4767).p)), bool(false)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), 6168.4767).p)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), 6168.4767).p)), bool(false)), mix(float(_GLF_FUZZED(-794.587)), float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), 6168.4767).p)), bool(false)), (false ? _GLF_FUZZED(-390.363) : mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), 6168.4767).p)), bool(false))))), bool(true)))))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(abs(1.0) * (injectionSwitch.y), min(abs(1.0) * (injectionSwitch.y), abs(1.0) * (injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_FUZZED(41.34)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, 13.11)))).y))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, 13.11)))).y)))), float(_GLF_FUZZED(-42.72)), bool(false))), bool(true)))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, clamp(-0.7, _GLF_IDENTITY(-0.7, (true ? -0.7 : _GLF_FUZZED(-0.9))), -0.7)), 6168.4767).p)), bool(false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(_GLF_IDENTITY(6.2, (false ? _GLF_FUZZED(8.1) : 6.2)), -0.7, 6168.4767).p)), bool(false))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED((6920.9328 / -6308.5094))), vec2(_GLF_FUZZED(3.8), ((injectionSwitch))[1]), bvec2(false, true))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.8) : injectionSwitch.y))))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), (true ? (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y) : _GLF_FUZZED(86.30)))) * 1.0)), mix(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, -0.7, 6168.4767).p)), bool(false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-48.71, -9634.1007)) : injectionSwitch)).y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-2.9), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(-2.9), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(25.19))), exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(mat4(-7.1, -4.8, -86.83, 99.65, -636.257, 4956.1699, -5524.1931, -42.89, -6.1, 5.2, -6981.5989, 6029.7192, 69.99, -0.4, -1.3, -6.2)) : mat4(_GLF_FUZZED(-2.9), 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))))), min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0)))) - _GLF_ZERO(0.0, injectionSwitch.x)) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))))), 0.0, 1.0))).y)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), _GLF_IDENTITY(6168.4767, clamp(6168.4767, 6168.4767, _GLF_IDENTITY(6168.4767, mix(float(6168.4767), float(_GLF_FUZZED(vec2(418.251, -1.7).s)), bool(false)))))).p)), bool(false)), clamp(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), 6168.4767).p)), bool(false)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), 6168.4767).p)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), _GLF_IDENTITY(6168.4767, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0), _GLF_IDENTITY(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0))), mat2x3(mat3x4(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0)))))))), _GLF_IDENTITY(float(mat3x4(float(_GLF_IDENTITY(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0), _GLF_IDENTITY(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0))), mat2x3(mat3x4(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0)))))))), 1.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat3x4(float(_GLF_IDENTITY(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0), _GLF_IDENTITY(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0))), mat2x3(mat3x4(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0)))))))), 1.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)))))).p, float(mat4(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), _GLF_IDENTITY(6168.4767, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0), _GLF_IDENTITY(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0))), mat2x3(mat3x4(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0)))))))), _GLF_IDENTITY(float(mat3x4(float(_GLF_IDENTITY(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0), _GLF_IDENTITY(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0))), mat2x3(mat3x4(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0)))))))), 1.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat3x4(float(_GLF_IDENTITY(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0), _GLF_IDENTITY(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0))), mat2x3(mat3x4(mat2x3(mat4x3(mat2x3(6168.4767, 1.0, 1.0, cos(0.0), 1.0, 1.0)))))))), 1.0, round(length(normalize(1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)))))).p, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0))))), bool(false)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-794.587), min(_GLF_FUZZED(-794.587), _GLF_FUZZED(-794.587)))), float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(_GLF_IDENTITY(-0.7, min(-0.7, -0.7)), (-0.7) / 1.0), 6168.4767).p)), bool(false)), (false ? _GLF_FUZZED(-390.363) : mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, abs(1.0) * (injectionSwitch.y))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, (-0.7) / 1.0), 6168.4767).p)), bool(false))))), bool(true)))))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(abs(1.0) * (injectionSwitch.y), (abs(1.0) * (injectionSwitch.y)) - length(0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, abs(1.0) * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat3x2(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 0.0, 0.0)))).y, _GLF_IDENTITY(abs(1.0) * (injectionSwitch.y), min(abs(1.0) * (injectionSwitch.y), abs(1.0) * (injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y)), mix(float(_GLF_FUZZED(41.34)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, 13.11)))).y))), mix(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, 13.11)))).y)), (_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.5, 13.11)))).y))) - abs(0.0)))), float(_GLF_FUZZED(-42.72)), bool(false))), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))))))))))), float(_GLF_FUZZED(vec3(6.2, _GLF_IDENTITY(-0.7, clamp(-0.7, _GLF_IDENTITY(_GLF_IDENTITY(-0.7, (true ? -0.7 : _GLF_FUZZED(-0.9))), (_GLF_IDENTITY(-0.7, (true ? -0.7 : _GLF_FUZZED(-0.9)))) + 0.0), -0.7)), 6168.4767).p)), bool(false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), bool(bvec4(bool(bvec2((false), false)), true, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8.7))) > injectionSwitch.y))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))))))), mix(float(_GLF_FUZZED(-6839.0695)), float(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0))))))))), bool(true)))), max(float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))))))), mix(float(_GLF_FUZZED(-6839.0695)), float(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0))))))))), bool(true)))), float(_GLF_IDENTITY(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))))))), mix(float(_GLF_FUZZED(-6839.0695)), float(float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-84.89)), bool(false))), 1.0, 0.0))), 1.0, 1.0))))))))), bool(true)))))))) > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))).y))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), false, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true)), (bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true)))), true, true))), false, true))) && true))))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(mat4x3(1.0), mat3(1.0), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) ^ 0u))), (workgroup_base) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) : 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) + 0u)), 0u + (_GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) + 0u)), (true ? 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) + 0u)) : _GLF_FUZZED(subgroup_local_id))))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : 0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u) >> 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) + 0u)), uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) + 0u)), 1u))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : 0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u) >> 0u)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) + 0u)))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_local_id) : 0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u) >> 0u)))))))) ^ 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)), _GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))) * _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, clamp(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)), _GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size))) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), clamp((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) >> (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))) + subgroup_local_id, mat2(1.0), vec4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-28.71), (min(injectionSwitch, injectionSwitch))[1]), vec2((min(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-8146.4652)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), min(injectionSwitch, injectionSwitch)))).y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), (vec3(injectionSwitch.y, 1.0, 1.0)) * mat3(1.0))))))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_0.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_0.subgroup_size, subgroup_id * _GLF_struct_replacement_0.subgroup_size, subgroup_id * _GLF_struct_replacement_0.subgroup_size)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, ~ (~ (1))))) / _GLF_IDENTITY(1, (1) << 0)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1)) << 0)) % _GLF_struct_replacement_0.subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / 1, ~ (~ ((_GLF_IDENTITY(1, (1) / 1)) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, (1) / 1)) / 1)) << 0)) % _GLF_struct_replacement_0.subgroup_size, min((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1)) << 0)) % _GLF_struct_replacement_0.subgroup_size, (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1), (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)) / 1, max((_GLF_IDENTITY(1, (1) / 1)) / 1, (_GLF_IDENTITY(1, (1) / 1)) / 1)))) << 0)) % _GLF_struct_replacement_0.subgroup_size)))), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) / 1)) / 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((_GLF_IDENTITY(1, (1) << 0))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), 0 | ((_GLF_IDENTITY(1, (1) << 0))))), ((_GLF_IDENTITY((1), 0 | ((_GLF_IDENTITY(1, (1) << 0)))))) ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (false ? _GLF_FUZZED(6488) : ~ (0))))))) ^ 0)) / 1)) / _GLF_IDENTITY(1, (1) / 1))) << 0)), ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) / 1)) / 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | _GLF_IDENTITY((_GLF_IDENTITY((1), 0 | ((_GLF_IDENTITY(1, (1) << 0))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) / 1)), 0 | ((_GLF_IDENTITY(1, (1) << 0))))), ((_GLF_IDENTITY((1), 0 | ((_GLF_IDENTITY(1, (1) << 0)))))) ^ _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (false ? _GLF_FUZZED(6488) : ~ (0))))))) ^ 0)) / 1)) / _GLF_IDENTITY(1, (1) / 1))) << 0))) / 1u) % _GLF_struct_replacement_0.subgroup_size) * 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_1.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_1.virtual_gid, (_GLF_IDENTITY(true ? _GLF_struct_replacement_1.virtual_gid : _GLF_FUZZED(workgroup_id), max(true ? _GLF_struct_replacement_1.virtual_gid : _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(true ? _GLF_struct_replacement_1.virtual_gid : _GLF_FUZZED(workgroup_id), (true ? _GLF_struct_replacement_1.virtual_gid : _GLF_FUZZED(workgroup_id)) >> 0u))))), _GLF_struct_replacement_1.virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) < _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, min(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size))) >> 0u), bool(_GLF_IDENTITY(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, min(_GLF_struct_replacement_0.subgroup_size, _GLF_struct_replacement_0.subgroup_size)), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_size, (_GLF_struct_replacement_0.subgroup_size) - 0u), _GLF_struct_replacement_0.subgroup_size)), true, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), uint(uvec4((uint(2)), 1u, 1u, 0u))) >> 0u))), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? 43.79 : 113.426))), bool(false))), 1.0, 0.0, 0.0, 0.0))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)))), injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)))), injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)))), injectionSwitch)).x), float(_GLF_FUZZED(-5.2)), bool(false))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), clamp(min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)))), injectionSwitch)).x)) > injectionSwitch.y)))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-123.092) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.3)), float(0.0), bool(true))))), 1.0, _GLF_IDENTITY(0.0, float(mat4x2(0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))), vec2(0.0, 1.0)))))), 0.0, 0.0))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), false, _GLF_IDENTITY(false, false || (false)), false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0), mix(vec2(_GLF_FUZZED((- -1.4)), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))[0], _GLF_FUZZED(164.713)), bvec2(true, false)))) : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.8), (injectionSwitch)[1]), (true ? vec2(_GLF_FUZZED(6.8), (injectionSwitch)[1]) : _GLF_FUZZED(acosh(vec2(-8.8, -4.3))))), vec2((injectionSwitch)[0], _GLF_FUZZED(3.4)), bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true), false))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), _GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (true && ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (true && ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), true && (! (true && ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))), false))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_DEAD(false))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_DEAD(false)))))))), bool(bool(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_DEAD(false)))))))))))))))), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))))), _GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec4(true && (_GLF_DEAD(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, false, false))))))))), false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - abs(0.0)) > injectionSwitch.y))))))))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
}
