#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y))), (injectionSwitch.y))) - 0.0), _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) || false)))), true, _GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), true, true)), true, true, false))))), ! (! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(vec4(-5.3, 9.5, -6.2, 5853.7745)[2]) : injectionSwitch[1])))).y)))), true, true)), bool(bvec4(bool(bvec4(true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true, true, false)))))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), ! (_GLF_IDENTITY(! (! (! (! (true)))), ! (! (! (! (! (! (true)))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) || false))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true)))))))))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(bvec2(false, true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), (bool(bool(injectionSwitch.x < injectionSwitch.y))) || _GLF_IDENTITY(false, false || (false)))))), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)), true, true)), true, true, false))))), ! (! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true))))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && true)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)), bool(bvec4(bool(bvec4(true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), _GLF_IDENTITY(true, ! (! (true))), true, false)))))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1398.7964), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - abs(0.0)), _GLF_FUZZED(19.58)), bvec2(true, false))).y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true, false))) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true, false))) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true, false))) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && true) || (true)), true, false))) && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true)), false || (bool(bvec2(_GLF_IDENTITY((false), ((false)) || false), true))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))), true, true))))) && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true && (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(97.42)), bool(false))))), true && (injectionSwitch.x < injectionSwitch.y))), true))), bvec2(bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), true))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(97.42)), bool(false)))), max(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(97.42)), bool(false)))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(97.42)), bool(false)))), float(mat4(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(97.42)), bool(false)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))), (true ? float(vec3(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(97.42)), bool(false)))), float(mat4(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(97.42)), bool(false)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))))) : _GLF_FUZZED(-626.013)))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(97.42)), bool(false)))), (true ? clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(97.42)), bool(false)))) : _GLF_FUZZED(-1.0)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) < injectionSwitch.y))), true))), bvec2(bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), true)))))))))) || false)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))), false || (((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))))) || false), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) && true)))), ! (! _GLF_IDENTITY((true && (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! ((true && (! (_GLF_IDENTITY(false, ! (! (false))))))), (! ((true && (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false)))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) && true))) || false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(53.91)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), (_GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups)))) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))), max(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), max(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, 0u + (0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u))))), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u)))) - uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u)), max(gl_NumWorkGroups, gl_NumWorkGroups)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), max(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u)))) - uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), max(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u)))) - uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), max(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u)))) - uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u))))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), max(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u)))) - uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), max(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u)))) - uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u)))), _GLF_IDENTITY(max(gl_NumWorkGroups, gl_NumWorkGroups), (max(gl_NumWorkGroups, gl_NumWorkGroups)) - uvec3(0u, 0u, 0u))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), (_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(25626u, 80214u, 72145u)) : _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))), 0u))))), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY((gl_NumWorkGroups), (false ? _GLF_FUZZED((uvec3(83546u, 90630u, 146213u) << uvec3(82804u, 69511u, 99594u))) : (gl_NumWorkGroups))))))) | (uvec3((gl_NumWorkGroups))))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED(uvec3(145394u, 199344u, 13238u)))), uvec3(1u, 1u, 1u))))) | ((gl_NumWorkGroups)))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(25626u, 80214u, 72145u)) : _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))), 0u))))), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY((gl_NumWorkGroups), (false ? _GLF_FUZZED((uvec3(83546u, 90630u, 146213u) << uvec3(82804u, 69511u, 99594u))) : (gl_NumWorkGroups))))))) | (uvec3((gl_NumWorkGroups))))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED(uvec3(145394u, 199344u, 13238u)))), uvec3(1u, 1u, 1u))))) | ((gl_NumWorkGroups)))), ((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(25626u, 80214u, 72145u)) : _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))), 0u))))), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY((gl_NumWorkGroups), (false ? _GLF_FUZZED((uvec3(83546u, 90630u, 146213u) << uvec3(82804u, 69511u, 99594u))) : (gl_NumWorkGroups))))))) | (uvec3((gl_NumWorkGroups))))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED(uvec3(145394u, 199344u, 13238u)))), uvec3(1u, 1u, 1u))))) | ((gl_NumWorkGroups))))) | ((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(25626u, 80214u, 72145u)) : _GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec4(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))), 0u))))), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY((gl_NumWorkGroups), (false ? _GLF_FUZZED((uvec3(83546u, 90630u, 146213u) << uvec3(82804u, 69511u, 99594u))) : (gl_NumWorkGroups))))))) | (uvec3((gl_NumWorkGroups))))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), max(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED(uvec3(145394u, 199344u, 13238u)))), uvec3(1u, 1u, 1u))))) | ((gl_NumWorkGroups)))))) : _GLF_FUZZED(uvec3(82112u, 145637u, 119554u))))))) - uvec3(0u, 0u, 0u)), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), max(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u)))) / uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u)), max(gl_NumWorkGroups, gl_NumWorkGroups)).x), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), max(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u)))) - uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u)), max(gl_NumWorkGroups, gl_NumWorkGroups)).x), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), max(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u)))) - uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u)), max(gl_NumWorkGroups, gl_NumWorkGroups)).x)) ^ 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))), uvec3(_GLF_IDENTITY(uvec3((_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups))))), min(uvec3((_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups))))), uvec3((_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups))))))))))), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), max((0u), (0u)))))) << 0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), 0u | ((_GLF_IDENTITY(0u, (0u) / 1u)))), 0u, 1u, (1u & 1u)))) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), (0u) / 1u)) - 0u)) / 1u), 0u), max(uvec3(_GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(subgroup_size)))) | 0u)) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, (0u & 139095u)), (uvec3(1u, 1u, (0u & 139095u))) / uvec3(1u, 1u, 1u)))))) / 1u), 0u)))) - uvec3(0u, 0u, 0u))) / uvec3(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), max(gl_NumWorkGroups, gl_NumWorkGroups)).x), ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(uvec3((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)))), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u + (0u), (0u + (0u)) | (0u + (0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u))), 0u), max(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, ((0u) / 1u) ^ 0u))) / 1u), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u)))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(0u, 0u, 0u) : _GLF_FUZZED(uvec3(93263u, 99087u, 175441u)))))) / uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u)), max(gl_NumWorkGroups, gl_NumWorkGroups)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), (_GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), min((_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)))))), (_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) + ((_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups)))), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), (_GLF_IDENTITY(uvec3((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (uvec3((gl_NumWorkGroups))))) | (uvec3((gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u))))) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups))))))))) << uvec3(0u, 0u, 0u)))), ((gl_NumWorkGroups)) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) / 1u)), ((_GLF_IDENTITY(0u, (0u) / 1u))) + 0u)) | ((_GLF_IDENTITY(0u, (0u) / 1u)))) / 1u), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u), max(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (0u) / 1u)) / 1u), 0u), uvec3(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) / 1u), 0u)))) - uvec3(0u, 0u, 0u))) / _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), uint(uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), 1u, 1u), clamp(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), uint(uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), uint(uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), 1u, 1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), uint(uvec3(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), 1u, 1u)))), max(gl_NumWorkGroups, gl_NumWorkGroups)).x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-3.9), _GLF_FUZZED(-256.816)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(533.967, 11.11, 50.57, -467.603)))), transpose(transpose(mat2(1.0)))), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0))))[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(96.37)), float((0.0)), bool(true)))) - 0.0) / 1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat4x3(0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9760.2594)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.8))))), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-113.032)), float(0.0), bool(true))), float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat4(-604.224, -152.820, 3.0, 9.8, -332.501, 5492.2909, 922.778, -0.7, 39.89, -343.933, 5696.1984, -413.954, -15.60, -960.538, 35.84, 1168.0441)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(54.33))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(mat4(-604.224, -152.820, 3.0, 9.8, -332.501, 5492.2909, 922.778, -0.7, 39.89, -343.933, 5696.1984, -413.954, -15.60, -960.538, 35.84, 1168.0441)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-2.1), min(_GLF_IDENTITY(_GLF_FUZZED(-2.1), max(_GLF_FUZZED(-2.1), _GLF_FUZZED(-2.1))), _GLF_FUZZED(-2.1))))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(transpose(transpose(_GLF_IDENTITY((false ? _GLF_FUZZED(mat4(-604.224, -152.820, 3.0, 9.8, -332.501, 5492.2909, 922.778, -0.7, 39.89, -343.933, _GLF_IDENTITY(5696.1984, mix(float(_GLF_FUZZED(-61.67)), float(5696.1984), bool(true))), -413.954, -15.60, -960.538, 35.84, 1168.0441)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(transpose((false ? _GLF_FUZZED(mat4(-604.224, -152.820, 3.0, 9.8, -332.501, 5492.2909, 922.778, -0.7, 39.89, -343.933, 5696.1984, -413.954, -15.60, -960.538, 35.84, 1168.0441)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 0.0)), max(float(mat3(0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 0.0)), float(mat3(0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 0.0))))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))), (true ? transpose(transpose(_GLF_IDENTITY((false ? _GLF_FUZZED(mat4(-604.224, -152.820, 3.0, 9.8, -332.501, 5492.2909, 922.778, -0.7, 39.89, -343.933, _GLF_IDENTITY(5696.1984, mix(float(_GLF_FUZZED(-61.67)), float(5696.1984), bool(true))), -413.954, -15.60, -960.538, 35.84, 1168.0441)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - sin(0.0)), 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), transpose(_GLF_IDENTITY(transpose((false ? _GLF_FUZZED(mat4(-604.224, -152.820, 3.0, 9.8, -332.501, 5492.2909, 922.778, -0.7, 39.89, -343.933, 5696.1984, -413.954, -15.60, -960.538, 35.84, 1168.0441)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 0.0)), max(float(mat3(0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 0.0)), float(mat3(0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 0.0))))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), transpose(transpose(transpose((false ? _GLF_FUZZED(mat4(-604.224, -152.820, 3.0, 9.8, -332.501, 5492.2909, 922.778, -0.7, 39.89, -343.933, 5696.1984, -413.954, -15.60, -960.538, 35.84, 1168.0441)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 0.0)), max(float(mat3(0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 0.0)), float(mat3(0.0, 1.0, 1.0, sqrt(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), 0.0))))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))))))) : _GLF_FUZZED(mat4(-940.432, 976.748, 1417.2557, -62.90, 0.1, 41.65, -4.6, -32.60, -920.050, 1.8, 9.1, -8.0, -9108.3851, 2.3, 0.7, -6.3)))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0)))))) * mat2(1.0)))[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-87689)))], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(0), int(0))))) ^ 0)))] : _GLF_FUZZED(-1143.3415)))), bvec2(true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, true))))), ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, exp(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, cos(0.0), 0.0))).x < injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (false))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, true, true)))))))), true, true, true)))))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)))), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), gl_WorkGroupSize)).x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-36.86) : 0.0)), 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0), vec4(1.0, 0.0, 0.0, 0.0))), sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.7)), float(1.0), bool(true)))), 0.0, abs(0.0), 0.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 1.0 * (0.0)) : _GLF_FUZZED(76.85))))), 1.0))), injectionSwitch)).y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), sqrt(1.0), 0.0, abs(0.0), _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-327.896) : 1.0)), 0.0, cos(0.0), determinant(mat2(0.0, abs(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), sin(0.0), 0.0, 1.0, 0.0))), 1.0, 1.0, abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-512.228)), bool(false)))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], gl_WorkGroupSize[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), 0 + (int(6))), int(6)))), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 >> _GLF_IDENTITY(int(6), int(6)))), clamp(0 >> _GLF_IDENTITY(int(6), int(6)), 0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (6), (~ (6)) | (~ (6))))))), 0 >> _GLF_IDENTITY(int(6), int(6)))))), 0 | (1)), _GLF_IDENTITY(1, ~ (~ (1)))))], _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u)))[_GLF_IDENTITY(_GLF_IDENTITY(2, 0 | (2)), _GLF_IDENTITY((2) >> 0, max((2) >> 0, (2) >> 0)))]), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, 0 | (0)), 0, 0), clamp(clamp(0, 0, 0), clamp(0, 0, 0), clamp(0, 0, 0))))], gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | 0), (false ? _GLF_FUZZED(floatBitsToInt(-35.30)) : 1))], gl_WorkGroupSize[2]), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))[1], gl_WorkGroupSize[2])) | (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))[1], gl_WorkGroupSize[2])))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(uvec3((_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))]), max(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))]), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))])))))), uvec3(_GLF_IDENTITY(uvec3(uvec3(uvec3((uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 0))))))], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) * 1)))]))))), uvec3(uvec3(uvec3(uvec3(uvec3((uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), clamp(0, 0, 0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 1u * (_GLF_IDENTITY(gl_WorkGroupSize[2], (true ? gl_WorkGroupSize[2] : _GLF_FUZZED(mix(subgroup_size, subgroup_local_id, true))))))))))))))))) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], clamp(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, (1 & 1), 1, 1)))) ^ 0), 0))], gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), max(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)))], gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))[1], gl_WorkGroupSize[2]), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))[1], gl_WorkGroupSize[2]), (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))[1], gl_WorkGroupSize[2])) | (uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))[1], gl_WorkGroupSize[2])))) / uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(uvec3((_GLF_IDENTITY(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))]), max(uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))]), uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, max(2, 2))])))))), uvec3(_GLF_IDENTITY(uvec3(uvec3(uvec3((uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))], gl_WorkGroupSize[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 0))))))], gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, (2) * 1)))]))))), uvec3(uvec3(uvec3(uvec3(uvec3((uvec3(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), clamp(0, 0, 0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], 1u * (_GLF_IDENTITY(gl_WorkGroupSize[2], (true ? gl_WorkGroupSize[2] : _GLF_FUZZED(mix(subgroup_size, subgroup_local_id, true))))))))))))))))) | (uvec3(_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))], clamp(gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, (1 & 1), 1, 1)))) ^ 0), 0))], gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), max(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)))], gl_WorkGroupSize[_GLF_IDENTITY(0, clamp(0, 0, 0))])), gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) ^ uvec3(0u, 0u, 0u)))))))), gl_WorkGroupSize)).x : _GLF_FUZZED(num_workgroup)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 1.0, 1.0))))).y)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-68.66 / 3882.7049)), _GLF_FUZZED(90.18)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), 1.0 * (float(mat4(_GLF_IDENTITY(1.0, (1.0) / 1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))), 0.0, 0.0, 1.0, 1.0))))).y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, true, false))), true, _GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, true, false))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, true, false))), true, false), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, true, false))), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, true, false))), true, false), true)), false))), true))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false)), ! (! (bool(bvec4(bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y) - 0.0)), ((injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))) && true)))), ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))) && true))))) && true) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)).y)))), false, false, _GLF_IDENTITY(true, ! (! (true))))))), true)))))
    return;
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - log(1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0), (mat4x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0)) - mat4x2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(-952.032)), float(log(1.0)), bool(true))))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(89.15)), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) / 1u), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 1u, 0u))) : _GLF_FUZZED(max(workgroup_size, subgroup_local_id))))) - 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)), max(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)))))))), (true ? (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (subgroup_size) / 1u)) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : workgroup_base, uint(uint(false ? _GLF_FUZZED(num_workgroup) : workgroup_base)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : workgroup_base), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : workgroup_base), (false ? _GLF_FUZZED(subgroup_size) : (false ? _GLF_FUZZED(num_workgroup) : workgroup_base)))) / 1u)) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : workgroup_base), ((false ? _GLF_FUZZED(num_workgroup) : workgroup_base)) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)), uint(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : workgroup_base), ((false ? _GLF_FUZZED(num_workgroup) : workgroup_base)) << (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u, (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) * 1u)) | 0u))), 0u, 0u)))) | 0u))) << (167676u & 0u)) + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) | (0u | 0u)), 0u + (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size), uint(uvec2((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) >> 0u))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) >> 0u, 0u + (_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size), uint(uvec2((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) >> 0u)))) | 0u)) ^ 0u))) + ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(79713) : 1)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(79713) : 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(79713) : 1))) ^ 0)))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), (true ? ~ (_GLF_FUZZED(workgroup_id)) : _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), (true ? ~ (_GLF_FUZZED(workgroup_id)) : _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id)))), (true ? ~ (_GLF_FUZZED(workgroup_id)) : _GLF_FUZZED(next_virtual_gid)))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), ((_GLF_FUZZED(workgroup_id))) ^ 0u)) / 1u), (true ? ~ (_GLF_FUZZED(workgroup_id)) : _GLF_FUZZED(next_virtual_gid)))))) - (1u ^ 1u)))) : virtual_gid, 1u * (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), (true ? ~ (_GLF_FUZZED(workgroup_id)) : _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_id)), (true ? ~ (_GLF_FUZZED(workgroup_id)) : _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) | (_GLF_FUZZED(workgroup_id)))), (true ? ~ (_GLF_FUZZED(workgroup_id)) : _GLF_FUZZED(next_virtual_gid)))) | (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY((_GLF_FUZZED(workgroup_id)), ((_GLF_FUZZED(workgroup_id))) ^ 0u)) / 1u), (true ? ~ (_GLF_FUZZED(workgroup_id)) : _GLF_FUZZED(next_virtual_gid)))))) - (1u ^ 1u)))) : virtual_gid)))), _GLF_IDENTITY(virtual_gid, (virtual_gid) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0)) ^ 0), int(ivec4((_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) << 0)) ^ 0), 1, (1 | 1), 1))) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(max(4, 4), 0 ^ (max(4, 4))))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(max(4, 4), 0 ^ (max(4, 4)))))) | 0), int(int(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(max(4, 4), 0 ^ (max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4))) | (4)), 4)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(max(4, 4), 0 ^ (max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4))) | (4)), 4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(max(4, 4), 0 ^ (max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4))) | (4)), 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(max(4, 4), 0 ^ (max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4))) | (4)), 4))))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(max(4, 4), 0 ^ (max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4))) | (4)), 4))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(max(4, 4), 0 ^ (max(4, 4))))) : _GLF_FUZZED(-96155))))))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(9.1), (_GLF_FUZZED(9.1)) / 1.0) : injectionSwitch.x)), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.9)), bool(false))))))) - 0.0), 0.0, 0.0, 0.0)), clamp(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.1) : injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(9.1) : injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.1) : injectionSwitch.x)), 0.0, 1.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))))), (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))))) ^ 0u)), (~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1))))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), max(~ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))), ~ (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) ^ 0u)) / 1u)))))) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) / 1u)))) + 1), ~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))) + 1), _GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) / _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_FUZZED(subgroup_id)))))) + _GLF_IDENTITY(1, clamp(1, 1, 1)))), ((~ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 0u)), clamp(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 0u)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 0u)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (subgroup_local_id) / _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : 1u)))) / _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(uvec2(_GLF_FUZZED(subgroup_id), 0u))), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), _GLF_FUZZED(subgroup_id)))))))) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))))) * 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)), 1u * (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), min(0 | (1), 0 | (1))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) / 1u) + 1), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) / 1u) + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), _GLF_IDENTITY(uint(uvec3(0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)), ~ (~ (uint(uvec3(0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))))))) / 1u) + 1))), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) / 1u, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) / 1u) >> 0u)))) + _GLF_IDENTITY(1, clamp(1, 1, 1)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))), max(((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)), 1u * (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (subgroup_local_id)))))))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) / 1u) + 1), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) / 1u) + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) / 1u) + 1))), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) / 1u, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) / 1u) >> 0u)))) + _GLF_IDENTITY(1, clamp(1, 1, 1)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)), 1u * (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))), ~ (~ (subgroup_local_id)))))) / 1u) + 1), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) / 1u) + 1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))))) / 1u) + 1))), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) / 1u, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) / 1u) >> 0u)))) + _GLF_IDENTITY(1, clamp(1, 1, 1)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) + 0u))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_local_id)))), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id)), (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) - 0u)) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, uint(uvec3(7u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), max(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id)), (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) - 0u)) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, uint(uvec3(7u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), max(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 0u | ((_GLF_IDENTITY(~ ((subgroup_local_id)), (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) - 0u)) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, uint(uvec3(7u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), max(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))))))))))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) : _GLF_FUZZED(virtual_gid))))))))) | (~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) / 1)), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) : _GLF_FUZZED(virtual_gid))))))))) | (~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) / 1)), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) / 1u), uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_local_id)))), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id)), (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) - 0u)) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, uint(uvec3(7u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), max(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id)), (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) - 0u)) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, uint(uvec3(7u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), max(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 0u | ((_GLF_IDENTITY(~ ((subgroup_local_id)), (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) - 0u)) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, uint(uvec3(7u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), max(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))))))))))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) : _GLF_FUZZED(virtual_gid))))))))) | (~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) / 1)), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) : _GLF_FUZZED(virtual_gid))))))))) | (~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) / 1)), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) / 1u), (((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)) : _GLF_FUZZED(subgroup_local_id)))), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id)), (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) - 0u)) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, uint(uvec3(7u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), max(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id)), (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) - 0u)) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, uint(uvec3(7u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), max(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), 0u | ((_GLF_IDENTITY(~ ((subgroup_local_id)), (~ _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) - 0u)) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, uint(uvec3(7u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), max(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))))))))))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) | _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) : _GLF_FUZZED(virtual_gid))))))))) | (~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) / 1)), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), 0u + (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), (true ? uint(_GLF_IDENTITY(uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(num_workgroup) : uint(clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) : _GLF_FUZZED(virtual_gid))))))))) | (~ (_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))) / 1)), clamp(~ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), ~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))) / 1u)) >> 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u), subgroup_local_id + 1, subgroup_local_id + 1)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(clamp(~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (~ (~ (subgroup_local_id + 1)))), ~ (subgroup_local_id + 1)), uint(_GLF_IDENTITY(uvec2(clamp(~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (~ (~ (subgroup_local_id + 1)))), ~ (subgroup_local_id + 1)), 1u), min(uvec2(clamp(~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (~ (~ (subgroup_local_id + 1)))), ~ (subgroup_local_id + 1)), 1u), uvec2(clamp(~ (subgroup_local_id + 1), _GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (~ (~ (subgroup_local_id + 1)))), ~ (subgroup_local_id + 1)), 1u)))))), (true ? _GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u), clamp(~ _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), ~ (subgroup_local_id + 1), ~ (subgroup_local_id + 1))) : _GLF_FUZZED((30549u << _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (uint(7u)) / (_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) | 0u)))) / 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) * 1u), _GLF_IDENTITY(uint(7u), uint(7u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED((num_workgroup ^ workgroup_id)) : (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED((num_workgroup ^ workgroup_id)) : (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED((num_workgroup ^ workgroup_id)) : (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED((num_workgroup ^ workgroup_id)) : (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) >> 0u))))) | (_GLF_IDENTITY(~ (subgroup_local_id + 1), clamp(_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u), ~ (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))), ~ (subgroup_local_id + 1))))))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mix(vec2((vec2((injectionSwitch)[0], (injectionSwitch)[1]))[0], (vec2((injectionSwitch)[0], (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(2.1), _GLF_FUZZED(32.43)), bvec2(false, false))))), vec2(_GLF_FUZZED(-5.3), _GLF_FUZZED(9182.1081)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))) && true)) && true)))), (true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))) && true)) && true))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((2), min((2), (2))) / 1, (0 & -29830) | (_GLF_IDENTITY((2), min((2), (2))) / 1)), (false ? _GLF_FUZZED(sign(i)) : _GLF_IDENTITY((2), min((2), (2))) / 1)))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) | (0 | _GLF_IDENTITY(0, ~ (~ (0))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), (! ((! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), (! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) || _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))) && true))))))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4932.0477)), vec2(_GLF_FUZZED(-407.742), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(41416))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(vec3((injectionSwitch)[0], tan(0.0), 0.0))))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))[0], (injectionSwitch)[0], (injectionSwitch)[0]))) + 0.0), _GLF_FUZZED(-8619.5556)), vec2(_GLF_FUZZED(95.02), (injectionSwitch)[1]), bvec2(false, true)), (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(vec3((injectionSwitch)[0], tan(0.0), 0.0))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0], clamp((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0])), exp(sqrt(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, cos(0.0)), _GLF_IDENTITY(mat4x3(mat4x3(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0], clamp((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0])), exp(sqrt(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, cos(0.0)))), mat3(1.0) * (mat4x3(mat4x3(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0], clamp((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, tan(0.0), _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x)))))[0])), exp(sqrt(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, cos(0.0))))))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))[0], (injectionSwitch)[0]))) + 0.0), _GLF_FUZZED(-8619.5556)), vec2(_GLF_FUZZED(95.02), (injectionSwitch)[1]), bvec2(false, true))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
