#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), min(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0))))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), (_GLF_FUZZED(-264.669)) / 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_FUZZED(-264.669))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true))))).y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), min(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0))))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), (_GLF_FUZZED(-264.669)) / 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_FUZZED(-264.669))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true))))).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), min(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0))))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), (_GLF_FUZZED(-264.669)) / 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_FUZZED(-264.669))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true))))).y)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(84.28)), vec2(_GLF_FUZZED(-264.669), (injectionSwitch)[1]), bvec2(false, true))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(9.9, 0.1))))))[0], _GLF_FUZZED(84.28)), vec2(_GLF_FUZZED(-264.669), (injectionSwitch)[1]), bvec2(false, true))))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(9.9, 0.1))))))[0], _GLF_FUZZED(84.28)), vec2(_GLF_FUZZED(-264.669), (injectionSwitch)[1]), bvec2(false, true))))).y) * 1.0))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), min(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0))))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), (_GLF_FUZZED(-264.669)) / 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_FUZZED(-264.669))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true))))).y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), min(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0))))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), (_GLF_FUZZED(-264.669)) / 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_FUZZED(-264.669))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true))))).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), min(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0))))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), (_GLF_FUZZED(-264.669)) / 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_FUZZED(-264.669))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true))))).y)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(84.28)), vec2(_GLF_FUZZED(-264.669), (injectionSwitch)[1]), bvec2(false, true))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(9.9, 0.1))))))[0], _GLF_FUZZED(84.28)), vec2(_GLF_FUZZED(-264.669), (injectionSwitch)[1]), bvec2(false, true))))).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(9.9, 0.1))))))[0], _GLF_FUZZED(84.28)), vec2(_GLF_FUZZED(-264.669), (injectionSwitch)[1]), bvec2(false, true))))).y) * 1.0))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), vec2(1.0, 1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), min(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), (true ? vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))) : _GLF_FUZZED(injectionSwitch))), vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0))))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), (_GLF_FUZZED(-264.669)) / 1.0))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-264.669, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(-264.669, (-264.669) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), abs(tan(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0, log(1.0), cos(0.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(-264.669, (-264.669) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), abs(tan(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0, log(1.0), cos(0.0)), (mat4(_GLF_IDENTITY(-264.669, (-264.669) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), abs(tan(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0, log(1.0), cos(0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(2.2, 8.7, 7844.8873, 5188.1978, -3957.5652, -7.2, -1.0, -398.263, -71.55, 150.778, -7.7, 5934.8842, 13.35, 1.0, 4.7, -0.5)) : transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(-264.669, (-264.669) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), abs(tan(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0, log(1.0), cos(0.0)), (mat4(_GLF_IDENTITY(-264.669, (-264.669) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), abs(tan(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), 0.0, log(1.0), cos(0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))), clamp(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_FUZZED(-264.669))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true))))).y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, _GLF_IDENTITY(84.28, min(84.28, _GLF_IDENTITY(84.28, min(84.28, 84.28))))))))) + vec2(0.0, 0.0)))), min(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, _GLF_IDENTITY(84.28, (_GLF_IDENTITY(84.28, clamp(84.28, 84.28, 84.28))) - 0.0))))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0))))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), (_GLF_FUZZED(-264.669)) / 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_FUZZED(-264.669))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bool(! ((_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bool(! ((_GLF_IDENTITY(false, ! (! (false)))))))))), false, false))))))), true))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 0.0))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), min(vec2(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0))), (vec2(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28)))), (vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(84.28, max(84.28, 84.28))))) + vec2(0.0, 0.0)))) * vec2(1.0, 1.0)))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_IDENTITY(_GLF_FUZZED(-264.669), max(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-264.669, clamp(_GLF_IDENTITY(-264.669, (false ? _GLF_FUZZED(distance(vec4(903.001, 8.4, 8.2, 7171.6406), vec4(-5.3, -4022.5804, 83.29, -6474.4536))) : -264.669)), -264.669, -264.669))), max(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), (_GLF_FUZZED(-264.669)) / 1.0))), _GLF_IDENTITY(_GLF_FUZZED(-264.669), clamp(_GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669), _GLF_FUZZED(-264.669))), _GLF_FUZZED(-264.669))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true))))).y)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(49.99, 0.1)) : injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(84.28), (_GLF_FUZZED(84.28)) / 1.0)), vec2(_GLF_FUZZED(-264.669), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), true)))))))))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0)))), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED((vec2(7.2, 6.6) + -888.322)) : (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))))), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(9.9, 0.1))))))[0], _GLF_FUZZED(84.28)), mat2(1.0) * (vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0)))), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED((vec2(7.2, 6.6) + -888.322)) : (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0))))), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) : _GLF_FUZZED(vec2(9.9, 0.1))))))[0], _GLF_FUZZED(84.28)))), vec2(_GLF_FUZZED(-264.669), (injectionSwitch)[1]), bvec2(false, true))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sin(vec2(-8.6, 30.19))) : injectionSwitch)), injectionSwitch)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) * mat2(1.0)), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), mix(vec2(_GLF_FUZZED(-480.070), _GLF_FUZZED(0.4)), vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[0], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[1], (((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))[1]) + 0.0)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) : _GLF_FUZZED(vec2(9.9, 0.1))))))[0], _GLF_FUZZED(84.28)), vec2(_GLF_FUZZED(-264.669), (injectionSwitch)[1]), bvec2(false, true))))).y) * 1.0)))) || false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         return;
        }
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)).x, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(49.16) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))), false), bvec2(bvec3(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))), false), false)))))), (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))), false), bvec2(bvec3(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false))))))), false), false))))))) || false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bool(bool(bvec4(false, true, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bool(bool(bvec4(false, true, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false)))))))))))))))))) || false)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), true && (bool(bvec4(_GLF_DEAD(false), true, false, false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), bool(bvec3(bool(bvec4(false, true, false, false)), true, false)))), (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))) || false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y)) || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true)))) || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-450.936 + -4.9))), float(injectionSwitch.y), bool(true)))) - 0.0)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * abs(1.0))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), (subgroup_id * subgroup_size) | 0u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_IDENTITY(_GLF_FUZZED(-7929), 0 + (_GLF_IDENTITY(_GLF_FUZZED(-7929), min(_GLF_FUZZED(-7929), _GLF_FUZZED(-7929))))) : 1))) - 0)), uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), true), true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(float(false)), max(_GLF_FUZZED(float(false)), _GLF_FUZZED(float(false)))), _GLF_FUZZED(7.1)), bvec2(false, false))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), max(injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1148) : 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (1) | (1))) ^ 0) < subgroup_size))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true), false))))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3265.9495)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, 1.0, 1.0), (vec4(injectionSwitch.y, 0.0, 1.0, 1.0)) * mat4(1.0))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) || false)))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false)), (false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), -36.64)) : mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false))))).x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), bool(bvec3((! (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false)), (false ? _GLF_FUZZED(vec2(0.0, -36.64)) : mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false))))).x < injectionSwitch.y)))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false)), (false ? _GLF_FUZZED(vec2(0.0, -36.64)) : mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false))))).x < injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(2.7, 4.0, 0.0), (vec3(2.7, 4.0, 0.0)) + vec3(0.0, 0.0, 0.0)).p)), bvec2(true, false)), (false ? _GLF_FUZZED(vec2(0.0, -36.64)) : mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false))))).x < injectionSwitch.y)))))))) && true))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(6363.5526))) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || false)), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false)), (false ? _GLF_FUZZED(vec2(0.0, -36.64)) : mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false))))).x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8167.1585) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false)), (false ? _GLF_FUZZED(vec2(0.0, -36.64)) : mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false))))).x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8167.1585) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false)), (false ? _GLF_FUZZED(vec2(0.0, -36.64)) : mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false))))).x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8167.1585) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || false)), true), bvec2(bvec3(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false)), (false ? _GLF_FUZZED(vec2(0.0, -36.64)) : mix(vec2(_GLF_FUZZED((+ -4041.1113)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(2.7, 4.0, 0.0).p)), bvec2(true, false))))).x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8167.1585) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || false)), true), false))), true, true))))), false, true)))))))), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) | 0)), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) / 1)) | (4), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) / 1)) | (4)) | 0))) | (4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(0 ^ (2), 1 * (_GLF_IDENTITY(0 ^ (2), (0 ^ (2)) | (0 ^ (2))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec2(true, true))), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec2(true, true))), true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0)))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true && (false))))
  barrier();
}
