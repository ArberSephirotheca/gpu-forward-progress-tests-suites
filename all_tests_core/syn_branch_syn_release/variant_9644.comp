#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_21 {
 mat3 _f0;
 bvec3 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_20 {
 bool _f0;
 mat3x2 _f1;
 bvec2 _f2;
 bool _f3;
 mat2x4 _f4;
 mat2 _f5;
 bool _f6;
} ;

struct _GLF_struct_22 {
 vec4 _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_21 _f2;
 bvec4 _f3;
 float _f4;
} ;

struct _GLF_struct_18 {
 mat3x2 _f0;
 bvec3 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 _GLF_struct_18 _f1;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
 uvec2 _f1;
 ivec2 _f2;
 int _f3;
 mat4x2 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_15 {
 mat2 _f0;
 ivec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 mat2x3 _f1;
 ivec2 _f2;
 bvec3 _f3;
 uvec2 _f4;
 float _f5;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 vec4 _f1;
 vec3 _f2;
 mat3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 vec3 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
 float _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_11 {
 mat3 _f0;
 ivec4 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 mat4x3 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_10 {
 mat3 _f0;
 mat4 _f1;
 vec3 _f2;
 mat3x4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 bvec3 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
} ;

struct _GLF_struct_23 {
 uvec4 _f0;
 _GLF_struct_12 _f1;
 uvec2 _f2;
 _GLF_struct_17 _f3;
 mat2x4 _f4;
 uint num_workgroup;
 _GLF_struct_19 _f5;
 _GLF_struct_22 _f6;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 vec4 _f1;
 uvec3 _f2;
 vec4 _f3;
 ivec3 _f4;
 mat2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 bool _f1;
 mat2x3 _f2;
 uint _f3;
 mat3x2 _f4;
 mat4x2 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 mat3x2 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 uvec3 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
 ivec2 _f4;
 ivec3 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_9 {
 uint workgroup_base;
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 bvec4 _f1;
 mat2 _f2;
 bvec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 bvec2 _f1;
 vec4 _f2;
 uvec3 _f3;
 bvec2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_4 {
 uint workgroup_id;
 _GLF_struct_3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))))))
                {
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))) && true))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        barrier();
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))));
                  }
                }
               else
                {
                }
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)), bool(bvec2(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)), true)))))))))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
   for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))) || (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             do
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_injected_loop_counter) : 0, (false ? _GLF_FUZZED(_injected_loop_counter) : false ? _GLF_FUZZED(_injected_loop_counter) : 0))))))
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) * 1)); _injected_loop_counter --)
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), true, true))))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp(_GLF_IDENTITY((~ (0)), ~ (~ ((~ (0))))), (~ (0)), (~ (0))))) >> _GLF_IDENTITY(int(5), int(5)))), ((0 ^ (_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp(_GLF_IDENTITY((~ (0)), ~ (~ ((~ (0))))), (~ (0)), (~ (0))))) >> _GLF_IDENTITY(int(5), int(5))))) << (0 | 0)); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) || false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)) || false))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), int(ivec2(_GLF_IDENTITY(int(1), (int(1)) << _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) >> 0)))), (0) - 0)), 1)))) >> 0), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0)))))), ~ (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), 0 | (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), int(ivec2(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), 0))))))) | (int(1))), (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0)), min(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0)), ivec3(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0)), clamp(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0)), _GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0)), _GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0)))), 1))))))))), ~ (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << 0))), 1)) << ivec3(0, 0, 0))))))), 0 | (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) * 1)), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 + (0)), 0, 0)), 0, 0))))))), int(ivec2(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), 0))))))) | (int(1)))) | (_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) + 0), int(7))), 1)) << ivec3(0, 0, 0)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), 0 | (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), int(ivec2(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), 0))))), (true ? _GLF_IDENTITY(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), _GLF_IDENTITY((ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)), ivec3(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)), ((ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1))) ^ ivec3(0, 0, 0)), 1), clamp(ivec4(_GLF_IDENTITY((ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)), ((ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1))) ^ ivec3(0, 0, 0)), 1), ivec4(_GLF_IDENTITY((ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)), ((ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1))) ^ ivec3(0, 0, 0)), 1), ivec4(_GLF_IDENTITY((ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)), ((ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1))) ^ ivec3(0, 0, 0)), 1))))) << ivec3(0, 0, 0))))))), 0 | _GLF_IDENTITY((_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), int(ivec2(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), int(ivec2(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), 0)))), int(ivec3((_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), int(ivec2(~ ((int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1), (ivec3(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 1)) << ivec3(0, 0, 0))))))), 0)))), 1, 0)))) * 1)) : _GLF_FUZZED(-82797))))) | (int(1))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (-93259 & 0), _GLF_IDENTITY((_injected_loop_counter != (-93259 & 0)), false || ((_injected_loop_counter != (-93259 & 0)))) && true)); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
        }
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(false), true))), ! (! (! (bool(bvec2(_GLF_DEAD(false), true)))))))), (bool(bvec2(_GLF_DEAD(false), true))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), sin(0.0), determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), abs(1.0)), transpose(transpose(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), sin(0.0), determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), abs(1.0)))))), (float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), sin(0.0), determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), abs(1.0)), transpose(transpose(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), sin(0.0), determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), abs(1.0))))))) * 1.0))) - 0.0) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), _GLF_IDENTITY(true && (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(-1.7, 0.6, -2.5)) : vec3(injectionSwitch, 1.0))))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), bool(bool(_GLF_IDENTITY(true && (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(-1.7, 0.6, -2.5)) : vec3(injectionSwitch, 1.0))))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), ! (! (true && (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (false ? _GLF_FUZZED(vec3(-1.7, 0.6, -2.5)) : vec3(injectionSwitch, 1.0))))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))))))))))) && true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 | 1) | 0)); _injected_loop_counter ++)
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y))));
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.8)), float(injectionSwitch.y), bool(true)))))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(uvec4(_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_struct_12(_GLF_IDENTITY(mat2(1.0), (true ? mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(0.2)), bool(false)))) : _GLF_FUZZED(mat2(-5218.4640, -5.7, -1.1, 2547.8630)))), bvec3(true), _GLF_struct_10(mat3(1.0), mat4(1.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 1.0, 1.0, sqrt(1.0)), mat3x4(mat3x4(mat3x4(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), (vec4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))) / vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(665.478) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-205.347) : 0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5942.5860)), bool(false))), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0)))))), min(clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(665.478) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-205.347) : 0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5942.5860)), bool(false))), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0)))))), _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(665.478) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-205.347) : 0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5942.5860)), bool(false))), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0)))))), (clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(665.478) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-205.347) : 0.0)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5942.5860)), bool(false))), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))))))) * 1.0))))))), 1.0, 1.0, 1.0, sqrt(1.0))))))), 0.0, 1.0, 1.0, 1.0, 1.0)), (float(mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), (_GLF_IDENTITY(float(0.0), _GLF_IDENTITY(float(mat4(float(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), (float(mat4(float(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))))) / 1.0))) - 0.0), float(_GLF_FUZZED(6844.3037)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (0.0) * 1.0), 1.0)), float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)))), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3611.3410)))) / 1.0, mix(float(_GLF_FUZZED((-3455.9398 * 156.649))), float((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3611.3410)))) / 1.0), bool(true))))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY((0.0), (false ? _GLF_FUZZED(45.77) : (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) * 1.0)), bool(true))), 1.0))))) - 0.0))) / 1.0), 1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0)))), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-7.1 / -89.19))), bool(false))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) : _GLF_FUZZED(-8999.0766))), 1.0, 1.0, 1.0, sqrt(1.0)))))), clamp(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(944.385)), bool(false)))), float(_GLF_FUZZED(0.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(-76894))), mix(float(_GLF_IDENTITY(float(_GLF_FUZZED(float(-76894))), float(mat4(float(_GLF_FUZZED(float(-76894))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-8.9)), bool(false))), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0))), (float(mat2x3(0.0, 0.0, 0.0, 1.0, 0.0, sin(0.0)))) - 0.0))), bool(true)))), vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)))), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3611.3410)))) / 1.0)), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (0.0) * 1.0)), bool(true))), 1.0))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(min(-372.466, 1.4))))))) / 1.0), 1.0, 0.0))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED((-6126.5610 / 6.5))), bool(false))), 1.0, sqrt(1.0)), mat3x4(mat3x4(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) : _GLF_FUZZED(-8999.0766))), 1.0, 1.0, 1.0, sqrt(1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)))), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))) : _GLF_FUZZED(-8367.6081))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))) : _GLF_FUZZED(-3611.3410), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(tan(-1.2)) : true ? 1.0 : _GLF_FUZZED(-3611.3410)))))) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.6))))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 1.0))))) - 0.0))) / 1.0), 1.0, 0.0))), 1.0, 1.0, 1.0, sqrt(1.0)), mat3x4(mat3x4(mat3x4(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) : _GLF_FUZZED(-8999.0766))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, sqrt(1.0)))))), min(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) * 1.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), max(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3611.3410)))) / 1.0)), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 1.0))))), (true ? (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3611.3410)))) / 1.0)), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 1.0))))) : _GLF_FUZZED(367.026))) - 0.0))) / 1.0), 1.0, 0.0))), 1.0, 1.0, 1.0, sqrt(1.0)), mat3x4(mat3x4(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8297.9100) : 0.0))))))))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) : _GLF_FUZZED(-8999.0766))), 1.0, 1.0, 1.0, sqrt(1.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0), (vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)) * cos(vec2(0.0, 0.0)))))), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3611.3410)))) / 1.0)), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 1.0))))) - 0.0))) / _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0))))))), 1.0, 0.0))), 1.0, 1.0, 1.0, sqrt(1.0)), mat3x4(mat3x4(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (true ? vec3(0.0, 1.0, 0.0) : _GLF_FUZZED(vec3(25.95, -2898.8059, -787.993)))), vec3(0.0, 1.0, 0.0))) : _GLF_FUZZED(-8999.0766))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-505.473) : 1.0)), 1.0, 1.0, sqrt(1.0)))))), max(float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))), max(vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))), vec3(0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), float(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, float(mat4x2(_GLF_IDENTITY((0.0) * 1.0, float(float((0.0) * 1.0))), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)))), 1.0)))), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3611.3410)))) / 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3611.3410)))) / 1.0)) : _GLF_FUZZED(9507.9147))), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), 1.0))))) - 0.0))) / 1.0), 1.0, 0.0))), 1.0, 1.0, 1.0, sqrt(1.0)), mat3x4(mat3x4(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, abs(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.5)), bool(false))))), 1.0, 0.0, 1.0, 1.0, 1.0))), 0.0)))))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) : _GLF_FUZZED(-8999.0766))), 1.0, 1.0, 1.0, sqrt(1.0)))))), float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)))), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-3611.3410), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(-3611.3410), sqrt(0.0), 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), transpose(transpose(mat4(_GLF_FUZZED(-3611.3410), sqrt(0.0), 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))))))) / 1.0)), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 1.0))))) - 0.0))) / 1.0), 1.0, 0.0))), 1.0, 1.0, 1.0, sqrt(1.0)), mat3x4(mat3x4(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0)))), 0.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0)))), 0.0, 1.0, 0.0)))), (float(_GLF_IDENTITY(mat4(0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0)))), 0.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, sqrt(0.0)))), 0.0, 1.0, 0.0))))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0), max(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0), (vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)))), vec3(0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) : _GLF_FUZZED(-8999.0766))), 1.0, 1.0, 1.0, sqrt(1.0)))))))))), float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), (true ? _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), (false ? _GLF_FUZZED(744.757) : float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)))) : _GLF_FUZZED((+ length(vec4(-8803.7610, 6722.9332, -6221.3122, 5221.3416)))))), float(vec2(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), float(_GLF_FUZZED(6.3)), bool(false)))), 1.0)))), (_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0)), min(float(vec2(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-3611.3410)))) / 1.0)), 1.0)), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_FUZZED(-7.9)), float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), bool(true))), 1.0))))) - 0.0))) / 1.0), 1.0, 0.0))), 1.0, 1.0, 1.0, sqrt(1.0)), mat3x4(mat3x4(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * mat3(1.0))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), (true ? _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) : _GLF_FUZZED(-8999.0766))), 1.0, 1.0, 1.0, sqrt(1.0))))))))), 0.0, 1.0, 1.0, 1.0, 1.0))) - 0.0))), mat3x4(1.0), mat3x2(_GLF_IDENTITY(1.0, (1.0) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(true))), bool(false))))), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(31.30, float(mat3x4(_GLF_IDENTITY(31.30, max(31.30, 31.30)), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-36.18, (true ? -36.18 : _GLF_FUZZED(1651.3324))), -4.6, 3066.9167)), max(_GLF_IDENTITY(true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(31.30, float(mat3x4(_GLF_IDENTITY(31.30, max(31.30, 31.30)), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-36.18, (true ? -36.18 : _GLF_FUZZED(1651.3324))), -4.6, 3066.9167)), mat4(1.0) * (true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(31.30, float(mat3x4(_GLF_IDENTITY(31.30, max(31.30, 31.30)), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-36.18, (true ? -36.18 : _GLF_FUZZED(1651.3324))), -4.6, 3066.9167)))), _GLF_IDENTITY(true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(31.30, float(mat3x4(_GLF_IDENTITY(31.30, max(31.30, 31.30)), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-36.18, (true ? -36.18 : _GLF_FUZZED(1651.3324))), -4.6, 3066.9167)), mix(vec4((true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(31.30, float(mat3x4(_GLF_IDENTITY(31.30, max(31.30, 31.30)), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-36.18, (true ? -36.18 : _GLF_FUZZED(1651.3324))), -4.6, 3066.9167)))[0], _GLF_FUZZED(-45.23), (true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(31.30, float(mat3x4(_GLF_IDENTITY(31.30, max(31.30, 31.30)), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-36.18, (true ? -36.18 : _GLF_FUZZED(1651.3324))), -4.6, 3066.9167)))[2], (true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(31.30, float(mat3x4(_GLF_IDENTITY(31.30, max(31.30, 31.30)), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-36.18, (true ? -36.18 : _GLF_FUZZED(1651.3324))), -4.6, 3066.9167)))[3]), vec4(_GLF_FUZZED(-5.8), (true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(_GLF_IDENTITY(31.30, float(mat3x4(_GLF_IDENTITY(31.30, max(31.30, 31.30)), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(-36.18, (true ? -36.18 : _GLF_FUZZED(1651.3324))), -4.6, 3066.9167)))[1], _GLF_FUZZED((true ? 7.1 : -6.8)), _GLF_FUZZED((+ 74.35))), bvec4(false, true, false, false))))))), vec4(0.0, 1.0, 0.0, 0.0)))))), _GLF_struct_11(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(mat4(mat3(1.0)))), _GLF_IDENTITY(mat3(mat3(mat3(1.0))), (false ? _GLF_FUZZED(mat3(-4.1, -78.90, -2070.4539, -1.8, -0.2, 5226.3115, -4059.4237, 179.134, -6.4)) : mat3(mat3(mat3(1.0)))))), ivec4(1), mat4x3(1.0), mat4x3(1.0), mat4x3(1.0), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0, 0.0, abs(1.0), sin(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(trunc(-84.64)))))), 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)), 1.0)))), 0.0, 0.0)), mix(float(float(mat2x3(1.0, 0.0, abs(1.0), sin(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))), float(_GLF_FUZZED(258.835)), _GLF_IDENTITY(bool(false), false || (bool(false))))), max(_GLF_IDENTITY(float(mat2x3(1.0, 0.0, abs(1.0), sin(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), mix(float(float(mat2x3(1.0, 0.0, abs(1.0), sin(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, exp(0.0), 0.0)), (float(vec3(0.0, exp(0.0), 0.0))) - 0.0))), float(_GLF_FUZZED(-284.086)), bool(false))), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), clamp(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (vec4(1.0, 1.0, 1.0, 1.0)) * mat4(1.0))), mix(float(_GLF_FUZZED(351.653)), float(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (vec4(0.0, 0.0, 0.0, 0.0)) * vec4(1.0, 1.0, 1.0, 1.0)), vec4(1.0, 1.0, 1.0, 1.0))), bool(true))), clamp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(351.653)), float(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(351.653)), float(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(351.653)), float(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), bool(true))), float(mat3x4(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), vec4(1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(351.653)), float(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), bool(true))), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, cos(0.0), 0.0, 0.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 1.0)))), 0.0, 0.0))), float(_GLF_FUZZED(258.835)), _GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(1.0, 0.0, abs(1.0), sin(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0)), mix(float(float(mat2x3(1.0, 0.0, abs(1.0), sin(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.9)))), vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0)))), 0.0, 0.0))), float(_GLF_FUZZED(258.835)), _GLF_IDENTITY(bool(false), false || (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))), (_GLF_IDENTITY(float(mat2x3(1.0, 0.0, abs(1.0), _GLF_IDENTITY(sin(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(sin(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), min(_GLF_IDENTITY(sin(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), float(vec2(sin(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))), sin(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))))))) - 0.0), 0.0, 0.0)), mix(float(float(mat2x3(1.0, 0.0, _GLF_IDENTITY(abs(1.0), (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(abs(1.0), clamp(abs(_GLF_IDENTITY(1.0, (1.0) + 0.0)), abs(1.0), abs(1.0))) : _GLF_FUZZED(8578.0647))), sin(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0))), float(_GLF_FUZZED(258.835)), _GLF_IDENTITY(bool(false), false || (bool(false)))))) * 1.0))))))), uvec2(1u), _GLF_struct_17(_GLF_struct_13(mat3x4(1.0), vec4(1.0), vec3(1.0), mat3(1.0), mat3(1.0)), vec3(1.0), _GLF_struct_14(_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), ivec3(1), _GLF_IDENTITY(ivec3(1), ivec3(1, 1, 1) * (ivec3(1))))), mat2x3(1.0), ivec2(1), bvec3(true), _GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u)))), 1.0), _GLF_struct_15(mat2(1.0), ivec4(1), uvec3(1u)), _GLF_struct_16(bvec4(true), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), uvec2(1u)))) - uvec2(0u, 0u))) ^ uvec2(0u, 0u)), ivec2(1), 1, mat4x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.1) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), bvec3(bvec4(bvec3(bvec2(true), true), false)))))), 1.0, _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-28882)))), (false ? _GLF_FUZZED(ivec4(57024, -351, -81193, -55143)) : ivec4(1)))), mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))) | uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u)), gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))) | _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(106826u, 1u * (106826u)), _GLF_IDENTITY(157643u, ~ (~ (_GLF_IDENTITY(157643u, 0u ^ (157643u))))), 28207u)) : uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(106826u, 157643u, 28207u)) : uvec3(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), 0u, 0u)))) >> uvec3(0u, 0u, 0u))), gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u))), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 0u)), uvec3(uvec3(uvec3(uvec4(gl_NumWorkGroups, 0u)))))), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u))), 0u)))))) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) / 1u), 0u)), gl_NumWorkGroups)), uvec3(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))) | uvec3(0u, 0u, 0u)), gl_NumWorkGroups))))))).x, _GLF_struct_19(ivec4(1), _GLF_struct_18(mat3x2(1.0), bvec3(true), vec2(1.0))), _GLF_struct_22(vec4(1.0), _GLF_struct_20(true, mat3x2(1.0), bvec2(true), true, mat2x4(1.0), mat2(1.0), true), _GLF_struct_21(mat3(1.0), bvec3(true), mat3x4(1.0), mat3x2(1.0)), bvec4(true), 1.0));
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_WorkGroupID.x, _GLF_struct_3(_GLF_struct_0(mat2x4(1.0), bvec2(true), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(842.949)), float(1.0), bool(true)))), uvec3(1u), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true))), true && (! (_GLF_IDENTITY(true, (true) || false))))) || false)))), bvec4(true)), _GLF_struct_1(mat3x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_struct_2(mat4(1.0), bvec4(true), mat2(1.0), bvec2(true), ivec4(1)), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)), float(_GLF_IDENTITY(vec3(float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)), 0.0, sin(0.0)), (vec3(float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(sqrt(0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)), 0.0, sin(0.0))) - vec3(0.0, 0.0, 0.0))))))));
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_id, max(_GLF_struct_replacement_4.workgroup_id, _GLF_struct_replacement_4.workgroup_id)), uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4.workgroup_id, 0u), _GLF_IDENTITY((uvec2(_GLF_struct_replacement_4.workgroup_id, 0u)) << uvec2(0u, 0u), (_GLF_IDENTITY((uvec2(_GLF_struct_replacement_4.workgroup_id, 0u)) << uvec2(0u, 0u), ((uvec2(_GLF_struct_replacement_4.workgroup_id, 0u)) << uvec2(0u, 0u)) << (uvec2(_GLF_IDENTITY(0u, (0u) >> (0u & _GLF_IDENTITY(63081u, (63081u) << 0u))), 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u))))) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(1u), uvec2(1u))) >> _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) << 0u)))))))), _GLF_struct_8(_GLF_struct_5(mat4x3(1.0), mat3x2(1.0), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), true)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), (injectionSwitch.x < injectionSwitch.y) || false)), true))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))), _GLF_IDENTITY(false, (false) || false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)) || false))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) ? injectionSwitch : _GLF_FUZZED(vec2(-92.95, 8.3)))), (injectionSwitch) / vec2(1.0, 1.0)))).y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) || false)))))))))))), uvec3(1u), _GLF_struct_6(mat3x2(1.0), true, mat2x3(1.0), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), ~ (~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))), (true ? ~ (1u) : _GLF_FUZZED(_GLF_IDENTITY(74710u, clamp(74710u, _GLF_IDENTITY(74710u, max(74710u, 74710u)), 74710u))))))), mat3x2(_GLF_IDENTITY(1.0, (1.0) + sin(length(vec3(0.0, 0.0, 0.0))))), mat4x2(1.0), uvec3(1u)), _GLF_struct_7(mat2x4(1.0), vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), uvec3(1u), vec4(1.0), ivec3(1), mat2(1.0), mat3x2(1.0)), ivec2(1), ivec3(1), uvec4(1u)));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, _GLF_IDENTITY(clamp(3, 3, 3), _GLF_IDENTITY((clamp(3, 3, 3)) << 0, 0 | ((clamp(3, 3, 3)) << 0)))), 3))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             barrier();
            }
          }
        }
      }
    }
   else
    {
    }
  }
 uint virtual_gid = _GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(-14018))))) >> _GLF_IDENTITY(int(3), int(3))) & 1)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (((1 | 0) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) >> 0), 0), (ivec2(_GLF_IDENTITY(4, (4) >> 0), 0)) | (ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0))) * 1)) >> 0), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) >> 0), 0), (ivec2(_GLF_IDENTITY(4, (4) >> 0), 0)) | (ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0))) * 1)) >> 0), 0))))) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_struct_replacement_9.workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) | (_GLF_IDENTITY(1, 0 ^ (1)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), 0 | (_GLF_IDENTITY(1, 0 ^ (1)))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 ^ (1)))), 0u + (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1))), 0 ^ (1))), 0 ^ (0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) / 1))), 0 ^ (1))))))))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, 0 ^ (1)))), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), ivec3(ivec3(ivec3(0, 1, 1)))))) | (_GLF_IDENTITY(1, 0 ^ (1))))) << 0u))))))) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             do
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) && true)))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               barrier();
              }
             else
              {
              }
            }
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         do
          {
           atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) ^ 0)) << 0), 4);
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))) || false)))
                barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 & 1, 1 * (1 & 1)))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   else
    {
     if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))
      {
       int i = 0;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((false ? _GLF_FUZZED(i) : int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ((false ? _GLF_FUZZED(i) : int(_GLF_ONE(1.0, injectionSwitch.y)))) / 1))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) > (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0)))) ^ _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((_injected_loop_counter ^ i)))))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)) | (uvec2(next_virtual_gid, 0u)), (false ? _GLF_FUZZED(uvec2(_GLF_IDENTITY(1972u, ~ (~ (1972u))), 189042u)) : _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)) | (uvec2(next_virtual_gid, 0u)), ~ (_GLF_IDENTITY(~ ((uvec2(next_virtual_gid, 0u)) | _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), _GLF_IDENTITY(max((uvec2(next_virtual_gid, 0u)), (uvec2(next_virtual_gid, 0u))), max(_GLF_IDENTITY(max((uvec2(next_virtual_gid, 0u)), (uvec2(next_virtual_gid, 0u))), uvec2(uvec3(max((uvec2(next_virtual_gid, 0u)), (uvec2(next_virtual_gid, 0u))), 1u))), max((uvec2(next_virtual_gid, 0u)), _GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), max((uvec2(next_virtual_gid, 0u)), (uvec2(next_virtual_gid, 0u))))))))), min(~ ((uvec2(next_virtual_gid, 0u)) | (_GLF_IDENTITY(uvec2(next_virtual_gid, 0u), (uvec2(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), 0u)) - uvec2(0u, 0u)))), ~ (_GLF_IDENTITY((uvec2(next_virtual_gid, 0u)), ((uvec2(next_virtual_gid, 0u))) | ((uvec2(next_virtual_gid, 0u)))) | (uvec2(next_virtual_gid, 0u))))))))))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, 0 ^ _GLF_IDENTITY((2), int(int((2))))), 2))), (_GLF_IDENTITY(uint(2), (uint(2)) - 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 1, 1, 0), (ivec4(4, 1, 1, 0)) + ivec4(0, 0, 0, 0)))))));
              }
             else
              {
              }
            }
          }
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)) > injectionSwitch.y)))) && true)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             do
              {
               do
                {
                 do
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))) || false))))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, true, true))))), false)))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY((_injected_loop_counter --) / 1, ((_injected_loop_counter --) / 1) ^ 0)))
                {
                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 do
                  {
                   do
                    {
                     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     barrier();
                    }
                   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-67048))), 0 | (4)));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             do
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         else
          {
          }
        }
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5)), (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5))) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY(int(ivec4(8, 0, 1, 0)), (int(ivec4(8, 0, 1, 0))) ^ 0))), int(8))), ~ (~ ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 ^ (_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(8)), clamp((int(8)), _GLF_IDENTITY((int(8)), int(_GLF_IDENTITY(ivec3((int(8)), 1, (0 >> _GLF_IDENTITY(int(7), int(7)))), (ivec3((int(8)), 1, (0 >> _GLF_IDENTITY(int(7), int(7))))) >> ivec3(0, 0, 0)))), _GLF_IDENTITY((int(8)), ((int(8))) | ((_GLF_IDENTITY(int(8), _GLF_IDENTITY(clamp(int(8), int(8), _GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(8), (int(8)) | 0) : _GLF_FUZZED(_injected_loop_counter)))), int(int(clamp(int(8), int(8), _GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(8), (int(8)) | 0) : _GLF_FUZZED(_injected_loop_counter))))))))))))) | (int(8))))), int(8)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(int(8), (int(8)) | (int(8)))), ~ (~ ((_GLF_IDENTITY(int(8), (int(8)) | (int(8)))))))), int(8)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 ^ (_GLF_IDENTITY(int(8), (int(8)) | (int(8))))), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 ^ (_GLF_IDENTITY(int(8), (int(8)) | (int(8))))), int(8))) | 0)))))))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     do
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                {
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                  {
                                   barrier();
                                  }
                                }
                               do
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), (false ? _GLF_FUZZED(vec2(543.421, 28.55)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
                                  barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) || false)))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       barrier();
                      }
                    }
                  }
                }
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
        barrier();
      }
    }
   else
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5298.9649, 6897.0006)))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5298.9649, 6897.0006)))))).x > injectionSwitch.y))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), ~ (~ (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
