#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))) * (injectionSwitch)).y)))))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false))) || false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(21.99) : injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(clamp(float(vec3(0.0, 0.0, 0.0)), float(vec3(0.0, 0.0, 0.0)), float(vec3(0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(272.623)), float(clamp(float(vec3(0.0, 0.0, 0.0)), float(vec3(0.0, 0.0, 0.0)), float(vec3(0.0, 0.0, 0.0)))), bool(true))))), 0.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-4.2)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(506.122, (true ? _GLF_IDENTITY(506.122, float(vec2(506.122, 0.0))) : _GLF_FUZZED(-1.8)))), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(_GLF_IDENTITY(506.122, (true ? _GLF_IDENTITY(506.122, float(vec2(506.122, 0.0))) : _GLF_FUZZED(-1.8)))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(506.122, (true ? _GLF_IDENTITY(506.122, float(vec2(506.122, 0.0))) : _GLF_FUZZED(-1.8)))), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(_GLF_IDENTITY(506.122, (true ? _GLF_IDENTITY(506.122, float(vec2(506.122, 0.0))) : _GLF_FUZZED(-1.8)))), (injectionSwitch)[1])) / cos(vec2(0.0, 0.0))))), (vec2(_GLF_IDENTITY(_GLF_FUZZED(506.122), mix(float(_GLF_FUZZED(-6.8)), float(_GLF_FUZZED(506.122)), bool(true))), (injectionSwitch)[1])) + vec2(0.0, 0.0)), bvec2(false, true))))).x, (false ? _GLF_FUZZED(21.99) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))))).x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), false || (bool(bvec2(false, true)))), false, false))))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x) ^ (1u ^ 1u)) : _GLF_FUZZED(subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0))[1])), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 1.0, 1.0, abs(1.0), _GLF_IDENTITY(log(1.0), _GLF_IDENTITY(float(mat4x3(log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, exp(0.0), round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0)), _GLF_IDENTITY(float(mat4(float(mat4x3(log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, exp(0.0), round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), min(float(mat4(float(mat4x3(log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, exp(0.0), round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(mat4(float(mat4x3(log(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 1.0, exp(0.0), round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))), log(1.0), 0.0))).x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))) * 1.0), injectionSwitch[1])).y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-142.369) : injectionSwitch.y)), injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) ^ uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)) | (gl_WorkGroupID)), uvec3(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))), max(0, 0)), 0))) >> 0)], ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, min(0, 0))))]))), gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true))), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))) && true))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 0.0, 1.0, 0.0), mat2x3(mat4x3(mat2x3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 0.0, 1.0, 0.0)))))), 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-26.29)), bool(false))), 0.0, 0.0)), (float(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-26.29)), bool(false))), 0.0, 0.0))) - 0.0)), abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))), mix(float(_GLF_FUZZED(3773.7650)), float(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / 1.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), bool(true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - abs(0.0))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false || (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))))) && true)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true))))), bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true))))), true), bvec2(bvec4(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true))))), true), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(566.067)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1) < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2))))), ((_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, clamp(2, 2, 2)))))) / 1) << 0)), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   switch(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))), (_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))), (_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0))))) / 1)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))), (_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY((_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0))))), ((_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))))) | ((_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0))))))) / 1)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))), (_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0))))) / 1), (_GLF_IDENTITY(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))), (_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0))))) / 1)) - 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))
    {
     case 1:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))))) / 1.0), 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec4(-5.8, 4.3, -815.638, -356.824) * mat2x4(-23.13, 202.491, 882.309, -2.5, -5.1, 6796.9728, -4.5, -78.55))))).x))) + length(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(174.964)), float(0.0), bool(true))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(fract(vec2(-0.8, 2.7)), mat2(1.0) * _GLF_IDENTITY((fract(vec2(-0.8, 2.7))), ((fract(_GLF_IDENTITY(vec2(-0.8, 2.7), (_GLF_IDENTITY(vec2(-0.8, 2.7), mat2(1.0) * (vec2(-0.8, 2.7)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) * vec2(1.0, 1.0))), mat2(1.0) * (fract(vec2(-0.8, 2.7)))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(fract(vec2(-0.8, 2.7)), mat2(1.0) * (fract(vec2(-0.8, 2.7)))), mat2(1.0) * (fract(vec2(-0.8, 2.7)))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(fract(_GLF_IDENTITY(vec2(-0.8, 2.7), (true ? _GLF_IDENTITY(vec2(-0.8, 2.7), (vec2(-0.8, 2.7)) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch)))), mat2(1.0) * (fract(vec2(-0.8, 2.7)))), mat2(1.0) * (fract(vec2(-0.8, 2.7)))))[1]), vec2(_GLF_FUZZED(7.0), _GLF_FUZZED(-567.428)), bvec2(false, false)))[_GLF_IDENTITY(1, (1) | 0)], float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(fract(vec2(-0.8, _GLF_IDENTITY(2.7, mix(float(2.7), float(_GLF_FUZZED(4.3)), bool(false))))), mat2(1.0) * _GLF_IDENTITY((fract(vec2(-0.8, 2.7))), ((fract(vec2(-0.8, 2.7)))) * vec2(1.0, 1.0))), mat2(1.0) * (fract(vec2(-0.8, 2.7)))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(fract(vec2(-0.8, 2.7)), mat2(1.0) * (fract(vec2(-0.8, 2.7)))), mat2(1.0) * (fract(vec2(-0.8, _GLF_IDENTITY(2.7, max(2.7, 2.7)))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(fract(vec2(-0.8, 2.7)), mat2(1.0) * (fract(vec2(-0.8, 2.7)))), mat2(1.0) * (fract(vec2(-0.8, 2.7)))))[1]), vec2(_GLF_FUZZED(7.0), _GLF_FUZZED(-567.428)), bvec2(false, false)))[_GLF_IDENTITY(1, (1) | 0)], 0.0, 0.0)));
     if(_GLF_DEAD(false))
      barrier();
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)).y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) / vec2(1.0, 1.0)).y)), false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3380.7254)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.5))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3380.7254)), bool(false))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.5))))) > injectionSwitch.y)))), false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.1)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(1.1)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(1.1)), float(injectionSwitch.y), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(1.1)), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_FUZZED(1.1)), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED((-82.78 + 4.1))), bool(false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || (_GLF_IDENTITY(false, false || (false))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     case 14:
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)), injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), cos(0.0), 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), cos(0.0), 1.0) : _GLF_FUZZED(mat4(-622.243, 613.768, -84.63, -7.6, 218.616, -4449.0795, 3.1, 51.09, _GLF_IDENTITY(9.1, mix(float(_GLF_FUZZED(917.869)), float(9.1), bool(true))), -1967.1906, -1.1, 6878.1801, 808.799, 722.496, -24.76, 4.5)))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), cos(0.0), 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), cos(0.0), 1.0) : _GLF_FUZZED(mat4(-622.243, 613.768, -84.63, -7.6, 218.616, -4449.0795, 3.1, 51.09, 9.1, -1967.1906, -1.1, 6878.1801, 808.799, 722.496, -24.76, 4.5)))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))), min(injectionSwitch.x, injectionSwitch.x)))), 1.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, true && (true)) ? 1.0 : _GLF_FUZZED(1.9))))), cos(0.0), 1.0), (true ? mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 1.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), cos(0.0), 1.0) : _GLF_FUZZED(mat4(-622.243, 613.768, _GLF_IDENTITY(-84.63, min(-84.63, -84.63)), -7.6, 218.616, -4449.0795, 3.1, 51.09, 9.1, -1967.1906, -1.1, 6878.1801, 808.799, 722.496, -24.76, 4.5))))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))))), float(_GLF_FUZZED(vec4(6856.4027, _GLF_IDENTITY(149.888, (_GLF_IDENTITY(149.888, clamp(149.888, 149.888, 149.888))) / 1.0), -3.9, -997.496).y)), bool(false))) < _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, sqrt(0.0), 0.0, 0.0))).y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)), false || (bool(bvec2(_GLF_IDENTITY(true, (true) || false), false)))))), false)), true, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0))), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), _GLF_IDENTITY(float(1.0), (true ? float(1.0) : _GLF_FUZZED(-1.1))), _GLF_IDENTITY(bool(true), ! (! (bool(_GLF_IDENTITY(true, (true) && true)))))))))), _GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3x2(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) : _GLF_FUZZED(mat4x2(7.8, 7.5, 3.9, -7.1, 58.54, 2.9, -5.9, -24.63)[3])))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), _GLF_IDENTITY(float(1.0), (true ? float(1.0) : _GLF_FUZZED(-1.1))), _GLF_IDENTITY(bool(true), ! (! (bool(_GLF_IDENTITY(true, (true) && true)))))))))), _GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true)))) / 1.0))))) + vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true)))))), max(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true)))))), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true)))))), max(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true)))))), vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-937.667)), clamp(float(_GLF_FUZZED(-937.667)), float(_GLF_FUZZED(-937.667)), float(_GLF_FUZZED(-937.667)))), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) : _GLF_FUZZED(mat4x2(7.8, 7.5, 3.9, -7.1, 58.54, 2.9, -5.9, -24.63)[3]))))) - vec2(0.0, 0.0)))))).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(1.0))), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), _GLF_IDENTITY(float(1.0), (true ? float(1.0) : _GLF_FUZZED(-1.1))), _GLF_IDENTITY(bool(true), ! (! (bool(_GLF_IDENTITY(true, (true) && true)))))))))), _GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3x2(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) : _GLF_FUZZED(mat4x2(7.8, 7.5, 3.9, -7.1, 58.54, 2.9, -5.9, -24.63)[3])))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), _GLF_IDENTITY(float(1.0), (true ? float(1.0) : _GLF_FUZZED(-1.1))), _GLF_IDENTITY(bool(true), ! (! (bool(_GLF_IDENTITY(true, (true) && true)))))))))), _GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true)))) / 1.0))))) + vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0), ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0)), mat2(1.0) * (vec2(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true)))))), max(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true)))))), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true)))))), max(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true)))))), vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-937.667)), float(1.0), bool(true))))))))))) + vec2(0.0, 0.0), mat2(1.0) * ((vec2(mat3x2(injectionSwitch, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-937.667)), clamp(float(_GLF_FUZZED(-937.667)), float(_GLF_FUZZED(-937.667)), float(_GLF_FUZZED(-937.667)))), float(1.0), bool(true))))))) + vec2(0.0, 0.0))), 0.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, tan(0.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) : _GLF_FUZZED(mat4x2(7.8, 7.5, 3.9, -7.1, 58.54, 2.9, -5.9, -24.63)[3]))))) - vec2(0.0, 0.0)))))).y, true, false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     break;
     if(_GLF_DEAD(false))
      barrier();
     case 60:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     while((mat3x2(474.436, -511.159, _GLF_IDENTITY(-5.2, min(-5.2, -5.2)), 5.1, _GLF_IDENTITY(_GLF_IDENTITY(3146.5310, min(3146.5310, 3146.5310)), (true ? 3146.5310 : _GLF_FUZZED(628.270))), 6017.3287) == mat3x2(-8.5, 3.4, 8967.4301, -547.084, -327.384, 41.39)))
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) / 1.0)) / 1.0) > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_FUZZED(-8393.9067)), bool(false)))) / 1.0) > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), true, true, true)))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ! (! ((! (_GLF_IDENTITY(false, false || (false))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     case 26:
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     uvec2 _GLF_SWITCH_0_0v[83], _GLF_SWITCH_0_1v[13];
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     default:
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
