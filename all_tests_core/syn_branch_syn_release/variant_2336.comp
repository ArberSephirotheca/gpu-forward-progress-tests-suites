#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) != 0), ((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) != 0)) && true)))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false, true))))))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)).y))))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))), true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))), true, true))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))), true, true)))) || false), false)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), false, false, true)), true && (bool(bvec4(! (_GLF_DEAD(false)), false, false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     return;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) * 1)), ~ (~ (int(8))))) | 0), int(8))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))), int(8))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), _GLF_IDENTITY(int(8), (0 ^ 0) ^ (int(8))))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) ^ 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), int(8))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))), (~ (_GLF_IDENTITY(int(8), int(8)))))), (~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8))))))) : _GLF_FUZZED(_injected_loop_counter))), ~ (_GLF_IDENTITY(int(8), int(8))))))), min(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), clamp(int(8), _GLF_IDENTITY(int(8), int(int(int(8)))), int(8))), ~ (~ (int(8))))) | 0), int(8))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) >> 0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (8) << 0), min(_GLF_IDENTITY(8, (8) << 0), _GLF_IDENTITY(8, (8) << 0)))), int(8))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) ^ 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), int(8))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))) | _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(int(8), int(8))), ((_GLF_IDENTITY(int(8), int(8)))) | ((_GLF_IDENTITY(int(8), int(8)))))), max((~ (_GLF_IDENTITY(int(8), int(8)))), (~ (_GLF_IDENTITY(int(8), int(8)))))), (~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8))))))) : _GLF_FUZZED(_injected_loop_counter))), ~ (_GLF_IDENTITY(int(8), int(8))))))), _GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), ~ (~ (int(8))))) | 0), (_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), ~ (~ (int(8))))) | 0)) | (_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), ~ (~ (int(8))))) | 0))), int(8))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(int(8), int(8))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) ^ 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), int(8))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))), (~ (_GLF_IDENTITY(int(8), int(8)))))), (~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))), (~ (_GLF_IDENTITY(int(8), int(8)))))), (~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8)))))), 0 ^ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))), (~ (_GLF_IDENTITY(int(8), int(8)))))), (~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8)))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))), (~ (_GLF_IDENTITY(int(8), int(8)))))), (~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8))))))))) : _GLF_FUZZED(_injected_loop_counter))), ~ (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(_GLF_IDENTITY(8, (8) | 0), _GLF_IDENTITY(8, ~ (~ (8)))))), int(8))))))), 0 ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), ~ (~ (int(8))))) | 0), int(8))), clamp(~ _GLF_IDENTITY((_GLF_IDENTITY(int(8), int(8))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), _injected_loop_counter))), (_GLF_FUZZED(_injected_loop_counter)) ^ 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), int(8))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), int(8))), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(int(8), int(8)))), max((~ (_GLF_IDENTITY(int(8), int(8)))), (~ (_GLF_IDENTITY(int(8), int(8)))))), (~ (_GLF_IDENTITY(int(8), int(8)))) | (~ (_GLF_IDENTITY(int(8), int(8))))))) : _GLF_FUZZED(_injected_loop_counter))), ~ (_GLF_IDENTITY(int(8), int(8))))))))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || _GLF_IDENTITY(((false)), true && (_GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), ! (! (! (((false)))))))))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))) || false)))
      continue;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - 0.0))), _GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((! ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, tan(0.0), 0.0))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))), (! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - 0.0)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - 0.0)))))), _GLF_IDENTITY(! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).y))))))), ! (! (bool(bvec3((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3963.0125) : injectionSwitch.y))) / 1.0))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), (! (! _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (! ((injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        {
         do
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = (((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))))))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)), clamp(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0 + (injectionSwitch.y)), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - length(0.0)), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))))))))))));
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)))), true && (bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)))))))))))))
          break;
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))) * workgroup_id;
 do
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-173.439))), injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-173.439))), injectionSwitch.x), 1.0 * (_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.4)), float(0.0), bool(true))) : _GLF_FUZZED(3933.2642))) : _GLF_FUZZED(-173.439))), injectionSwitch.x))) : _GLF_FUZZED(9096.0305))), (_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, true && (true)) ? 0.0 : _GLF_FUZZED(-173.439))), injectionSwitch.x)) / 1.0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) != 1, _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) != 1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))))))
      break;
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            return;
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))) || false)))))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     continue;
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec3(false || (false), false, true), bvec3(bvec4(bvec3(false || (false), false, true), false)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))), bool(bvec4(bool(_GLF_IDENTITY(true, ! (! (true)))), false, true, true))))), false)), true && (bool(bvec4(false, false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, sqrt(0.0), tan(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), determinant(mat3(determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * cos(0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(74.99) : 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((-883.893 / -209.868)))), 0.0, 0.0, 1.0, abs(1.0))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + 0.0))), 0.0))).y))));
            }
           if(_GLF_DEAD(false))
            return;
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0))); _injected_loop_counter ++)
              {
               do
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  continue;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
      {
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), int(3)))), false, true, false)), (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(3), int(3)))), false, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(5647.3135)), bool(false))), 0.0)).y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(1058.0442, 75.39)) : _GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))) * (injectionSwitch))))[1]))))), min(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) / 1), 1))]))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0, 1 * (0))))], injectionSwitch[1]))), clamp(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))[0], mix(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))[0]), float(_GLF_FUZZED(7497.6994)), bool(false))), injectionSwitch[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))))) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-9.6, clamp(-9.6, -9.6, _GLF_IDENTITY(-9.6, (-9.6) - 0.0))), -8034.1015))))).y), (! (injectionSwitch.x > injectionSwitch.y)) && true), bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(-34.27), _GLF_FUZZED((- 5.1))), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(true, true)))).y)))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]), (true ? vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1]) : _GLF_FUZZED(vec2(-741.776, -2.0))))).x > injectionSwitch.y)))) && true))))))))))
        return;
      }
    }
  }
 else
  {
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u ^ (63075u & 0u)), 1u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u ^ (63075u & 0u)), 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u ^ (63075u & 0u)), 1u)))), 0u, 1u, 0u))) >> 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u ^ (63075u & 0u)), 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u ^ (63075u & 0u)), 1u)))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u ^ (63075u & 0u)), 1u))), (_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u ^ (63075u & 0u)), 1u)))) >> 0u)) - 0u)))) * subgroup_size, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-2.3)), float(_GLF_IDENTITY(0.0, (0.0) / exp(0.0))), bool(true))), injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, (0u ^ (63075u & 0u)), _GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 0u, ((~ 66700u) & 0u))))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, (0u ^ (63075u & 0u)), 1u)), (true ? uint(uvec4(subgroup_id, _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), (0u ^ (63075u & 0u)), 1u)) : _GLF_FUZZED(workgroup_size))))) >> 0u) * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) ^ 0u) - 0u) % subgroup_size);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(true)), bool(bvec2(bool(_GLF_WRAPPED_IF_TRUE(true)), false))))))
                {
                 return;
                }
               else
                {
                }
              }
             return;
            }
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / 1), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / 1), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), ~ (~ (_GLF_IDENTITY(1, (1) - 0))))))), ((_GLF_IDENTITY(1, (1) - 0))) | ((_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(min(-65846, 71371)) : 0)))))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / 1))) < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))) | (subgroup_size)))
              {
               int i = 0;
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))), 1.0)), injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))) ? _GLF_FUZZED(-8.9) : injectionSwitch.x)) < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((mix(injectionSwitch, injectionSwitch, -831.586) + vec2(2470.0768, -5798.9039))) : injectionSwitch)).y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(-8.9) : injectionSwitch.x)) < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)) ? _GLF_FUZZED((mix(injectionSwitch, injectionSwitch, -831.586) + vec2(2470.0768, -5798.9039))) : injectionSwitch)).y))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(-8.9) : injectionSwitch.x)) < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)) ? _GLF_FUZZED((mix(injectionSwitch, injectionSwitch, -831.586) + vec2(2470.0768, -5798.9039))) : injectionSwitch)).y))))))))))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(-8.9) : injectionSwitch.x)) < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED((mix(injectionSwitch, injectionSwitch, -831.586) + vec2(2470.0768, -5798.9039))) : injectionSwitch)).y)))))))))), true, false, false)))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-80.83)), float(injectionSwitch.y), bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-80.83)), float(injectionSwitch.y), bool(true))))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-80.83)), float(injectionSwitch.y), bool(true)), float(mat2(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-80.83)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(-80.83)), float(injectionSwitch.y), bool(true))) * 1.0), 1.0, 1.0, 0.0))))))))))))))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                            return;
                           if(_GLF_DEAD(false))
                            break;
                           break;
                           if(_GLF_DEAD(false))
                            return;
                          }
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (false ? _GLF_FUZZED(atan(-8.0)) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0)))) / vec2(1.0, 1.0)).y, (injectionSwitch.y) - 0.0)))))) / 1.0)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) / 1.0)), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) / 1.0))))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-5671.1718 - -5191.8812))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) / 1.0)), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) - 0.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) / 1.0))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) / 1.0)), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), max((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))) / 1.0))))), false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false)))))), (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(false))))))) && true)))) && true))))))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   return;
                                  }
                                 else
                                  {
                                  }
                                }
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              break;
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter))) | 1)); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 return;
                                }
                              }
                            }
                           return;
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), true && (false)), true))) && true))))
                    continue;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) | _GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) * 1.0)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(2), (uint(2)) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) * 1.0)))), 0u | ((_GLF_IDENTITY(uint(2), (uint(2)) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) * 1.0)))))), (_GLF_IDENTITY(uint(2), (uint(2)) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) * 1.0)))), (_GLF_IDENTITY(uint(2), (uint(2)) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)) * 1.0))))))), 4, 64, _GLF_IDENTITY(4, (4) * 1));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false || (_GLF_DEAD(false))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                      {
                       return;
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.1)), bool(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.1)), bool(false)))), 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-7.1)), (false ? _GLF_FUZZED(14.38) : float(_GLF_FUZZED(-7.1)))), bool(false))))))) + sqrt(0.0)) + 0.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9588.6543)), bool(false))) < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))), ! (! ((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false)))))) && true)))), false))) || false))) || _GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.1)), bool(false)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.1)), bool(false)))), 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-7.1)), (false ? _GLF_FUZZED(14.38) : float(_GLF_FUZZED(_GLF_IDENTITY(-7.1, (-7.1) * sqrt(1.0)))))), bool(false))))))) + sqrt(0.0)) + 0.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), false)))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec3(bvec2(false, true), false)))), true))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9588.6543)), bool(false))) < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))), ! (! ((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false)))))) && true), bool(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))), ! (! ((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false)))))) && true), true, false))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9588.6543)), bool(false))) < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))), ! (! ((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false)))))) && true), bool(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))), ! (! ((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false)))))) && true), true, false)))))))), _GLF_IDENTITY(false, false || (false))), bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9588.6543)), bool(false))) < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))), ! (! ((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false)))))) && true), bool(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))), ! (! ((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false)))))) && true), true, false))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9588.6543)), bool(false))) < injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))), ! (! ((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false)))))) && true), bool(bvec3(_GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, false, false)), _GLF_IDENTITY((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false))), ! (! ((bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false)))))) && true), true, false)))))))), _GLF_IDENTITY(false, false || (false))), false))))) || false))) || _GLF_IDENTITY(false, ! (! (false)))))))))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), _GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(vec3(injectionSwitch, 0.0)), _GLF_IDENTITY((vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0), min(_GLF_IDENTITY((vec2(vec3(injectionSwitch, 0.0))) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), min((vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0), (vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0))), (vec2(vec3(injectionSwitch, 0.0))) * mat2(1.0))))), (vec2(vec2(vec3(injectionSwitch, 0.0)))) + vec2(0.0, 0.0))))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(4945.2610)), bool(false))) : _GLF_FUZZED(-9.9)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), 1.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(4945.2610)), bool(false))) : _GLF_FUZZED(-9.9)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), 1.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(4945.2610)), bool(false))) : _GLF_FUZZED(-9.9)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false))) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)))))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), float(_GLF_FUZZED(-9890.9892)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1126.9364)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && true))))))) && true))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, (false ? _GLF_FUZZED(8.3) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)))) > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), false, true), bvec3(bvec3(bvec3(false, false, true)))))) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true))))) && true))))))) && true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, sin(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, sin(0.0), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)) * mat2(1.0)))), mix(float(_GLF_FUZZED(7.5)), float(injectionSwitch.y), bool(true)))))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).x > injectionSwitch.y) || false)))))))) && true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(false, false, true))))))))) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), (injectionSwitch) * mat2(1.0)).x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))), (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false, false, false))))), true, false, false)))), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && true)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, true)))))) || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x3(mat2(1.0))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x3(mat2(1.0))))).x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))), ((! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)) && true))) && true))))))) && true))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED((true ? vec3(-68.79, 8688.6241, -9103.1379).p : -1.1))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, false || (true))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false)), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true) && true))))))) && true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_DEAD(false))
                            return;
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              return;
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                return;
                               return;
                              }
                            }
                           return;
                          }
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 ^ (_injected_loop_counter ++)))
                          {
                           return;
                           if(_GLF_DEAD(false))
                            return;
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           return;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        continue;
                      }
                    }
                   if(_GLF_DEAD(false))
                    return;
                   return;
                   do
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                      break;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                      return;
                     return;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               else
                {
                }
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))))), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false)))))))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   return;
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))
                continue;
               for(int _injected_loop_counter = ((_GLF_IDENTITY(1, int(ivec3(1, 1, 0))) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  continue;
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                      {
                       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                        }
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x < injectionSwitch.y))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 do
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       break;
                      }
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       for(int _injected_loop_counter = (0 & (true ? int(5254u) : 39366)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))));
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-972.983) : _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0 + (float(mat3x4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), clamp(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, _GLF_IDENTITY(-7.2, clamp(_GLF_IDENTITY(-7.2, (-7.2) * 1.0), -7.2, -7.2))))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(644.781))), 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, _GLF_IDENTITY(-977.026, (-977.026) + 0.0), -6765.8257, -7.2))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), _GLF_IDENTITY(float(mat4x2(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(max(6028.2569, 3.4)) : float(mat4x2(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(9.2, -9.2, -2790.9742).t)), bool(false))) : _GLF_FUZZED(-4.2))), 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)))))))), _GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0 + (float(mat3x4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(407.073) : 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2)))))), (clamp(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, _GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(-794.718))), -977.026, -6765.8257, -7.2))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sin(-70.62)) : 0.0)), 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))))) / 1.0))), _GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))) / vec2(1.0, 1.0)).y), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0 + (float(mat3x4(injectionSwitch.y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(407.073) : 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) : _GLF_FUZZED(mod(6044.0039, 8.9)))), _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0))), 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, _GLF_IDENTITY(-54.30, clamp(-54.30, -54.30, -54.30)), 7.4, -977.026, -6765.8257, -7.2))))), _GLF_IDENTITY(clamp(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2)))))), (clamp(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(11.15)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, _GLF_IDENTITY(7.4, (true ? 7.4 : _GLF_FUZZED(-794.718))), -977.026, -6765.8257, -7.2))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sin(-70.62)) : 0.0)), 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))))) / 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))))) / 1.0)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8397.0768)), bool(false))), injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))), _GLF_ONE(1.0, injectionSwitch.y))), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0 + (float(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6250.7238))), injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0)))) / 1.0), max(_GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0)))) / 1.0), _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0)))) / 1.0))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), clamp(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(distance(vec4(-133.356, 4.0, 43.55, -667.713), vec4(-8.9, -0.3, -6766.1647, 9.1))))))), 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (true ? mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, _GLF_IDENTITY(-977.026, min(_GLF_IDENTITY(-977.026, 1.0 * (_GLF_IDENTITY(-977.026, mix(float(_GLF_FUZZED(962.057)), float(-977.026), bool(true))))), -977.026)), -6765.8257, -7.2))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true, true))) ? mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-45.77)), bool(false))), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2x3(-363.005, -54.30, 7.4, -977.026, -6765.8257, -7.2)))))))), _GLF_ONE(1.0, injectionSwitch.y))))))) || false)) && true)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, false))))), false || (bool(bool(true)))), false, false, false))))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
                  break;
                 return;
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((0 | 0), 0 ^ ((0 | 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.0, -7946.9197)) : injectionSwitch)).y, 1.0 * (injectionSwitch.y))) * 1.0)), false || ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3.0, -7946.9197)) : injectionSwitch)).y, 1.0 * (injectionSwitch.y))) * 1.0)), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      break;
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(true))), true && (bool(bool(_GLF_WRAPPED_IF_TRUE(true)))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y))))))))
                  continue;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) && true)))), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0))) : _GLF_FUZZED((vec2(-0.2, 4.9) - vec2(-24.51, 190.480))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-6.8))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (vec2(1.0, 1.0)))))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0)), mat3(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0)), (mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(mat3(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0)), (mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0)), (mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mat3(1.0) * (mat3(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0)), (mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0)), (mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))))))), injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) * _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED((false ? -4272.6744 : -5517.2161)), _GLF_FUZZED(6.3)), vec2((vec2(1.0, 1.0))[0], _GLF_IDENTITY((vec2(1.0, 1.0))[1], clamp((vec2(1.0, 1.0))[1], (vec2(1.0, 1.0))[1], _GLF_IDENTITY((vec2(1.0, 1.0))[1], (true ? (vec2(1.0, 1.0))[1] : _GLF_FUZZED(-2.1)))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 1.0, 1.0))) : _GLF_FUZZED((vec2(_GLF_IDENTITY(-0.2, float(mat3x2(_GLF_IDENTITY(-0.2, mix(float(_GLF_FUZZED(-23.56)), float(-0.2), bool(true))), 0.0, 0.0, 1.0, 1.0, 0.0))), 4.9) - _GLF_IDENTITY(vec2(-24.51, 190.480), (_GLF_IDENTITY(vec2(-24.51, 190.480), vec2(mat3x4(vec2(-24.51, 190.480), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 1.0, 0.0, 1.0)))) + vec2(0.0, 0.0)))))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(0.0, 0.0) + (normalize(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(0.0, 0.0) + (normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(0.0, 0.0) + (normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(0.0, 0.0) + (normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(0.0, 0.0) + (normalize(vec2(1.0, 1.0))))) * mat2(1.0), mix(vec2(((_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(0.0, 0.0) + (normalize(vec2(1.0, 1.0))))) * mat2(1.0))[0], _GLF_FUZZED(88.48)), vec2(_GLF_FUZZED(61.43), ((_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(0.0, 0.0) + (normalize(vec2(1.0, 1.0))))) * mat2(1.0))[1]), bvec2(false, true)))))))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-590.308) : 0.0)), 1.0, 1.0, 1.0)), (true ? float(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-590.308) : 0.0)), 1.0, 1.0, 1.0)) : _GLF_FUZZED(exp2(756.945))))), sin(0.0), 1.0, cos(0.0)), mat3(mat4(_GLF_IDENTITY(mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sign(6.7)))), 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0)), (mat3(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sign(6.7)))), 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(0.0))) * mat3(1.0)), (mat3(injectionSwitch.y, round(_GLF_IDENTITY(length(normalize(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), mix(float(_GLF_FUZZED(-2020.2862)), float(length(normalize(vec2(1.0, 1.0)))), bool(true)))), 1.0, 0.0, length(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sign(6.7)))), 0.0, 0.0)), 0.0, sin(0.0), 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(634.049)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y))))) || false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), (bool(_GLF_IDENTITY(true, (true) && true))) || false))))), true, true))))))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), true, true)))))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(5, (5) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(int(~ (_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) - 0)) >> 0)))), (int(int(~ (_GLF_IDENTITY(5, (5) >> 0))))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(_GLF_IDENTITY(5, (5) >> 0), ~ (~ (_GLF_IDENTITY(5, (5) >> 0))))))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(clamp(ivec2(int(int(~ (_GLF_IDENTITY(_GLF_IDENTITY(5, (5) >> 0), (_GLF_IDENTITY(5, _GLF_IDENTITY((5) >> 0, ((5) >> 0) | ((5) >> 0)))) - 0)))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))), ((0 << _GLF_IDENTITY(int(7), int(7)))) | _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(7), int(7)))), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) >> _GLF_IDENTITY(int(2), int(2))) * (((0 << _GLF_IDENTITY(int(7), int(7)))))))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(_GLF_IDENTITY(5, (5) ^ 0), _GLF_IDENTITY((5) >> 0, ((5) >> 0) >> 0))))), (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec2(_GLF_IDENTITY(-79343, _GLF_IDENTITY((-79343), clamp((-79343), (-79343), _GLF_IDENTITY((-79343), (_GLF_IDENTITY((-79343), 0 + ((-79343)))) | 0))) * 1), 54485))))), (ivec2(1, 1) ^ _GLF_IDENTITY(ivec2(0, 0), ivec2(1, 1) * (ivec2(0, 0)))) * (clamp(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec2(int(int(_GLF_IDENTITY(~ (_GLF_IDENTITY(5, (5) >> 0)), (~ (_GLF_IDENTITY(5, (5) >> 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? _GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, _GLF_IDENTITY((5) >> 0, ~ (_GLF_IDENTITY(~ ((5) >> 0), min(~ ((5) >> 0), ~ ((5) >> 0))))))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0))), _GLF_IDENTITY(max(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)))), _GLF_IDENTITY(ivec2(ivec3(max(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)))), 1)), _GLF_IDENTITY(ivec2(ivec4(_GLF_IDENTITY(ivec2(ivec3(max(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)))), 1)), (ivec2(ivec3(max(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)))), 1))) + ivec2(0, 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), ivec2(1, 1) * (ivec2(ivec4(_GLF_IDENTITY(ivec2(ivec3(max(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)))), 1)), (ivec2(ivec3(max(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)))), 1))) + ivec2(0, 0)), 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))))) : _GLF_FUZZED(ivec2(-79343, 54485))))))))), _GLF_IDENTITY(0 | (int(_GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec2(-79343, 54485)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0 | (int(_GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec2(-79343, 54485))))))))), (~ (0 | (int(_GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec2(-79343, 54485)))))))))) | (_GLF_IDENTITY(~ (0 | (int(_GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec2(-79343, 54485))))))))), max(~ (0 | (int(_GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec2(-79343, 54485))))))))), _GLF_IDENTITY(~ (0 | (int(_GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec2(-79343, 54485))))))))), (~ (0 | (int(_GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec2(-79343, 54485)))))))))) * 1))))), min(~ (0 | (int(_GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec2(-79343, 54485))))))))), ~ (0 | (int(_GLF_IDENTITY(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (_GLF_IDENTITY(0, 0 + (0)) << _GLF_IDENTITY(int(7), int(7)))), clamp(ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(ivec2(int(int(~ _GLF_IDENTITY((_GLF_IDENTITY(5, (5) >> 0)), ((_GLF_IDENTITY(5, (5) >> 0))) >> 0))), (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? ivec2(int(int(~ (_GLF_IDENTITY(5, (5) >> 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(ivec2(-79343, 54485))))))))))))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / 1), (_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), 0 ^ ((int(5)))) / 1)) | (_GLF_IDENTITY(int(5), (int(5)) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / 1), (_GLF_IDENTITY(int(5), (int(5)) / 1)) | (_GLF_IDENTITY(int(5), (int(5)) / 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / 1), _GLF_IDENTITY((_GLF_IDENTITY(int(5), (int(5)) / 1)) | (_GLF_IDENTITY(int(5), (int(5)) / 1)), ((_GLF_IDENTITY(int(5), (int(5)) / 1)) | (_GLF_IDENTITY(int(5), (int(5)) / 1))) | 0)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / 1), ~ (~ (_GLF_IDENTITY(int(5), (int(5)) / _GLF_IDENTITY(1, min(1, 1)))))), (_GLF_IDENTITY(int(5), (int(5)) / 1)) | (_GLF_IDENTITY(int(5), (int(5)) / 1)))))))), int(5))), _GLF_IDENTITY(int(5), 1 * (int(5))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(bitfieldInsert(findLSB(-39793), 2175, _injected_loop_counter, _injected_loop_counter)) : _injected_loop_counter)) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                 do
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-64045) : 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)))));
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-80.50) : injectionSwitch.y))))))
          break;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(length(injectionSwitch)) : injectionSwitch[0])), injectionSwitch[1])).x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}
