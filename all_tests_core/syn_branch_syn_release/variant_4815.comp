#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), injectionSwitch.y)), injectionSwitch.y), (false ? _GLF_FUZZED(length(vec4(8.2, 3.5, 21.00, 10.45))) : _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), injectionSwitch.y)), injectionSwitch.y), max(max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), injectionSwitch.y)), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), injectionSwitch.y)), injectionSwitch.y)))))), _GLF_IDENTITY(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.7) : injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.2), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-4.1)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-1797.4827)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(4.5, -31.53, 3355.6461, -2.0, -8.8, 6.7, -2.1, 294.842, 8.3, 969.411, _GLF_IDENTITY(7.9, 0.0 + (7.9)), 27.70)) : mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(bool(bool(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(bool(bool(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && (bool(bool(false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, mix(float(_GLF_FUZZED((- 852.653))), float((injectionSwitch.x) - 0.0), bool(true)))) > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED((766.319))), bool(false))) > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED((766.319))), bool(false))) > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(_GLF_FUZZED((766.319))), bool(false))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)), true, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), true, true), true)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (false ? _GLF_FUZZED(clamp(vec2(8.9, _GLF_IDENTITY(3.1, max(_GLF_IDENTITY(3.1, min(_GLF_IDENTITY(3.1, min(3.1, 3.1)), 3.1)), 3.1))), vec2(-1663.2704, -2102.0565), injectionSwitch)) : (injectionSwitch) - vec2(0.0, 0.0))), _GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0), max(((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0), ((injectionSwitch) - vec2(0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))))))), (true ? mat3x2(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))))))) : _GLF_FUZZED(mat3x2(9.4, 8.3, -1.6, -7.8, 958.509, _GLF_IDENTITY(-8.4, max(-8.4, -8.4))))))), mat2(mat2x4(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))))))), (true ? mat3x2(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))))))) : _GLF_FUZZED(mat3x2(9.4, 8.3, -1.6, -7.8, 958.509, -8.4))))))))))))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(657.963) : 0.0)))), 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-0.1))), 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), log(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-4.1) : dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), vec2(0.0, 1.0)))) + sin(0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), log(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0)))), (_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(657.963) : 0.0)))), 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-0.1))), 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), log(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-4.1) : dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(0.0, tan(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0))), 1.0), mat4x2(mat4(mat4x2(0.0, tan(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0))), 1.0))))), (true ? float(_GLF_IDENTITY(mat4x2(0.0, tan(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0))), 1.0), mat4x2(mat4(mat4x2(0.0, tan(0.0), 1.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, abs(1.0), 1.0))), 1.0))))) : _GLF_FUZZED(54.45)))), determinant(mat3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), vec2(0.0, 1.0)))) + sin(0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), log(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0))) / vec2(1.0, 1.0)) * mat2(1.0)), vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, cos(0.0)), (_GLF_IDENTITY(vec2(0.0, cos(0.0)), min(vec2(0.0, cos(0.0)), vec2(0.0, cos(0.0))))) * vec2(1.0, 1.0))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, cos(0.0)), mix(vec2(_GLF_IDENTITY((vec2(0.0, cos(0.0)))[0], max((vec2(0.0, cos(0.0)))[0], (vec2(0.0, cos(0.0)))[0])), _GLF_FUZZED(-43.62)), vec2(_GLF_FUZZED(-2551.4197), (vec2(0.0, cos(0.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(vec2(0.0, cos(0.0)), min(vec2(0.0, cos(0.0)), vec2(0.0, cos(0.0))))) * vec2(1.0, 1.0))), float(_GLF_IDENTITY(vec2(0.0, cos(0.0)), (_GLF_IDENTITY(vec2(0.0, cos(0.0)), min(_GLF_IDENTITY(vec2(0.0, cos(0.0)), mix(vec2((vec2(0.0, cos(0.0)))[0], _GLF_FUZZED(-587.578)), vec2(_GLF_FUZZED((8764.2687 * 49.87)), _GLF_IDENTITY((vec2(0.0, cos(0.0)))[1], float(vec2((vec2(0.0, cos(0.0)))[1], abs(1.0))))), bvec2(false, true))), vec2(0.0, cos(0.0))))) * vec2(1.0, 1.0)))))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(657.963) : 0.0)))), 0.0, determinant(mat3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED((mat2x3(936.153, -378.527, -885.800, -0.8, 37.73, -64.29) * injectionSwitch).gg)))), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-0.1))), 1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6026.3909)))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.6)), float(0.0), bool(true))))), 1.0)), log(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) + vec2(0.0, 0.0)), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0), transpose(transpose(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, exp(0.0), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, determinant(mat3(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), mat2(1.0) * (vec2(0.0, 1.0))), vec2(0.0, 1.0)))) + sin(0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), log(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)) + 0.0), 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)), vec2(1.0, 0.0)))), 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0)))))), (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)), false, false, true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)), false, false, _GLF_IDENTITY(true, true && (true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2688.9070)), vec2(_GLF_FUZZED(90.18), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2688.9070)), vec2(_GLF_FUZZED(90.18), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2688.9070)), vec2(_GLF_FUZZED(90.18), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2688.9070)), vec2(_GLF_FUZZED(90.18), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))) || false)))) && true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))))))))))), false)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))))))))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), true, true, false))) && _GLF_IDENTITY(true, (true) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) * _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 1.0, 1.0))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + tan(0.0)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.8)), bool(false))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), false, false, false)))), bool(bvec4(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), false, false, false)))), true, false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0), _GLF_IDENTITY(mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-494.679)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)), mix(float(_GLF_FUZZED(-7.1)), float(mix(float(_GLF_FUZZED(-494.679)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), bool(true)))), 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(determinant(mat3(-7.8, -3.0, 5.1, 4.0, -5.6, -4.1, -165.166, -6942.8193, -27.47))) : 0.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), exp(0.0), 1.0))), _GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0))) * (mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(99.03)), bool(false))), min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0)))))))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-9.8))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-847.984), _GLF_FUZZED(498.054)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (true ? mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-9.8))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-847.984), _GLF_FUZZED(498.054)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)) : _GLF_FUZZED(injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), float(mat3x4(round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))))), mix(vec2(_GLF_FUZZED(9062.3168), _GLF_FUZZED(2012.5259)), vec2(_GLF_IDENTITY((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))))))[0], clamp((vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))))))[0], (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3x2(mat4(mat3x2(0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))))))[0], (vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(mat4x3(injectionSwitch, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(mat4(normalize(vec2(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))))))[0])), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))))))[1]), bvec2(true, true)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), false, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, abs(1.0), 1.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, cos(0.0) * (0.0)), sin(0.0), 0.0)), exp(0.0), 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7.7)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), _GLF_IDENTITY(! (! (true && (false))), bool(bvec2(! (! (true && (false))), false))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) ? _GLF_FUZZED(4.2) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))), (bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y)))))) && true)))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(1.0)) + _GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0) : _GLF_FUZZED(-2.2))), 0.0, 0.0), mat2(1.0) * (mat2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0) : _GLF_FUZZED(-2.2))), 0.0, 0.0))))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(4.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2749.4632) : 4.2))) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false))))))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(4.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2749.4632) : 4.2))) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false))))))))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(4.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2749.4632) : 4.2))) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false))))))))))), false, true)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(4.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2749.4632) : 4.2))) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false))))))))))), false, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(1.0)) + _GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0) : _GLF_FUZZED(-2.2))), 0.0, 0.0), mat2(1.0) * (mat2(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0) : _GLF_FUZZED(-2.2))), 0.0, 0.0))))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(4.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2749.4632) : 4.2))) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false))))))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(4.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2749.4632) : 4.2))) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false))))))))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(4.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2749.4632) : 4.2))) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false))))))))))), false, true)), bvec3(bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(4.2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2749.4632) : 4.2))) : injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(4.2) : injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))), bool(bool(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))).y))))))) || false))))))))))), false, true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) - (0u & (25031u >> 166092u)), ~ (~ ((workgroup_base) - (0u & (25031u >> 166092u)))))) + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))) * subgroup_size + subgroup_local_id, uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) - (0u & (25031u >> 166092u))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) - (0u & (_GLF_IDENTITY(25031u, clamp(_GLF_IDENTITY(25031u, uint(uvec3(25031u, 0u, 1u))), 25031u, 25031u)) >> 166092u)), ((workgroup_base) - (0u & (25031u >> 166092u))) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), (13832u & 0u) | (0u ^ (subgroup_local_id + 1))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << (45457u & 0u)) + 1), (0u ^ (subgroup_local_id + 1)) | (_GLF_IDENTITY(0u, (0u) + (0u ^ 0u)) ^ (subgroup_local_id + 1))), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), (_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), (0u ^ (subgroup_local_id + 1)) | (0u ^ (subgroup_local_id + 1)))) ^ 0u), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), (_GLF_IDENTITY(0u ^ (subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 1, (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))))))), (0u ^ (subgroup_local_id + 1)) | (0u ^ (subgroup_local_id + 1)))) ^ 0u), 1u, 1u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((0u ^ (subgroup_local_id + 1)), (true ? (0u ^ (subgroup_local_id + 1)) : _GLF_FUZZED(workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(9142u))), _GLF_IDENTITY((true ? 0u : _GLF_FUZZED((workgroup_size % workgroup_size))), max((true ? 0u : _GLF_FUZZED((workgroup_size % workgroup_size))), _GLF_IDENTITY((true ? 0u : _GLF_FUZZED((workgroup_size % workgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? 0u : _GLF_FUZZED((workgroup_size % workgroup_size)))))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) << 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) << 0u))) << 0u))), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (true ? uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), (_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), (0u ^ (subgroup_local_id + 1)) | (0u ^ (subgroup_local_id + 1)))) ^ 0u), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), (_GLF_IDENTITY(0u ^ (subgroup_local_id + _GLF_IDENTITY(1, int(ivec3(1, 1, (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))))))), (0u ^ (subgroup_local_id + 1)) | (0u ^ (subgroup_local_id + 1)))) ^ 0u), 1u, 1u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY((0u ^ (subgroup_local_id + 1)), (true ? (0u ^ (subgroup_local_id + 1)) : _GLF_FUZZED(workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(9142u))), _GLF_IDENTITY((true ? 0u : _GLF_FUZZED((workgroup_size % workgroup_size))), max((true ? 0u : _GLF_FUZZED((workgroup_size % workgroup_size))), _GLF_IDENTITY((true ? 0u : _GLF_FUZZED((workgroup_size % workgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : (true ? 0u : _GLF_FUZZED((workgroup_size % workgroup_size)))))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) << 0u)), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) << 0u))) << 0u))), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) : _GLF_FUZZED((num_workgroup)))), uint(uvec3(_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), (0u ^ (subgroup_local_id + 1)) | (0u ^ (subgroup_local_id + 1))), 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), min((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), true && (false || (_GLF_IDENTITY(false, (false) || false)))))), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))))), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), false, false))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.5, 3986.3172)) : injectionSwitch)).x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))), false, false, true))), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))))))), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), false), bvec2(bvec3(bvec2(! (! (false)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, false, true)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, clamp((injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0, (injectionSwitch.x) + 0.0))) < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))))))), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))), true)))), true, false, true)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))))))), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || false), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true)))), true, false, true)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))), true && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))))))), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, false, true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) * 1.0), injectionSwitch.x))) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)))), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y), _GLF_IDENTITY(false, false || (false)))))))), true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, false, true)), (bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, false, true))) || false)))))))))))), false, false, true))) && true), false, false)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), bvec3(bvec3(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))))))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(false, true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(false, true, false)))), true)))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true)), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true)), true))))), true))))))))), ! _GLF_IDENTITY((! (bool(bvec3(false, true, false)))), true && ((! (bool(bvec3(false, true, false))))))))) && true), false)), false, false)))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, false, true)))))) && true), false, false)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))), true)))), true))))))), ! _GLF_IDENTITY((! (bool(bvec3(false, true, false)))), true && _GLF_IDENTITY(((! (bool(bvec3(false, true, false))))), _GLF_IDENTITY(bool(bool(((! (bool(bvec3(false, true, false))))))), bool(bvec4(bool(bool(((! (bool(bvec3(false, true, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) && true), false)), false, false), bvec3(bvec3(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))), true)))), true))))))), ! _GLF_IDENTITY((! (bool(bvec3(false, true, false)))), true && _GLF_IDENTITY(((! (bool(bvec3(false, true, false))))), _GLF_IDENTITY(bool(bool(((! (bool(bvec3(false, true, false))))))), bool(bvec4(bool(bool(((! (bool(bvec3(false, true, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) && true), false)), false, false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, false, true)))))) && true), false, false)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))), true)))), true))))))), ! _GLF_IDENTITY((! (bool(bvec3(false, true, false)))), true && _GLF_IDENTITY(((! (bool(bvec3(false, true, false))))), _GLF_IDENTITY(bool(bool(((! (bool(bvec3(false, true, false))))))), bool(bvec4(bool(bool(((! (bool(bvec3(false, true, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) && true), false)), false, false), bvec3(bvec3(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))), true)))), true))))))), ! _GLF_IDENTITY((! (bool(bvec3(false, true, false)))), true && _GLF_IDENTITY(((! (bool(bvec3(false, true, false))))), _GLF_IDENTITY(bool(bool(((! (bool(bvec3(false, true, false))))))), bool(bvec4(bool(bool(((! (bool(bvec3(false, true, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) && true), false)), false, false))))))))), false, true, false)), false || (bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, false, true)))))) && true), false, false)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))), true)))), true))))))), ! _GLF_IDENTITY((! (bool(bvec3(false, true, false)))), true && _GLF_IDENTITY(((! (bool(bvec3(false, true, false))))), _GLF_IDENTITY(bool(bool(((! (bool(bvec3(false, true, false))))))), bool(bvec4(bool(bool(((! (bool(bvec3(false, true, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) && true), false)), false, false), bvec3(bvec3(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, (false) || false)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))))), true)))), true))))))), ! _GLF_IDENTITY((! (bool(bvec3(false, true, false)))), true && _GLF_IDENTITY(((! (bool(bvec3(false, true, false))))), _GLF_IDENTITY(bool(bool(((! (bool(bvec3(false, true, false))))))), bool(bvec4(bool(bool(((! (bool(bvec3(false, true, false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))) && true), false)), false, false))))))))), false, true, false))))))), true, true)), ! (_GLF_IDENTITY(! (bool(bvec3(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).x)) < injectionSwitch.y)))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)))))) && true)) || false), true, false, true)))))) && true), false, false)), false, false), bvec3(bvec3(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec3(false, true, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(bvec3(false, true, false)))), ((! (bool(bvec3(false, true, false))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (bool(bvec3(false, true, false)))), ((! (bool(bvec3(false, true, false))))) || false)), (! (_GLF_IDENTITY((! (bool(bvec3(false, true, false)))), _GLF_IDENTITY(((! (bool(bvec3(false, true, false))))), ! (! (((! (bool(bvec3(false, true, false)))))))) || false))) || false)))))), true && ((! (bool(bvec3(false, true, false))))))))) && true), false)), false, false)))))))), true, true))), ! (! (! (bool(bvec3(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bool(_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, false, true)))))) && true), false, false)), false, false), bvec3(bvec3(bvec3(bool(bvec4(false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true))))))), ! _GLF_IDENTITY((! (bool(bvec3(false, true, false)))), true && ((! (bool(bvec3(false, true, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), false)))))))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true))))))), ! _GLF_IDENTITY((! (bool(bvec3(false, true, false)))), _GLF_IDENTITY(true, (true) && true) && ((! (bool(bvec3(false, true, false)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), false)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), false)))))))), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), bvec3(bvec3(bvec3(bvec3(false, true, false))))))), true))))))), ! _GLF_IDENTITY((! (bool(bvec3(false, true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (true) && true) && ((! (bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false))))))))))))))) && true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), false, false)))))))), true, true)))))))))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) - 0)))), _GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) - 0))))) << 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(80154) : _GLF_IDENTITY(((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) - 0))))) << 0, (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) - _GLF_IDENTITY(0, (0) | 0)))))) << 0) - 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (1) | (1))) | 0), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, _GLF_IDENTITY(1, (1) ^ 0)))))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) | 0, ((_GLF_IDENTITY(1, (1) | (1))) | 0) - 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0)), (clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) | 0, ((_GLF_IDENTITY(1, (1) | (1))) | 0) - 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0))) >> (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) | 0, ((_GLF_IDENTITY(1, (1) | (1))) | 0) - 0)), _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | (1))) | 0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))) | 0, _GLF_IDENTITY(((_GLF_IDENTITY(1, (1) | (1))) | 0) | 0, min(_GLF_IDENTITY(((_GLF_IDENTITY(1, (1) | (1))) | 0) | 0, 0 | (((_GLF_IDENTITY(1, (1) | (1))) | 0) | 0)), ((_GLF_IDENTITY(1, (1) | (1))) | 0) | 0)))), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1))) | 0)) | 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0))))) - 0) << 0))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))) || false)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, (0) | 0);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false))))))), false, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bool(_GLF_IDENTITY((! (false)), true && ((! (false))))))), false, false)))))), ! (! ((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), true && ((! (false)))), bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && ((! (false))))))), false, false))))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((! (false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), false, false)))))), ! (! ((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true && ((! (false))), ! (! (true && ((! (false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), true && (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))), bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), true && ((! (false))))))), false, false))))))))), true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.5)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, max(2, 2))), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), uvec2(0u, 0u) | (uvec2(next_virtual_gid, 1u)))))], uint(2), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), max(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4)))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), true, false))))) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) || false)), ! (_GLF_IDENTITY(! (true && (false)), ! (_GLF_IDENTITY(! (! (true && (false))), (! (! (true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))), false))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(false)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true))))))))), false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) || false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
