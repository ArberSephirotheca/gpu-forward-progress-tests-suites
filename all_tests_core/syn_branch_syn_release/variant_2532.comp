#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 1u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), min(_GLF_IDENTITY(uint(uvec4(subgroup_local_id + 1, 1u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), (uint(uvec4(subgroup_local_id + 1, 1u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))) | 0u), uint(uvec4(subgroup_local_id + 1, 1u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))))))) % subgroup_size);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   switch(_GLF_SWITCH(0))
    {
     case 65:
     uvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[72];
     if(_GLF_DEAD(false))
      return;
     case 0:
     case 48:
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     case 23:
     case 88:
     case 74:
     if(_GLF_DEAD(false))
      return;
     case 21:
     case 53:
     case 34:
     if(_GLF_DEAD(false))
      return;
     case 42:
     case 24:
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) >> 0)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     break;
     default:
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       1;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u) < subgroup_size)
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     switch(_GLF_SWITCH(0))
      {
       case 8:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (0 | (0 | 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), false, false, true))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
           mat4(-117.830, 42.71, 9734.8857, -6.9, -21.31, _GLF_IDENTITY(-7.0, clamp(-7.0, -7.0, -7.0)), 87.51, _GLF_IDENTITY(-1349.8078, float(float(-1349.8078))), 8522.0127, -8.6, _GLF_IDENTITY(-893.537, float(vec3(-893.537, 1.0, 1.0))), 0.2, 714.379, 8.2, -82.61, 7699.6289);
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       case 57:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(float _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v; _GLF_IDENTITY(false, ! (! (false))); (uvec3(173324u, _GLF_IDENTITY(153385u, ~ (~ (153385u))), 161158u) % uint(_GLF_SWITCH_0_1v)))
          {
           if(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true), true, true, true))))
            {
             {
              if(_GLF_DEAD(false))
               continue;
              switch(_GLF_SWITCH(0))
               {
                case 0:
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 continue;
                mat2x4(75.48, -391.391, 7.5, -873.179, -51.84, 5097.2019, 6.2, 1.0);
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  break;
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                (mat3(-3.3, 2503.8729, 6073.0135, -7.7, -448.538, -924.627, _GLF_IDENTITY(6.2, max(6.2, 6.2)), -0.7, _GLF_IDENTITY(1.2, (true ? 1.2 : _GLF_IDENTITY(_GLF_FUZZED(_GLF_SWITCH_0_1v), 0.0 + (_GLF_IDENTITY(_GLF_FUZZED(_GLF_SWITCH_0_1v), min(_GLF_FUZZED(_GLF_SWITCH_0_1v), _GLF_FUZZED(_GLF_SWITCH_0_1v)))))))) / mat3(8232.5057, -5.0, 32.78, 969.662, _GLF_IDENTITY(5.6, max(_GLF_IDENTITY(5.6, clamp(5.6, 5.6, 5.6)), _GLF_IDENTITY(5.6, clamp(5.6, 5.6, 5.6)))), -852.489, 299.455, 59.63, -2822.1074));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    do
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    break;
                   }
                  break;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      return;
                     }
                    else
                     {
                     }
                   }
                 }
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 break;
                mat3x4 _GLF_SWITCH_0_2v;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    do
                     {
                      return;
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                  continue;
                 }
                (- (++ _GLF_SWITCH_0_2v));
                float _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[12];
                if(_GLF_DEAD(false))
                 break;
                float _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                if(_GLF_DEAD(false))
                 break;
                case 35:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) << 0))); _injected_loop_counter ++)
                 {
                  ;
                 }
                if(_GLF_DEAD(false))
                 break;
                case 86:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                vec3 _GLF_SWITCH_0_8v;
                break;
                default:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(false))
                   continue;
                  break;
                 }
                1;
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(((vec4(-742.487, 8.6, -3.4, 768.449) != vec4(-8.4, 531.441, 7.7, -2.1)) ? 500.306 : 2.9))), bool(false)))))))
                 continue;
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), true)))))
                   break;
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  break;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
               }
              if(_GLF_DEAD(false))
               continue;
             }
             uvec4 _GLF_SWITCH_0_9v[57], _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   return;
                  }
                 continue;
                }
               return;
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               break;
              }
             {
              vec3 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v;
              if(_GLF_DEAD(false))
               break;
              clamp(-69087, _GLF_IDENTITY(74486, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(93299) : 74486)), _GLF_IDENTITY(-78113, (true ? _GLF_IDENTITY(-78113, (-78113) - 0) : _GLF_FUZZED(-24513))));
              if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 break;
                return;
               }
              (mat3x4(-9916.7787, -85.09, 91.01, 91.91, -8663.2233, -4834.4093, -349.860, _GLF_IDENTITY(_GLF_IDENTITY(-1.4, max(-1.4, -1.4)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(-1.4, mix(float(_GLF_IDENTITY(-1.4, (true ? -1.4 : _GLF_FUZZED(_GLF_SWITCH_0_0v)))), float(_GLF_FUZZED(-62.03)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0)), max(float(_GLF_IDENTITY(mat2(-1.4, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-351.807)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), (_GLF_IDENTITY(mat2(-1.4, 1.0, 0.0, 1.0), mat2(1.0) * (mat2(-1.4, 1.0, 0.0, 1.0)))) * mat2(1.0))), float(mat2(-1.4, 1.0, 0.0, 1.0))))), 9316.2174, _GLF_IDENTITY(_GLF_IDENTITY(-290.867, clamp(-290.867, _GLF_IDENTITY(-290.867, float(vec4(-290.867, sin(0.0), 0.0, 0.0))), _GLF_IDENTITY(-290.867, max(-290.867, -290.867)))), (-290.867) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-65.63)), float(0.0), bool(true)))) - 0.0)), -6.6, 8004.8095) - mat3x4(5.1, 431.517, -8761.2736, 66.95, 958.633, -7.8, -51.88, -0.5, 499.172, _GLF_IDENTITY(-9.8, mix(float(_GLF_FUZZED(-9088.2906)), float(_GLF_IDENTITY(-9.8, (-9.8) / 1.0)), bool(true))), 7138.8671, -827.451));
              mat4(-91.93, 0.2, 8.8, 824.140, 41.74, -6886.3159, 6746.7162, 6.6, -5156.8649, 5.8, 1595.6685, 66.63, 9.4, -6.8, 0.7, -39.31);
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (false) || false)))
               continue;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
               }
              else
               {
                ;
               }
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               break;
              mat2x4 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
              bvec2((vec4(1.8, -9624.6647, 40.53, -4910.8432) == vec4(-208.232, -1.8, _GLF_IDENTITY(-61.15, _GLF_IDENTITY(float(mat3x4(-61.15, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), abs(1.0), 0.0, 1.0)))), clamp(float(mat3x4(-61.15, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), abs(1.0), 0.0, 1.0)))), float(mat3x4(-61.15, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), abs(1.0), 0.0, 1.0)))), float(mat3x4(-61.15, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), abs(1.0), 0.0, 1.0)), (determinant(mat4(1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, abs(1.0), abs(1.0), 0.0, 1.0))) + 0.0)))))), 386.484)), true);
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  continue;
                 }
                break;
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                break;
               }
             }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
              break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             uvec4(179140u, 70642u, _GLF_IDENTITY(55159u, (55159u) - 0u), _GLF_IDENTITY(78679u, ~ (~ (78679u))));
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             for(mat3x4 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v; _GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, false || (false)), false))); uvec4(101142u, 17281u, 105956u, 123356u).rara)
              {
               bvec4 _GLF_SWITCH_0_20v;
               if(_GLF_DEAD(false))
                return;
               mat4x2 _GLF_SWITCH_0_21v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           vec4 _GLF_SWITCH_0_22v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            continue;
           for(           (true ? (mat4x3(-2.1, 4.0, 1.0, -120.020, 3669.9821, 32.05, 57.21, -0.1, 4.7, -686.888, -77.74, 82.43) - mat4x3(5.4, -378.325, -3.8, 11.90, -60.87, -5904.2543, 9851.3259, -664.443, 1.8, 257.695, 0.3, 3.8)) : mat4x3(2277.4341, 19.00, -4.1, _GLF_IDENTITY(211.465, mix(float(211.465), float(_GLF_FUZZED(-1.5)), bool(false))), -82.81, -23.68, -88.65, -9.4, 3.8, -4.8, -8.2, 0.5));
 (_GLF_IDENTITY(subgroup_size < (subgroup_local_id), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(subgroup_size < (subgroup_local_id), bool(bvec3(subgroup_size < (subgroup_local_id), false, true))), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(subgroup_size < (subgroup_local_id), bool(bvec3(subgroup_size < (subgroup_local_id), false, true))), false, true))))))); uvec2(171534u, 151467u))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    break;
                   mat3 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v[12], _GLF_SWITCH_0_25v;
                   if(_GLF_DEAD(false))
                    return;
                   ;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                   mat4 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
                    continue;
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     return;
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     (_GLF_SWITCH_0_0v + _GLF_SWITCH_0_0v);
                    }
                   else
                    {
                    }
                   mat4 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v[12];
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     continue;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   floatBitsToUint(-0.7);
                   if(_GLF_DEAD(false))
                    break;
                   any(bvec4(false, false, false, true));
                   if(_GLF_DEAD(false))
                    break;
                  }
                 while(false);
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(_GLF_SWITCH_0_0v, _GLF_SWITCH_0_0v)) : injectionSwitch.x)) > injectionSwitch.y))))
              break;
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    do
                     {
                      for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 | 0) ^ 1)); _injected_loop_counter ++)
                       {
                        if(_GLF_DEAD(false))
                         break;
                        return;
                        if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(vec2(vec2(injectionSwitch[0], injectionSwitch[1])), clamp(vec2(vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(injectionSwitch[0], injectionSwitch[1])), vec2(vec2(injectionSwitch[0], injectionSwitch[1])))))))) - log(abs(vec2(1.0, 1.0)))).x > injectionSwitch.y))))
                         continue;
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                 }
               }
              else
               {
               }
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x < injectionSwitch.y))))))
               {
                if(_GLF_DEAD(false))
                 break;
                distance(_GLF_SWITCH_0_1v, _GLF_SWITCH_0_1v);
               }
              else
               {
               }
              uint _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v[38];
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                return;
                if(_GLF_DEAD(false))
                 return;
               }
              -95314;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 break;
                continue;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                break;
               }
              (workgroup_base * uvec3(150288u, 162673u, 44105u));
              if(_GLF_DEAD(false))
               continue;
              do
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  continue;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                uint(true);
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              mat2x3(-3.7, 3.5, 7.2, -0.1, 3.1, -43.74);
             }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
                {
                 return;
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   _GLF_IDENTITY(floatBitsToInt(-8.7), max(_GLF_IDENTITY(floatBitsToInt(-8.7), (false ? _GLF_FUZZED(bitCount(8413)) : floatBitsToInt(-8.7))), _GLF_IDENTITY(floatBitsToInt(-8.7), (floatBitsToInt(-8.7)) / 1)));
                  }
                 else
                  {
                  }
                }
              }
             ivec2 _GLF_SWITCH_0_33v[81], _GLF_SWITCH_0_34v[46], _GLF_SWITCH_0_35v;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              continue;
             (mat2(-455.300, _GLF_IDENTITY(-336.058, (-336.058) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), 6244.2802, -53.72) + intBitsToFloat(31440));
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED((-562.758 - -9.9))), bvec2(false, false))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED((-562.758 - -9.9))), bvec2(false, false))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED((-562.758 - -9.9))), bvec2(false, false))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED((-562.758 - -9.9))), bvec2(false, false))).x > injectionSwitch.y)))))))))) || false))
              continue;
             while((workgroup_id < (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) << workgroup_base, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) << workgroup_base) ^ (0u | 0u)))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 mat4x3(mat3x4(-199.507, -9.0, -5211.2030, -347.034, 7382.8960, 62.15, -7.8, 6257.8869, 25.88, -46.01, -43.67, 74.94));
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 continue;
                }
               bvec2(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, false, false))), true)))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, false, false))), true)))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, false, false))), true)))), true)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, false))))), false))))));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                }
               mat4 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 min(uvec4(169451u, 41004u, 142027u, _GLF_IDENTITY(62078u, clamp(62078u, 62078u, 62078u))), uvec4(uvec2(176757u, 7970u), subgroup_size, subgroup_size));
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               ivec2(-74015, -25204);
              }
             if((_GLF_IDENTITY(bvec3(false, false, true) != lessThan(uvec3(28209u, 161554u, 167004u), uvec3(147320u, 37368u, 69025u)), (bvec3(false, false, true) != lessThan(uvec3(28209u, 161554u, 167004u), uvec3(147320u, 37368u, 69025u))) || false)))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                  }
                 break;
                }
               do
                {
                 vec3(-5943.0601, _GLF_IDENTITY(79.58, clamp(_GLF_IDENTITY(79.58, (true ? 79.58 : _GLF_FUZZED(8273.0235))), 79.58, _GLF_IDENTITY(79.58, max(79.58, 79.58)))), -528.365);
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (float(injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))));
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                {
                 return;
                }
              }
             mat4x3 _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v[45], _GLF_SWITCH_0_41v[58];
            }
          }
        }
       case 0:
       int i = 0;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
       case 73:
       case 26:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
       break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       case 85:
       do
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), min(int(2), int(2))), max(_GLF_IDENTITY(int(2), min(int(2), int(2))), _GLF_IDENTITY(int(2), min(int(2), int(2))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           ivec3(97901, -2651, _GLF_IDENTITY(-95460, (-95460) | (-95460)));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 95:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       mat3x2(5.7, -3.4, -21.67, 3.7, 651.341, -95.81);
       default:
       if(_GLF_DEAD(false))
        break;
       1;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) | (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) - 0))) << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   switch(_GLF_SWITCH(0))
    {
     case 3:
     if(_GLF_DEAD(false))
      return;
     do
      {
       for(       (mat4x3(_GLF_IDENTITY(812.286, clamp(812.286, _GLF_IDENTITY(812.286, mix(float(_GLF_FUZZED(-5.4)), float(812.286), bool(true))), 812.286)), -3.4, 931.348, -5.1, -6632.8735, -4320.4216, 7668.5329, 7738.0450, 478.608, 4.5, 23.70, -9.1) / mat4x3(_GLF_IDENTITY(-71.23, (_GLF_IDENTITY(-71.23, float(mat4x2(_GLF_IDENTITY(-71.23, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) || false) ? _GLF_FUZZED(9.4) : -71.23)), determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) * 1.0), _GLF_IDENTITY(31.74, min(31.74, _GLF_IDENTITY(31.74, tan(0.0) + (31.74)))), 90.24, -884.458, -8436.5189, _GLF_IDENTITY(2.8, max(_GLF_IDENTITY(2.8, 1.0 * _GLF_IDENTITY((2.8), (false ? _GLF_FUZZED(2.0) : (2.8)))), _GLF_IDENTITY(2.8, 0.0 + (2.8)))), -8541.2887, -9802.1182, -105.541, _GLF_IDENTITY(48.14, min(48.14, _GLF_IDENTITY(48.14, _GLF_IDENTITY((48.14), max((48.14), _GLF_IDENTITY((48.14), (false ? _GLF_FUZZED(vec3(7.2, -3.0, -9.7).z) : (48.14))))) - log(1.0)))), 8.2, 339.672));
 false; vec4(1.1, 92.30, -3.4, -1.9))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         {
          float _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            continue;
           }
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
           continue;
          if((true && false))
           {
            switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(0.0)))), ~ (_GLF_IDENTITY(~ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(0.0))))), ~ (~ (~ (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(0.0))))))))))))
             {
              case 9:
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    return;
                   }
                  else
                   {
                   }
                 }
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                 {
                  return;
                 }
               }
              ;
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                 {
                  return;
                 }
                else
                 {
                 }
               }
              case 0:
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
               break;
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
               continue;
              case 61:
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                return;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              ;
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               break;
              do
               {
                greaterThan(vec4(-7066.2518, _GLF_IDENTITY(195.467, mix(float(_GLF_FUZZED(vec4(-9.5, -8.7, -7.3, -4.6).y)), float(_GLF_IDENTITY(195.467, min(195.467, 195.467))), bool(true))), 334.273, 3097.4600), vec4(_GLF_IDENTITY(2.7, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(2.7, max(2.7, 2.7)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_SWITCH_1_1v), clamp(_GLF_FUZZED(_GLF_SWITCH_1_1v), _GLF_FUZZED(_GLF_SWITCH_1_1v), _GLF_IDENTITY(_GLF_FUZZED(_GLF_SWITCH_1_1v), max(_GLF_FUZZED(_GLF_SWITCH_1_1v), _GLF_FUZZED(_GLF_SWITCH_1_1v))))))), 8915.0349, -271.747, 3138.6383));
               }
              while(_GLF_WRAPPED_LOOP(false));
              case 33:
              if(_GLF_DEAD(false))
               return;
              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
               }
              else
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  return;
                 }
               }
              case 14:
              case 76:
              vec3 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              case 12:
              case 46:
              (mat3x2(314.610, -305.235, -8532.3984, -2918.1399, _GLF_IDENTITY(6.0, mix(float(_GLF_FUZZED(3289.3244)), float(6.0), bool(true))), 68.07) + float(-70418));
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               return;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                subgroup_id;
               }
              else
               {
               }
              if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true), (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                continue;
               }
              break;
              if(_GLF_DEAD(false))
               break;
              default:
              do
               {
                1;
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
           }
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))))
             continue;
            continue;
           }
          uvec4 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v[51], _GLF_SWITCH_1_7v;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             continue;
            return;
           }
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            while(true)
             {
             }
           }
          {
           mat2x4 _GLF_SWITCH_1_8v[24];
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           vec4 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v[78], _GLF_SWITCH_1_11v[91];
           mat3(81.43, 2.9, -261.349, 8532.5440, -9.9, 7187.9283, _GLF_IDENTITY(-758.258, mix(float(_GLF_FUZZED(9.3)), float(-758.258), bool(true))), -0.1, -6.7);
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               workgroup_base;
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           mat3x4(-79.31, -1.5, -37.58, -9315.8543, 9370.1749, 6125.4817, 27.96, -811.451, -15.66, -9.5, -291.556, 8485.9188);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          mat3x4 _GLF_SWITCH_1_12v;
          ivec2(_GLF_IDENTITY(60163, (60163) ^ 0), -35788);
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               {
                for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                 {
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(false))
                       break;
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
                       continue;
                      if(_GLF_DEAD(false))
                       return;
                      return;
                     }
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          return;
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                     }
                   }
                 }
                return;
               }
             }
           }
          else
           {
           }
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
           break;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           return;
         }
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             continue;
            break;
           }
          if(_GLF_DEAD(false))
           return;
          ivec4(-93587, -38257, -74564, -67625);
          uvec3(50247u, 189638u, 158610u);
          do
           {
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, clamp(2, 2, 2))), int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, ~ (~ (2))), 2))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  mat3(997.049, -74.84, 3.2, -766.728, -9.2, -733.103, -141.318, 708.025, -96.12);
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    break;
                   }
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    break;
                   }
                 }
                if(_GLF_DEAD(false))
                 return;
               }
             }
            else
             {
              if(_GLF_DEAD(false))
               return;
             }
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               continue;
              mat2(-6426.8364, _GLF_IDENTITY(-4.2, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(-4.2, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, exp(0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (true ? float(float(0.0)) : _GLF_FUZZED(9.9)))), 0.0, 0.0), (mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (true ? float(float(0.0)) : _GLF_FUZZED(9.9)))), 0.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))))), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0))))))))), _GLF_IDENTITY(mat3(1.0) * (mat3(1.0) * (vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))))))), max(mat3(1.0) * (mat3(1.0) * (vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))))))), mat3(1.0) * (mat3(1.0) * (vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))))))))))), vec3(1.0, 0.0, 0.0))), 1.0, 1.0), transpose(transpose(mat3(-4.2, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8750.3895)), float(0.0), bool(true))), 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))))), 0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))), 1.0, 1.0))))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(-4.2, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (true ? float(float(0.0)) : _GLF_FUZZED(9.9)))), 0.0, 0.0), (mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (true ? float(float(0.0)) : _GLF_FUZZED(9.9)))), 0.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0)))), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))))), mat3(1.0) * (vec3(1.0, 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))), (false ? _GLF_FUZZED(mat4(-335.515, 35.14, -83.29, 71.87, 539.153, 6.0, 472.902, 4880.8675, 594.399, -6.6, -170.063, -9.5, 438.398, -3.9, -1.5, -520.825)) : mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))))))))), vec3(1.0, 0.0, 0.0))), 1.0, 1.0), transpose(transpose(mat3(-4.2, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7894.5456)), bool(false))), determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8750.3895)), float(0.0), bool(true))), 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))))), 0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))), 1.0, 1.0))))), mix(float(_GLF_FUZZED(565.486)), float(float(_GLF_IDENTITY(mat3(-4.2, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (true ? float(float(0.0)) : _GLF_FUZZED(9.9)))), 0.0, 0.0), (mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), (true ? float(float(0.0)) : _GLF_FUZZED(9.9)))), 0.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), (mat2x3(1.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat2x3(1.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), (mat2x3(1.0, 1.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - 0.0)), clamp(1.0, 1.0, 1.0)), 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- -0.6))), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 0.0, 0.0, 0.0)), min(float(vec4(0.0, 0.0, 0.0, 0.0)), float(vec4(0.0, 0.0, 0.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))))), mat3(1.0) * (vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))))))), vec3(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2640.1106))), 0.0))), 1.0, 1.0), transpose(transpose(mat3(_GLF_IDENTITY(-4.2, (true ? _GLF_IDENTITY(-4.2, (-4.2) - 0.0) : _GLF_FUZZED(-8.8))), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8750.3895)), float(0.0), bool(true))), 0.0, 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))))), 0.0, 0.0, 0.0))), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)))))), bool(true)))), float(_GLF_FUZZED(-66.28)), bool(false)))), 74.10, -9.7);
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               break;
              break;
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                break;
               }
              continue;
              if(_GLF_DEAD(false))
               return;
              do
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    return;
                   }
                  else
                   {
                   }
                 }
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             }
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
             {
              if(_GLF_DEAD(false))
               continue;
              break;
             }
            vec2 _GLF_SWITCH_1_13v, _GLF_SWITCH_1_14v[43];
            mat3x4 _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v[63], _GLF_SWITCH_1_17v;
            ;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            1.2;
            if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))))))
             {
              uvec2(29611u, 63432u);
             }
            else
             {
             }
            vec4 _GLF_SWITCH_1_18v;
           }
          while(true);
          for(vec4 _GLF_SWITCH_1_19v[51], _GLF_SWITCH_1_20v[82], _GLF_SWITCH_1_21v; (num_workgroup > (_GLF_IDENTITY((bvec4(false, true, true, true) , 176260u), clamp((bvec4(false, true, true, true) , 176260u), (bvec4(false, true, true, true) , 176260u), (bvec4(false, true, true, true) , 176260u))))); isnan(vec2(-7539.7712, -620.776)))
           {
            ;
            mat2x4 _GLF_SWITCH_1_22v;
            clamp((_GLF_IDENTITY(uvec3(47649u, 84194u, 27809u), (uvec3(47649u, 84194u, 27809u)) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))) | num_workgroup), uvec3(48683u, _GLF_IDENTITY(112372u, clamp(112372u, _GLF_IDENTITY(112372u, (112372u) - 0u), 112372u)), 123660u), uvec3(142161u, 126666u, 48274u));
            int _GLF_SWITCH_1_23v;
            mat3x2 _GLF_SWITCH_1_24v;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(false))
             break;
            ivec3 _GLF_SWITCH_1_25v, _GLF_SWITCH_1_26v, _GLF_SWITCH_1_27v;
            ;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                bvec3(true, true, false);
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               continue;
             }
            else
             {
             }
            bvec4(true, false, false, true);
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             return;
            continue;
           }
          do
           {
            mat4x2(-8.3, 9.4, 2.8, 5653.3431, 5.6, 31.07, -4.3, 5792.8865);
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.8)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
             {
              if(_GLF_DEAD(false))
               break;
              continue;
             }
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             return;
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                lessThanEqual(injectionSwitch, vec2(3.9, -17.72));
               }
             }
            else
             {
             }
            if(_GLF_DEAD(false))
             break;
            uvec4 _GLF_SWITCH_1_28v[38], _GLF_SWITCH_1_29v, _GLF_SWITCH_1_30v;
            do
             {
              (bvec3(true, false, true) == bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))));
             }
            while(_GLF_WRAPPED_LOOP(false));
            -38406;
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              (5243 , bvec4(false, true, true, false));
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
               return;
             }
            ;
            uvec2 _GLF_SWITCH_1_31v;
           }
          while((mat2x4(_GLF_IDENTITY(-454.252, (-454.252) - 0.0), 8.9, -98.90, 4.0, _GLF_IDENTITY(-8.7, min(-8.7, _GLF_IDENTITY(-8.7, clamp(-8.7, -8.7, -8.7)))), 63.75, 6.0, -7.9) != mat2x4(28.66, -3.1, -5.9, 766.589, 7.4, -4.3, 6.2, -3.6)));
          uvec2(177808u, 55467u);
          if(_GLF_DEAD(false))
           break;
         }
         if(_GLF_DEAD(false))
          break;
         vec3(7646.3300, -1.0, 180.452);
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     case 0:
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     case 95:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     case 68:
     case 26:
     case 49:
     case 5:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     case 46:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     case 9:
     case 62:
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 4);
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
         return;
        }
       return;
      }
     case 52:
     {
      do
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
       }
      while(_GLF_WRAPPED_LOOP(false));
      if(_GLF_DEAD(false))
       return;
      do
       {
        if(_GLF_DEAD(false))
         return;
       }
      while(_GLF_WRAPPED_LOOP(false));
      while(false)
       {
        if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
         continue;
        if(_GLF_WRAPPED_IF_TRUE(true))
         {
          bvec4(true, false, true, true);
          if(_GLF_DEAD(false))
           {
            do
             {
              do
               {
                return;
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
            while(_GLF_WRAPPED_LOOP(false));
           }
         }
        else
         {
         }
        if(_GLF_WRAPPED_IF_TRUE(true))
         {
          ;
         }
        else
         {
         }
        uvec3(141449u, 165107u, 43137u);
        (mat4x3(0.3, 956.038, 0.3, -564.482, -69.15, -1.9, -4.9, _GLF_IDENTITY(-7.5, 1.0 * (-7.5)), 0.6, -184.847, 3.0, -367.235) * (mat2x4(-4735.4772, -95.73, 5134.4359, -758.086, -6.7, 6927.8233, -5037.1846, 9434.5460)));
        if(_GLF_DEAD(false))
         continue;
        {
         float _GLF_SWITCH_1_32v;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))), true && (! (_GLF_IDENTITY(false, (false) && true))))))))
            return;
           abs(-73910);
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(63.29)), vec2(_GLF_FUZZED(-863.781), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
              continue;
             break;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
              }
            }
           return;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           ;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
        }
        if(_GLF_DEAD(false))
         break;
       }
      if(_GLF_WRAPPED_IF_TRUE(true))
       {
        if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
         return;
       }
      else
       {
       }
      if(_GLF_DEAD(false))
       return;
      if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
       return;
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
          if(_GLF_DEAD(false))
           return;
          return;
         }
        do
         {
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            return;
            if(_GLF_DEAD(false))
             continue;
           }
          else
           {
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             continue;
           }
         }
        while(_GLF_WRAPPED_LOOP(false));
        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
         {
          if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
           {
            return;
           }
          else
           {
           }
         }
        if(_GLF_DEAD(false))
         return;
       }
      if(_GLF_DEAD(false))
       {
        if(_GLF_WRAPPED_IF_FALSE(false))
         {
         }
        else
         {
          return;
         }
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         return;
       }
      true;
      vec3(5.5, 9880.0064, -9491.7061);
      if(_GLF_WRAPPED_IF_TRUE(true))
       {
        uvec3(55742u, 113913u, 118612u);
       }
      else
       {
       }
      if(_GLF_DEAD(false))
       {
        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
         {
          return;
         }
       }
      if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
       {
       }
      else
       {
        if(_GLF_DEAD(false))
         return;
       }
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       return;
      ivec4 _GLF_SWITCH_1_33v, _GLF_SWITCH_1_34v, _GLF_SWITCH_1_35v;
      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
       return;
      for(      ivec2(-75078, 90632);
 false; mat4x3(_GLF_IDENTITY(3.9, clamp(3.9, _GLF_IDENTITY(3.9, mix(float(_GLF_FUZZED(-1148.6187)), float(3.9), bool(true))), 3.9)), -2.3, -62.21, -530.802, -7.1, 90.23, -27.15, -80.15, _GLF_IDENTITY(7.9, (7.9) - 0.0), -2694.6857, 0.8, -72.56))
       {
        mat3 _GLF_SWITCH_1_36v;
        _GLF_IDENTITY(mat4(-7.5, 8307.9437, 6.3, 8.3, 70.42, -7606.7417, -3.7, 6.2, 761.601, 393.792, 9.5, -510.882, 61.21, 191.671, -8.3, -404.767), (_GLF_IDENTITY(mat4(-7.5, 8307.9437, 6.3, _GLF_IDENTITY(8.3, mix(float(_GLF_IDENTITY(8.3, mix(float(_GLF_FUZZED(-9330.2480)), float(8.3), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_FUZZED(vec2(976.982, -5699.9725).x)), bool(false))), 70.42, -7606.7417, -3.7, 6.2, 761.601, 393.792, _GLF_IDENTITY(9.5, mix(float(_GLF_FUZZED(5.9)), _GLF_IDENTITY(float(9.5), (true ? _GLF_IDENTITY(float(9.5), (float(9.5)) - 0.0) : _GLF_FUZZED(7.3))), bool(true))), -510.882, 61.21, 191.671, -8.3, -404.767), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(9.8, -7467.9991, 4524.3490, _GLF_IDENTITY(-2.1, min(-2.1, -2.1)), -2.9, -816.152, -775.189, 184.512, -8975.1993, 20.43, 498.189, -781.954, 4.6, -70.83, 251.685, -75.07)) : _GLF_IDENTITY(mat4(-7.5, 8307.9437, 6.3, 8.3, 70.42, -7606.7417, -3.7, 6.2, 761.601, 393.792, 9.5, -510.882, 61.21, 191.671, -8.3, -404.767), _GLF_IDENTITY((mat4(-7.5, 8307.9437, 6.3, 8.3, 70.42, -7606.7417, -3.7, 6.2, 761.601, 393.792, 9.5, -510.882, 61.21, 191.671, -8.3, -404.767)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (true ? (mat4(_GLF_IDENTITY(-7.5, (true ? -7.5 : _GLF_FUZZED((3.0 + 73.71)))), 8307.9437, 6.3, 8.3, 70.42, -7606.7417, -3.7, 6.2, 761.601, 393.792, 9.5, -510.882, 61.21, 191.671, -8.3, -404.767)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4(5.8, 96.84, 6.5, 721.999, 24.90, -7.6, 2.8, -8650.4661, -7385.0431, -60.05, 9.8, 6.1, 183.780, 6462.5591, -122.490, -589.355)))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(52.60)), bool(false))), (_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(length(vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(52.60)), bool(false)))) - 0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0)), clamp(float(mat4x3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0)), float(mat4x3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0)), float(mat4x3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0))))), 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-289.744)), bool(false))) : _GLF_FUZZED(-79.80))))), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0), 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, sin(0.0), 0.0), vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-5.7) : dot(vec3(0.0, sin(0.0), 0.0), vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0)), float(mat3x4(float(mat3x4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, sin(0.0), 0.0), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, sin(0.0), 0.0), vec3(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-5.7) : dot(vec3(0.0, sin(0.0), 0.0), vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0));
       }
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       mat2x3(-8.9, _GLF_IDENTITY(-8.3, clamp(-8.3, -8.3, -8.3)), 76.88, 9.1, -5726.4692, _GLF_IDENTITY(-9.9, min(-9.9, -9.9)));
       do
        {
         uvec2(84715u, _GLF_IDENTITY(4908u, (_GLF_IDENTITY(4908u, uint(uint(4908u)))) | 0u));
         mat2 _GLF_SWITCH_1_37v[36];
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           roundEven(_GLF_IDENTITY(vec4(-3752.8577, 633.309, 9624.7416, -6.0), max(vec4(-3752.8577, 633.309, 9624.7416, -6.0), vec4(-3752.8577, 633.309, 9624.7416, -6.0))));
          }
         else
          {
          }
         vec4 _GLF_SWITCH_1_38v;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             notEqual(sqrt(injectionSwitch), injectionSwitch);
             if(_GLF_DEAD(false))
              continue;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
        }
       while(true);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               break;
              }
            }
           else
            {
             _GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(notEqual(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch), bvec2(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(bvec4(notEqual(injectionSwitch, injectionSwitch), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), false))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)))))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)))))))))), false)))), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), _GLF_IDENTITY(bvec2(bvec2(notEqual(injectionSwitch, injectionSwitch))), bvec2(bvec2(bvec2(bvec2(notEqual(injectionSwitch, injectionSwitch))))))), bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true)), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8785.5476), _GLF_FUZZED(-6.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), false))))), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true)), true)))), false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), true), false)), false))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))), false))))), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), false)), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec3(notEqual(injectionSwitch, injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(notEqual(injectionSwitch, injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), bvec2(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)), true, false))))))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), false)), false))))), false, true))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))), false))))), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), false)), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec3(notEqual(injectionSwitch, injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(notEqual(injectionSwitch, injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), bvec2(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)), true, false))))))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), false)), false))))), false, true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))), false))))), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), false)), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec3(notEqual(injectionSwitch, injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(notEqual(injectionSwitch, injectionSwitch), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), bvec2(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false)), true, false))))))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(_GLF_IDENTITY(bvec2(notEqual(injectionSwitch, injectionSwitch)), bvec2(bvec3(bvec2(notEqual(injectionSwitch, injectionSwitch)), false))))), true), false)), false))))), false, true))), false)))), false)))))), bvec2(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(bvec4(notEqual(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(124.978), _GLF_FUZZED((-3.7 * -8.5))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)), mix(vec2(_GLF_FUZZED(493.126), _GLF_FUZZED((true ? -3981.9249 : -63.72))), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[0], _GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[1], float(mat4x3((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[1], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(true, true))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(124.978), _GLF_FUZZED((-3.7 * -8.5))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)), mix(vec2(_GLF_FUZZED(493.126), _GLF_FUZZED((true ? -3981.9249 : -63.72))), vec2((mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-542.538))))) * ((injectionSwitch)))[0], _GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[1], float(mat4x3((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[1], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(true, true))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(124.978), _GLF_FUZZED((-3.7 * -8.5))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)), mix(vec2(_GLF_FUZZED(493.126), _GLF_FUZZED((true ? -3981.9249 : -63.72))), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[0], _GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[1], float(mat4x3((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[1], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(true, true))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(124.978), _GLF_FUZZED((-3.7 * -8.5))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)), mix(vec2(_GLF_FUZZED(493.126), _GLF_FUZZED((true ? -3981.9249 : -63.72))), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[0], _GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[1], float(mat4x3((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[1], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), bvec2(true, true))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(124.978), _GLF_FUZZED((-3.7 * -8.5))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)), mix(vec2(_GLF_FUZZED(493.126), _GLF_FUZZED((true ? -3981.9249 : -63.72))), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[0], _GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[1], float(mat4x3((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), ((injectionSwitch)))))[1], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0)))), bvec2(true, true))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) - vec2(0.0, 0.0)), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(length(_GLF_IDENTITY(8521.5393, max(8521.5393, 8521.5393)))))), 1.0))), injectionSwitch), false, true))), false))), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), bvec2(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(bvec4(notEqual(injectionSwitch, injectionSwitch), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), false))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(bvec4(notEqual(injectionSwitch, injectionSwitch), false, true))), false))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(bvec3(_GLF_IDENTITY(notEqual(injectionSwitch, injectionSwitch), bvec2(bvec4(notEqual(injectionSwitch, injectionSwitch), false, true))), false))), false)))))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), true, true))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))))))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          {
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -24170)); _injected_loop_counter --)
              {
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         for(mat4 _GLF_SWITCH_1_39v, _GLF_SWITCH_1_40v; false; all(bvec4(true, true, true, _GLF_IDENTITY(true, (true) && true))))
          {
           uvec4 _GLF_SWITCH_1_41v, _GLF_SWITCH_1_42v, _GLF_SWITCH_1_43v[69];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           ;
           ivec2 _GLF_SWITCH_1_44v, _GLF_SWITCH_1_45v, _GLF_SWITCH_1_46v[62];
           mat3(-0.8, 44.36, 7670.3076, 0.1, -21.00, -8441.4535, 86.34, -76.52, 38.13);
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              {
               if(_GLF_DEAD(false))
                continue;
               break;
              }
             continue;
            }
           _GLF_IDENTITY((_GLF_SWITCH_1_41v.bgr ++), uvec3(0u, 0u, 0u) | ((_GLF_SWITCH_1_41v.bgr ++)));
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               return;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, false, true))))))
              continue;
            }
           uvec4 _GLF_SWITCH_1_47v, _GLF_SWITCH_1_48v;
           mat4(5445.7870, _GLF_IDENTITY(-294.108, min(_GLF_IDENTITY(-294.108, clamp(-294.108, _GLF_IDENTITY(_GLF_IDENTITY(-294.108, float(mat2(-294.108, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y), 0.0, 0.0))), max(-294.108, -294.108)), -294.108)), _GLF_IDENTITY(-294.108, (-294.108) - 0.0))), -1.8, -0.9, 2.0, 3922.1860, 771.637, -1462.1846, -447.808, _GLF_IDENTITY(98.72, (98.72) + 0.0), -3.5, -0.6, -4909.8844, -4.7, -289.149, -1.3);
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       else
        {
        }
       ivec4 _GLF_SWITCH_1_49v[31], _GLF_SWITCH_1_50v, _GLF_SWITCH_1_51v;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-996.620), (_GLF_FUZZED(-996.620)) / 1.0) : injectionSwitch.x)) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-996.620) : injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-996.620) : injectionSwitch.x)) > injectionSwitch.y))))))))
        return;
       ivec2(60845, _GLF_IDENTITY(-5065, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(-5065, 0 | (_GLF_IDENTITY(-5065, 0 ^ (-5065)))), clamp(-5065, -5065, _GLF_IDENTITY(-5065, (-5065) | (-5065)))), 1)), (false ? _GLF_FUZZED((-68940 << 50372)) : _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(-5065, clamp(-5065, -5065, _GLF_IDENTITY(-5065, (-5065) | (-5065)))), 1)), 1 * (int(ivec2(_GLF_IDENTITY(-5065, clamp(-5065, -5065, _GLF_IDENTITY(-5065, (-5065) | (-5065)))), 1))))))));
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
          {
           while(false)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               ;
              }
             ivec4 _GLF_SWITCH_1_52v, _GLF_SWITCH_1_53v[52];
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               vec3(-8.4, 8.3, 63.64);
              }
             else
              {
              }
             mat4 _GLF_SWITCH_1_54v[15];
             -505.269;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
                break;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 return;
                }
              }
             83175;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false, true), true))))))))))
              break;
             injectionSwitch;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    break;
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               continue;
              }
             int _GLF_SWITCH_1_55v, _GLF_SWITCH_1_56v, _GLF_SWITCH_1_57v;
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
      vec4(4.8, 2.0, 741.450, -9.8);
      if(_GLF_DEAD(false))
       return;
      if(_GLF_DEAD(false))
       return;
      if(_GLF_DEAD(false))
       {
        if(_GLF_DEAD(false))
         return;
        return;
       }
     }
     case 44:
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     bvec4 _GLF_SWITCH_1_58v, _GLF_SWITCH_1_59v;
     default:
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     1;
    }
  }
}
