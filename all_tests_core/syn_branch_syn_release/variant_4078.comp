#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))), true)), _GLF_IDENTITY(true, false || (true)), true, false)), (_GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))), true)), _GLF_IDENTITY(true, false || (true)), true, false)), bool(bvec3(bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))), true)), _GLF_IDENTITY(true, false || (true)), true, false)), true, true)))) || false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(6.4), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(2.7)), bvec2(true, false))), vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))) + (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), mix(float(min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED((+ 0.2))), bool(false)))))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0)))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(min(vec2(-5.4, 7658.5359), vec2(-0.1, -8375.3913))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (false ? _GLF_FUZZED(injectionSwitch) : (false ? _GLF_FUZZED(min(vec2(-5.4, 7658.5359), vec2(-0.1, -8375.3913))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y, mix(float(_GLF_FUZZED(2.5)), float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(vec2(-5.4, 7658.5359), vec2(-0.1, -8375.3913))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1])))).y), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))), bvec3(bvec4(bvec3(false, true, true), true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), true, true, false)))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))))))), true))))), false, true), true))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, true, true), true)))), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, true, true), true)))), true, true, false))), bool(bool(! (bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(false, true, true), true)))), true, true, false)))))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true, true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true), true))))), false, true), true))))))))), (bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, (true) && true), true), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, true), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, true, true), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, true, true), true))), false))), true)))))))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) || false)), bvec3(bvec4(bvec3(false, true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), true, true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) || false)), bvec3(bvec4(bvec3(false, true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), true, true, false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) || false)), bvec3(bvec4(bvec3(false, true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), true, true, false)))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) || false)), bvec3(bvec4(bvec3(false, true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), true, true, false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) || false)), bvec3(bvec4(bvec3(false, true, true), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), true, true, false)))))), false, false))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))), true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, true, true)))), true)))))))))), false, true), true)))))))))) && true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), true)))))), false))))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(10.28)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - 0.0)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9362.2609)))))), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, log(1.0), 1.0, 1.0)))))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))), ! (! (bool(_GLF_IDENTITY(bool(! (false)), ! (! (bool(! (false)))))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(431.909)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))) < injectionSwitch.y)))), (mix(float(_GLF_FUZZED(431.909)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) * 1.0))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1]))) - vec2(0.0, 0.0)).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.8), _GLF_FUZZED(-3.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), 0.0, 0.0))).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5697.4440)))) - 0.0), injectionSwitch.y)))), (_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0), max((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) / vec2(1.0, 1.0))))).y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) && true))))) || false) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, false))) && true))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((-3.8 - 4.6))), bool(false))) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6572.7417)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))))) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, cos(0.0), 1.0, abs(0.0), sqrt(0.0), 1.0)), min(vec2(mat4x2(injectionSwitch, 0.0, cos(0.0), 1.0, abs(0.0), sqrt(0.0), 1.0)), vec2(mat4x2(injectionSwitch, 0.0, cos(0.0), 1.0, abs(0.0), sqrt(0.0), 1.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, _GLF_IDENTITY(96693u, ~ (~ (96693u))))), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u), (uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u)) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).qsp), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), max(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, _GLF_IDENTITY(96693u, clamp(96693u, _GLF_IDENTITY(96693u, 0u + (96693u)), _GLF_IDENTITY(96693u, (96693u) - 0u))))), max(_GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp))))))) : gl_NumWorkGroups))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), 0u | (_GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), min(_GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp))) : gl_NumWorkGroups))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u))), (_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u)))) >> 0u)), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(134973u, max(_GLF_IDENTITY(134973u, (134973u) | 0u), _GLF_IDENTITY(134973u, (134973u) / 1u))), 143473u).qsp))) : gl_NumWorkGroups))), min((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u))), (_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u)))) >> 0u)), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(134973u, max(_GLF_IDENTITY(134973u, (134973u) | 0u), _GLF_IDENTITY(134973u, (134973u) / 1u))), 143473u).qsp))) : gl_NumWorkGroups))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u))), (_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u)))) >> 0u)), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(134973u, max(_GLF_IDENTITY(134973u, (134973u) | 0u), _GLF_IDENTITY(134973u, (134973u) / 1u))), 143473u).qsp))) : gl_NumWorkGroups))), max((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u))), (_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u)))) >> 0u)), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(134973u, max(_GLF_IDENTITY(134973u, (134973u) | 0u), _GLF_IDENTITY(134973u, (134973u) / 1u))), 143473u).qsp))) : gl_NumWorkGroups))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u))), (_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u)))) >> 0u)), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(134973u, max(_GLF_IDENTITY(134973u, (134973u) | 0u), _GLF_IDENTITY(134973u, (134973u) / 1u))), 143473u).qsp))) : gl_NumWorkGroups))), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u))), (_GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u)))) >> 0u)), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(134973u, max(_GLF_IDENTITY(134973u, (134973u) | 0u), _GLF_IDENTITY(134973u, (134973u) / 1u))), 143473u).qsp))) : gl_NumWorkGroups))))))))))) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, _GLF_IDENTITY(96693u, ~ (~ (96693u))))), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), max(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), max(_GLF_IDENTITY(96693u, min(96693u, _GLF_IDENTITY(96693u, (96693u) | (96693u)))), _GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp))))))) : gl_NumWorkGroups)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, _GLF_IDENTITY(96693u, ~ (~ (96693u))))), 134973u, 143473u).qsp), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), max(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), max(_GLF_IDENTITY(96693u, min(96693u, _GLF_IDENTITY(96693u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(96693u, clamp(96693u, _GLF_IDENTITY(96693u, ~ (~ (96693u))), 96693u)))))), _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), ~ (_GLF_IDENTITY(~ (min(96693u, 96693u)), min(~ (min(96693u, 96693u)), ~ (min(96693u, 96693u))))))))), 134973u, 143473u).qsp))))), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), max(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), max(_GLF_IDENTITY(96693u, min(96693u, _GLF_IDENTITY(96693u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(96693u, clamp(96693u, _GLF_IDENTITY(96693u, ~ (~ (96693u))), 96693u)))))), _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), ~ (_GLF_IDENTITY(~ (min(96693u, 96693u)), min(~ (min(96693u, 96693u)), ~ (min(96693u, 96693u))))))))), 134973u, 143473u).qsp)))))) | (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), max(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), max(_GLF_IDENTITY(96693u, min(96693u, _GLF_IDENTITY(96693u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(96693u, clamp(96693u, _GLF_IDENTITY(96693u, ~ (~ (96693u))), 96693u)))))), _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), ~ (_GLF_IDENTITY(~ (min(96693u, 96693u)), min(~ (min(96693u, 96693u)), ~ (min(96693u, 96693u))))))))), 134973u, 143473u).qsp))))))))) : gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, _GLF_IDENTITY(96693u, ~ (~ (96693u))))), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, clamp(96693u, 96693u, 96693u)), min(96693u, 96693u)), 134973u, 143473u).qsp), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(134973u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : 134973u)), 143473u).qsp), max(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), max(_GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp))))))) : gl_NumWorkGroups))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, _GLF_IDENTITY(96693u, ~ (~ (96693u))))), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), clamp(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), min(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), uvec3(uvec4(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), 0u))))), _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp))), max(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), max(_GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp))))))) : gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, _GLF_IDENTITY(96693u, ~ (~ (96693u))))), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), uint(_GLF_IDENTITY(uvec2(min(96693u, 96693u), (1u & 1u)), (true ? uvec2(min(96693u, 96693u), (1u & 1u)) : _GLF_FUZZED(uvec2(129310u, 166097u))))))), 134973u, 143473u), clamp(_GLF_IDENTITY(uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), uint(_GLF_IDENTITY(uvec2(min(96693u, 96693u), (1u & 1u)), (true ? uvec2(min(96693u, 96693u), (1u & 1u)) : _GLF_FUZZED(uvec2(129310u, 166097u))))))), 134973u, 143473u), (_GLF_IDENTITY(uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), uint(_GLF_IDENTITY(uvec2(min(96693u, 96693u), (1u & 1u)), (true ? uvec2(min(96693u, 96693u), (1u & 1u)) : _GLF_FUZZED(uvec2(129310u, 166097u))))))), 134973u, 143473u), (uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), uint(_GLF_IDENTITY(uvec2(min(96693u, 96693u), (1u & 1u)), (true ? uvec2(min(96693u, 96693u), (1u & 1u)) : _GLF_FUZZED(uvec2(129310u, 166097u))))))), 134973u, 143473u)) - uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u)), uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), uint(_GLF_IDENTITY(uvec2(min(96693u, 96693u), (1u & 1u)), (true ? uvec2(min(96693u, 96693u), (1u & 1u)) : _GLF_FUZZED(uvec2(129310u, 166097u))))))), 134973u, 143473u), _GLF_IDENTITY(uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), uint(_GLF_IDENTITY(uvec2(min(96693u, 96693u), (1u & 1u)), (true ? uvec2(min(96693u, 96693u), (1u & 1u)) : _GLF_FUZZED(uvec2(129310u, 166097u))))))), 134973u, 143473u), (false ? _GLF_FUZZED(uvec4(154727u, 63492u, 16398u, 188736u)) : _GLF_IDENTITY(uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), uint(_GLF_IDENTITY(uvec2(min(96693u, 96693u), (1u & 1u)), (true ? uvec2(min(96693u, 96693u), (1u & 1u)) : _GLF_FUZZED(uvec2(129310u, 166097u))))))), 134973u, 143473u), ~ (~ (uvec4(196209u, _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), uint(_GLF_IDENTITY(uvec2(min(96693u, 96693u), (1u & 1u)), (true ? uvec2(min(96693u, 96693u), (1u & 1u)) : _GLF_FUZZED(uvec2(129310u, 166097u))))))), 134973u, 143473u)))))))).qsp), max(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), 134973u, 143473u).qsp), _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), max(_GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp))))))) : gl_NumWorkGroups))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), 0u | (_GLF_IDENTITY(96693u, min(_GLF_IDENTITY(96693u, uint(uvec4(96693u, 1u, 1u, 0u))), 96693u)))), 134973u, 143473u).qsp), (false ? _GLF_FUZZED(uvec3(55294u, 84821u, 44268u)) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), 0u | (_GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp), ~ (~ (_GLF_FUZZED(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(196209u, (196209u) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), 0u | (_GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp, uvec3(_GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(196209u, (196209u) - 0u), (196209u) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), 0u | (_GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(_GLF_IDENTITY(196209u, (196209u) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), 0u | (_GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp)), ~ (~ (~ (uvec3(uvec4(_GLF_IDENTITY(196209u, (196209u) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), 0u | (_GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp))))))))))))))), (false ? _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)) : _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(_GLF_IDENTITY(96693u, min(96693u, 96693u)), min(_GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(96693u, min(96693u, 96693u)))), 134973u, 143473u).qsp))) : gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(_GLF_IDENTITY(196209u, (196209u) | 0u), _GLF_IDENTITY(96693u, _GLF_IDENTITY(min(96693u, 96693u), 0u | (min(96693u, 96693u)))), 134973u, 143473u).qsp), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(42525u, 75118u, 95755u)), clamp(_GLF_FUZZED(uvec3(42525u, 75118u, 95755u)), _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)), _GLF_FUZZED(uvec3(42525u, 75118u, 95755u)))) : _GLF_FUZZED(uvec4(196209u, _GLF_IDENTITY(96693u, min(96693u, 96693u)), _GLF_IDENTITY(134973u, max(_GLF_IDENTITY(134973u, (134973u) | 0u), _GLF_IDENTITY(134973u, (134973u) / 1u))), 143473u).qsp))) : gl_NumWorkGroups)))) / uvec3(1u, 1u, 1u))) / uvec3(1u, 1u, 1u)) | _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x))))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), false || ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))), _GLF_IDENTITY(false, (false) && true), true))) || false))), true, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(6.5)), bool(false))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(8.5), _GLF_FUZZED(-302.798)), bvec2(false, false))).y))), _GLF_IDENTITY(float(_GLF_FUZZED(6.5)), (float(_GLF_FUZZED(6.5))) / 1.0), bool(false)))) / 1.0)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), true)))), bool(bvec4((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), true)))), true, true, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && (false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) || false), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) || false, ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))) || false))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false, false || (false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(850.678)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), false, true)))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0)), 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(-78642))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id), 1u * ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id), 1u * ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id))), (_GLF_IDENTITY((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id), 1u * ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id)))) - 0u))) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id) - uvec2(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))).y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), bool(bvec4(bool(bvec3(true, true, false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), false, true)))), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true)))))) && true))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), (true ? _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) : _GLF_FUZZED(uvec2(54453u, 84735u)[1])))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), 0u ^ (workgroup_base)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec3(1u, 1u, 1u)))), workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(subgroup_id, 0u, 0u)), (uint(uvec3(subgroup_id, 0u, 0u))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))) | (uint(uvec3(subgroup_id, 0u, 0u))))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) / 1u, (_GLF_IDENTITY((subgroup_id) / 1u, 0u | ((subgroup_id) / 1u))) | (0u | 0u))))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u))))))) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u)))) >> 0u)))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(workgroup_base) : 6u)), (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size)) | (uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size)), (_GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size)) | (uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size)), clamp(_GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size)) | (uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size)), ((uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size)) | (uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size))) / 1u), (uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size)) | (uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size)), (uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size)) | (uint(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size))))) - 0u)))), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), clamp((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), uint(uvec3(subgroup_id, 0u, 0u))), 1u, 1u)))) / 1u)))))), 1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), _GLF_IDENTITY(1u * (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)), (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) | (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), uint(6u))) ^ (1u * (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))))))) - 0u))), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 0u, 1u))))) * subgroup_size)) + GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-10.54))) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(true ? _GLF_IDENTITY(64, max(64, 64)) : _GLF_FUZZED(-89914), (true ? 64 : _GLF_FUZZED(-89914)) - (0 << _GLF_IDENTITY(int(1), int(1)))))), 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) + uvec2(0u, 0u)) | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)).x + _GLF_IDENTITY(1, ~ (~ (1))), clamp(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) + uvec2(0u, 0u)) | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)).x + _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) + uvec2(0u, 0u)) | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)).x + _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id, _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))) + uvec2(0u, 0u)) | (GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)).x + _GLF_IDENTITY(1, ~ (~ (1))))) < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), 0.0 + (dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0)))))), 1.0, 1.0), _GLF_IDENTITY((mat2x4(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), 0.0 + (dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0)))))), 1.0, 1.0)) * mat2(1.0), transpose(transpose((mat2x4(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), 0.0 + (dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0)))))), 1.0, 1.0)) * mat2(1.0)))))), (false ? _GLF_FUZZED(3.9) : float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), 0.0 + (dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0)))))), 1.0, 1.0), _GLF_IDENTITY((mat2x4(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), 0.0 + (dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0)))))), 1.0, 1.0)) * mat2(1.0), transpose(transpose((mat2x4(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), _GLF_IDENTITY(dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0))), 0.0 + (dot(vec4(sqrt(1.0), 0.0, sqrt(0.0), 0.0), vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, abs(0.0)))))), 1.0, 1.0)) * mat2(1.0)))))))))) * 1.0)))))))[1]), bvec2(false, true))), injectionSwitch)).x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, true))), injectionSwitch), vec2(mat2(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, true))), injectionSwitch), length(vec3(0.0, 0.0, 0.0)), 1.0)))).x), float(_GLF_FUZZED(6796.1211)), bool(false)), mix(float(_GLF_FUZZED(-0.1)), float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, true))), injectionSwitch)).x), float(_GLF_FUZZED(6796.1211)), bool(false)), (false ? _GLF_FUZZED(32.59) : mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0), 0.0))))))[1]), bvec2(false, true))), injectionSwitch)).x), float(_GLF_FUZZED(6796.1211)), bool(false))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max((injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), ((injectionSwitch)) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))))[1]), bvec2(false, true))), injectionSwitch)).x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, true))), injectionSwitch)).x), float(_GLF_FUZZED(6796.1211)), bool(false)), mix(float(_GLF_FUZZED(-0.1)), float(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, true))), injectionSwitch)).x), float(_GLF_FUZZED(6796.1211)), bool(false))), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))))), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))))[1]), bvec2(false, true)), clamp(_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))[1]), bvec2(false, true)), (mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))))[1]), bvec2(false, true))) - sin(vec2(0.0, 0.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))))[1]), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))))[1]), bvec2(false, true)), (_GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))))[1]), bvec2(false, true)), (mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), mix(vec2(_GLF_FUZZED(-5.4), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))[0], _GLF_FUZZED(721.823)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))))[1]), bvec2(false, true))) / sqrt(vec2(1.0, 1.0)))) * vec2(1.0, 1.0))))), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(1.7), (_GLF_FUZZED(1.7)) / 1.0)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, true))), injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(1.7), (_GLF_FUZZED(1.7)) / 1.0)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, true))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(1.7), (_GLF_FUZZED(1.7)) / 1.0)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, true))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(1.7), (_GLF_FUZZED(1.7)) / 1.0)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, true))), injectionSwitch)).x))), float(_GLF_FUZZED(6796.1211)), bool(false)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-0.1, (false ? _GLF_FUZZED(3.5) : -0.1)))), float(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), injectionSwitch)).x), float(_GLF_FUZZED(6796.1211)), bool(false))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))) + _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(cos(6020.5734)) : 0.0)), 0.0))))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_IDENTITY(true, ! (! (true)))))))), injectionSwitch)).x), float(_GLF_FUZZED(6796.1211)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.1)), float(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))), max((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))), mix(vec2((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED(-0.4), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1], max((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1], (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1]))), bvec2(false, true)))))[1]), bvec2(false, true))), injectionSwitch)).x), float(_GLF_FUZZED(6796.1211)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, false), bvec3(bvec4(bvec3(bool(false), true, false), false))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), min(mix(float(_GLF_FUZZED(-0.1)), float(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))), max((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))), mix(vec2((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED(-0.4), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1], max((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1], (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1]))), bvec2(false, true)))))[1]), bvec2(false, true))), injectionSwitch)).x), float(_GLF_FUZZED(6796.1211)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, false), bvec3(bvec4(bvec3(bool(false), true, false), false))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-0.1)), float(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))), max((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))), mix(vec2((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED(-0.4), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1], max((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1], (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1]))), bvec2(false, true)))))[1]), bvec2(false, true))), injectionSwitch)).x), float(_GLF_FUZZED(6796.1211)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, false), bvec3(bvec4(bvec3(bool(false), true, false), false))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (mix(float(_GLF_FUZZED(-0.1)), float(mix(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.7)), vec2(_GLF_FUZZED(-99.81), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))), max((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))), mix(vec2((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED(-0.4), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1], max((_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1], (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))))[1]))), bvec2(false, true)))))[1]), bvec2(false, true))), injectionSwitch)).x), float(_GLF_FUZZED(6796.1211)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, false), bvec3(bvec4(bvec3(bool(false), true, false), false))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - length(vec4(0.0, 0.0, 0.0, 0.0))))))) / round(length(normalize(1.0))))) > injectionSwitch.y)))) || false)) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), true, true)))), true, false, true)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))) || false))), ! (! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))) || false)))))))))), false, false)), (bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false))) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY((_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec3((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true, false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec3((false) && true, true, false)), (bool(bvec3((false) && true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))))) || false)), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec3((false) && true, true, false)), (bool(bvec3((false) && true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))))) || false)), true && (false || (_GLF_IDENTITY(bool(bvec3((false) && true, true, false)), (bool(bvec3((false) && true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))))) || false)))))))))))), ! (! ((_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec3((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), true, false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec3((false) && true, true, false)), (bool(bvec3((false) && true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))))) || false)), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec3((false) && true, true, false)), (bool(bvec3((false) && true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))))) || false)), true && (false || (_GLF_IDENTITY(bool(bvec3((false) && true, true, false)), (bool(bvec3((false) && true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))))))))) || false))))))))))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, 0 ^ (4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), false), false, false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) : injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))), false), false, false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) : injectionSwitch)).y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(1393.2056, -5.2)))).y))) || false)), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) ^ 0u, max((next_virtual_gid) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(next_virtual_gid), (uint(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uint(next_virtual_gid), 0u ^ (uint(next_virtual_gid)))))) | (next_virtual_gid)))) >> 0u), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)), (uint(next_virtual_gid)) >> 0u)))))) ^ 0u, ((next_virtual_gid) ^ 0u) - 0u))))], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 | (2)))), 2), min(clamp(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 | (2)))), 2), clamp(2, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 0 | (2)))), 2))))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec2(4, 0)))), int(int(~ (_GLF_IDENTITY(4, int(ivec2(4, 0))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec2(4, 0)))), int(int(~ (_GLF_IDENTITY(4, int(ivec2(4, 0))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec2(4, 0)))), int(int(~ (_GLF_IDENTITY(4, int(ivec2(4, 0))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec2(4, 0)))), _GLF_IDENTITY(int(int(~ (_GLF_IDENTITY(4, int(ivec2(4, 0)))))), min(int(int(~ (_GLF_IDENTITY(4, int(ivec2(4, 0)))))), int(int(~ (_GLF_IDENTITY(4, int(ivec2(4, 0))))))))))))), 64, _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false))))), false, false, false))) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false))))), false, false, false))) && true)))), ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false))))), false, false, false))) && true))))) && true))), (bool(bool(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false))))), false, false, false))) && true)))), ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), false))))), false, false, false))) && true))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true, ((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, abs(0.0), 1.0, 1.0, 0.0, 1.0)), min(float(mat2x3(injectionSwitch.x, abs(0.0), 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, abs(0.0), 1.0, 1.0, 0.0, 1.0)), (float(mat2x3(injectionSwitch.x, abs(0.0), 1.0, 1.0, 0.0, 1.0))) - 0.0)))) > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), true && (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) || false)), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-729.660) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.6) : injectionSwitch.y))))))) && true, ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true) || false))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(-0.1)), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) && true))))).x > injectionSwitch.y))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(true, (true) || false)), true && (false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), ((_GLF_IDENTITY(true, (true) || false))) || false))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(true, (true) || false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(true, (true) || false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(true, (true) || false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(true, (true) || false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), true && (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true)))), false)))))))))))))), _GLF_IDENTITY(! (! ((false) && true)), true && (! (! ((false) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(float(injectionSwitch[1])), (false ? _GLF_FUZZED(-533.351) : float(float(injectionSwitch[1]))))), mix(float(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(float(injectionSwitch[1])), (false ? _GLF_FUZZED(-533.351) : float(_GLF_IDENTITY(float(injectionSwitch[1]), max(float(injectionSwitch[1]), float(injectionSwitch[1])))))))), float(_GLF_FUZZED(-6858.1390)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) && true)))), vec2(mat4x3(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(float(injectionSwitch[1])), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-533.351) : float(float(injectionSwitch[1]))))), mix(float(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(float(injectionSwitch[1])), (false ? _GLF_FUZZED(-533.351) : float(float(injectionSwitch[1])))))), float(_GLF_FUZZED(-6858.1390)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0)))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + 0.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(24.71)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(16.41)))), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-4.8)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((false ? 890.664 : 8.4))), bool(false))), injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))), _GLF_IDENTITY(float(vec3(float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))), 1.0, 1.0)), max(float(vec3(float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))), 1.0, 1.0)), float(vec3(float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y)))), 1.0, 1.0)))))))), true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, 0.0), (mat2(injectionSwitch.y, 1.0, 1.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
}
