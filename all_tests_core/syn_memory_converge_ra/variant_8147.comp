#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 vec3 _f0;
 vec3 _f1;
 mat2 _f2;
 uvec3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_19 {
 _GLF_struct_18 _f0;
 uint subgroup_local_id;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
} ;

struct _GLF_struct_15 {
 ivec2 _f0;
 mat4x2 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_14 {
 float _f0;
 mat2 _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 uvec3 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 vec3 _f1;
 mat2x3 _f2;
 ivec4 _f3;
 uvec3 _f4;
 uvec3 _f5;
 int _f6;
} ;

struct _GLF_struct_11 {
 mat4x2 _f0;
 vec3 _f1;
 ivec3 _f2;
 mat2x4 _f3;
 ivec2 _f4;
 uint _f5;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 bvec4 _f1;
 mat4x3 _f2;
 _GLF_struct_12 _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_13 _f0;
 _GLF_struct_17 _f1;
 float _f2;
 _GLF_struct_19 _f3;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 mat2x3 _f1;
 vec3 _f2;
 mat4x3 _f3;
 mat3 _f4;
 bool _f5;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 ivec4 _f1;
 uvec3 _f2;
 ivec4 _f3;
 uvec4 _f4;
 float _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat2x4 _f1;
 vec3 _f2;
 mat3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 mat4x3 _f1;
 uvec2 _f2;
 bvec2 _f3;
 uvec4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 vec2 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat2 _f1;
 mat3x4 _f2;
 mat2 _f3;
 uvec3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
 mat4x3 _f1;
 bvec3 _f2;
 int _f3;
 ivec3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 int _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 vec3 _f1;
 _GLF_struct_4 _f2;
 uint subgroup_id;
 float _f3;
 _GLF_struct_9 _f4;
 vec3 _f5;
 uvec2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(bvec3(true), vec3(1.0), _GLF_struct_4(_GLF_struct_0(mat4x2(1.0), mat4x3(1.0), bvec3(true), 1, ivec3(1), bvec3(true)), 1, _GLF_struct_1(mat3(1.0), mat2(1.0), mat3x4(1.0), _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))))), uvec3(_GLF_IDENTITY(1u, (1u) >> 0u)), ivec2(1)), _GLF_struct_2(mat2x3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), log(1.0), _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, tan(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(40.49)), bool(false))), log(1.0), 0.0)))), vec2(1.0), mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(float(float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (false ? _GLF_FUZZED(-3.8) : float(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), float(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), float(float(max(1.0, 1.0))))))))))))), mat4x3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(7.3)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true)))) > injectionSwitch.y)) ? _GLF_FUZZED(-4839.4278) : 1.0)) : _GLF_FUZZED(-7.7))))), _GLF_struct_3(mat3(1.0), mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.2)))), _GLF_IDENTITY(uvec2(1u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(176081u, 16007u)))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(176081u, 16007u))))), max((_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(176081u, 16007u))))), (_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(176081u, 16007u))))))))) | ((~ (_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(true ? uvec2(1u) : _GLF_FUZZED(uvec2(176081u, 16007u)), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(176081u, 16007u))) | (true ? uvec2(1u) : _GLF_FUZZED(uvec2(176081u, 16007u))))))))))), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false)), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true), false, false))))), false, true))), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(true), false, false)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(true), false, false)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(true), false, false)), false), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true), false, false))))), false, true))), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true), false, false))))), false, true))), true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true), false, false))))), false, true))), true))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true), false, false))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true), false, false))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true), false, false))), false)))), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, false)))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true), false, false))))), false, true))), true))))), true, false)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true), false, false))))), false, true))), true))), bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true), false, false))))), false, true))), true)))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true), false, false))))), false, true))), true))), bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true), false, false))))), false, true))), true)))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true), false, false))))), false, true))), true))), bvec2(bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(true), false, false))))), false, true))), true)))))))), false))))))))))), uvec4(1u), uvec2(1u))), gl_SubgroupID, 1.0, _GLF_struct_9(_GLF_struct_5(mat3(1.0), mat2x4(1.0), vec3(1.0), _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (mat4(_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((mat3(1.0)), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY((mat3(1.0)), mat3(mat3((mat3(1.0)))))), (_GLF_IDENTITY(transpose(_GLF_IDENTITY((mat3(1.0)), mat3(mat3((mat3(1.0)))))), transpose(transpose(transpose(_GLF_IDENTITY((mat3(1.0)), mat3(mat3((mat3(1.0)))))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * mat3(1.0)))))) - mat3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), bvec4(true)), _GLF_struct_6(vec4(1.0)), _GLF_struct_7(_GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat4(1.0)), (true ? _GLF_IDENTITY(transpose(mat4(1.0)), (false ? _GLF_FUZZED(mat4(4.6, 452.364, -3.1, -9067.8385, -2.2, -1.7, -8.8, 4271.6666, -6.6, -108.052, 384.650, _GLF_IDENTITY(72.72, min(_GLF_IDENTITY(72.72, _GLF_IDENTITY((false ? _GLF_FUZZED(3.0) : 72.72), float(mat3((false ? _GLF_FUZZED(3.0) : 72.72), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), 1.0)))), _GLF_IDENTITY(72.72, (false ? _GLF_FUZZED(-17.26) : 72.72)))), 1363.4148, -6019.3166, _GLF_IDENTITY(-33.09, (-33.09) - 0.0), -18.93)) : transpose(mat4(1.0)))) : _GLF_FUZZED(mat4(822.423, -6955.5391, 93.12, -73.27, 409.471, -3.4, -295.595, 1162.3620, -1.4, -30.77, 118.484, 9.0, 665.848, 22.05, 9.6, 9.0)))), (true ? _GLF_IDENTITY(transpose(mat4(1.0)), (true ? _GLF_IDENTITY(transpose(mat4(1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat4(4.6, 452.364, -3.1, -9067.8385, -2.2, -1.7, -8.8, 4271.6666, -6.6, -108.052, 384.650, _GLF_IDENTITY(72.72, min(_GLF_IDENTITY(72.72, (false ? _GLF_FUZZED(3.0) : 72.72)), _GLF_IDENTITY(_GLF_IDENTITY(72.72, mix(float(_GLF_IDENTITY(72.72, max(72.72, 72.72))), float(_GLF_FUZZED(1.6)), bool(false))), (false ? _GLF_FUZZED(-17.26) : 72.72)))), 1363.4148, -6019.3166, -33.09, -18.93)) : transpose(mat4(1.0)), transpose(transpose(false ? _GLF_FUZZED(mat4(4.6, 452.364, -3.1, -9067.8385, -2.2, -1.7, -8.8, 4271.6666, -6.6, -108.052, 384.650, _GLF_IDENTITY(72.72, min(_GLF_IDENTITY(72.72, (false ? _GLF_FUZZED(3.0) : 72.72)), _GLF_IDENTITY(_GLF_IDENTITY(72.72, mix(float(_GLF_IDENTITY(72.72, max(72.72, 72.72))), float(_GLF_FUZZED(1.6)), bool(false))), (false ? _GLF_FUZZED(-17.26) : 72.72)))), 1363.4148, -6019.3166, -33.09, -18.93)) : transpose(mat4(1.0))))))) : _GLF_FUZZED(mat4(822.423, -6955.5391, 93.12, -73.27, 409.471, -3.4, -295.595, 1162.3620, -1.4, -30.77, 118.484, 9.0, 665.848, 22.05, 9.6, 9.0)))) : _GLF_FUZZED(mat4(-5.7, 5071.2693, -7.4, 3700.3850, 6.9, -77.92, 8932.5316, 31.86, 3.2, 5548.7026, 999.677, -1.3, 9.5, 624.843, -2.9, 8990.5378)))))), ivec4(1), uvec3(1u), ivec4(1), uvec4(1u), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(ivec3(ivec3(1))), ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-25910 | 54651)) : 0))) + (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(ivec3(ivec3(1)), ivec3(ivec3(_GLF_IDENTITY(1, (1) / (1 & 1)))), ivec3(ivec3(1)))), ivec3(ivec3(1)), ivec3(ivec3(1))))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(ivec3(ivec3(1)), ivec3(ivec3(1)), ivec3(ivec3(1)))), ivec3(ivec3(1)), ivec3(ivec3(1)))))), ~ (~ (ivec3(ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))))), clamp(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(ivec3(ivec3(1)), ivec3(ivec3(1)), ivec3(ivec3(1)))), ivec3(ivec3(1)), ivec3(ivec3(1))))))))), clamp(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(ivec3(ivec3(1)), ivec3(ivec3(1)), ivec3(ivec3(1)))), ivec3(ivec3(1)), ivec3(ivec3(1)))))), ~ (~ (ivec3(ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))))), clamp(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(ivec3(ivec3(1)), ivec3(ivec3(1)), ivec3(ivec3(1)))), ivec3(ivec3(1)), ivec3(ivec3(1))))))))), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(ivec3(ivec3(1)), ivec3(ivec3(1)), ivec3(ivec3(1)))), ivec3(ivec3(1)), ivec3(ivec3(1)))))), ~ (~ (ivec3(ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))))), clamp(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(ivec3(ivec3(1)), ivec3(ivec3(1)), ivec3(ivec3(1)))), ivec3(ivec3(1)), ivec3(ivec3(1))))))))), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(ivec3(ivec3(1)), ivec3(ivec3(1)), ivec3(ivec3(1)))), ivec3(ivec3(1)), ivec3(ivec3(1)))))), ~ (~ (ivec3(ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))))), clamp(_GLF_IDENTITY(ivec3(ivec3(1)), clamp(ivec3(ivec3(1)), ivec3(ivec3(1)), ivec3(ivec3(1)))), ivec3(ivec3(1)), ivec3(ivec3(1)))))))))))))))), ivec3(ivec3(_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))))))), _GLF_struct_8(mat3(1.0), mat2x3(1.0), vec3(1.0), mat4x3(1.0), mat3(1.0), true), mat2x3(1.0)), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(49369u, 195180u)))), uvec2(1u))), (uvec2(1u)) | _GLF_IDENTITY((uvec2(1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u)))), 1u), max(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (uvec2(1u)))), ((uvec2(1u))) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u)))), 1u), uvec3(_GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) | _GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))), (_GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))), ((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u)))) >> uvec2(0u, 0u))) - uvec2(0u, 0u))), 1u)))), ~ (~ (uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u)))), 1u), max(uvec3(_GLF_IDENTITY((uvec2(1u)), ((uvec2(1u))) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u)))), 1u), uvec3(_GLF_IDENTITY((uvec2(1u)), ((_GLF_IDENTITY(uvec2(1u), clamp(uvec2(1u), uvec2(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))))), _GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) + (uvec2(1u))))))) | _GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))), max(_GLF_IDENTITY((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u))), ((uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u)))) << uvec2(0u, 0u)), (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(6u), uvec2(6u)))))), 1u)))))))) : _GLF_FUZZED(uvec2(109136u, 37173u))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY((bool((false))), _GLF_IDENTITY(bool(bvec3((bool((false))), false, true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3((bool((false))), false, true)), true, true)), ! (! (bool(bvec3(bool(bvec3((bool((false))), false, true)), true, true))))))) || false))), ((bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY((bool((false))), _GLF_IDENTITY(bool(bvec3((bool((false))), false, true)), bool(bvec3(bool(bvec3((bool((false))), false, true)), true, true)))) || false)))) && true)))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), true && (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))))), (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_13(_GLF_struct_11(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max((1.0), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))), max((1.0), (1.0))))) + 0.0)), _GLF_IDENTITY(vec3(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) / vec3(1.0, 1.0, 1.0), ((_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) / vec3(1.0, 1.0, 1.0)) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), ivec3(1), mat2x4(1.0), ivec2(1), 1u), bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bool(bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), mat4x3(1.0), _GLF_struct_12(mat4(1.0), _GLF_IDENTITY(vec3(1.0), vec3(0.0, 0.0, 0.0) + (vec3(1.0))), mat2x3(1.0), ivec4(1), uvec3(1u), uvec3(1u), 1)), _GLF_struct_17(_GLF_struct_14(1.0, mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))), uvec3(1u), _GLF_struct_15(ivec2(1), mat4x2(1.0), mat3x2(1.0), mat4x2(1.0), mat4x2(1.0)), _GLF_struct_16(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(2.5, (2.5) / sqrt(1.0))) : 1.0))))), 1.0, _GLF_struct_19(_GLF_struct_18(vec3(1.0), vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7209.3954)), float(1.0), bool(true)))), mat2(1.0), uvec3(1u), vec2(1.0)), gl_SubgroupInvocationID));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)), (true ? (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)) : _GLF_FUZZED(81944u))) << (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | (4u))), uint(4u)), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(4u), uint(4u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.0)), bool(false))), 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(-19.28)), bool(false))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0)))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(((injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(((injectionSwitch.x > injectionSwitch.y)), false), false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0)))), mat3x2(mat3x2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0)))))))), vec2(vec2(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0)))), mat3x2(mat3x2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0)))))))))))).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)), bool(bool(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), clamp(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), max(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))))) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))), true, true))))), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.y : _GLF_FUZZED(4.6))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true)))), false, false))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(mat4x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), float(_GLF_FUZZED(1.7)), bool(false)))), 0.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false, false)))))))))), false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_struct_replacement_10.subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.subgroup_local_id, (_GLF_struct_replacement_20._f3.subgroup_local_id) | (_GLF_struct_replacement_20._f3.subgroup_local_id)), (_GLF_struct_replacement_20._f3.subgroup_local_id) >> 0u), _GLF_struct_replacement_20._f3.subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.subgroup_local_id, (_GLF_struct_replacement_20._f3.subgroup_local_id) | (_GLF_struct_replacement_20._f3.subgroup_local_id)), (_GLF_struct_replacement_20._f3.subgroup_local_id) >> 0u), _GLF_struct_replacement_20._f3.subgroup_local_id)), (true ? _GLF_IDENTITY(_GLF_struct_replacement_20._f3.subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.subgroup_local_id, (_GLF_struct_replacement_20._f3.subgroup_local_id) | (_GLF_struct_replacement_20._f3.subgroup_local_id)), (_GLF_struct_replacement_20._f3.subgroup_local_id) >> 0u), _GLF_struct_replacement_20._f3.subgroup_local_id)) : _GLF_FUZZED(150438u)))) | 0u, 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.subgroup_local_id, (_GLF_struct_replacement_20._f3.subgroup_local_id) | (_GLF_IDENTITY(_GLF_struct_replacement_20._f3.subgroup_local_id, max(_GLF_struct_replacement_20._f3.subgroup_local_id, _GLF_struct_replacement_20._f3.subgroup_local_id)))), (_GLF_struct_replacement_20._f3.subgroup_local_id) >> 0u), _GLF_struct_replacement_20._f3.subgroup_local_id)), (true ? _GLF_IDENTITY(_GLF_struct_replacement_20._f3.subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3.subgroup_local_id, (_GLF_struct_replacement_20._f3.subgroup_local_id) | (_GLF_struct_replacement_20._f3.subgroup_local_id)), (_GLF_struct_replacement_20._f3.subgroup_local_id) >> 0u), _GLF_struct_replacement_20._f3.subgroup_local_id)) : _GLF_FUZZED(150438u)))) | 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false))))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false))))) > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)), bool(bvec4(bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, true)), true, true, false))))) && true)))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(8682.2713), determinant(mat4(1.0, tan(0.0), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))) * (true ? injectionSwitch.x : _GLF_FUZZED(8682.2713))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), clamp(atomicLoad(write_val, 4, 64, 2), atomicLoad(write_val, 4, 64, 2), atomicLoad(write_val, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) ^ 0)) | (64)), 2)));
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(6.5, mix(float(_GLF_FUZZED(-2.6)), float(6.5), bool(true)))) : 1.0)))), 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.5) : 1.0))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-62.23), mix(float(_GLF_FUZZED(7282.6260)), float(_GLF_FUZZED(-62.23)), bool(true)))), float(max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.5) : 1.0)))), bool(true)))), 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0)), 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.5) : 1.0)))), 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6.5) : 1.0, max(_GLF_IDENTITY(false ? _GLF_FUZZED(6.5) : 1.0, min(false ? _GLF_FUZZED(6.5) : 1.0, false ? _GLF_FUZZED(6.5) : 1.0)), _GLF_IDENTITY(false ? _GLF_FUZZED(6.5) : 1.0, clamp(false ? _GLF_FUZZED(6.5) : 1.0, false ? _GLF_FUZZED(6.5) : 1.0, false ? _GLF_FUZZED(6.5) : 1.0)))))))), 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0), (false ? _GLF_FUZZED(mat3(-6320.5140, 1.6, 564.004, -8.0, -14.18, 463.782, -317.534, 3.9, 7.9)) : mat3(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.5) : 1.0)))), 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0))), (false ? _GLF_FUZZED((mat3x2(-92.30, 3.7, -4.7, 8068.8523, -643.969, 993.696) , mat3(877.875, 6.9, -0.2, 9968.0778, -1.3, 87.27, -833.319, -5.1, 5.7))) : _GLF_IDENTITY(mat3(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(6.5) : 1.0), max((false ? _GLF_FUZZED(6.5) : 1.0), (false ? _GLF_FUZZED(6.5) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0), (false ? _GLF_FUZZED(mat3(-6320.5140, 1.6, 564.004, -8.0, -14.18, 463.782, -317.534, 3.9, 7.9)) : mat3(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.5) : 1.0)))), 1.0, 0.0, 0.0), (mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(90.90)), float(1.0), bool(true))), 0.0))), 0.0, 1.0)))))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))), false, _GLF_IDENTITY(true, bool(bool(true))), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
