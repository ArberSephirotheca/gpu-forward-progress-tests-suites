#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-236.135, 1660.9798).r)), vec2(_GLF_FUZZED(9.0), (injectionSwitch)[1]), bvec2(false, true))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, 0.0, 0.0))).y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true, true)))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))) && true))), ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), 1.0, 0.0, 0.0))).y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true, true)))), bool(bvec3((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)), true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))) && true)))))) && true, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true))))), (false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)))))) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true))))), (false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)))))) || false))), ! (! (! (bool(_GLF_IDENTITY(false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true))))), (false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)))))) || false))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true))))), (false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)))))) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true))))), (false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)))))) || false))), ! (! (! (bool(_GLF_IDENTITY(false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true))))), (false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)))))) || false)))))))))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true))))), (false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)))))) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true))))), (false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)))))) || false))), ! (! (! (bool(_GLF_IDENTITY(false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true))))), (false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, ! (! ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true)))))) || false)))))))))))))))), bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true, true && ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))) && true)), ! (! _GLF_IDENTITY(((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false))))) && true)) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) || false))) && true)) && true)), false || (((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false))))) && true)) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)), (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) || false))) && true)) && true))))))))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(32.00, 0.3, vec2(-1.5, 311.416))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x4(mat2(1.0))), (mat2(mat2x4(mat2(1.0)))) * mat2(1.0)))) + mat2(0.0, 0.0, 0.0, 0.0)), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))) && true)), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, true))), false || (! (bool(bvec3(false, false, true)))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.4)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.4)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true))) && true))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sin(vec2(0.0, 0.0)) + (injectionSwitch), (sin(vec2(0.0, 0.0)) + (injectionSwitch)) * vec2(1.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sin(vec2(0.0, 0.0)) + (injectionSwitch), (sin(vec2(0.0, 0.0)) + (injectionSwitch)) * vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sin(vec2(0.0, 0.0)) + (injectionSwitch), (sin(vec2(0.0, 0.0)) + (injectionSwitch)) * vec2(1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((-49.48 / -401.371) + 8939.7638)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.0)), bvec2(true, false))).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sin(vec2(0.0, 0.0)) + (injectionSwitch), (sin(vec2(0.0, 0.0)) + (injectionSwitch)) * vec2(1.0, 1.0))).x > injectionSwitch.y)))) && true)), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sin(vec2(0.0, 0.0)) + (injectionSwitch), (sin(vec2(0.0, 0.0)) + (injectionSwitch)) * vec2(1.0, 1.0))).x > injectionSwitch.y)))) && true)), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), true), bvec2(bvec3(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true, true))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(sin(vec2(0.0, 0.0)) + (injectionSwitch), (sin(vec2(0.0, 0.0)) + _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) + vec2(0.0, 0.0))) * vec2(1.0, 1.0))).x > injectionSwitch.y)))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), true), true)))))))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))), true && (! (false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec2(_GLF_DEAD(false), true))))))))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))), 0u)), 0u, 0u) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((gl_WorkGroupSize), min((gl_WorkGroupSize), (gl_WorkGroupSize)))), gl_WorkGroupSize, gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u))) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(195837u, 58045u, 48045u))))))))), uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) | (0u)), 0u) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), 1u))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, (0u | 0u), 0u, (_GLF_IDENTITY(0u, (0u) | (0u)) | (0u | 0u))))), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-8.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(0u, 0u, 0u))) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), 1u))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, (0u | 0u), 0u, (_GLF_IDENTITY(0u, (0u) | (0u)) | (0u | 0u))))), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-8.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(0u, 0u, 0u))) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))), (true ? uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)), 1u))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), (uvec3(uvec3(gl_WorkGroupSize))) ^ uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, uint(uvec4(0u, (0u | 0u), 0u, (_GLF_IDENTITY(0u, (0u) | (0u)) | (0u | 0u))))), 0u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-8.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec3(0u, 0u, 0u))) ^ (gl_WorkGroupSize)), gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(155016u, 47288u, 125725u))))) << uvec3(0u, 0u, 0u))).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) << (uvec3(0u, _GLF_IDENTITY(0u, (0u) >> (1u ^ 1u)), 0u) | uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), uint(uvec3(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id) / 1u)), max(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)), max(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) / 1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)) << 0u)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)), 1u * (0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), (workgroup_size * _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), (workgroup_size * _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id))) / 1u)), _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u)) ^ ((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), 1u * (workgroup_id))) / 1u))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)), ~ (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u + (~ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * workgroup_id) / 1u)), max(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)), max(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))) / 1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)) << 0u)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)), 1u * (0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), (workgroup_size * _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), (workgroup_size * _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id))) / 1u)), _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u)) ^ ((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), 1u * (workgroup_id))) / 1u))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)), ~ (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u + (~ ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))))) >> 0u)), 1u, 1u)));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size))) / (_GLF_IDENTITY((((_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(_GLF_IDENTITY(2u, min(2u, 2u))))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, max(2u, 2u)), 2u)))))), max(uint(uint(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u))))), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(uint(2u), uint(2u))))), (((_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(workgroup_id) : 2u)), 2u))), (uint(2u)) | (uint(2u))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(workgroup_id) : 2u)), 2u))), (uint(2u)) | (uint(2u))))), max((_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(workgroup_id) : 2u)), 2u))), (uint(2u)) | (uint(2u))))), (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, (false ? _GLF_FUZZED(workgroup_id) : 2u)), 2u))), (uint(2u)) | (uint(2u)))))))) << 0u) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) ^ 0u), uint(2u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(2u), uint(2u)))), max(uint(uint(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u))))), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(uint(2u), uint(2u)))))) | _GLF_IDENTITY(((((_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))), uint(2u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(2u), uint(2u)))), max(uint(uint(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u))))), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(uint(2u), uint(2u)))))), (((((_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) | 0u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))), uint(2u)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(2u), uint(2u)))), max(uint(uint(_GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) >> 0u))))), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(uint(2u), uint(2u))))))) - 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(0u | (uint(2u)), (0u | (uint(_GLF_IDENTITY(2u, max(2u, 2u))))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(2u), 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(tan(-25.65)))))), 0u), (uvec4(uint(2u), 0u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) ^ 0u)) | (0u)), 0u, 0u)), (false ? _GLF_FUZZED((write_val | _GLF_IDENTITY(uvec4(169219u, 66583u, _GLF_IDENTITY(102u, max(102u, 102u)), 192448u), (_GLF_IDENTITY(uvec4(169219u, 66583u, 102u, 192448u), (uvec4(169219u, 66583u, 102u, _GLF_IDENTITY(192448u, 0u + (192448u)))) >> uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, _GLF_IDENTITY(0u, (0u) << 0u)) ^ (uvec2(1u, 1u)))))) | (1u)), 1u)))) : _GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), (_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u))))) >> 0u)) + 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(uint(_GLF_IDENTITY(2u, clamp(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, uint(uvec4(2u, 1u, 0u, 1u)))) + (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 2u, 2u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) - uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec4(uint(2u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(uint(_GLF_IDENTITY(2u, ~ (~ (_GLF_IDENTITY(2u, min(2u, 2u)))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))))), ~ (~ ((uint(_GLF_IDENTITY(uvec4(uint(2u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec4(uint(_GLF_IDENTITY(2u, (2u) / 1u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) - _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(2u), 0u, _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.1), float(vec3(_GLF_FUZZED(-6.1), 0.0, 1.0)))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), float(1.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0)), 1.0))) < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-614.585 + -34.12))), float(injectionSwitch.y), bool(true))))), (uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-6.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-6.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-6.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), mix(float(_GLF_FUZZED(-85.78)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-6.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(-6.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), injectionSwitch.y))) << 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), 0u), (uvec4(uint(2u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)), clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) ^ 0u)), 0u))) ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) - uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(uint(2u), 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), injectionSwitch.y)), (uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), float(1.0), bool(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), float(1.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), injectionSwitch.y)), (uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y))) << 0u)) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), uint(uvec2(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ 0u), 0u)))), ((_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), float(1.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(2.3, max(2.3, 2.3)))), bool(false))))), (uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), clamp(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))))), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat3(mat3x4(mat3(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), clamp(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), (false ? _GLF_FUZZED(-1.1) : _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))))), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)) < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.1)), _GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / 1.0))), injectionSwitch.y))) << 0u)) ^ (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) / 1u)), 0u), (_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(2u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2u : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(0u, (0u) ^ 0u), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(float(_GLF_ONE(1.0, injectionSwitch.y))))), 0u), max(uvec4(uint(_GLF_IDENTITY(2u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2u : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(0u, (0u) ^ 0u), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(float(_GLF_ONE(1.0, injectionSwitch.y))))), 0u), uvec4(uint(_GLF_IDENTITY(2u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2u : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(0u, (0u) ^ 0u), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(float(_GLF_ONE(1.0, injectionSwitch.y))))), 0u)))) - uvec4(0u, 0u, 0u, 0u)))) << 0u)))), min(uint(2u), uint(2u))))));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec2(bvec2(bvec2(false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))), (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), max(_GLF_IDENTITY(4, max(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, min(4, 4))))))), _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))) + 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))) + 0, ((_GLF_IDENTITY(4, max(4, 4))) + 0) - 0)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))) + 0, ((_GLF_IDENTITY(4, max(4, 4))) + 0) - 0))) / 1)))))), 64, 4);
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, 0u | (write_val)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), 0 | ((4))))), _GLF_IDENTITY((4) - 0, ((4) - 0) ^ 0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), 0 | _GLF_IDENTITY(((4)), (((_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(71428) : 4)) : _GLF_FUZZED(-73167)))))))) ^ 0)))), (4) - 0))), _GLF_IDENTITY(64, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), int(1))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, min(0, 0)) | (0)) ^ (_GLF_IDENTITY(int(1), int(1))))) ^ (_GLF_IDENTITY(64, (64) | (64)))), 2);
 buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY((uint(subgroupAllEqual(read_val))) >> _GLF_IDENTITY(0u, max(0u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY((uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) * 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uvec4(uint(0u), 0u, 1u, 0u)), (uint(uvec4(uint(0u), 0u, 1u, 0u))) / 1u))) << (0u ^ 0u)), uint(0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uvec4(uint(0u), 0u, 1u, 0u)), (uint(uvec4(uint(_GLF_IDENTITY(0u, min(0u, 0u))), 0u, 1u, 0u))) / 1u))) << (0u ^ 0u)), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (uint(subgroupAllEqual(read_val))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(uint(uint(_GLF_IDENTITY(7u, (7u) + 0u))))), uint(7u))) ^ ((uint(subgroupAllEqual(read_val)))))) ^ 0u) >> 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ num_workgroup)) : read_val)), (read_val) * 1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(write_val) : uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((++ num_workgroup)) : read_val)), (read_val) * 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (read_val) | 0u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))), 0u, 1u, 0u)), (uint(uvec4(uint(0u), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, (1u | 1u), 1u, 1u), min(uvec4(1u, (1u | 1u), 1u, 1u), uvec4(1u, (1u | 1u), 1u, 1u)))), min(uint(_GLF_IDENTITY(uvec4(1u, (1u | 1u), 1u, 1u), min(uvec4(1u, (1u | 1u), 1u, 1u), uvec4(1u, (1u | 1u), 1u, 1u)))), uint(_GLF_IDENTITY(uvec4(1u, (1u | 1u), 1u, 1u), min(uvec4(1u, (1u | 1u), 1u, 1u), uvec4(1u, (1u | 1u), 1u, 1u))))))), 0u))) / 1u))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), 0u, 1u, 0u)), (uint(uvec4(uint(0u), 0u, 1u, 0u))) / 1u))), (true ? (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), 0u, 1u, 0u)), (uint(uvec4(uint(0u), 0u, 1u, 0u))) / 1u))) : _GLF_FUZZED(num_workgroup))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) << 0u), _GLF_IDENTITY(uint(uvec4(uint(0u), 0u, 1u, _GLF_IDENTITY(0u, ~ (~ (0u))))), (uint(_GLF_IDENTITY(uvec4(uint(0u), 0u, 1u, _GLF_IDENTITY(0u, 0u | (0u))), min(uvec4(uint(0u), 0u, 1u, _GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(uvec4(uint(0u), 0u, 1u, _GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (_GLF_IDENTITY(uvec4(uint(0u), 0u, 1u, _GLF_IDENTITY(0u, 0u | (0u))), (uvec4(uint(0u), 0u, 1u, _GLF_IDENTITY(0u, 0u | (0u)))) | uvec4(0u, 0u, 0u, 0u))))))))) / 1u)))) / 1u))) << (0u ^ 0u)), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (uint(subgroupAllEqual(read_val))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))), uint(7u))) ^ ((uint(subgroupAllEqual(read_val)))))) ^ 0u) >> 0u))) : _GLF_FUZZED(write_val)))), _GLF_IDENTITY((uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, min(_GLF_IDENTITY(read_val, _GLF_IDENTITY(_GLF_IDENTITY((read_val) / 1u, min((read_val) / 1u, _GLF_IDENTITY((read_val), uint(uvec2((read_val), 0u))) / 1u)), min(_GLF_IDENTITY((read_val) / 1u, min((read_val) / 1u, _GLF_IDENTITY((read_val), uint(uvec2((read_val), 0u))) / 1u)), _GLF_IDENTITY((read_val) / 1u, min((read_val) / 1u, _GLF_IDENTITY((read_val), uint(uvec2((read_val), 0u))) / 1u))))), read_val))) ^ 0u)))) / _GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY((uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, min(_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) / 1u, min((read_val) / 1u, _GLF_IDENTITY(_GLF_IDENTITY((read_val), (false ? _GLF_FUZZED(atomicXor(workgroup_size, 137298u)) : (read_val))), uint(uvec2((read_val), 0u))) / 1u))), read_val))) ^ 0u)))) / _GLF_IDENTITY(1u, 0u | (1u)), ((uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, min(_GLF_IDENTITY(read_val, _GLF_IDENTITY((read_val) / 1u, min((read_val) / 1u, _GLF_IDENTITY((read_val), uint(uvec2((read_val), 0u))) / 1u))), _GLF_IDENTITY(read_val, 0u + (read_val))))) ^ 0u)))) / _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u ^ (1u))))) | 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true, _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(! (! (_GLF_IDENTITY(false, (false) && true))), false))))) && true)), ! (! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(! (! (_GLF_IDENTITY(false, (false) && true))), false))))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(! (! (_GLF_IDENTITY(false, (false) && true))), false))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(! (! (_GLF_IDENTITY(false, (false) && true))), false))))) && true), true && (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2(! (! (_GLF_IDENTITY(false, (false) && true))), false))))) && true))))))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true))))))) && true))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool(_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, false))))))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), ! (_GLF_IDENTITY(! (false || (! (false))), bool(bvec3(! (false || (! (false))), true, false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))
    return;
  }
}
