#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14251u, 174367u, 12639u)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14251u, 174367u, 12639u)))).x, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14251u, 174367u, 12639u)))).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14251u, 174367u, 12639u)))).x, (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14251u, 174367u, 12639u)))).x) | (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14251u, 174367u, 12639u)))).x))))) | (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(14251u, 174367u, 12639u)))).x));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))) || false)), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / ((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))), max(_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))), _GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (7u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))) / 1u), subgroup_size), uint(uint(min(subgroup_size, subgroup_size)))))) >> 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base, _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base, _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), (clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base, _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | (clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base, _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))))), 1u, 0u), (uvec3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base, _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), (clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base, _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | (clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base, _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))))), 1u, 0u)) ^ uvec3(0u, 0u, 0u))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))) - 0u)), clamp(_GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), 0u ^ (~ (~ (workgroup_base + subgroup_base)))), ~ (~ (workgroup_base + subgroup_base)), ~ (~ (workgroup_base + subgroup_base)))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_base)), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), max(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(129706u) : (~ (workgroup_base + subgroup_base)))))), max(_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), max(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(129706u) : (~ (workgroup_base + subgroup_base)))))), min(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), max(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(129706u) : (~ (workgroup_base + subgroup_base)))))), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), max(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(129706u) : (~ (workgroup_base + subgroup_base)))))))), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), max(_GLF_IDENTITY((~ (workgroup_base + subgroup_base)), min((~ (workgroup_base + subgroup_base)), (~ (workgroup_base + subgroup_base)))), _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), (false ? _GLF_FUZZED(129706u) : (~ (workgroup_base + subgroup_base)))))))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u))))) ^ (~ (~ (workgroup_base + subgroup_base)))), ~ (~ (workgroup_base + subgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_local_id))))))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), 1u, 1u)), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(1u ^ 1u, min(_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / 1u), 1u ^ 1u))) ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))))), 1u, 1u), (true ? uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(1u ^ 1u, min(_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) / 1u), 1u ^ 1u))) ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base))))))), 1u, 1u) : _GLF_FUZZED(uvec3(181022u, 121188u, 62437u)))))) | 0u))) / 1u))) + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(87283u)))) ^ 0u), subgroup_local_id)), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base))), workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base))), workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base)))))) | 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))), 1u, 1u)), min(uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)), uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))) : _GLF_FUZZED(subgroup_size))))) / 1u))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) + 0u) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (uvec3(workgroup_base + subgroup_base, 1u, 1u)) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))), (0u ^ 0u) ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (uvec3(workgroup_base + subgroup_base, 1u, 1u)) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))), (uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (uvec3(workgroup_base + subgroup_base, 1u, 1u)) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u))))))))) >> 0u))), uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))))))) / 1u))) + subgroup_local_id), (_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base))), workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base))), workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base)))))) | 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))), 1u, 1u)), min(uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)), uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))) : _GLF_FUZZED(subgroup_size))))) / 1u))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) + 0u) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (uvec3(workgroup_base + subgroup_base, 1u, 1u)) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))), (0u ^ 0u) ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (uvec3(workgroup_base + subgroup_base, 1u, 1u)) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))), (uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (uvec3(workgroup_base + subgroup_base, 1u, 1u)) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u))))))))) >> 0u))), uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))))))) / 1u))) + subgroup_local_id), (max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base))), workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base))), workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) : _GLF_FUZZED(workgroup_base)))))) | 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))))), 1u, 1u)), min(uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)), uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))) : _GLF_FUZZED(subgroup_size))))) / 1u))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) >> _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_base, (workgroup_base + subgroup_base) | 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) + 0u) + subgroup_base, (workgroup_base + subgroup_base) | 0u))), _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (uvec3(workgroup_base + subgroup_base, 1u, 1u)) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))), (0u ^ 0u) ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (uvec3(workgroup_base + subgroup_base, 1u, 1u)) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))), (uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_base, 1u, 1u), (uvec3(workgroup_base + subgroup_base, 1u, 1u)) - uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u))))))))) >> 0u))), uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 1u)))))))))))) / 1u))) + subgroup_local_id)) | 0u)) / 1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, (0 ^ 0), 1), ~ (~ (ivec3(5, (0 ^ 0), 1)))))), 0 + (5)), (_GLF_IDENTITY(5, 0 + (5))) | (_GLF_IDENTITY(5, 0 + (5))))))) >> _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 | (_GLF_IDENTITY(int(4), int(4))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true)) && true) ? int(4) : _GLF_FUZZED(_GLF_IDENTITY(-97539, (-97539) | 0)))), int(_GLF_IDENTITY(4, (4) | (4))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0))), true && (_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0)), (_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))) && true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0)), (_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))) && true)))))), ! (! ((_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0)))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)), true)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))))), bool(bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec2(_injected_loop_counter, 0), ivec2(1, 1) * (ivec2(_injected_loop_counter, 0))))) != _GLF_IDENTITY(0, min(0, 0))))))))))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uint(virtual_gid), max(uint(virtual_gid), uint(virtual_gid)))))), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, min(4, 4)), 4)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2908.4211) : injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2908.4211) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2908.4211) : injectionSwitch.x)) > injectionSwitch.y))))), false, true, true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 1.0)))[_GLF_IDENTITY(1, int(int(1)))], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - _GLF_ZERO(0.0, injectionSwitch.x)))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(617.347))))), injectionSwitch.y)), 0.0 + (injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0)))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findMSB(61215)) : _GLF_IDENTITY(1, (1) | 0)))], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-8873.7661) : injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch))) * mat2(1.0))[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch))) * mat2(1.0))[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch))) * mat2(1.0))[1]))))), (true ? vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], float(vec3(injectionSwitch[0], 1.0, 1.0)))) * 1.0), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findMSB(61215)) : _GLF_IDENTITY(1, (1) | 0)))], _GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(-8873.7661) : injectionSwitch[_GLF_IDENTITY(1, (1) - 0)])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch))) * mat2(1.0))[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch))) * mat2(1.0))[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : injectionSwitch))) * mat2(1.0))[1]))))) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, bool(bvec4((true) || false, true, false, true))), (_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, ((true) || false) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, determinant(_GLF_IDENTITY(mat4(1.0, _GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(log(76.11)))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(934.593)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), exp(0.0), abs(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0))))), 1.0, 1.0, 1.0), (mat4(1.0, _GLF_IDENTITY(0.0, cos(0.0) * (0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(log(76.11)))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(934.593)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0)), exp(0.0), abs(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 1.0))))), 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(8218.5458), (_GLF_IDENTITY(_GLF_FUZZED(8218.5458), clamp(_GLF_FUZZED(8218.5458), _GLF_IDENTITY(_GLF_FUZZED(8218.5458), max(_GLF_FUZZED(8218.5458), _GLF_FUZZED(8218.5458))), _GLF_IDENTITY(_GLF_FUZZED(8218.5458), clamp(_GLF_IDENTITY(_GLF_FUZZED(8218.5458), 1.0 * (_GLF_FUZZED(8218.5458))), _GLF_FUZZED(8218.5458), _GLF_FUZZED(8218.5458)))))) * 1.0) : 1.0)), 1.0, 1.0)))), min(vec2(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3528.0428), _GLF_FUZZED(-832.508)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1.7)), bool(false))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, exp(_GLF_IDENTITY(0.0, sin(0.0) + (0.0))), abs(0.0), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5428.4225))), 1.0, 1.0)), 1.0)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-4.7))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), exp(0.0), abs(0.0), 0.0, 1.0, 1.0, 1.0)), 1.0)), clamp(vec2(vec4(injectionSwitch, determinant(mat4(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), abs(0.0), 0.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), vec2(vec4(injectionSwitch, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), abs(0.0), 0.0, 1.0, 1.0, 1.0)), 1.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) * vec2(1.0, 1.0)), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), abs(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0))))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(802.011)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(802.011)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) / 1), 2))), clamp(atomicLoad(write_val, 4, 64, 2), atomicLoad(write_val, 4, 64, 2), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(write_val, 4, 64, 2)) - 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
