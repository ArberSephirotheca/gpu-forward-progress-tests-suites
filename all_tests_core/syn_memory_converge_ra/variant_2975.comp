#version 460
struct _GLF_struct_4 {
 mat3 _f0;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 int _f1;
 uint workgroup_id;
 _GLF_struct_4 _f2;
 ivec3 _f3;
 int _f4;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 mat2x4 _f1;
 uvec3 _f2;
 mat2x4 _f3;
 mat2 _f4;
 mat4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 uvec2 _f1;
 ivec2 _f2;
 mat3x2 _f3;
 mat2x3 _f4;
 bool _f5;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 ivec2 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 uint _f5;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 ivec2 _f1;
 mat3 _f2;
 _GLF_struct_5 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_3(vec3(1.0), ivec2(1), _GLF_struct_0(mat3(1.0), vec3(1.0)), _GLF_struct_1(ivec2(1), uvec2(1u), ivec2(1), mat3x2(1.0), mat2x3(1.0), true), _GLF_struct_2(mat2(1.0), mat2x4(1.0), uvec3(1u), mat2x4(1.0), mat2(1.0), mat4(1.0), ivec3(1)), 1u), ivec2(1), mat3(1.0), _GLF_struct_5(mat3(1.0), 1, gl_WorkGroupID.x, _GLF_struct_4(mat3(1.0)), ivec3(1), 1));
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = _GLF_struct_replacement_6._f3.workgroup_id;
 uint workgroup_base = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
