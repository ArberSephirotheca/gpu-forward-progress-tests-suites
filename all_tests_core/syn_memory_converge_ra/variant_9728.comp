#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -92358)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) && true), true, true)), true)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! ((_GLF_DEAD(false)))))), true && (! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY(false, (false) && true) || (! ((_GLF_DEAD(false))))))))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * vec2(1.0, 1.0)))).x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(mat3(vec2(1.0, 1.0) * (injectionSwitch), abs(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-773.747, -1.5)) : injectionSwitch)))).y, (injectionSwitch.y) / 1.0)), min(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY((true ? min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) : _GLF_FUZZED(-5.0)), mix(float((true ? min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) : _GLF_FUZZED(-5.0))), float(_GLF_FUZZED(-356.135)), bool(false)))))))))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(! (! (_GLF_DEAD(false))))))), bool(bvec4((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bool(! (! (_GLF_DEAD(false))))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(bool(bool(true)), false)))), true))) && true)), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(false, true && (false)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool(! ((_GLF_DEAD(false))))), true && (bool(bool(! ((_GLF_DEAD(false)))))))), _GLF_IDENTITY(false, ! (! (false))) || (! ((_GLF_DEAD(false)))))), _GLF_IDENTITY(true && _GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (! ((_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (! ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true) || (! ((_GLF_DEAD(false)))))))))))), ! (! ((! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (! ((_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (! ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true) || (! ((_GLF_DEAD(false))))))))))))))), bool(bvec3(_GLF_IDENTITY(true && (! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY(false, (false) && true) || (! ((_GLF_DEAD(false))))))), false || (true && (! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), _GLF_IDENTITY(false, (false) && true) || (! ((_GLF_DEAD(false))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec2((injectionSwitch))), mix(vec2((vec2(vec2((injectionSwitch))))[0], (vec2(vec2((injectionSwitch))))[1]), vec2(_GLF_FUZZED(-86.79), _GLF_FUZZED(-8454.0964)), bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * vec2(1.0, 1.0)))).x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(80.05, 5168.2549)))))), injectionSwitch)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(5.5, -5840.2542, 806.678, -2088.9371)))) * (vec2(1.0, 1.0))) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), min(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0)), sin(sin(0.0)) + (min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (true ? vec3(injectionSwitch, 0.0) : _GLF_FUZZED(vec3(-36.04, 1.6, 7.2)))))).y, min(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (true ? min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) : _GLF_FUZZED(-5.0))))))))))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) * vec2(1.0, 1.0)))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-31.69) : injectionSwitch.y)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), mix(vec2((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], _GLF_FUZZED(4.1)), vec2(_GLF_FUZZED(-76.83), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[1], min((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[1], (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[1]))), bvec2(false, true)))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(15.33) : _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))) / 1.0)), min(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (true ? min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), (injectionSwitch.y))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (injectionSwitch.y) / 1.0)))) : _GLF_FUZZED(-5.0)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0))) - log(vec2(1.0, 1.0))) * (injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(refract(vec2(-3418.9526, -8816.7487), injectionSwitch, -2.5)) : injectionSwitch)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(min(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y) / 1.0, max(_GLF_IDENTITY((injectionSwitch.y) / 1.0, (true ? (injectionSwitch.y) / 1.0 : _GLF_FUZZED(-2.4))), (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (true ? min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) : _GLF_FUZZED(-5.0)))), (_GLF_IDENTITY(min(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y) / 1.0, max(_GLF_IDENTITY((injectionSwitch.y) / 1.0, (true ? (injectionSwitch.y) / 1.0 : _GLF_FUZZED(-2.4))), (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (true ? min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) : _GLF_FUZZED(-5.0)))), (min(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.7, 1.2)) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y) / 1.0, max(_GLF_IDENTITY((injectionSwitch.y) / 1.0, (true ? (injectionSwitch.y) / 1.0 : _GLF_FUZZED(-2.4))), _GLF_IDENTITY((injectionSwitch.y) / 1.0, float(mat2x4((injectionSwitch.y) / 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))))))), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (true ? min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)) * (_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) : _GLF_FUZZED(-5.0))))) * 1.0)) * 1.0)))))))), _GLF_IDENTITY(false, (false) || false) || (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), vec2(mat4(vec2(1.0, 1.0) * (injectionSwitch), abs(exp(0.0)), 0.0, 0.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))))))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), min(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) / _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), 1.0)))), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(83.96) : (injectionSwitch.y))) / 1.0)), (true ? min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) + 0.0), (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), float(_GLF_FUZZED(4.1)), bool(false)))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) : _GLF_FUZZED(-5.0)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(7.8)))) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))))))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (injectionSwitch.y) / 1.0)), min(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.y) / 1.0, max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) / 1.0, (true ? (injectionSwitch.y) / 1.0 : _GLF_FUZZED(-2.4))), mix(float(_GLF_IDENTITY((injectionSwitch.y) / 1.0, (true ? (injectionSwitch.y) / 1.0 : _GLF_FUZZED(-2.4)))), float(_GLF_FUZZED(-7608.9479)), bool(false))), (injectionSwitch.y) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (true ? min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) : _GLF_FUZZED(-5.0))), (false ? _GLF_FUZZED(816.374) : _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (true ? _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, abs(0.0)), (true ? mat4x2(injectionSwitch.y, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, abs(0.0)) : _GLF_FUZZED((mat4x2(496.075, 17.20, -3.6, -71.22, -58.60, -5224.0119, -4561.0969, 4393.5437) + 0.5))))))), determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))))) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) - _GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(-5.0))))))))))))))))))) || false), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec3(! (! (_GLF_DEAD(false))), false, false))), bool(bool(! (! (_GLF_DEAD(false))))))), bool(bvec4((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(determinant(mat2(0.0, 0.0, 1.0, 0.0)))))))))))))))))), false, true, true))) && true)), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec3(true && (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(91.91)), float(1.0), bool(true)))) + sin(0.0))) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(91.91)), float(1.0), bool(true)))) + sin(0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(91.91)), float(1.0), bool(true)))) + sin(0.0))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(91.91)), float(1.0), bool(true)))) + sin(0.0))) * (injectionSwitch)))).y)), _GLF_IDENTITY(false, true && (false)))))))))))
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(7), int(7))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false || (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, 0 + (1)) ^ 1)); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))), max(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 1.0))))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4381.0527, -8.7)))).y, (injectionSwitch.y) * 1.0), injectionSwitch.y))) / 1.0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 1.0))))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4381.0527, -8.7)))).y, (injectionSwitch.y) * 1.0), injectionSwitch.y))) / 1.0)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 1.0))))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4381.0527, -8.7)))).y, (injectionSwitch.y) * 1.0), injectionSwitch.y))) / 1.0)))) : _GLF_FUZZED(88.71))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 1.0))))) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-4381.0527, -8.7)))).y, (injectionSwitch.y) * 1.0), injectionSwitch.y))) / 1.0)))))) * 1.0)))), _GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-100.234)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))) < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))) * 1.0), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))) * 1.0))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(mat2x3(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, 1.0, 1.0, 1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(min(injectionSwitch, injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))) * 1.0)))))), _GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))))) : _GLF_FUZZED(float(true)))), mix(float(_GLF_FUZZED(-100.234)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))))) : _GLF_FUZZED(float(true)))), mix(float(_GLF_FUZZED(-100.234)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))))) : _GLF_FUZZED(float(true)))), mix(float(_GLF_FUZZED(-100.234)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))))) : _GLF_FUZZED(float(true)))), mix(float(_GLF_FUZZED(-100.234)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))))) : _GLF_FUZZED(float(true)))), mix(float(_GLF_FUZZED(-100.234)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y) && true)))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))))) : _GLF_FUZZED(float(true)))), mix(float(_GLF_FUZZED(-100.234)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))))) : _GLF_FUZZED(float(true)))), mix(float(_GLF_FUZZED(-100.234)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))))) : _GLF_FUZZED(float(true)))), mix(float(_GLF_FUZZED(-100.234)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, 0.0, 0.0), mat2(mat2(mat2(injectionSwitch.x, 1.0, 0.0, 0.0)))))) : _GLF_FUZZED(float(true)))), mix(float(_GLF_FUZZED(-100.234)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y) && true))))))) || false)))))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     else
      {
      }
    }
   do
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, true, true)), bool(bool(bool(bvec4(true, false, true, true))))))))), true)))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(true, false, true, true)), bool(bool(bool(bvec4(true, false, true, true))))))))), true))))) && true));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = ((_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (_GLF_IDENTITY(! (true), true && (! (true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-377.174)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)), mix(vec2((_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)), max(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)), max(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)), vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))), vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))))[0], _GLF_FUZZED(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), vec2(_GLF_FUZZED(426.830), (vec2(1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY((tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))), (false ? _GLF_FUZZED(asinh(frexp(8.3, _injected_loop_counter))) : (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))))) / 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(0.0, _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(70.14))), sqrt(1.0), sqrt(1.0)))), _GLF_IDENTITY(vec2(1.0, tan(0.0)), vec2(0.0, 0.0) + (vec2(1.0, tan(0.0)))))) + (injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY((tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0))))))) / abs(1.0)))), mix(float((tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0))))))) / abs(1.0))))), float(_GLF_FUZZED(vec4(7.7, 6.1, 749.196, 552.363).s)), bool(false))) / 1.0)), mix(vec2((vec2(1.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0))), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) - 0.0)) / 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(426.830), (vec2(1.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec3(-22.79, -662.391, 8523.3197), vec3(-6868.6345, -41.76, -638.304))) : 0.0))), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, _GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(0.0, _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(70.14))), sqrt(1.0), sqrt(1.0)))), _GLF_IDENTITY(vec2(1.0, tan(0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, tan(_GLF_IDENTITY(0.0, (0.0) + log(1.0)))), clamp(vec2(1.0, tan(_GLF_IDENTITY(0.0, (0.0) + log(1.0)))), vec2(1.0, tan(_GLF_IDENTITY(0.0, (0.0) + log(1.0)))), vec2(1.0, tan(_GLF_IDENTITY(0.0, (0.0) + log(1.0)))))))))) + (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)), mix(vec2(_GLF_IDENTITY((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), (true ? (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) : _GLF_FUZZED(669.444)))))), bool(true))) / abs(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))) / 1.0)))[0], clamp((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), (true ? (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) : _GLF_FUZZED(669.444)))))), bool(true))) / abs(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))) / 1.0)))[0], (vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), (true ? (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) : _GLF_FUZZED(669.444)))))), bool(true))) / abs(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))) / 1.0)))[0], _GLF_IDENTITY((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), (true ? (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) : _GLF_FUZZED(669.444)))))), bool(true))) / abs(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))) / 1.0)))[0], max((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), (true ? (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) : _GLF_FUZZED(669.444)))))), bool(true))) / abs(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))) / 1.0)))[0], _GLF_IDENTITY((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), (true ? (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) : _GLF_FUZZED(669.444)))))), bool(true))) / abs(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))) / 1.0)))[0], (false ? _GLF_FUZZED(4.1) : (vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), (true ? (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) : _GLF_FUZZED(669.444)))))), bool(true))) / abs(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))) / 1.0)))[0])))))), _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(426.830), (vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.0), _GLF_FUZZED(-1.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.5) : 1.0))) * 1.0), 1.0)))))) / 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(0.0, _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(70.14))), sqrt(1.0), sqrt(1.0)))), _GLF_IDENTITY(vec2(1.0, tan(0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, tan(0.0)), min(vec2(1.0, tan(0.0)), vec2(1.0, tan(0.0)))))))) + (injectionSwitch.x)) > injectionSwitch.y)) || false), true, true)), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)), mix(vec2((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(426.830), _GLF_IDENTITY((vec2(1.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)), mat2x4(mat2x4(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)))))))), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)), mat2x4(mat2x4(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)))))))), (float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)), mat2x4(mat2x4(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0))))))))) / 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) / abs(1.0)))) / 1.0))), min((vec2(1.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)), mat2x4(mat2x4(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)))))))), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)), mat2x4(mat2x4(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)))))))), (float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)), mat2x4(mat2x4(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0))))))))) / 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) / abs(1.0)))) / 1.0))), (vec2(1.0, _GLF_IDENTITY(tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)), mat2x4(mat2x4(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)))))))), float(mat4x3(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)), mat2x4(mat2x4(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)))))))), (float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0)), mat2x4(mat2x4(transpose(mat4x2((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), 1.0, 0.0, exp(0.0), 1.0, 1.0, 1.0, 0.0))))))))) / 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 1.0, 1.0, 0.0, 0.0)))) / abs(1.0)))) / 1.0)))))[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(70.14))), sqrt(1.0), sqrt(1.0))), min(_GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(70.14))), sqrt(1.0), sqrt(1.0))), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(70.14))), sqrt(1.0), sqrt(1.0)))))), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(mat3x4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0)), (true ? float(mat3x4(tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0)) : _GLF_FUZZED(3182.9625))))), vec2(0.0, 0.0) + (vec2(1.0, tan(0.0)))))) + (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)), mix(_GLF_IDENTITY(vec2((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))[0], _GLF_FUZZED(0.0)), min(vec2((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))[0], _GLF_FUZZED(0.0)), _GLF_IDENTITY(vec2((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))[0], _GLF_FUZZED(0.0)), min(vec2((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))[0], _GLF_FUZZED(0.0)), vec2((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))[0], _GLF_FUZZED(0.0)))))), vec2(_GLF_FUZZED(426.830), (vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + sqrt(0.0)), clamp(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(70.14))), sqrt(1.0), sqrt(1.0)))), _GLF_IDENTITY(vec2(1.0, tan(0.0)), vec2(0.0, 0.0) + (vec2(1.0, tan(0.0)))))) + (injectionSwitch.x)) > injectionSwitch.y)) || false), true, true))), true && (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))))))) / abs(1.0)))) / 1.0)), mix(vec2((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(866.819))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(66194u))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(4.3, -62.25, -7944.5612).z)), float(injectionSwitch.y), bool(true)))) / 1.0)), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0), 1.0, 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0))), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(426.830), (_GLF_FUZZED(426.830)) / 1.0), (vec2(1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY((tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))), ((tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0))))) / 1.0) / 1.0)))[_GLF_IDENTITY(1, (1) | 0)]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(540.630)), bvec2(false, false))).x < injectionSwitch.y)))))), dot(vec2(0.0, _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(_GLF_IDENTITY(1.0, float(mat4x3(1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)))) : _GLF_FUZZED(70.14))), sqrt(1.0), sqrt(1.0)))), _GLF_IDENTITY(vec2(1.0, tan(0.0)), vec2(0.0, 0.0) + (vec2(1.0, tan(0.0)))))) + (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)), mix(vec2((vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))))) - 0.0), _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), min((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), clamp((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))))))) / abs(1.0)))) / 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(426.830), (vec2(1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY((tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0, (false ? _GLF_FUZZED(float(false)) : (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(0.0, _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(70.14))), sqrt(1.0), sqrt(1.0)))), _GLF_IDENTITY(vec2(1.0, tan(0.0)), vec2(0.0, 0.0) + (vec2(1.0, tan(0.0)))))) + (injectionSwitch.x)) > injectionSwitch.y)) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))))))) / abs(1.0)))) / 1.0)), mix(vec2((vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(866.819))), 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(66194u))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(4.3, -62.25, -7944.5612).z)), float(injectionSwitch.y), bool(true)))) / 1.0)), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(0.0), 1.0, 0.0, 0.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0))), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_IDENTITY(_GLF_FUZZED(426.830), (_GLF_FUZZED(426.830)) / 1.0), (vec2(1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY((tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))), ((tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0))))) / 1.0) / 1.0)))[_GLF_IDENTITY(1, (1) | 0)]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(540.630)), bvec2(false, false))).x < injectionSwitch.y)))))), dot(vec2(0.0, _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(_GLF_IDENTITY(1.0, float(mat4x3(1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0)))) : _GLF_FUZZED(70.14))), sqrt(1.0), sqrt(1.0)))), _GLF_IDENTITY(vec2(1.0, tan(0.0)), vec2(0.0, 0.0) + (vec2(1.0, tan(0.0)))))) + (injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, sqrt(1.0)), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)), mix(vec2((vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))))) - 0.0), _GLF_IDENTITY(tan(0.0), (tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), min((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), clamp((_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))), (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))))))) / abs(1.0)))) / 1.0)))[0], _GLF_FUZZED(0.0)), vec2(_GLF_FUZZED(426.830), (vec2(1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY((tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0, (false ? _GLF_FUZZED(float(false)) : (tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), transpose(transpose(mat2x3(0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))))))) / abs(1.0)))) / 1.0)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(0.0, _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(70.14))), sqrt(1.0), sqrt(1.0)))), _GLF_IDENTITY(vec2(1.0, tan(0.0)), vec2(0.0, 0.0) + (vec2(1.0, tan(0.0)))))) + (injectionSwitch.x)) > injectionSwitch.y)) || false), true, true), true)))))))))))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           barrier();
          }
        }
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uint(workgroup_size * workgroup_id)), (uint(uint(workgroup_size * workgroup_id))) / 1u))))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), injectionSwitch)).x > injectionSwitch.y))))
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_IDENTITY(true, false || (true))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))))) || false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
              }
             else
              {
               do
                {
                 barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) * 1u), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) * 1u)) >> (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), min(_GLF_IDENTITY((subgroup_id), max((subgroup_id), (subgroup_id))), (subgroup_id))), max(_GLF_IDENTITY((subgroup_id), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_id))))), (subgroup_id)))) / 1u) / 1u) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), min(max(subgroup_size, subgroup_size), max(subgroup_size, subgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y)))))) && true)) || false))
          barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false))))) || false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, ! (! (false))))), false || (bool((_GLF_IDENTITY(false, ! (! (false))))))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), true, true), false)))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), true, true), false))))))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(932.934)), vec2(_GLF_FUZZED(-4.9), (injectionSwitch)[1]), bvec2(false, true))).y))) && true), false, false, false)), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)).y))) && true) || false))))), false, _GLF_IDENTITY(false, ! (! (false))), false)))), ! _GLF_IDENTITY((! (bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7651.8791) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(54.93, 9806.5650, 9566.5172, 67.81, -205.544, 350.154, -5910.4786, 6.0, 7779.7213, 3.8, 30.60, -881.832)))))) > injectionSwitch.y))) && true, _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true) || false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false, (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false, (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false) || false), ! (! (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false, (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false) || false))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false, (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false) || false), ! (! (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false, (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false) || false)))))) && true))), true, true)))))))), false, false, false)))))), ((! (bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7651.8791) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4x3(injectionSwitch.x, 0.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4x3(54.93, 9806.5650, 9566.5172, 67.81, -205.544, 350.154, -5910.4786, 6.0, 7779.7213, 3.8, 30.60, -881.832)))))) > injectionSwitch.y))) && true, _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true) || false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false, (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false, (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false) || false), ! (! (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false, (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false) || false))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false, (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false) || false), ! (! (_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false, (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || false) || false)))))) && true))), true, true)))))))), false, false, false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), (! (_GLF_IDENTITY(false, false || (false)))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))), _GLF_IDENTITY(false, ! (! (false))), true)))))), (! (_GLF_IDENTITY(false, false || (false)))) || false))) || false))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), (! (_GLF_IDENTITY(false, false || (false)))) || false)), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! _GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))), _GLF_IDENTITY(false, ! (! (false))), true)))))), (! (_GLF_IDENTITY(false, false || (false)))) || false))) || false))))), true, true, true))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))), false)))))))) && true)))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_FALSE(false)))) && true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), false, false)))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))), false, false)))), false)))))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))).y)))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
          }
         else
          {
           do
            {
             atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(uint(virtual_gid), (_GLF_IDENTITY(true ? uint(virtual_gid) : _GLF_FUZZED(workgroup_base), (true ? uint(_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), virtual_gid))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) / 1u)))) ^ 0u), 4, 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), bool(bvec4(_GLF_DEAD(false), false, false, false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_val = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec2(2, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (2))) | (_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, min(2, 2))))))), uint(uint(atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec2(2, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (2))) | (_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, min(2, 2)))))))))), (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)), ((_GLF_IDENTITY(4, (4) << 0))) | ((_GLF_IDENTITY(4, (4) << 0))))))), ((_GLF_IDENTITY(4, (4) << 0))) - (58839 & 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), _GLF_IDENTITY((_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, 0 ^ ((4) << 0)))))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), ~ (~ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 ^ (4)))), 1, (0 & 38142))), (true ? int(ivec3(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, 0 ^ (4)))), 1, (0 & 38142))) : _GLF_FUZZED(-2727)))), (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)))))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0)))) >> 0) : _GLF_FUZZED(-18727)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0)), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0)), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0)), min(max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0)))) : _GLF_FUZZED(-2196)))))) : _GLF_FUZZED(-18727)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0)), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0)), int(ivec4(max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0)), 1, 1, 0)))) | (max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))))) : _GLF_FUZZED(_GLF_IDENTITY(-18727, 0 ^ (-18727))))))), min((_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), ~ (~ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)))))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), (4), (4))) << 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, (_GLF_IDENTITY((4) << 0, 0 | ((4) << 0))) << 0))))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) << 0))), min((~ (_GLF_IDENTITY(4, (4) << 0))), _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) << 0))), max((~ (_GLF_IDENTITY(4, (4) << 0))), (~ (_GLF_IDENTITY(4, (4) << 0)))))))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727))))), _GLF_IDENTITY((_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), ~ _GLF_IDENTITY((~ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_IDENTITY(_GLF_FUZZED(-18727), (_GLF_FUZZED(-18727)) * 1)))), ((~ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_IDENTITY(_GLF_FUZZED(-18727), (_GLF_FUZZED(-18727)) * 1))))) << 0))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), int(ivec3(_GLF_IDENTITY(4, (4) << 0), 1, 0))) : _GLF_FUZZED(87766))), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) << 0), 0))))) : _GLF_FUZZED(-18727)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(4, (4) << 0)) | (_GLF_IDENTITY(4, (4) << 0))), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) << 0, int(_GLF_IDENTITY(ivec3((4) << 0, (1 | 1), 0), (ivec3((4) << 0, (1 | 1), 0)) + ivec3(0, 0, 0))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727))))), int(int((_GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) << 0))), min((~ (_GLF_IDENTITY(4, (4) << 0))), (~ (_GLF_IDENTITY(4, (4) << 0)))))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), ~ (~ ((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), min(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, (4) << 0)))))), _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0)))))))) : _GLF_FUZZED(-18727)), clamp((true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) / 1), (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), int(_GLF_IDENTITY(ivec2((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) / 1), (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), 1), min(ivec2((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) / 1), (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), 1), ivec2((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) / 1), (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)), 1))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), _GLF_IDENTITY(4, (4) << 0))) : _GLF_FUZZED(-18727)))))))))))), 64, 2), clamp(atomicLoad(write_val, 4, 64, 2), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(virtual_gid))), (_GLF_IDENTITY(write_val, (write_val) | (_GLF_IDENTITY(write_val, min(write_val, write_val))))) - 0u), 4, 64, 2)) << _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u + (0u)), 0u ^ (_GLF_IDENTITY(0u, 0u + (0u)))))))), atomicLoad(write_val, 4, 64, 2)))) | _GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), max((atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (2) >> 0), 2, _GLF_IDENTITY(2, int(ivec3(2, 1, 0))))), 2)))))), (atomicLoad(write_val, 4, 64, 2)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0 * (_GLF_IDENTITY(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(5.1)), float(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), bool(true))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0 * (_GLF_IDENTITY(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(5.1)), float(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), bool(true))))), (_GLF_IDENTITY(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0 * (_GLF_IDENTITY(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(5.1)), float(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), bool(true)))))) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0 * (_GLF_IDENTITY(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(5.1)), float(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), bool(true))))), _GLF_IDENTITY(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0 * (_GLF_IDENTITY(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(float(_GLF_FUZZED(5.1)), float(float(vec2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), bool(true)))))))) > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     buf[virtual_gid] = uint(subgroupAllEqual(read_val));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)));
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.6) : injectionSwitch.y))))))
  barrier();
}
