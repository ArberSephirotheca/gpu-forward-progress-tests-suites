#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! _GLF_IDENTITY((bool(bvec4(false, false, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec4(bool(bvec2(true, true)), true, true, false))))), true && (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec4(bool(bvec2(true, true)), true, true, false))))))))), false))), ! (! ((bool(bvec4(false, false, true, false))))))), bool(bvec4(! (_GLF_IDENTITY((bool(bvec4(false, false, true, false))), ! (! ((bool(bvec4(false, false, true, false))))))), true, true, false))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.8)), float(injectionSwitch.y), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, tan(sqrt(0.0)), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, abs(1.0), 1.0)), clamp(float(mat4(injectionSwitch.x, 1.0, tan(sqrt(0.0)), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y), tan(0.0), 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0)), float(mat4(injectionSwitch.x, 1.0, tan(sqrt(0.0)), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0)), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, tan(sqrt(0.0)), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0), (mat4(injectionSwitch.x, 1.0, tan(sqrt(0.0)), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))) || false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), true))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), _GLF_IDENTITY(true, ! (! (true))), true, true)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), min(~ (gl_NumWorkGroups), _GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) | (~ (gl_NumWorkGroups))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)))).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x) << 0u, ((_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x) << 0u) | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(~ (~ (gl_NumWorkGroups)), (~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), clamp(~ (gl_NumWorkGroups), _GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), ~ (gl_NumWorkGroups))))) | uvec3(0u, 0u, 0u))).x, min(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), min(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) >> (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))))))))))) | uvec3(0u, 0u, 0u)) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec3(bvec3(bvec3(true, true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec3(bvec3(bvec3(true, true, false))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec3(bvec3(bvec3(true, true, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec3(bvec3(bvec3(true, true, false)))))))))))))))))))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, sqrt(tan(vec2(0.0, 0.0))) + (injectionSwitch)).x < injectionSwitch.y))))), true, false)), (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, true, false)))), ((! (bool(bvec4(false, true, true, false))))) || false))) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(true, true, false, false))), ! (_GLF_IDENTITY(! (! (bool(bvec4(true, true, false, false)))), ! (! (! (! (bool(bvec4(true, true, false, false))))))))), (! (bool(bvec4(true, true, false, false)))) && true)))), (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false, false, true))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.5) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))) && true)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.5) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))), true)))))), false))))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), _GLF_IDENTITY(false, ! (! (false)))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9284.1425) : injectionSwitch.x)) > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9284.1425) : injectionSwitch.x)) > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))))))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true)))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9284.1425) : injectionSwitch.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9284.1425) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9284.1425) : injectionSwitch.x))) / 1.0) : _GLF_FUZZED(-6809.8325))) > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9284.1425) : injectionSwitch.x)) > injectionSwitch.y) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false, true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))))))))), true, true)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)))).x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0)), (float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0))) / 1.0)), (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0)), (float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0))) / 1.0)), (injectionSwitch.x > injectionSwitch.y) || false)), true && (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0)), (float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0))) / 1.0)), (injectionSwitch.x > injectionSwitch.y) || false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0)), (float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0))) / 1.0)), (injectionSwitch.x > injectionSwitch.y) || false)), true && (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0)), (float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0))) / 1.0)), (injectionSwitch.x > injectionSwitch.y) || false)))), true), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0)), (float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0))) / 1.0)), (injectionSwitch.x > injectionSwitch.y) || false)), true && (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0)), (float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0))) / 1.0)), (injectionSwitch.x > injectionSwitch.y) || false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0)), (float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0))) / 1.0)), (injectionSwitch.x > injectionSwitch.y) || false)), true && (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0)), (float(mat3(injectionSwitch.y, 0.0, sin(tan(0.0)), 0.0, 0.0, log(1.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0))) / 1.0)), (injectionSwitch.x > injectionSwitch.y) || false)))), true), false)))))))) || false))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false))), (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, true && (false))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false))))), false, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3917.3780)), bool(false))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3917.3780)), bool(false))) > injectionSwitch.y))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) || false))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true))), true)))), true)))))))))))), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9284.1425) : injectionSwitch.x)) > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(900.411))) > injectionSwitch.y) || false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) || false))), false, true)))))))))), true, true)))))), false || (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && ((! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), false, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))), true)))))))))))), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2.1))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), (mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, tan(0.0), 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))), vec2(0.0, 0.0))))) * mat4(1.0)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.9), _GLF_FUZZED(726.907)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-44.74), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-556.019)), bvec2(true, false)))), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-68.18), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.5)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(-44.74), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-556.019)), bvec2(true, false))))) + vec2(0.0, 0.0)))).x > injectionSwitch.y) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9284.1425) : injectionSwitch.x)) > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))))))))), true, true)))))), false || ((bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && ((! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-55.06))), (injectionSwitch.x > injectionSwitch.y) || false))))))), false, true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))), mat2(_GLF_IDENTITY(mat3x4(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), transpose(transpose(mat3x4(mat2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))))))))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))), true)))))))))))), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), (mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))) * mat4(1.0)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) || false)) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-44.74), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-556.019)), bvec2(true, false)))), (vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-44.74), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-556.019)), bvec2(true, false))))) + vec2(0.0, 0.0)))).x > injectionSwitch.y) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9284.1425) : injectionSwitch.x)) > injectionSwitch.y) || false)), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, true && (false)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), false, true)))))))))), true, true)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)), mix(vec2((vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))[0], _GLF_FUZZED(5251.9774)), vec2(_GLF_FUZZED(-2221.0524), (vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))).y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), false))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> uvec3(0u, 0u, 0u)).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_size) : workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))) || false, false || ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))) || false))), bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((9718.2725 + 69.78))), bool(false))) < injectionSwitch.y)), true, false)))))), ! (! (false))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) | (workgroup_size))) * 1u))) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, min(0u, 0u)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), clamp((1u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u)))) | ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))), (1u << _GLF_IDENTITY(uint(7u), uint(7u))))), max((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u))))) / (1u ^ 0u))), (1u << _GLF_IDENTITY(uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED((++ write_val)))), (_GLF_IDENTITY(7u, ~ (~ (7u)))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)))))) * (workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (~ (_GLF_IDENTITY(uint(7u), (false ? _GLF_FUZZED(_GLF_IDENTITY(atomicOr(write_val, num_workgroup), (false ? _GLF_FUZZED(workgroup_size) : atomicOr(write_val, num_workgroup)))) : uint(7u)))))), (false ? _GLF_FUZZED(uaddCarry(subgroup_local_id, packSnorm2x16(injectionSwitch), subgroup_local_id)) : uint(7u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | 0u)), (uint(_GLF_IDENTITY(7u, (7u) | 0u))) - 0u))) * (workgroup_id)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(workgroup_size)))) | 0u)))) * (workgroup_id))), uint(uvec2(~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1u << _GLF_IDENTITY(uint(7u), uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u) | 0u, (false ? _GLF_FUZZED(subgroup_size) : (7u) | 0u)))))) * (workgroup_id))), 0u)))), max(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u))), max((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u))), 0u ^ ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))))))) * (workgroup_id))), ((_GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) - 0u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id)))) | 0u), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) + 0u)))) >> 0u)) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) | ((7u))) | 0u)))) * (workgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) + 0u)))) >> 0u)) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) | ((7u))) | 0u)))) * (workgroup_id)), max(_GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) + 0u)))) >> 0u)) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) | ((7u))) | 0u)))) * (workgroup_id)), _GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) + 0u)))) >> 0u)) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) | ((7u))) | 0u)))) * (workgroup_id)))), _GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) + 0u)))) >> 0u)) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), ((7u)) | ((7u))) | 0u)))) * (workgroup_id))))), _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, 0u + (7u))) | _GLF_IDENTITY(0u, min(0u, 0u))), uint(uvec4(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, 0u + (7u))) | _GLF_IDENTITY(0u, min(0u, 0u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, 0u)))), uint(7u)), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, 0u + (7u))) | _GLF_IDENTITY(0u, min(0u, 0u))), uint(uvec4(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, 0u + (7u))) | _GLF_IDENTITY(0u, min(0u, 0u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, 0u)))), uint(7u)))), (1u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ 0u)) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY((7u) | 0u, 0u ^ ((7u) | 0u)), clamp((7u) | 0u, (7u) | 0u, (7u) | 0u)))))) * _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) + 0u)) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), max(_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u))), clamp(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u))), _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u))), (_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) | (_GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))))))) ^ (0u | 0u))) * (workgroup_id), clamp(((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * _GLF_IDENTITY((workgroup_id), 0u + ((workgroup_id))), _GLF_IDENTITY(((_GLF_IDENTITY(1u, (1u) >> 0u) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (true ? 7u : _GLF_FUZZED(subgroup_size)))) >> 0u))) + 0u))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id), max(((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (uint(7u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) + 0u))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id), ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, 0u + (0u))))))))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id))), ((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id))))), 0u), uvec2(0u, 0u) | (uvec2(~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))) | (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))))))), max(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u), (_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id), ~ (_GLF_IDENTITY(~ (((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))) | (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))))))), max(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u), (_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id)), clamp(~ (((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))) | (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))))))), max(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u), (_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id)), _GLF_IDENTITY(~ (((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))) | (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))))))), max(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u), (_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id)), min(~ (((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))) | (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))))))), max(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u), (_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id)), ~ (((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))) | (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))))))), max(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u), (_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id)))), ~ (((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u))), (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))) | (uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, clamp(7u, 7u, 7u))) | (7u)))))))), max(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u), (_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id)))))), clamp(((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u), uint(uint(_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))))))))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id), _GLF_IDENTITY(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))) : _GLF_FUZZED(subgroup_size), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))) : _GLF_FUZZED(subgroup_size)) ^ 0u))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id), max(((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id), ((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), uint(uvec4(~ (_GLF_IDENTITY(1u, min(1u, 1u))), 1u, 0u, (0u | 0u)))))) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, (7u) | (_GLF_IDENTITY(7u, (7u) ^ 0u))), _GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, uint(uvec2(7u, 1u)))) << 0u)))), (_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u))))))) + 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, (7u) | (_GLF_IDENTITY(7u, (7u) ^ 0u))), _GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, uint(uvec2(7u, 1u)))) << 0u)))), (_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u))))))) + 0u)) | 0u))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id), max(((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, 0u ^ (7u))), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id), ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? _GLF_IDENTITY(uint(7u), max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))) : _GLF_FUZZED(subgroup_size))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id)))) << 0u), ((_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) | 0u))) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u)), ~ (~ (max(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u)))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), max(uint(_GLF_IDENTITY(7u, (7u) ^ 0u)), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY((uint(7u)), ((uint(7u))) << 0u) + 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))))), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), max(uint(_GLF_IDENTITY(7u, (7u) ^ 0u)), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY((uint(7u)), ((uint(7u))) << 0u) + 0u))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))) - 0u)))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id))))), 0u)))))), (0u | _GLF_IDENTITY(0u, (0u) * 1u)) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, uint(uvec3(7u, 0u, 0u)))), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))), min(((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u) | 0u, (_GLF_IDENTITY((7u) | 0u, min((7u) | 0u, (7u) | 0u))) | 0u))))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))))) * (workgroup_id))), uint(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(_GLF_IDENTITY(7u, min(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(num_workgroup) : 7u)), 7u)))) | (uint(7u))))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, _GLF_IDENTITY(uint(uvec4(7u, 1u, 0u, 0u)), (uint(uvec4(7u, 1u, 0u, 0u))) / 1u))) | (7u)), (7u) | 0u)), ~ (~ (uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((7u), (_GLF_IDENTITY((7u), ((7u)) | ((7u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u))))))) * (workgroup_id)), ~ (~ (_GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, _GLF_IDENTITY(_GLF_IDENTITY((7u), ((7u)) << 0u), ((7u)) - 0u) | 0u)))) * _GLF_IDENTITY((workgroup_id), min((_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(uint(uint(workgroup_id)), 0u | (uint(uint(workgroup_id)))))), (workgroup_id)))))))), 0u)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) | 0u)), (uint(_GLF_IDENTITY(7u, (7u) | 0u))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u))), uint(8u)))))) * (workgroup_id))), uint(uvec2(~ (_GLF_IDENTITY(workgroup_id, ((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uint(uint(uint(uvec3(1u, 1u, 1u)))), (uint(uint(uint(uvec3(1u, _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, max(1u, 1u)))), 0u, 1u, 1u))), 1u))))) << 0u))) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) | 0u)))) * (workgroup_id))), 0u))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), _GLF_IDENTITY((true ? uint(_GLF_IDENTITY(uint(workgroup_base), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 0u, 0u)), clamp(uint(uvec4(workgroup_base, 1u, 0u, 0u)), uint(uvec4(workgroup_base, 1u, 0u, 0u)), uint(uvec4(workgroup_base, 1u, 0u, 0u))))), workgroup_base, workgroup_base))), (true ? uint(workgroup_base) : _GLF_FUZZED((-- num_workgroup)))), uint(workgroup_base)))) : _GLF_FUZZED(42387u)), ((true ? uint(uint(workgroup_base)) : _GLF_FUZZED(42387u))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)))), ~ (~ (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) || false))), true && (bool(bool(_GLF_IDENTITY(false, (false) || false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-24.40, -1226.6721)))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-222.124)), bool(false))), injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec3(bool(bvec3(false, true, false)), true, false)))))) && true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((434.619 * -4421.6797))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec4(-152.668, -93.97, _GLF_IDENTITY(8178.3605, (8178.3605) - 0.0), 10.64).p)), bool(false)))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(vec4(-152.668, _GLF_IDENTITY(-93.97, mix(float(_GLF_FUZZED(2095.9356)), float(-93.97), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(8178.3605, (8178.3605) - 0.0), (8178.3605) - 0.0), 10.64).p)), clamp(float(_GLF_FUZZED(vec4(-152.668, _GLF_IDENTITY(-93.97, mix(float(_GLF_FUZZED(2095.9356)), float(-93.97), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(8178.3605, (8178.3605) - 0.0), (8178.3605) - 0.0), 10.64).p)), float(_GLF_FUZZED(vec4(-152.668, _GLF_IDENTITY(-93.97, mix(float(_GLF_FUZZED(2095.9356)), float(-93.97), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(8178.3605, (8178.3605) - 0.0), (8178.3605) - 0.0), 10.64).p)), float(_GLF_FUZZED(vec4(-152.668, _GLF_IDENTITY(-93.97, mix(float(_GLF_FUZZED(2095.9356)), float(-93.97), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(8178.3605, (8178.3605) - 0.0), (8178.3605) - _GLF_IDENTITY(0.0, (0.0) - 0.0)), 10.64).p)))), (float(_GLF_FUZZED(vec4(-152.668, -93.97, _GLF_IDENTITY(_GLF_IDENTITY(8178.3605, _GLF_IDENTITY((8178.3605) - 0.0, clamp(_GLF_IDENTITY((8178.3605) - 0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (8178.3605) - 0.0 : _GLF_FUZZED(-0.6))), (8178.3605) - 0.0, (8178.3605) - 0.0))), (8178.3605) - 0.0), 10.64).p))) - 0.0), bool(false))))), float(_GLF_FUZZED(1.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 1.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(412.652), _GLF_FUZZED((-700.137 - -9973.3815))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false), true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), false))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
}
