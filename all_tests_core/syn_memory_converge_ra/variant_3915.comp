#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_size) : gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(4.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(4.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(4.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(125477u, min(_GLF_IDENTITY(125477u, (125477u) | (125477u)), 125477u)), 151253u, 150061u)) : _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), uint(_GLF_IDENTITY(7u, min(7u, 7u)))), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))))) << _GLF_IDENTITY(uint(7u), uint(7u)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(7u), uint(7u))))) | (workgroup_size));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y * workgroup_id, uint(uint(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.y * workgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, false))))))))), false, false, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-516.123) : (injectionSwitch.y)))), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(_GLF_IDENTITY(bool(bool(bvec2(true, false))), (bool(bool(bvec2(true, false)))) || false))))))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((vec4(7.1, 2758.9471, -8069.0581, -8.4) * 92.90).t), _GLF_FUZZED(-4.5)), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], (injectionSwitch)[1]), bvec2(true, true))).y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.3) : 0.0)), min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(0.0), float(_GLF_FUZZED(-669.266)), bool(false))))) + (_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.y), 0.0 + (_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y)))))), 0.0 + ((_GLF_IDENTITY((injectionSwitch.y), 0.0 + (_GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))))))))) / 1.0))))))) || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), min(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))) && true, false || ((false) && true)), (_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false), ! (! ((false)))) && _GLF_IDENTITY(true, ! (! (true)))))) || false)) && true))) || false, bool(bvec2((_GLF_IDENTITY(false, (false) && true)) || false, true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, true))) || false, true))), false, _GLF_IDENTITY(false, false || (false))))), false, true, false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, false || ((false) && true)), (_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false), ! (! ((false)))) && true))) || false)) && true))) || false, bool(bvec2((_GLF_IDENTITY(false, (false) && true)) || false, true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, true))) || false, true))), false, _GLF_IDENTITY(false, false || (false))))), false, true, false)))))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, false || ((false) && true)), (_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false), ! (! ((false)))) && true))) || false)) && true))) || false, bool(bvec2((_GLF_IDENTITY(false, (false) && true)) || false, true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, true))) || false, true))), false, _GLF_IDENTITY(false, false || (false))))), false, true, false))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, false || ((false) && true)), (_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false), ! (! ((false)))) && true))) || false)) && true))) || false, bool(bvec2((_GLF_IDENTITY(false, (false) && true)) || false, true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, true))) || false, true))), false, _GLF_IDENTITY(false, false || (false))))), false, true, false))))))), bool(bvec2(! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, false || ((false) && true)), (_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false), ! (! ((false)))) && true))) || false)) && true))) || false, bool(bvec2((_GLF_IDENTITY(false, (false) && true)) || false, true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) || false, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (false) && true)), false, true))) || false, true))), false, _GLF_IDENTITY(false, false || (false))))), false, true, false))))))), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))) || false)), true && (bool(_GLF_IDENTITY(false, (false) || false))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), true && (bool(_GLF_IDENTITY(false, (false) || false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), true, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.6)), float(injectionSwitch.y), bool(true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], (true ? _GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch[0])) : _GLF_FUZZED(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6))))), _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y)), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, true))), false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true, false))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), transpose(transpose(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0)))))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))))))))))))))[0], _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), float(mat4x3(max(0.0, 0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0), vec4(sqrt(0.0), 1.0, 0.0, 0.0)), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0), vec4(sqrt(0.0), 1.0, 0.0, 0.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))) + (injectionSwitch[0])) : _GLF_FUZZED(-8.6))), injectionSwitch[1])).x > injectionSwitch.y)), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], (true ? _GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch[0])) : _GLF_FUZZED(-8.6))), injectionSwitch[1])).x > injectionSwitch.y)), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, tan(0.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(16.75)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true, false))))))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.6)), float(injectionSwitch.y), bool(true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], (true ? _GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch[0])) : _GLF_FUZZED(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6))))), _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y)), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, true))), false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true, false))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), transpose(transpose(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0)))))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))))))))))))))[0], _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), float(mat4x3(max(0.0, 0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0), vec4(sqrt(0.0), 1.0, 0.0, 0.0)), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0), vec4(sqrt(0.0), 1.0, 0.0, 0.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))) + (injectionSwitch[0])) : _GLF_FUZZED(-8.6))), injectionSwitch[1])).x > injectionSwitch.y)), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], (true ? _GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch[0])) : _GLF_FUZZED(-8.6))), injectionSwitch[1])).x > injectionSwitch.y)), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, tan(0.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(16.75)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true, false))))))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.6)), float(injectionSwitch.y), bool(true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], (true ? _GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch[0])) : _GLF_FUZZED(_GLF_IDENTITY(-8.6, clamp(-8.6, -8.6, -8.6))))), _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.8)), float(injectionSwitch[1]), bool(true))))).x > injectionSwitch.y)), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, true))), false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true, false))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), transpose(transpose(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0)))))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))))))))))))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), transpose(transpose(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0)))))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))))))))))))), mix(vec2((vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), transpose(transpose(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0)))))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))))))))))))))[0], (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), transpose(transpose(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0)))))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))))))))))))))[1]), vec2(_GLF_FUZZED(791.312), _GLF_FUZZED(-7.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0)), (vec2(mat2x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), transpose(transpose(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0)))))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))))))))))))), mix(vec2((vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), transpose(transpose(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0)))))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))))))))))))))[0], (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0)))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(1.0, (1.0) / 1.0))))))))), transpose(transpose(mat3x4(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0)))))), (false ? _GLF_FUZZED(mat3x4(7.1, -8589.2418, 1.4, 53.92, -1.4, -7.3, 557.387, 70.85, -4.2, 0.7, -8785.3465, 8.6)) : mat3x4(injectionSwitch, 0.0, abs(abs(1.0)), 1.0, 0.0, exp(0.0), sqrt(1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))))))))))))))[1]), vec2(_GLF_FUZZED(791.312), _GLF_FUZZED(-7.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), determinant(mat2(0.0, 0.0, sqrt(1.0), 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0))) + vec2(0.0, 0.0))))[_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(0), int(0))))], _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), float(mat4x3(max(0.0, 0.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0), vec4(sqrt(0.0), 1.0, 0.0, 0.0)), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 1.0)), 0.0, 1.0, 1.0), vec4(sqrt(0.0), 1.0, 0.0, 0.0))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))) + (injectionSwitch[0])) : _GLF_FUZZED(-8.6))), injectionSwitch[1])).x > injectionSwitch.y)), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(9.4, -6.3).y)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), true, false))))))))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], (true ? _GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(0.0, max(0.0, 0.0)) + (injectionSwitch[0])) : _GLF_FUZZED(-8.6))), injectionSwitch[1])).x > injectionSwitch.y)), true, false)), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, tan(0.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(16.75)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), sqrt(tan(0.0)))))) > injectionSwitch.y)), true, false))))))))), _GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(-8.6))), injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], float(vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0])), 0.0))) : _GLF_FUZZED(-8.6))), injectionSwitch[1])) - vec2(0.0, 0.0))).x > injectionSwitch.y)), true, false)), (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? injectionSwitch[0] : _GLF_FUZZED(-8.6))), injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0])), (true ? _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0])) : _GLF_FUZZED(746.514))), _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0])), _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0])))), 0.0))) : _GLF_FUZZED(-8.6))), injectionSwitch[1])) - vec2(0.0, 0.0))).x > injectionSwitch.y)), true, false))) || false), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))))), ! (! (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) && true))), (injectionSwitch.x > injectionSwitch.y)), true, false))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-763.822))) > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))) + 0u), (workgroup_base + subgroup_base) * 1u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), uint(uint(workgroup_base + subgroup_base)))), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(workgroup_base + subgroup_base)))), 0u, 1u))) | (workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u | (subgroup_base), (_GLF_IDENTITY(0u | (subgroup_base), max(0u | (subgroup_base), 0u | (subgroup_base)))) << 0u)), uint(uint(workgroup_base + subgroup_base)))), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(workgroup_base + subgroup_base)))), 0u, 1u))) | (workgroup_base + subgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), uint(uint(workgroup_base + subgroup_base)))), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(workgroup_base + subgroup_base)))), 0u, 1u))) | (workgroup_base + subgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), uint(uint(workgroup_base + subgroup_base)))), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(workgroup_base + subgroup_base)))), 0u, 1u))) | (workgroup_base + subgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), uint(uint(workgroup_base + subgroup_base)))), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(workgroup_base + subgroup_base)))), 0u, 1u))) | (workgroup_base + subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))) * _GLF_IDENTITY(1u, ~ (~ (1u)))))))), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(workgroup_base + subgroup_base)))), 0u, 1u))) | (workgroup_base + subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), uint(uint(workgroup_base + subgroup_base)))), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(workgroup_base + subgroup_base)))), 0u, 1u))) | (workgroup_base + subgroup_base)))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), uint(uint(workgroup_base + subgroup_base))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), uint(uint(workgroup_base + subgroup_base)))) >> 0u)), uint(uvec3((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uint(workgroup_base + subgroup_base)))), 0u, 1u))) | (workgroup_base + subgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.9))) > injectionSwitch.y)) ? _GLF_FUZZED(write_val) : GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0], (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.9))) > injectionSwitch.y)) ? _GLF_FUZZED(write_val) : GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[0]) << 0u))), GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size[1])).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) | (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x))) ^ (167872u & 0u)), (GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x) | _GLF_IDENTITY((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x), ~ (~ ((GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x))))), _GLF_IDENTITY(GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x, (false ? _GLF_FUZZED(workgroup_base) : GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x)), GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size.x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) || false)) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), true)), true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4.9) : 1.0))) > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), true, true))) && true)) || false)), true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))), false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(4.4, -889.735, 7.1).b)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4325.0124)), float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(true)))), float(mat4x2(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4325.0124)), float(injectionSwitch.y), bool(true)))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, abs(0.0), 1.0))), bool(true)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), max(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, (2) / (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)) | 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(write_val, 4, 64, 2)) << (0u | 0u)), 0u ^ (atomicLoad(write_val, _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), 4)), min(4, 4)))), _GLF_IDENTITY(1, min(1, 1)), 1, 0))), 64, 2))), atomicLoad(write_val, 4, 64, 2), _GLF_IDENTITY(atomicLoad(write_val, 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), 2), (atomicLoad(write_val, 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (64) * 1), 64)), _GLF_IDENTITY(2, min(2, 2)))) | (atomicLoad(write_val, 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), max(_GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), (_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64))) - 0), 1, 1, 1), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), (_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64))) - 0), 1, 1, 1)) - ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), (_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64))) | 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 2))))), ~ (~ (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, (2) / (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1)) | 1))), clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u ^ (atomicLoad(write_val, _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), 4)), min(4, 4)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), 4)), min(4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), 4)), min(4, 4))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), 4)), min(4, 4)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7944) : _GLF_IDENTITY(4, clamp(4, 4, 4)))))), min(4, 4)))))))), _GLF_IDENTITY(1, min(1, 1)), 1, 0))), 64, 2))), atomicLoad(write_val, 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), 2), (atomicLoad(write_val, 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), _GLF_IDENTITY(2, min(2, 2)))) | (atomicLoad(write_val, 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), 2))), ~ (~ (_GLF_IDENTITY(atomicLoad(write_val, 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), 2), (atomicLoad(write_val, 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), _GLF_IDENTITY(2, min(2, 2)))) | (atomicLoad(write_val, 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, (64) * 1), 64)), 2))))))))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(write_val, 4, 64, 2)) | (atomicLoad(write_val, 4, 64, 2)))) - 0u)));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-853.774))) > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-853.774))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))) && true))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false), true, false), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false), true, false), false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false), true, false), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false), true, false), false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false), true, false), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false), true, false), false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))))))), false || (! (false)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false), true, false), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false), true, false), false)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (! (false)))))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false), true, false), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3((false), true, false), false)), true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))))))), false || (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, false)))))))) && true)) || false)) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec2(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, true))), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x2(injectionSwitch[0], 0.0, 0.0, 0.0, 1.0, cos(0.0)))), injectionSwitch[1])).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (max(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).x) - 0.0))) / 1.0))) / 1.0) < injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))) && true)))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED((-57.08 - -3.0))), bvec2(false, false))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-9.9), (false ? _GLF_FUZZED(315.297) : _GLF_FUZZED(-9.9))), _GLF_FUZZED((_GLF_IDENTITY(-57.08 - -3.0, (false ? _GLF_FUZZED(-7.4) : -57.08 - -3.0))))), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED((_GLF_IDENTITY(-57.08, (-57.08) + 0.0) - -3.0))), _GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), false)))), true, false))))))).x)) < injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), min(int(ivec2(0, 0)), int(ivec2(0, 0)))))) ^ 0)], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-9.9, max(-9.9, -9.9))), _GLF_FUZZED((-57.08 - -3.0))), vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED((-57.08 - -3.0))))), bvec2(false, false))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))))[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED((-57.08 - -3.0))), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED((-57.08 - -3.0))), _GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), true)), false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), true, false)), true)))))))).x)) < injectionSwitch.y))), false)), false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, true && (false))))))), bool(bool(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec3((false) || false, true, false)), (bool(bvec3((false) || false, true, false))) || false))), bool(_GLF_IDENTITY(bool(false), true && _GLF_IDENTITY((bool(false)), true && ((bool(false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((false) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), ! (! (bool(bvec3((false), true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) && true)))))))) || false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), false || (_GLF_IDENTITY(! (! (bool(bool(false)))), true && (! (! (bool(bool(false)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((6.9 / -8097.8127))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), vec4(mat3x4(vec4(0.0, 0.0, 1.0, 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))))), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (false ? _GLF_FUZZED(364.357) : 0.0))) + (mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0))))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), 0.0 + ((0.0))) * 1.0), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), 0.0 + ((0.0))) * 1.0), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), (vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), 0.0 + ((0.0))) * 1.0), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), 0.0 + ((0.0))) * 1.0), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2268.1238) : 1.0)))))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), 0.0 + ((0.0))) * 1.0), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.1) : 0.0)), 0.0)), max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.1) : 0.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.1) : 0.0)), 0.0)), max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.1) : 0.0)), 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.1) : 0.0)), 0.0)))))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(6.5, -5.3, 6.1, 37.76).z) : 0.0))), (true ? _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(6.5, -5.3, 6.1, 37.76).z) : 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec4(6.5, -5.3, 6.1, 37.76).z) : 0.0))))) : _GLF_FUZZED(vec2(-7.1, 45.38)))))), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0)))).y))), false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY(~ (~ (read_val)), 0u + (_GLF_IDENTITY(~ (~ (read_val)), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (read_val)), (_GLF_IDENTITY(~ (~ (read_val)), (~ (~ (read_val))) | _GLF_IDENTITY((~ (~ (read_val))), clamp((~ (~ (read_val))), (~ (~ (read_val))), (~ _GLF_IDENTITY((~ (read_val)), max((~ (read_val)), (~ (read_val))))))))) >> 0u), (_GLF_IDENTITY(~ (~ (read_val)), (_GLF_IDENTITY(~ (~ (read_val)), (~ (~ (read_val))) | _GLF_IDENTITY((~ (~ (read_val))), clamp((~ (~ (read_val))), (~ (~ (read_val))), (_GLF_IDENTITY(~ (~ (read_val)), uint(_GLF_IDENTITY(uvec3(~ (~ (read_val)), 0u, 1u), (_GLF_IDENTITY(uvec3(~ (~ (read_val)), 0u, 1u), uvec3(uvec3(uvec3(~ (~ (read_val)), 0u, 1u))))) | (uvec3(~ (~ (read_val)), 0u, 1u)))))))))) >> 0u)) + 0u), ~ (_GLF_IDENTITY(~ (read_val), min(~ (read_val), ~ (read_val))))))))), read_val, read_val)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY(~ (~ (read_val)), 0u + (_GLF_IDENTITY(~ (~ (read_val)), max(~ (~ (read_val)), ~ (~ (read_val))))))), read_val, read_val)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(bitfieldReverse(subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((read_val), clamp(_GLF_IDENTITY((read_val), _GLF_IDENTITY(((read_val)), max(_GLF_IDENTITY(((read_val)), (((read_val))) | (((read_val)))), ((read_val)))) - 0u), (read_val), (read_val)))), 0u + (_GLF_IDENTITY(~ (~ (read_val)), max(~ (~ (read_val)), ~ (~ (read_val)))))), max(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((read_val), clamp(_GLF_IDENTITY((read_val), ((read_val)) - 0u), (read_val), (read_val)))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (read_val)), 0u ^ (_GLF_IDENTITY(~ (~ (read_val)), min(~ (~ (read_val)), ~ (~ (read_val)))))), max(~ (~ (read_val)), ~ (~ (read_val)))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((read_val), clamp(_GLF_IDENTITY((read_val), ((read_val)) - 0u), (read_val), (read_val)))), 0u + (_GLF_IDENTITY(~ (~ (read_val)), max(~ (~ (read_val)), ~ (~ (read_val))))))))), read_val, read_val)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (true ? read_val : _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(subgroup_local_id), ~ (~ (bitfieldReverse(subgroup_local_id))))))), _GLF_IDENTITY(~ (~ (read_val)), 0u + (_GLF_IDENTITY(~ (~ (read_val)), max(~ (~ (read_val)), ~ (~ (read_val))))))), read_val, read_val)))))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, _GLF_IDENTITY(~ (~ (read_val)), clamp(~ (~ (read_val)), _GLF_IDENTITY(~ (~ (read_val)), (~ (~ (read_val))) | 0u), ~ (~ (read_val))))), read_val, _GLF_IDENTITY(read_val, 1u * (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(subgroup_size) : read_val)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(0u, 0u) | (uvec2(_GLF_IDENTITY(read_val, clamp(_GLF_IDENTITY(read_val, ~ (~ (read_val))), read_val, _GLF_IDENTITY(read_val, 1u * (_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(subgroup_size) : read_val)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0u))));
}
