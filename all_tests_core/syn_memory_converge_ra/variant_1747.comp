#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true && (! (injectionSwitch.x > injectionSwitch.y))))), true, false, true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y))) && true)) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (true))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), true, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), true, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4((_GLF_IDENTITY(false, false || (false))), true, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize[2], (true ? gl_WorkGroupSize[2] : _GLF_FUZZED(num_workgroup)))) >> 0u)))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (_GLF_IDENTITY(gl_WorkGroupSize[2], (true ? gl_WorkGroupSize[2] : _GLF_FUZZED(num_workgroup)))) >> 0u))))) / uvec3(1u, 1u, 1u))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((4.8 - injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)) && true)))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false, false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true), bvec2(bvec2(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true))))), (bool(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true), bvec2(bvec2(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true)))))) || false))))) || false))))))))) || false), false)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)) && true)))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false, false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true), bvec2(bvec2(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true))))), (bool(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true), bvec2(bvec2(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true)))))) || false))))) || false))))))))) || false), false)))), false)), true && (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)) && true)))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false), false, false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true), bvec2(bvec2(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true))))), (bool(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true), bvec2(bvec2(bvec2(! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))))), true)))))) || false))))) || false))))))))) || false), false)))), false)))))), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))), true, false)))))) && true))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false)))))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false))))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, false))), true, false))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true, false, false))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), false, true, false))))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false))))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false))) || false), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true, false, false))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), false, true, false))))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false))))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false))) || false), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true, false, false))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), false, true, false))))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false))))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false))) || false), false)))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true, false, false))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), false, true, false))))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false))))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false))) || false), false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true, false, false))))))))), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))) || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), false, true, false))))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(_GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false, false))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, true && (false)), false))))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false, ((_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), false)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (! (false)))))), false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))), false)), (bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))), false))) || false))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), false)))), false, false)), false || (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! _GLF_IDENTITY((bool(bvec2(true, false))), ((bool(bvec2(true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), ! (! (! (! (! (true)))))))))))))))), false)))), false, false))))))))), true && ((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false)))))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), false || (! (! (bool(bool(false)))))))), false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))), false, false, false)))) || false)), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) || false)))))), bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), true && (bool(bvec4(true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), bool(bvec3((! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), true, false))))) || false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))))))) || false)))) && true) || false), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))))))), false)))), false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false)))))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))), false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY((! (false)), ((! (false))) && true)))), true, false, false))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), true, false, false))))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))), bool(bvec3(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, false)))), true, false))))) && (false))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false)))))))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), bool(bvec4(false, true, false, false))))))))))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))) || false))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))) || false)))))) || false))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && ((_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))) || false))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(true, false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), false, false))))) || false)))))) || false))) || false), false), true, true))))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || ((_GLF_IDENTITY(true, ! (! (true))))))))))), false)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), true, false))), ! (! (true))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), (true && (_GLF_IDENTITY(true, ! (! (true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) || false)) || _GLF_IDENTITY(false, ! (! (false)))), false, false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false)), (bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false))) && true)) && true))))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), false, false))))))), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), false || ((_GLF_IDENTITY(true, ! (! (true))))))))))), false)))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), true, false))), ! (! (true))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (_GLF_IDENTITY(true, ! (! (true)))), (true && (_GLF_IDENTITY(true, ! (! (true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))) || false)) || _GLF_IDENTITY(false, ! (! (false)))), false, false)))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false)), (bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false))) && true)) && true))))), false || (! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), false, false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), false, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.8) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) / 1u)) << uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), float(mat3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 1.0, cos(log(1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) >> (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), uint(uvec4(0u >> _GLF_IDENTITY(uint(6u), uint(6u)), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) + 0u)) ^ (0u ^ 0u)), (1u | 1u)))))) : subgroup_size), clamp((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) : subgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) : subgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(uint(6u), uint(6u)) : _GLF_FUZZED(workgroup_base))))) : subgroup_size))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) : subgroup_size, max(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) : subgroup_size, false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))) : subgroup_size))), min((false ? _GLF_FUZZED(workgroup_size) : subgroup_size), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(workgroup_size) : subgroup_size))))))))) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(1u * (subgroup_base), ~ (~ (1u * (subgroup_base))))) + subgroup_local_id, 0u | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 1u * _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), max(~ ((subgroup_base)), ~ ((subgroup_base))))))), (workgroup_base + _GLF_IDENTITY(subgroup_base, 1u * _GLF_IDENTITY((subgroup_base), ~ (_GLF_IDENTITY(~ ((subgroup_base)), max(~ ((subgroup_base)), ~ (_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) - 0u)) | (_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base))))) ^ 0u)))))))))) << 0u) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec2(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false))) || false), ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)), (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true))) || false))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), _GLF_IDENTITY(false, ! (! (false))), false))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))) && true) && true)))))), false), false, false))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))) && true) && true)))))), false), false, false)))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))) && true) && true)))))), false), false, false)))))))), true))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false))))))))), true)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false)))))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false)))))), false)))), true)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)) || false))))))))), false), false, false))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bool(true))))), ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false))))))))), true)))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false))), true && ((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), ! (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))))))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)), (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true))) || false))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), _GLF_IDENTITY(false, ! (! (false))), false))))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))) && true) && true)))))), false), false, false))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))) && true) && true)))))), false), false, false)))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! (_GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))) && true) && true)))))), false), false, false)))))))), true))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false))))))))), true)))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false)))))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false)))))), false)))), true)))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), (! ((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)) || false))))))))), false), false, false))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bool(true))))), ! (! ((_GLF_DEAD(false)) && true)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (! (false)) && true))))) && true)))), false), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))) && true, ! _GLF_IDENTITY((! ((_GLF_DEAD(false)) && true)), true && ((! ((_GLF_DEAD(false)) && true)))))), false), false, false))))))))), true)))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false))), true && ((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (_GLF_IDENTITY(! ((_GLF_DEAD(false)) && true), ! (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))))))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))) || false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false))), (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) && true, _GLF_IDENTITY(! (! ((_GLF_DEAD(false)) && true)), (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)) && true)), false || (! (! ((_GLF_DEAD(false)) && true))))) || false))), false))), true && ((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))), false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) && true), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false)), _GLF_IDENTITY(true, (true) && true), false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), false || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || (_GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false)), _GLF_IDENTITY(true, (true) && true), false)), true && (bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false)), _GLF_IDENTITY(true, (true) && true), false))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (false || (false)))))), false)), (bool(bvec2(_GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), (false || (false)) || false)), true && (! (_GLF_IDENTITY(false || (false), (false || (false)) || false)))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), false || (false || (false)))))), (true && (_GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), false || (false || (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, true))))))), true, true))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true)))))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, true))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(false, true)), true, _GLF_IDENTITY(true, (true) && true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true)), true, true)))))))))))))), true, false)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(286.519, 2.4)) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) / determinant(_GLF_IDENTITY(mat2(1.0, cos(0.0), 0.0, 1.0), (true ? _GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-6373.6447) : cos(0.0))))), cos(0.0))), 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2(1.0, _GLF_IDENTITY(cos(0.0), clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-6373.6447) : cos(0.0))))), cos(0.0))), 0.0, 1.0) : _GLF_FUZZED(mat2(6.5, 59.98, 5900.1072, 591.193)))) : _GLF_FUZZED(mat2(2.8, -7713.2238, 73.31, 6569.7809)))))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, true, false)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), clamp(atomicLoad(write_val, 4, 64, 2), atomicLoad(write_val, 4, 64, 2), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)) << 0u, max((atomicLoad(write_val, 4, 64, 2)) << 0u, (atomicLoad(write_val, 4, 64, 2)) << 0u)), (_GLF_IDENTITY((atomicLoad(write_val, 4, _GLF_IDENTITY(64, (64) >> 0), 2)) << 0u, ((atomicLoad(write_val, 4, 64, 2)) << 0u) - 0u)) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, (0u & 83722u))), (uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, (0u & 83722u)))) | (uint(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, (0u & 83722u))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(asin(-722.784)))) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
