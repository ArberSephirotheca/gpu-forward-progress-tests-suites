#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), true, true, false)), false, true))), false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - 0.0), injectionSwitch.y))) - 0.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, bool(bool((injectionSwitch.x > injectionSwitch.y) && true)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, ((injectionSwitch.x > injectionSwitch.y) && true) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), true && ((false))))), false || (bool(bool(_GLF_IDENTITY((false), true && ((false)))))))) || false, (_GLF_IDENTITY((false), true && ((false))) || false) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true))) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0)) < injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))), true && ((! ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y))))))) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))) || false) && (_GLF_DEAD(false))), true, true, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-57.13)), _GLF_IDENTITY(vec2(_GLF_FUZZED(((0.5) - -871.090)), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-5.7) : (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec4((injectionSwitch), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 1.0)))), min(vec2(vec4((injectionSwitch), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 1.0)))), vec2(vec4((injectionSwitch), 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 1.0)))))))[1]))), clamp(vec2(_GLF_FUZZED(((0.5) - -871.090)), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-5.7) : (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(((0.5) - -871.090)), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-5.7) : (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(((0.5) - _GLF_IDENTITY(-871.090, (-871.090) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(_GLF_IDENTITY(-5.7, (false ? _GLF_FUZZED(9.4) : -5.7))) : (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))))), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), true))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))[1], min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))[1], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))[1]))), vec2(_GLF_FUZZED(-149.674), _GLF_FUZZED(82.80)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(971.492, -8358.2466)) : injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(971.492, -8358.2466)) : injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(971.492, -8358.2466)) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(971.492, -8358.2466)) : injectionSwitch.x))))) - _GLF_IDENTITY(length(abs(vec2(0.0, 0.0))), max(_GLF_IDENTITY(length(abs(vec2(0.0, 0.0))), max(length(abs(vec2(0.0, 0.0))), length(abs(vec2(0.0, 0.0))))), length(abs(vec2(0.0, 0.0)))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4813.3703) : injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(dot(971.492, -8358.2466)) : injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) || (false)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && ((injectionSwitch.x < injectionSwitch.y)))), true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), false))))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), false)))))))), false)))))))), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (false))), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(false, false || (false))), false, true), true)))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, false), false))))))), bool(bvec4(bool(bvec3(false, false, false)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), false, true))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), false)), false)))))))))), false))))))), bool(bvec4(bool(bvec3(false, false, false)), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false))))) || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (injectionSwitch.x > injectionSwitch.y))))), false, true))), true)))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true))))) || false), ! (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true))))) || false)))))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true))))) || false, ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true))))) || false), ! (! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true))))) || false)))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), ((bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false), false))))), _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false, false, false)))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false)))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false)))), true)))))) && true))))))) && _GLF_IDENTITY(true, ! (! (true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x) * determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(8.8), (vec4(1.0, 0.0, 1.0, 1.0))[1], _GLF_FUZZED(57.93), (vec4(1.0, 0.0, 1.0, 1.0))[3]), vec4((vec4(1.0, 0.0, 1.0, 1.0))[0], _GLF_FUZZED(3.5), (vec4(1.0, 0.0, 1.0, 1.0))[2], _GLF_FUZZED(4292.3225)), bvec4(true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true, false))))) : _GLF_FUZZED(-8669.6627))), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(269.800) : 1.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), 1.0, 1.0)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-29.26)), bool(false))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0))).x) * determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(269.800) : 1.0, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(269.800) : 1.0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(269.800) : 1.0)))))), _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4230.9908)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-29.26)), bool(false)))), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)))) - vec2(0.0, 0.0))).x) * determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(269.800) : 1.0, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(269.800) : 1.0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(269.800) : 1.0)))))), _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4230.9908)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), max(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 1.0, 0.0, 1.0, 1.0)))), float(_GLF_FUZZED(-29.26)), bool(false))))) * 1.0)), _GLF_IDENTITY(0.0 + (injectionSwitch.x), (true ? _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), max((0.0), _GLF_IDENTITY((_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.7)), bool(false))), 0.0)))) / 1.0)), ((0.0)) / 1.0))) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))) + (injectionSwitch.x) : _GLF_FUZZED(-5264.1547)))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED((+ 4.4))), bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), false))), injectionSwitch)).x), (min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(4.0) : 0.0)), max(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), (injectionSwitch.x) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), injectionSwitch.x)) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(134935u))), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)))), _GLF_IDENTITY(max(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(39.09)), float(0.0), bool(true))), _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(vec3(2.6, 6.2, 7198.9157).x) : _GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(9.9)), float(min(0.0, 0.0)), bool(true)))), min((false ? _GLF_FUZZED(vec3(2.6, 6.2, 7198.9157).x) : _GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(9.9)), float(min(0.0, 0.0)), bool(true)))), (false ? _GLF_FUZZED(vec3(2.6, 6.2, 7198.9157).x) : _GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_FUZZED(9.9)) + 0.0)), float(min(0.0, 0.0)), bool(true)))))))), 1.0, 0.0, 0.0))))), clamp(max(float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(122.597)), bool(false))))), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), 0.0)), _GLF_IDENTITY(min(0.0, 0.0), float(mat3x2(min(0.0, 0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0))))), max(float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0)))), 0.0, 0.0))))), max(float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)))))))), bool(true)), mix(float(_GLF_FUZZED(-896.736)), float(mix(float(_GLF_FUZZED(float(134935u))), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)))), _GLF_IDENTITY(max(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(39.09)), float(0.0), bool(true))), _GLF_IDENTITY(min(0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(vec3(2.6, 6.2, 7198.9157).x) : _GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(9.9)), float(min(0.0, 0.0)), bool(true)))), min((false ? _GLF_FUZZED(vec3(2.6, 6.2, 7198.9157).x) : _GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(9.9)), float(min(0.0, 0.0)), bool(true)))), (false ? _GLF_FUZZED(vec3(2.6, 6.2, 7198.9157).x) : _GLF_IDENTITY(min(0.0, 0.0), mix(float(_GLF_FUZZED(9.9)), float(min(0.0, 0.0)), bool(true)))))))), 1.0, 0.0, 0.0))))), clamp(max(float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(122.597)), bool(false))))), float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), float(mat3x2(min(0.0, 0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0))))), max(float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0)), (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0))) - 0.0)), float(_GLF_FUZZED(-7.5)), bool(false))))), 0.0, 0.0))))), max(float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)))))))), bool(true))), bool(true)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! (false)))) && true)) && true)), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) + 0u)) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), min(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, min((subgroup_id) + 0u, _GLF_IDENTITY((subgroup_id) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)))), ((subgroup_id) + 0u) | (_GLF_IDENTITY((subgroup_id) + 0u, ((subgroup_id) + 0u) / 1u)))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, 0u | (_GLF_IDENTITY((subgroup_id) + 0u, ((subgroup_id) + 0u) | ((subgroup_id) + 0u))))), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))) / 1u, min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) - 0u))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) ^ 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) ^ 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) ^ 0u))))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) ^ 0u), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) ^ 0u))) : _GLF_FUZZED(181285u))), (subgroup_id) + 0u)))) / _GLF_IDENTITY(1u, (1u) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, ((subgroup_id) + 0u) - 0u)), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))) / 1u) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))) / 1u)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, ((subgroup_id) + 0u) - 0u)), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) + 0u, min((subgroup_id) + 0u, (subgroup_id) + 0u)))))) / 1u) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)))) / 1u)) : _GLF_FUZZED(subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))))) / 1u))))) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) - 0u), _GLF_IDENTITY((min(0u, 0u)) << 0u, 0u | (_GLF_IDENTITY((min(0u, 0u)), min(_GLF_IDENTITY((min(0u, 0u)), 0u | ((min(0u, 0u)))), _GLF_IDENTITY((min(0u, 0u)), ~ (~ ((_GLF_IDENTITY(min(0u, 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldExtract(workgroup_base, -88589, 15799)) : _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(min(0u, 0u), (min(0u, 0u)) >> 0u))))))))))) << 0u)))), 0u)) ^ _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | 0u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (subgroup_id))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(~ (subgroup_id)), (false ? _GLF_FUZZED(atomicMin(workgroup_id, workgroup_size)) : _GLF_IDENTITY(uint(~ (subgroup_id)), 0u ^ (_GLF_IDENTITY(uint(~ (subgroup_id)), min(uint(~ (subgroup_id)), uint(~ (subgroup_id))))))))), clamp(uint(uint(~ (subgroup_id))), uint(uint(~ (subgroup_id))), uint(uint(~ (subgroup_id)))))))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)), (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY((subgroup_id) + 0u, min((subgroup_id) + 0u, _GLF_IDENTITY((subgroup_id) + 0u, clamp((subgroup_id) + 0u, (subgroup_id) + 0u, _GLF_IDENTITY((subgroup_id) + 0u, 0u | ((subgroup_id) + 0u))))))) : _GLF_FUZZED(workgroup_size))) >> 0u))))) | 0u)))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)))))), ~ (~ ((uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size))))))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size), max(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size), true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)))))))))), 0u | ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)), _GLF_IDENTITY(((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), clamp(uint(uint(~ _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))))), uint(uint(~ (subgroup_id))), uint(uint(~ (subgroup_id)))))))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)), (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY((subgroup_id) + 0u, min((subgroup_id) + 0u, _GLF_IDENTITY((subgroup_id) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp((subgroup_id) + 0u, (subgroup_id) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) + 0u, 0u | ((subgroup_id) + 0u))))))) : _GLF_FUZZED(workgroup_size))) >> 0u))))), clamp(((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), clamp(uint(uint(~ _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))))), uint(uint(~ (subgroup_id))), uint(uint(~ (subgroup_id)))))))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)), (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY((subgroup_id) + 0u, min((subgroup_id) + 0u, _GLF_IDENTITY((subgroup_id) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp((subgroup_id) + 0u, (subgroup_id) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) + 0u, 0u | ((subgroup_id) + 0u))))))) : _GLF_FUZZED(workgroup_size))) >> 0u))))), _GLF_IDENTITY(((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), clamp(uint(uint(~ _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))))), uint(uint(~ (subgroup_id))), uint(uint(~ (subgroup_id)))))))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)), (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY((subgroup_id) + 0u, min((subgroup_id) + 0u, _GLF_IDENTITY((subgroup_id) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp((subgroup_id) + 0u, (subgroup_id) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) + 0u, 0u | ((subgroup_id) + 0u))))))) : _GLF_FUZZED(workgroup_size))) >> 0u))))), max(((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), clamp(uint(uint(~ _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))))), uint(uint(~ (subgroup_id))), uint(uint(~ (subgroup_id)))))))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)), (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY((subgroup_id) + 0u, min((subgroup_id) + 0u, _GLF_IDENTITY((subgroup_id) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp((subgroup_id) + 0u, (subgroup_id) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) + 0u, 0u | ((subgroup_id) + 0u))))))) : _GLF_FUZZED(workgroup_size))) >> 0u))))), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), clamp(uint(uint(~ _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))))), uint(uint(~ (subgroup_id))), uint(uint(~ (subgroup_id)))))))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)), (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY((subgroup_id) + 0u, min((subgroup_id) + 0u, _GLF_IDENTITY((subgroup_id) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp((subgroup_id) + 0u, (subgroup_id) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) + 0u, 0u | ((subgroup_id) + 0u))))))) : _GLF_FUZZED(workgroup_size))) >> 0u))))))), ((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(uint(uint(~ (subgroup_id))), clamp(uint(uint(~ _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))))), uint(uint(~ (subgroup_id))), uint(uint(~ (subgroup_id)))))))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)), (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), _GLF_IDENTITY((subgroup_id) + 0u, min((subgroup_id) + 0u, _GLF_IDENTITY((subgroup_id) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), clamp((subgroup_id) + 0u, (subgroup_id) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)) + 0u, 0u | ((subgroup_id) + 0u))))))) : _GLF_FUZZED(workgroup_size))) >> 0u))))))) | 0u)))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)))))) | (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size), max(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size), true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) : _GLF_FUZZED(workgroup_size)))))))))))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), max((subgroup_id), _GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))))) + 0u)))), 0u | ((_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u))))) << 0u) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))) | (_GLF_IDENTITY(0u, (0u) | (0u)))))))) * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec3(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, true)), (bool(bvec3(true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, true))) && true))), false))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), subgroup_base)) : _GLF_FUZZED(workgroup_id))) + subgroup_local_id, (0u | 0u) | (workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))), subgroup_local_id, subgroup_local_id)), (0u | 0u) | (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(0u, (0u) / 1u)), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(subgroup_local_id)))))))), (0u | 0u) | (workgroup_base + subgroup_base + subgroup_local_id))), (false ? _GLF_FUZZED(atomicAdd(subgroup_local_id, workgroup_id)) : _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u | 0u) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u))))) >> 0u)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), (false ? _GLF_FUZZED((subgroup_id ^ subgroup_size)) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), clamp(clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))))) * 1u) + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (0u | 0u) | (workgroup_base + subgroup_base + subgroup_local_id))), (max(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(0u | 0u, (0u | 0u) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))), (_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))) * 1u) + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (0u | 0u) | (workgroup_base + subgroup_base + subgroup_local_id)))) - (0u & uvec3(46747u, 101964u, 144253u).p)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), ! (! (! (bool(bool(false)))))))))))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) | (ivec2(4, 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), int(_GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY((ivec2(4, 0)) | (ivec2(4, 0)), ((ivec2(4, 0)) | _GLF_IDENTITY((ivec2(4, 0)), ivec2(ivec4(_GLF_IDENTITY((ivec2(4, 0)), clamp(_GLF_IDENTITY((ivec2(4, 0)), min((ivec2(4, 0)), (ivec2(4, 0)))), (ivec2(4, 0)), (ivec2(4, 0)))), 1, 1)))) ^ ivec2(0, 0)))))) - 0)) << 0), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), _GLF_IDENTITY(vec3(mat3x2(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), 1.0, 0.0, 1.0)), (vec3(mat3x2(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), 1.0, 0.0, 1.0))) / vec3(1.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), _GLF_IDENTITY(vec3(mat3x2(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), 1.0, 0.0, 1.0)), (vec3(mat3x2(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), 1.0, 0.0, 1.0))) / vec3(1.0, 1.0, 1.0)))), min(vec2(_GLF_IDENTITY(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), _GLF_IDENTITY(vec3(mat3x2(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), 1.0, 0.0, 1.0)), (vec3(mat3x2(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), 1.0, 0.0, 1.0))) / vec3(1.0, 1.0, 1.0)))), vec2(_GLF_IDENTITY(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), _GLF_IDENTITY(vec3(mat3x2(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), 1.0, 0.0, 1.0)), (vec3(mat3x2(vec3((injectionSwitch) - vec2(0.0, 0.0), 1.0), 1.0, 0.0, 1.0))) / vec3(1.0, 1.0, 1.0)))))))))).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (bool(bvec2(_GLF_DEAD(false), false)))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false)), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (bool(bvec2(_GLF_DEAD(false), false))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (bool(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (bool(bvec2(_GLF_DEAD(false), false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (bool(bvec2(_GLF_DEAD(false), false)))))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (bool(bvec2(_GLF_DEAD(false), false))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (bool(bvec2(_GLF_DEAD(false), false)))))), false, false, true))))))))))), (bool(bvec2(_GLF_DEAD(false), false))) || false))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), false, false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-86.37, 770.011)))), injectionSwitch)).x < injectionSwitch.y))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, false || (false)))), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true)))) || false))), false, false, true)), ! _GLF_IDENTITY((! (bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false))), false, false, true)))), _GLF_IDENTITY(bool(bool((! (bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false))), false, false, true)))))), (bool(bool((! (bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))), bool(bvec2((bool(bvec2(_GLF_DEAD(false), false))), true))) || false))), false, false, true))))))) || false))))) || false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-429.557) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), (injectionSwitch.y) - 0.0)))), min((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-63.62)), vec2(_GLF_FUZZED(-2135.6894), (injectionSwitch)[1]), bvec2(false, true))), 0.0, cos(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0))).y, (injectionSwitch.y) - 0.0)))))) / 1.0))) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-429.557) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), (injectionSwitch.y) - 0.0)))), min((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, max((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0)))))))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-63.62)), vec2(_GLF_FUZZED(-2135.6894), (injectionSwitch)[1]), bvec2(false, true))), 0.0, cos(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0, 0.0))).y, (injectionSwitch.y) - 0.0)))))) / 1.0))) || (false))) && true)))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tan(distance(injectionSwitch, vec2(5.0, 88.88)))) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4(-1.7, 250.673, -725.349, -1310.4501, 43.33, -1.8, 15.71, 9.7, -36.76, -804.911, 871.363, 2.2, -1208.1776, -836.652, 3774.9678, -4.5) , injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
