#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat2x4 _f0;
 int _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 _GLF_struct_0 _f1;
 uint num_workgroup;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), true && (bool(bvec3(true, true, false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(bool(bool(true)))))))), (_GLF_IDENTITY(true, false || (true))) || false)) || false)), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false)), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false)), false)))), false))), false))))), _GLF_struct_0(mat2x4(1.0), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(0, max(0, 0)) | (1)))), ivec4(1)), _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(log(9.7)) : injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(injectionSwitch)) : injectionSwitch)).x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(log(9.7)) : injectionSwitch.x)))) > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 0.0)), clamp(float(vec3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 0.0)), float(vec3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(log(9.7)) : injectionSwitch.x), float(vec4((false ? _GLF_FUZZED(log(9.7)) : injectionSwitch.x), 0.0, 0.0, 0.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))) && true, ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))), ((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))) || false) && true), ! (! (! _GLF_IDENTITY(((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x < injectionSwitch.y))))))) || false)))) && true), bool(bvec4(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false, true)))))))))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))) && true, ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-0.9))) < injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x < injectionSwitch.y))))))))) && true, ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0)), (true ? float(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-9.3)))) < injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), ! (! (! _GLF_IDENTITY(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), bool(bvec4((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), bool(bvec4(bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), true, true, false))))) || false) && true), _GLF_IDENTITY(false, ! (! (false))), false, true))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), ! (! (! _GLF_IDENTITY(((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), bool(bvec4((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), bool(bvec4(bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), true, true, false))))) || false) && true), _GLF_IDENTITY(false, ! (! (false))), false, true)))))))), ! (! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))), ! (! ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))) && true), ! (! (! _GLF_IDENTITY(((_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))) && true), bool(bvec4((_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, false)), bool(bvec4(bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y))))), false, false, false)), true, true, false))))) || false) && true), _GLF_IDENTITY(false, ! (! (false))), false, true)))))))))))))))))) && true)))))))) ? subgroup_id : _GLF_FUZZED(write_val))) * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, false, false, true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), (! (! _GLF_IDENTITY((false), ! (! ((false)))))) || false))) || false, ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false)))))))))))))) || false, false, false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false)))))))))))))) || false, false, false, true)))), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false)))))))))))))) || false, false, false, true)))), false, true), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, false, false, true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), (! (! _GLF_IDENTITY((false), ! (! ((false)))))) || false))) || false, ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false)))))))))))))) || false, false, false, true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false)))))))))))))) || false, false, false, true)))), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false)))))))))))))) || false, false, false, true)))), false, true), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), false || (((false))))) || false)))))) || false, bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, _GLF_IDENTITY(false, (false) && true), false, true)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), (! (! _GLF_IDENTITY((false), ! (! ((false)))))) || false))) || false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false)))))))))))), (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true)), false || (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false))))))))))))) || false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false)))))))))))), (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true)), false || (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false))))))))))))) || false)))) || false) || false, false, false, true)))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false)))))))))))), (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true)), false || (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false))))))))))))) || false))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false)))))))))))), (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true)), false || (bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false))))))))))))) || false)))) || false) || false, false, false, true)))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false, bool(bvec4((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) && true)))), true && ((_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec2((false), true)))), (bool(_GLF_IDENTITY((false), bool(bvec2((false), true))))) && true)))))))))))))))) || false, false, false, true)))), false, true), bvec3(bvec4(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ((! _GLF_IDENTITY((false), ! (! ((false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), _GLF_IDENTITY(bool(bvec2((! ((false))), false)), bool(bvec2(bool(bvec2((! ((false))), false)), false))))), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && ((_GLF_IDENTITY((false), ! (! ((false)))))))))))))) || false, false, false, true)))), false, true), true)))))))))) || false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(write_val)), ((true ? subgroup_local_id : _GLF_FUZZED(write_val))) - 0u))) >> _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 1u, 1u)), uint(uvec2(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 1u)), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 1u))) | 0u)) - 0u), uint(uvec2(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 1u)), 0u))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), 1u, 1u)), uint(uvec2(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))), (uint(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))) | 0u)))))) >> 0u, 0u | (_GLF_IDENTITY((subgroup_local_id) >> 0u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u)) / 1u) >> 0u)), max((~ (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u)) / 1u) >> 0u)), (~ (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u)) / 1u) >> 0u)))))))), 1u, 1u)), 0u)))) | 0u)) ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, uint(uint(0u))))))) / 1u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (false ? _GLF_FUZZED(subgroup_base) : subgroup_local_id)))), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, uint(uvec2(0u | 0u, 1u)))), _GLF_IDENTITY(0u | ((0u | 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u | (_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u)))) | 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), clamp(0u | (_GLF_IDENTITY((0u | 0u), _GLF_IDENTITY((_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | _GLF_IDENTITY(0u, (0u) * 1u))))) | 0u)) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), max(max(0u, 0u), max(0u, 0u)))), min((_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u)))) | 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u)))) | 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, uint(uint(0u | 0u)))), (_GLF_IDENTITY((0u | _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, min(0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), max((0u | 0u), (_GLF_IDENTITY(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u | 0u))))), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (_GLF_IDENTITY(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u | 0u)))))) | (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (_GLF_IDENTITY(0u | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u | 0u)))))))) | 0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) | (0u))) / 1u), max(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY((0u | 0u), _GLF_IDENTITY((_GLF_IDENTITY((0u | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))))))), (_GLF_IDENTITY((0u | 0u), max((_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(subgroup_id)))), (0u | 0u)))) | _GLF_IDENTITY(0u, (0u) | (0u)))), (_GLF_IDENTITY((_GLF_IDENTITY((0u | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))))))), (_GLF_IDENTITY((0u | 0u), max((_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(subgroup_id)))), (0u | 0u)))) | _GLF_IDENTITY(0u, (0u) | (0u)))), ((_GLF_IDENTITY((0u | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))))))), (_GLF_IDENTITY((0u | 0u), max((_GLF_IDENTITY(0u | 0u, (true ? 0u | 0u : _GLF_FUZZED(subgroup_id)))), (0u | 0u)))) | _GLF_IDENTITY(0u, (0u) | (0u))))) >> (0u ^ 0u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) + 0u), 0u)))), min(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), min(0u, 0u)), 1u, 0u, 1u))) | (_GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), max(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) >> 0u), _GLF_IDENTITY((0u | 0u), 0u ^ ((0u | 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u)))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u)))) | 0u), (false ? _GLF_FUZZED((96523u >> subgroup_base)) : _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u)))) | 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u)))) | 0u), 0u ^ (_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u)))) | 0u)))))) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)) | (_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u)))) | 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), clamp(0u | (_GLF_IDENTITY((0u | _GLF_IDENTITY(0u, (0u) | 0u)), (_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u) | 0u), (0u | 0u)))) | 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), 0u | (_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u)))) | 0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), max(0u, 0u)))), 0u | (_GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, 0u | (0u | 0u))), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), (0u | 0u)))) | 0u)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))))))))), (0u | ((0u | _GLF_IDENTITY(0u, (0u) ^ 0u)))) | (0u | _GLF_IDENTITY((_GLF_IDENTITY((0u | 0u), clamp((0u | 0u), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) / 1u), (0u | 0u)))), (_GLF_IDENTITY(((0u | 0u)), min(((0u | 0u)), ((0u | 0u))))) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))), 0u | (_GLF_IDENTITY((0u | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) | (0u))) | 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (_GLF_IDENTITY(0u | 0u, 0u + (0u | 0u))), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) / 1u)))), ((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((0u | 0u), clamp((0u | 0u), (_GLF_IDENTITY(0u | 0u, 0u + (0u | 0u))), _GLF_IDENTITY((0u | 0u), ((0u | 0u)) / 1u))))) / 1u)))))), 1u, (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, min(0u, 0u)) | 0u), (~ (0u | 0u)) | 0u))), (_GLF_IDENTITY(0u | 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, min(0u, 0u)) | 0u), (~ (0u | 0u)) | 0u)))) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0 * (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_FUZZED(-3.9), min(_GLF_FUZZED(-3.9), _GLF_FUZZED(-3.9)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) / ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), min(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u + (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(17.61))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x), float(mat3(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, length(vec2(0.0, 0.0))))), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), injectionSwitch.x))), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-47.32)), bool(_GLF_IDENTITY(false, true && (false))))) : _GLF_FUZZED(6296.4245)), max((true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-47.32)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false))))) : _GLF_FUZZED(6296.4245)), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-44.71) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_FUZZED(-47.32)), bool(_GLF_IDENTITY(false, true && (false))))) : _GLF_FUZZED(6296.4245)))))))))) ^ (_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (0u | 0u), 1u, (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))), max(_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u))), (_GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))) - 0u))), 0u, 0u)))))))), _GLF_IDENTITY((uint(uvec4(subgroup_local_id, (_GLF_IDENTITY(0u | 0u, ~ (~ (_GLF_IDENTITY(0u | 0u, (0u | 0u) + (_GLF_IDENTITY(1u ^ 1u, 0u | (_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | 0u))))))))), 1u, (0u | 0u)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_base))), max(0u, 0u)), ((uint(uvec4(subgroup_local_id, (_GLF_IDENTITY(0u | 0u, ~ (~ (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | (0u | 0u)) | 0u), min((0u | 0u), (0u | 0u))) + (1u ^ 1u)))))), 1u, (0u | 0u)))) | _GLF_IDENTITY(0u, max(0u, 0u))) * 1u)))));
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, ~ (~ (4))))), 64, _GLF_IDENTITY(4, max(4, 4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) + 0), (true ? 64 : _GLF_FUZZED(9310))))), _GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, false))) ? 2 : _GLF_FUZZED(4607))), _GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], float(float(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0]))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(7352.5094), _GLF_FUZZED(vec4(-34.05, 89.50, 9.1, 0.3).t)), vec2(1.0, 1.0) * (vec2(_GLF_FUZZED(7352.5094), _GLF_FUZZED(vec4(-34.05, 89.50, 9.1, 0.3).t)))), bvec2(false, false))).y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 1.0))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 1.0))) > injectionSwitch.y, true, _GLF_IDENTITY(false, bool(bool(false)))))))), true, false)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 1.0))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 1.0))) > injectionSwitch.y, true, _GLF_IDENTITY(false, bool(bool(false)))))))), true, false)))), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(bool(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), true, false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), max(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), min(float(injectionSwitch.y), float(injectionSwitch.y))), 1.0, 0.0))), float(_GLF_FUZZED(8.2)), bool(false))))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), max(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), min(float(injectionSwitch.y), float(injectionSwitch.y))), 1.0, 0.0))), float(_GLF_FUZZED(8.2)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), max(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), min(float(injectionSwitch.y), float(injectionSwitch.y))), 1.0, 0.0))), float(_GLF_FUZZED(8.2)), bool(false))))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), max(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), min(float(injectionSwitch.y), float(injectionSwitch.y))), 1.0, 0.0))), float(_GLF_FUZZED(8.2)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), max(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), min(float(injectionSwitch.y), float(injectionSwitch.y))), 1.0, 0.0))), float(_GLF_FUZZED(8.2)), bool(false))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), max(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(injectionSwitch.y))), min(float(injectionSwitch.y), float(injectionSwitch.y))), 1.0, 0.0))), float(_GLF_FUZZED(8.2)), bool(false)))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), (bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))) || false), bool(bool(_GLF_IDENTITY(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), (bool((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))))) && true)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false), bool(_GLF_IDENTITY(bool((! (true))), false || (bool((! (true))))))), false || (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false), bool(_GLF_IDENTITY(bool((! (true))), false || (bool((! (true))))))), (! _GLF_IDENTITY(_GLF_IDENTITY((! (true)), ((! (true))) || false), bool(_GLF_IDENTITY(bool((! (true))), false || (bool(_GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), ! (! ((! (true))))), false, true, false))))))))) || false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(mix(-98.78, 3.8, -18.78)))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((mat3x2(-9.4, -27.93, -550.069, -1107.2408, -1.2, 5552.8222) * vec3(1.3, -15.04, 4569.0263))))), max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(0.0 + ((injectionSwitch.y)), (false ? _GLF_FUZZED(-8.9) : 0.0 + ((injectionSwitch.y))))), (injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_IDENTITY(mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false)), _GLF_IDENTITY((mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false))), clamp((mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false))), (mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false))), (mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false))))) * 1.0)), float(mat4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_IDENTITY(mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false)), _GLF_IDENTITY((mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false))), clamp((mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false))), (mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false))), (mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false))))) * 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, abs(abs(0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, abs(1.0), 0.0))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-70.76)), bool(false))), injectionSwitch.y))) - tan(0.0))))) - 0.0)))))))))) && true)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch + -5.8)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(0.0 + ((injectionSwitch.y)), (false ? _GLF_FUZZED(-8.9) : 0.0 + ((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), (injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))))), _GLF_IDENTITY(mix(float((injectionSwitch.y)), float(_GLF_IDENTITY(_GLF_FUZZED(-546.910), mix(float(_GLF_FUZZED((-7.0 - 805.661))), float(_GLF_FUZZED(-546.910)), bool(true)))), bool(false)), (mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false))) * 1.0)), (injectionSwitch.y))) - 0.0))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(0.0 + ((injectionSwitch.y)), (false ? _GLF_FUZZED(-8.9) : 0.0 + ((injectionSwitch.y))))), (injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_IDENTITY(mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false)), (mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false))) * 1.0)), (injectionSwitch.y))) - 0.0))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), min(_GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(0.0 + ((injectionSwitch.y)), (false ? _GLF_FUZZED(-8.9) : 0.0 + ((injectionSwitch.y))))), (injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y), (injectionSwitch.y)))), clamp(float(_GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y), (injectionSwitch.y)))), float(_GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y), (injectionSwitch.y)))), float(_GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y), (injectionSwitch.y)))))), float(_GLF_FUZZED(-546.910)), bool(false)), (mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-546.910)), bool(false))) * 1.0)), (injectionSwitch.y))) - 0.0))))), false, false))))))))))) && true)), true)))))))))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) ^ 0u), (uint(subgroupAllEqual(read_val))) / 1u);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) && true))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2910.3645) : injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(550.716), _GLF_FUZZED(5.2)), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(true, true)))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.0, -4.9)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(vec2(2264.3303, -9.8)) : injectionSwitch)).x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}
