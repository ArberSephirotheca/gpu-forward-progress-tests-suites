#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-881.079), _GLF_FUZZED(-602.071)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1))))])).x, mix(float(_GLF_FUZZED(120.817)), float(injectionSwitch.x), bool(true))), mix(float(_GLF_FUZZED(-700.828)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-993.181)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(6.2) : 1.0, max(false ? _GLF_FUZZED(6.2) : 1.0, false ? _GLF_FUZZED(6.2) : 1.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(acosh(-20.95)))), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-1.6)), bool(false))), 1.0))))), 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)) && true)), _GLF_IDENTITY(true && _GLF_IDENTITY(((false)), (((false))) && _GLF_IDENTITY(true, true && (true))), false || (true && _GLF_IDENTITY(_GLF_IDENTITY(((false)), (((false))) || false), ((_GLF_IDENTITY((false), false || ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && true)))))))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), ((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(846.355) : 0.0)))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), 0.0)), 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), ((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(846.355) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))))))))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), min(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(636.916) : max(1.0, 1.0))), max(1.0, 1.0))), max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-30.03)), bool(false))), 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), 0.0)), 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3(vec2(1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0)))))))), normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))))))), 1.0, 0.0, 0.0, 0.0, 0.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), ((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(846.355) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))))))))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), min(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(636.916) : max(1.0, 1.0))), max(1.0, 1.0))), max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-30.03)), bool(false))), 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), 0.0)), 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3(vec2(1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0)))))))), normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))))))), 1.0, 0.0, 0.0, 0.0, 0.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), ((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(846.355) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))))))))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), min(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(636.916) : max(1.0, 1.0))), max(1.0, 1.0))), max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-30.03)), bool(false))), 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), 0.0)), 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3(vec2(1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0)))))))), normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))))))), 1.0, 0.0, 0.0, 0.0, 0.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).y) / 1.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), ((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(846.355) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))))))))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), min(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(636.916) : max(1.0, 1.0))), max(1.0, 1.0))), max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-30.03)), bool(false))), 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), 0.0)), 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3(vec2(1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0)))))))), normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))))))), 1.0, 0.0, 0.0, 0.0, 0.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), ((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(846.355) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))))))))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), min(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(636.916) : max(1.0, 1.0))), max(1.0, 1.0))), max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-30.03)), bool(false))), 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), 0.0)), 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3(vec2(1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0)))))))), normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))))))), 1.0, 0.0, 0.0, 0.0, 0.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), ((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(846.355) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))))))))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), min(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(636.916) : max(1.0, 1.0))), max(1.0, 1.0))), max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-30.03)), bool(false))), 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), 0.0)), 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3(vec2(1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0)))))))), normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))))))), 1.0, 0.0, 0.0, 0.0, 0.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), ((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(846.355) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))))))))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), min(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(636.916) : max(1.0, 1.0))), max(1.0, 1.0))), max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-30.03)), bool(false))), 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), 0.0)), 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3(vec2(1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0)))))))), normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))))))), 1.0, 0.0, 0.0, 0.0, 0.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), ((vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(846.355) : _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.8))))))))))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.9) : 1.0)), 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(false))), 1.0, 0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(_GLF_IDENTITY(max(1.0, 1.0), min(_GLF_IDENTITY(max(1.0, 1.0), (false ? _GLF_FUZZED(636.916) : max(1.0, 1.0))), max(1.0, 1.0))), max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-30.03)), bool(false))), 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.2))), 0.0)), 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), min(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), clamp(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)), _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3(vec2(1.0, 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sqrt(1.0), 0.0, 1.0, 0.0)))))))), normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))) - vec2(0.0, 0.0)), vec2(mat4x3(injectionSwitch, 0.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6850.3113)), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false)))))))))), 1.0, 0.0, 0.0, 0.0, 0.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))).y)))), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))) - abs(0.0)) : _GLF_FUZZED(-457.282))), mix(float(_GLF_FUZZED(-52.55)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))) - abs(0.0)) : _GLF_FUZZED(-457.282)))), bool(true)))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))) - abs(0.0), min((_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))) - abs(0.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))) - abs(0.0), clamp((_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))) - abs(0.0), (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))) - abs(0.0), (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0)))) - abs(0.0)))))) : _GLF_FUZZED(-457.282))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))), ! (_GLF_IDENTITY(! (false || (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), ! (! (! (false || (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && true), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) && true), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) && true), false))), false, false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && true), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) && true), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) && true), false))), false, false)))))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, abs(1.0), tan(0.0), 0.0, 1.0, length(vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 1.0, 1.0, 1.0, tan(0.0)))) > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(68.10), _GLF_FUZZED(-63.58)), vec2((mat2(1.0) * (injectionSwitch))[0], (mat2(1.0) * (injectionSwitch))[1]), bvec2(true, true)))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), clamp(vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 1.0, 1.0, 1.0))))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) && true)), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) && true))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch)).y))) || false), true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(9947.6619)), bool(false))))), min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0))) * (injectionSwitch)), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0))) * (injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0))) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0))) * (injectionSwitch)), injectionSwitch)).y) + 0.0)))))) || false), true)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch)).y))) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch)).y))) || false), true)))))), true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)) && (false)), true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.8), _GLF_FUZZED(-95.93)), bvec2(false, false))) : _GLF_FUZZED(vec2(0.5, -428.951)))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951))))), clamp(abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951))))), _GLF_IDENTITY(abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951))))), _GLF_IDENTITY(mat2(1.0) * (abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951)))))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951))))))))), abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951)))))))).y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp(vec2(9.4, -9.3))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -428.951)))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -428.951)))))).y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -428.951)))))).y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (false ? _GLF_FUZZED(trunc(4784.4654)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -428.951)))))).y))))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1.8), _GLF_FUZZED(-95.93)), bvec2(false, false))) : _GLF_FUZZED(vec2(0.5, -428.951)))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (false ? _GLF_FUZZED((-649.785 * vec2(-458.720, 2214.6364))) : _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), min((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0))))) : _GLF_FUZZED(vec2(18.71, -78.00))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951))))), clamp(abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951))))), _GLF_IDENTITY(abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951))))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951)))))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951)))))))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951)))))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951))))))))), (mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * (abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951)))))), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, (0.5) / exp(0.0)), -428.951)))))))))) - vec2(0.0, 0.0)))), abs(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(0.5, _GLF_IDENTITY((0.5) / exp(0.0), mix(float((0.5) / exp(0.0)), float(_GLF_FUZZED(-9.3)), bool(false)))), -428.951)))))))).y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp(vec2(9.4, -9.3))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(exp(vec2(9.4, -9.3))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))) * vec2(1.0, 1.0))), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -428.951)))))).y, bool(bool(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -428.951)))))).y)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), abs(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -428.951)))))).y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (false ? _GLF_FUZZED(trunc(4784.4654)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, tan(0.0)), min(vec2(1.0, tan(0.0)), vec2(1.0, tan(0.0))))), min(float(_GLF_IDENTITY(vec2(1.0, tan(0.0)), min(vec2(1.0, tan(0.0)), vec2(1.0, tan(0.0))))), float(_GLF_IDENTITY(vec2(1.0, tan(0.0)), min(vec2(1.0, tan(0.0)), vec2(1.0, tan(0.0))))))))), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, tan(0.0)), min(vec2(1.0, tan(0.0)), vec2(1.0, tan(0.0))))), min(float(_GLF_IDENTITY(vec2(1.0, tan(0.0)), min(vec2(1.0, tan(0.0)), vec2(1.0, tan(0.0))))), float(_GLF_IDENTITY(vec2(1.0, tan(0.0)), min(vec2(1.0, tan(0.0)), vec2(1.0, tan(0.0))))))))))) * _GLF_IDENTITY((injectionSwitch), vec2(vec3((injectionSwitch), 0.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat3(mat2(1.0)))) * (injectionSwitch)).x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -428.951)))))).y)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true, true)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(1567.7927), 1.0 * (_GLF_FUZZED(1567.7927))) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(1567.7927), 1.0 * (_GLF_FUZZED(1567.7927))) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(1567.7927), 1.0 * (_GLF_FUZZED(1567.7927))) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_IDENTITY(_GLF_FUZZED(1567.7927), 1.0 * (_GLF_FUZZED(1567.7927))) : injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), (injectionSwitch)[0])), _GLF_FUZZED(float(78684u))), vec2(_GLF_FUZZED(-1656.8898), (injectionSwitch)[1]), bvec2(false, true))).y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, _GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false, true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true, false)))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])).y)), true)), true, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.1)), vec2(_GLF_FUZZED(float(-90054)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, true && (((injectionSwitch.x > injectionSwitch.y)) && true))), false))), bool(bool((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, true && (((injectionSwitch.x > injectionSwitch.y)) && true))), false))))))))))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), true)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bool(bool(_GLF_IDENTITY(false, (false) && true)))))))), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), false, true))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true, false))))))))))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (! (! (false)))), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), ! (! (! (false)))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) && true), _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), false, false))))))) || false)), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), false), _GLF_IDENTITY(false, (false) || false), false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))) && true), false), false, false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (! (_GLF_IDENTITY(! (false), false || (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), _GLF_IDENTITY(false, (false) || false))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))), (! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))) && true))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), false, true)), (bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), false, true))) || false))))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), true && ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, true))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true))))), true), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) || (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))))))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)))))), (false) || false)))))), true))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), false || (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), false || (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))))), bool(bool(bool(bool(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), false || (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))))))))), true && (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))))))))), false || ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), true, true, true)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), true, true, true))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (true && (_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), false || (bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), true, true, true)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), true, true, true))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (true && (_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), false || (bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), true, true, true)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), true, true, true))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (true && (_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), false || (bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))), (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), true, true, true)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), true, true, true))))))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(67.20)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false, true), bvec3(bvec3(bvec3(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false, true))))))))))), ! (! (true && (_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), false || (bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * exp(0.0)))))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))))) || false))))))))))))), false)), false)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bool(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (false))))), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (false))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (false)))))) || false)) && true))) && true), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), true, true))))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true), false), false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true), false), false, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (! (_GLF_IDENTITY(! (false), false || (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool((_GLF_IDENTITY(false, ! (! (false))))))) && true)), ((false)) && true), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y)))))))))), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, bool(bool(false)))) || false)), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), ! (! (! (_GLF_IDENTITY(! (false), false || (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool((_GLF_IDENTITY(false, ! (! (false))))))) && true)), ((false)) && true), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y)))))))))), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, bool(bool(false)))) || false)), true, true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (_GLF_IDENTITY(! (false), false || (! (false))))))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))))))))), false, true))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true))))), true), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) || (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))))))), false)), _GLF_IDENTITY(true, bool(bvec2(true, false)))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bool(! (bool(bool(false))))))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (false) || false)))))), _GLF_IDENTITY(true, false || (true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), false || (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) || _GLF_IDENTITY(false, (false) && true))))))))))))), true && (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), false || ((_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)), true, true, true)), false || (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || ((false)), true, true, true))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(bvec4(true && _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), bool(bvec4((_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || ((false)))), true, false, false))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (true && (_GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) || false))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-0.9) : injectionSwitch.x)) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, (true) && true))), ! (! (bool(bool(_GLF_IDENTITY(true, (true) && true))))))), (injectionSwitch.x < injectionSwitch.y)), true))))))), false || (bool(bvec4(true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, round(length(normalize(1.0))) * (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))), injectionSwitch.y)))) || ((false)))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))))))))))))))), false)), false))))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2.3)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) && true), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4003.7254)), float(injectionSwitch.y), bool(true)))))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))) && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-23.63)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(injectionSwitch, vec2(5.2, 573.080))) : injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))) || false)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-660.139))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(999.249)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))))).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, length(0.0), 1.0, 0.0, abs(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), length(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, 1.0))), abs(0.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(76.39))), injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0))).x > injectionSwitch.y)))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) || false))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, false))))) && true)))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) && true, ((false) && true) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) && true)) && true)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8746.1500)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), false, false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(8625.1810, float(_GLF_IDENTITY(mat3x2(8625.1810, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, tan(0.0), 1.0, sqrt(0.0)), transpose(transpose(mat3x2(8625.1810, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, tan(0.0), 1.0, sqrt(0.0))))))))), vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))).y))), false, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) && true)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))) && true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(689.595)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(length(vec4(4800.7039, 3132.0082, -125.212, -11.12))))))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, cos(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2(-932.961, -6.0, 3.6, -4543.4859)) : _GLF_IDENTITY(mat2(injectionSwitch.x, cos(0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat2(566.059, -0.7, 4418.1022, 9062.5251)) : mat2(injectionSwitch.x, cos(0.0), 1.0, 0.0))))))) > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, false)))) && _GLF_IDENTITY(true, true && (true))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)) || _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), true))), _GLF_IDENTITY(bool(bool((bool(bvec2(_GLF_DEAD(false), true))))), (bool(bool((bool(bvec2(_GLF_DEAD(false), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.8)), bool(false))), injectionSwitch.x))) + 0.0) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.8)), bool(false))), injectionSwitch.x))) + 0.0), (false ? _GLF_FUZZED(4095.4875) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED(9.8)), bool(false))), injectionSwitch.x))) + 0.0))) > injectionSwitch.y)) || false))), _GLF_IDENTITY(false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0), (mat3(1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0))), injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))) > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))) > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), true), false))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), (mat3(1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0))), injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 0.0, 1.0, 1.0))) > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0))) > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false), true), false)))))))))) || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | (workgroup_id), clamp((workgroup_id) | _GLF_IDENTITY((workgroup_id), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false)))) ? (workgroup_id) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(153512u) : _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))))) >> 0u)) | (workgroup_id), ((workgroup_id) | (workgroup_id)) | (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)) : _GLF_FUZZED(uvec3(177071u, 62634u, 30158u).r)))) | (_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), _GLF_IDENTITY(max((workgroup_id) | (workgroup_id), (workgroup_id) | (workgroup_id)), (max((_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))) | (workgroup_id), (workgroup_id) | (workgroup_id))) / 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u + (_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))), ! (! (bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) | (1))))])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) << 0u)), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_val = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) >> 0u), clamp(_GLF_IDENTITY(write_val, (write_val) >> 0u), _GLF_IDENTITY(write_val, (write_val) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(write_val, (write_val) >> 0u), (_GLF_IDENTITY(write_val, (write_val) >> 0u)) ^ 0u))), _GLF_IDENTITY(write_val, (write_val) >> 0u))), 4, 64, 2);
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) - 0u), 0u | (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u + (uint(subgroupAllEqual(read_val)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | 0u)), uint(4u)), min(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | 0u)), uint(4u)), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | 0u)), uint(4u)), ~ (~ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) | 0u)), uint(4u))))))), ~ (~ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) ^ (4u))) | 0u)), uint(4u))))), (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u))))) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) ^ (buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(read_val, read_val))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
  return;
}
