#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y)))) && true), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)), false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), true && ((false))), true)), (bool(bvec2(_GLF_IDENTITY((false), true && ((false))), true))) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)), false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(6204.2406)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) + 0)], injectionSwitch[1])).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) - log(vec2(1.0, 1.0)))))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(6204.2406)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) + 0)], injectionSwitch[1])).y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), float(_GLF_IDENTITY(mat2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0, sqrt(1.0), 1.0), mat2(mat4x2(mat2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0, sqrt(1.0), 1.0)))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(_GLF_FUZZED((+ -3.5))), float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), bool(true))))))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_FUZZED(6204.2406)), min(float(_GLF_FUZZED(6204.2406)), float(_GLF_FUZZED(6204.2406)))), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) + 0)], injectionSwitch[1])).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) / vec2(1.0, 1.0))), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), float(_GLF_IDENTITY(mat2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0, sqrt(1.0), 1.0), mat2(mat4x2(mat2(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), 1.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) * 1.0), 1.0)))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(_GLF_FUZZED((+ -3.5))), float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), bool(true))))))), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_FUZZED(6204.2406)), min(float(_GLF_FUZZED(6204.2406)), float(_GLF_FUZZED(6204.2406)))), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) + 0)], injectionSwitch[1])).y)))))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), float(_GLF_FUZZED(-618.836)), bool(false)))))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) && true))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, tan(length(vec3(0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.0, 7482.4792)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
      barrier();
     return;
    }
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y))))) * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) | 0u, 0u + (_GLF_IDENTITY((workgroup_size * workgroup_id) | 0u, (false ? _GLF_FUZZED(subgroup_local_id) : (workgroup_size * workgroup_id) | 0u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (subgroup_id))), (_GLF_IDENTITY(~ (subgroup_id), 0u | (~ (subgroup_id)))) << 0u))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_size)), 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_size)), 0u, 1u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) ^ 0u)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) ^ 0u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) ^ 0u)))), 1u))) | (subgroup_size), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_size), (94931u & 0u) ^ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))) >> 0u) | (subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_size), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_size)) * 1u)))), 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) | (subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u) : _GLF_FUZZED(num_workgroup)))) | (subgroup_size)) / 1u)), 0u, 1u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)))) | 0u)), subgroup_id * subgroup_size)), subgroup_id * subgroup_size));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) >> 0u) >> 0u)) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) >> 0u) >> 0u)) - 0u, ((_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)), ((_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))) >> 0u) >> 0u)) - 0u) | 0u)) / 1u)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_IDENTITY((false), bool(bvec2((false), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true, _GLF_IDENTITY(true && ((false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && ((false) && true)), false || (! (true && ((false) && true)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), bool(bvec4(! (true && ((false) && true)), false, false, false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) - vec2(0.0, 0.0)))), vec2(0.0, 0.0) + (injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0)))), mix(vec2(_GLF_FUZZED(-1.5), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0)))))[1]), vec2((vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0), min(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0), vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), 1.0)))))[0], _GLF_FUZZED(-24.84)), bvec2(true, false)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-28.38)), float(0.0), bool(true))), 0.0), (vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-28.38)), float(0.0), bool(true))), 0.0)) / vec2(1.0, 1.0)) + (injectionSwitch)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, cos(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2848.8113) : 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0, 0.0), transpose(transpose(mat4x3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2848.8113) : 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0))))))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(786.983)), bool(false))), 0.0), vec3(0.0, sqrt(1.0), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, sqrt(1.0), 0.0))), 0.0)), (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, sqrt(1.0), 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(0.0, sqrt(1.0), 0.0), min(vec3(0.0, sqrt(1.0), 0.0), vec3(0.0, sqrt(1.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))), 0.0))) / vec2(1.0, 1.0))), (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, true, true))), false, false, true)))) && true), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), min(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))).y, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), min(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), min(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))).y)), 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.1), _GLF_IDENTITY(_GLF_FUZZED(5.1), (false ? _GLF_FUZZED(9.2) : _GLF_FUZZED(5.1)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, mix(float(_GLF_FUZZED(-7.5)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.1), _GLF_IDENTITY(_GLF_FUZZED(5.1), (false ? _GLF_FUZZED(9.2) : _GLF_FUZZED(5.1)))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), bool(true)))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), min(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(620.990) : (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))) | (1))]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(min(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(620.990) : (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))) | (1))])), (min(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(vec4((injectionSwitch)[0], 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), min(vec4((injectionSwitch)[0], 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), vec4((injectionSwitch)[0], 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))), _GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(620.990) : (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))) | _GLF_IDENTITY((1), 0 ^ ((1))))]))) * vec2(1.0, 1.0))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), clamp(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), min(mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))), _GLF_IDENTITY(vec2(mat3x2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), clamp(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), min(mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))), sqrt(1.0), length(abs(vec2(0.0, 0.0))), 0.0, cos(0.0))), (vec2(mat3x2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), clamp(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), min(mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))))), sqrt(1.0), length(abs(vec2(0.0, 0.0))), 0.0, cos(0.0)))) + vec2(0.0, 0.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.1), _GLF_IDENTITY(_GLF_FUZZED(5.1), (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(_GLF_FUZZED(5.1), mix(float(_GLF_FUZZED(5.1)), float(_GLF_FUZZED((14.17))), bool(false)))))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-8.5))), injectionSwitch[1]))) - 0.0), mix(float(_GLF_FUZZED(vec4(-73.33, 9.1, 6249.0259, 132.878).w)), float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0)), bool(true)))))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((injectionSwitch[1]), clamp((injectionSwitch[1]), (injectionSwitch[1]), (injectionSwitch[1]))) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0))) : _GLF_FUZZED(mod(4.6, -64.33))))), mix(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(-73.33, (-73.33) / sqrt(1.0)), 9.1, 6249.0259, 132.878).w)), float(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(59.80), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1978.6408)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1]) - 0.0)), bool(true)))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0), mix(float(_GLF_FUZZED(vec4(-73.33, 9.1, 6249.0259, 132.878).w)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1], (injectionSwitch[1]) - 0.0)), bool(true))))))))[1]), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))))).y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * mat2(1.0), max((_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * mat2(1.0), (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mat2(1.0) * (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(0.1), _GLF_FUZZED(5.1)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) * mat2(1.0))))).y))), true), true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED((+ -3.7))), bool(false))))) / 1.0)), float(_GLF_FUZZED(-0.7)), bool(false)))))))
        barrier();
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, determinant(mat3(0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), 0.0), mix(vec4(_GLF_FUZZED(23.79), _GLF_FUZZED(8.0), _GLF_FUZZED(-3568.8683), (vec4(injectionSwitch, determinant(mat3(0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), 0.0))[3]), vec4((vec4(injectionSwitch, determinant(mat3(0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), 0.0))[0], (vec4(injectionSwitch, determinant(mat3(0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), 0.0))[1], (vec4(injectionSwitch, determinant(mat3(0.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, sqrt(0.0), 0.0, 0.0)), 0.0))[2], _GLF_FUZZED(2.4)), bvec4(true, true, true, false))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(-6.9)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, (false) || false)))))), false, true, false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, (false) || false)))))), false, true, false))))), (true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (_GLF_IDENTITY(false, (false) || false)))))), false, true, false)))))) && _GLF_IDENTITY(true, (true) || false)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - length(vec2(0.0, 0.0)))) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
