#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0, abs(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.0, min(9.0, _GLF_IDENTITY(9.0, mix(float(9.0), float(_GLF_FUZZED((_GLF_IDENTITY(-8.7, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.0) : -8.7)) - -28.26))), bool(false))))))), float(0.0), bool(true)))) - log(1.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0)))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(exp(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), vec2(1.0, 1.0) * (exp(vec2(0.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.8)), (float(_GLF_FUZZED(0.8))) + 0.0), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x), bool(true))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(80.37)))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(80.37))))))) + abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) || _GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x, (false ? _GLF_FUZZED(-1.8) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x)) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))))).x > injectionSwitch.y, true))), true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bool(_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, cos(0.0), 0.0), vec3(0.0, 1.0, 0.0)))), 0.0))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(exp(vec2(0.0, 0.0)), (exp(vec2(0.0, 0.0))) + vec2(0.0, 0.0))).x > injectionSwitch.y))), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) || _GLF_IDENTITY(false, ! (! (false))), ! (! ((! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) || _GLF_IDENTITY(false, ! (! (false)))))))))), true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y), true, true, true)))) || false))), (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1546.0527, -61.97)))), (injectionSwitch) * vec2(1.0, 1.0)).y)) || _GLF_IDENTITY(false, ! (! (false))))), bool(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y), true, true, true)))) || false))), (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1546.0527, -61.97)))), (injectionSwitch) * vec2(1.0, 1.0)).y)) || _GLF_IDENTITY(false, ! (! (false))))), false))))), true, true)))), (bool(bool(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-4806.1902), _GLF_FUZZED(-2.0)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], float(vec4(((injectionSwitch))[0], 0.0, 1.0, 0.0))), ((injectionSwitch))[1]), bvec2(true, true))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) || _GLF_IDENTITY(false, ! (! (false))))))), true, _GLF_IDENTITY(true, true && (true))))))) || false))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false))))), (bool(bvec4(false, false, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || false)))))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))), false, false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), false, false, true))))))))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true, true)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8529.2257))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * sqrt(vec2(1.0, 1.0)), clamp((injectionSwitch) * sqrt(vec2(1.0, 1.0)), (injectionSwitch) * sqrt(vec2(1.0, 1.0)), (injectionSwitch) * sqrt(vec2(1.0, 1.0))))).y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, true, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(155720u))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (~ (1)))])).y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat2(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << 0u), max(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(0u, (0u) + 0u) | (_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))))), ((gl_WorkGroupSize.x)) << 0u)))) ^ ((0u ^ 0u) << _GLF_IDENTITY(uint(8u), uint(8u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x, 0u ^ (gl_WorkGroupSize.x)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, (0u) * 1u) ^ (_GLF_IDENTITY(workgroup_size, (1u | 0u) * (_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | (~ (workgroup_size))))))))) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))) || false)))))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) / 1u, (((subgroup_size)) / 1u) ^ 0u)), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ ((1u)))) - 0u), 1u)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), ((subgroup_size)) / 1u), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) / 1u)) << 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), false))))), false || (! (false))), ! (! (! (false))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), _GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! (! (false)))))), bool(bvec2(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! (! (false)))))), true)))), true, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0)), (false ? _GLF_FUZZED(mat3(4.9, _GLF_IDENTITY(6.9, max(6.9, _GLF_IDENTITY(6.9, max(6.9, 6.9)))), 6774.6850, 78.68, -4174.1470, -93.29, -7.6, 82.77, -6.8)) : mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0))))), (float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0)), (false ? _GLF_FUZZED(mat3(4.9, 6.9, 6774.6850, 78.68, -4174.1470, _GLF_IDENTITY(-93.29, (_GLF_IDENTITY(-93.29, mix(float(_GLF_FUZZED(-68.90)), float(-93.29), bool(true)))) - 0.0), -7.6, 82.77, -6.8)) : mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0)))))) - sin(0.0))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(mat3(4.9, _GLF_IDENTITY(6.9, max(6.9, _GLF_IDENTITY(6.9, max(6.9, 6.9)))), 6774.6850, 78.68, -4174.1470, -93.29, -7.6, 82.77, -6.8)) : mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, abs(1.0), 0.0))), min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0))), (_GLF_IDENTITY((false ? _GLF_FUZZED(mat3(4.9, _GLF_IDENTITY(6.9, max(6.9, _GLF_IDENTITY(6.9, max(6.9, 6.9)))), 6774.6850, 78.68, -4174.1470, -93.29, -7.6, 82.77, -6.8)) : mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, abs(1.0), 0.0))), min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0))), (true ? (false ? _GLF_FUZZED(mat3(4.9, _GLF_IDENTITY(6.9, max(6.9, _GLF_IDENTITY(6.9, max(6.9, 6.9)))), 6774.6850, 78.68, -4174.1470, -93.29, -7.6, 82.77, -6.8)) : mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, abs(1.0), 0.0))), min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0))) : _GLF_FUZZED(mat3(3713.0722, -775.789, 186.621, 3.8, 88.90, -3.8, -44.95, -2841.0306, 745.549))))) / _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), (float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0))), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(4.9, 6.9, 6774.6850, 78.68, -4174.1470, _GLF_IDENTITY(-93.29, (_GLF_IDENTITY(-93.29, mix(float(_GLF_FUZZED(-68.90)), float(-93.29), bool(true)))) - 0.0), -7.6, 82.77, -6.8)), (_GLF_FUZZED(mat3(4.9, 6.9, 6774.6850, 78.68, -4174.1470, _GLF_IDENTITY(-93.29, _GLF_IDENTITY((_GLF_IDENTITY(-93.29, mix(float(_GLF_FUZZED(-68.90)), float(-93.29), bool(true)))) - 0.0, max((_GLF_IDENTITY(-93.29, mix(float(_GLF_FUZZED(-68.90)), float(-93.29), bool(true)))) - 0.0, (_GLF_IDENTITY(-93.29, mix(float(_GLF_FUZZED(-68.90)), float(-93.29), bool(true)))) - 0.0))), -7.6, 82.77, _GLF_IDENTITY(-6.8, clamp(-6.8, _GLF_IDENTITY(-6.8, float(mat2(-6.8, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0))), _GLF_IDENTITY(-6.8, (-6.8) + 0.0)))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : mat3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0)))))) - sin(0.0)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(write_val, uint(virtual_gid), _GLF_IDENTITY(4, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0 | 0)), _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0)))))) | (4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(405.982))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x : _GLF_FUZZED(_GLF_IDENTITY(405.982, max(_GLF_IDENTITY(405.982, min(405.982, 405.982)), _GLF_IDENTITY(405.982, min(405.982, 405.982))))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))), tan(0.0), 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))) : _GLF_FUZZED(-652.245)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((1.0)) * 1.0)))), 0.0, 1.0, 1.0, 1.0, sqrt(0.0), abs(1.0)), _GLF_IDENTITY(mat2(1.0) * (mat4x2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(405.982), mix(float(_GLF_FUZZED(-7678.9500)), float(true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(405.982)), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true))))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-3.4), (_GLF_FUZZED(-3.4)) / cos(0.0)), _GLF_IDENTITY(max(true ? 1.0 : _GLF_FUZZED(-3.4), true ? 1.0 : _GLF_FUZZED(-3.4)), clamp(_GLF_IDENTITY(max(true ? 1.0 : _GLF_FUZZED(-3.4), true ? 1.0 : _GLF_FUZZED(-3.4)), (max(true ? 1.0 : _GLF_FUZZED(-3.4), true ? 1.0 : _GLF_FUZZED(-3.4))) + 0.0), max(true ? 1.0 : _GLF_FUZZED(-3.4), true ? 1.0 : _GLF_FUZZED(-3.4)), max(true ? 1.0 : _GLF_FUZZED(-3.4), true ? 1.0 : _GLF_FUZZED(-3.4)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-3.4, min(-3.4, -3.4))), max(true ? 1.0 : _GLF_FUZZED(-3.4), true ? _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(-3.4))))) * determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 1.0)), min(float(vec4(1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), vec4(0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), max(dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), vec4(0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), vec4(0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 1.0)), float(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(802.374)), bool(false)))), vec4(0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec4(0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))), 1.0))))), 1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, sqrt(0.0), abs(1.0))), (mat2(1.0) * (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(405.982))), max(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(405.982))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(405.982))))), determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0, 1.0), (true ? mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0, sqrt(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2x3(749.126, -8.9, -6.0, 2.6, 63.26, -4796.9265)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), (true ? abs(_GLF_IDENTITY(1.0, float(vec3(1.0, sqrt(0.0), 0.0)))) : _GLF_FUZZED(-6.8))), mix(float(_GLF_FUZZED(-488.816)), float(abs(1.0)), bool(true)))))) + mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.5))))), min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-549.734))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true, true)), true, false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), true, true, true)), ! (! (bool(bvec4((! (false)), true, true, true))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), true, true))), false, false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))), true)))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, abs(0.0), tan(0.0), 0.0, 1.0))) < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool((injectionSwitch.x < injectionSwitch.y)))))))))), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))) || false))), true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))) || false))), true)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))) || false))), true)), false), bvec3(bvec4(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))) || false))), true)), false), true)))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool((injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool((injectionSwitch.x < injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool((injectionSwitch.x < injectionSwitch.y))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))), true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y) - log(1.0))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool((injectionSwitch.x < injectionSwitch.y)))))))))), true)), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, (true) && true) && (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, true)))), (bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec4(bvec2((false), false), false, true))))) && true)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))), (! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))) && true)), true)))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((injectionSwitch.x < injectionSwitch.y))), false || (! (bool((injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (bool((injectionSwitch.x < injectionSwitch.y)))))))))), true)), true, false)))))))))))))) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-569.610 * 7.6)), _GLF_FUZZED((+ 706.049))), bvec2(false, false)))) * mat2(1.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-569.610 * 7.6)), _GLF_FUZZED((+ 706.049))), bvec2(false, false)))) * mat2(1.0)).y)) && true)), _GLF_IDENTITY(false, (false) && true) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, cos(0.0), 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, cos(0.0), 1.0), vec4(1.0, 0.0, 0.0, 0.0))), exp(0.0), 1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-195.659)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false))) || false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch.y) : injectionSwitch.x)) > injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false))) || false, false, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false))) || false, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false))) || false, true, false)))))), false, false))))))))))) && true), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x) - 0.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))), bool(bool(_GLF_IDENTITY(! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (! (false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) && true), false)))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, 0u ^ (_GLF_IDENTITY(write_val, _GLF_IDENTITY(_GLF_IDENTITY((write_val), max(_GLF_IDENTITY((write_val), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((write_val), uint(_GLF_IDENTITY(uvec4((write_val), 0u, 0u, (16599u & 0u)), (uvec4((write_val), 0u, 0u, (16599u & 0u))) - (uvec4(0u, 0u, 0u, 0u) & uvec4(82847u, 51812u, 162288u, 159188u))))), 0u), (uvec2((write_val), 0u)) - uvec2(0u, 0u)))), (write_val))) | (write_val), (_GLF_IDENTITY((write_val) | (write_val), (_GLF_IDENTITY((write_val), _GLF_IDENTITY(((write_val)), uint(uvec3(((write_val)), 1u, 1u))) / 1u) | (write_val)) ^ 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(write_val, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? write_val : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(write_val, 0u), min(uvec2(write_val, 0u), uvec2(write_val, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(write_val, 0u), (uvec2(write_val, 0u)) * uvec2(1u, 1u)), min(uvec2(write_val, 0u), uvec2(write_val, 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(write_val, 0u), (uvec2(write_val, 0u)) * uvec2(1u, 1u)), min(uvec2(write_val, 0u), uvec2(write_val, 0u))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(write_val, 0u), min(uvec2(write_val, 0u), uvec2(write_val, 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(write_val, 0u), min(uvec2(_GLF_IDENTITY(write_val, (write_val) | (write_val)), 0u), uvec2(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, (write_val) << 0u)) * 1u), 0u)))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) + (uint(_GLF_IDENTITY(uvec2(write_val, 0u), min(uvec2(_GLF_IDENTITY(write_val, (write_val) | (write_val)), 0u), uvec2(_GLF_IDENTITY(write_val, (_GLF_IDENTITY(write_val, (write_val) << 0u)) * 1u), 0u))))))) | 0u), uint(_GLF_IDENTITY(uvec2(write_val, 0u), min(uvec2(write_val, 0u), uvec2(write_val, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))) + 0u))) | (write_val), ((write_val) | (write_val)) | ((write_val) | (write_val)))))))), 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, ~ (~ (_GLF_IDENTITY(read_val, (_GLF_IDENTITY(read_val, max(read_val, read_val))) | 0u))))) * _GLF_IDENTITY(1u, 1u * (1u))), 0u + (_GLF_IDENTITY(read_val, (read_val) - (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))));
 if(_GLF_DEAD(false))
  barrier();
}
