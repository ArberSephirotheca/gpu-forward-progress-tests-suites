#version 460
struct _GLF_struct_6 {
 uvec4 _f0;
 uvec4 _f1;
 mat2x3 _f2;
 bvec2 _f3;
 vec3 _f4;
 mat3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 _GLF_struct_5 _f1;
 bvec2 _f2;
 bool _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat4x3 _f1;
 vec3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 ivec3 _f1;
 mat3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 mat2x4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat4x3 _f1;
 uint subgroup_base;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 mat3x4 _f1;
 _GLF_struct_1 _f2;
 uvec4 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_7 _f2;
 mat4x2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(mat2(1.0), _GLF_struct_4(_GLF_struct_0(bvec3(true), mat4x3(1.0), subgroup_id * subgroup_size), mat3x4(1.0), _GLF_struct_1(mat2x4(1.0), mat2x4(1.0), mat2(1.0)), uvec4(1u), _GLF_struct_2(mat4x3(1.0), ivec3(1), mat3(1.0), ivec3(1)), _GLF_struct_3(mat4(1.0), mat4x3(1.0), vec3(1.0), mat3x4(1.0))), _GLF_struct_7(mat2x4(1.0), _GLF_struct_5(bvec3(true)), bvec2(true), true, _GLF_struct_6(uvec4(1u), uvec4(1u), mat2x3(1.0), bvec2(true), vec3(1.0), mat3(1.0), mat2x3(1.0))), mat4x2(1.0));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_8._f1._f0.subgroup_base + subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
