#version 460
struct _GLF_struct_6 {
 mat2 _f0;
 vec3 _f1;
 uint subgroup_local_id;
 mat3x4 _f2;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 mat2 _f1;
 bool _f2;
} ;

struct _GLF_struct_3 {
 float _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat4 _f1;
 mat2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_5 {
 uint subgroup_size;
 mat2x4 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_3 _f2;
 mat4 _f3;
 _GLF_struct_4 _f4;
 mat4x2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_SubgroupSize, mat2x4(1.0), _GLF_struct_1(_GLF_struct_0(1u, mat4(1.0), mat2(1.0), mat2(1.0)), vec4(1.0)), _GLF_struct_3(1.0, _GLF_struct_2(vec4(1.0), mat2(1.0), true)), mat4(1.0), _GLF_struct_4(mat3(1.0)), mat4x2(1.0));
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat2(1.0), vec3(1.0), gl_SubgroupInvocationID, mat3x4(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_5.subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_6.subgroup_local_id;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
