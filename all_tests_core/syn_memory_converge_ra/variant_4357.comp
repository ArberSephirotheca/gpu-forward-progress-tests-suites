#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2254.3269) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), bool(bool(_GLF_DEAD(false)))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) || false), bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), false, false)))))))
  return;
 GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.z = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w = workgroup_base, (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w = workgroup_base, (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w = workgroup_base) | 0u)) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.y = subgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)) && true)), (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)) && true))) || false)))))))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! ((bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))), false, false, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3((! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true, true))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), _GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-476.503))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bool(! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-476.503))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bool(! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, log(1.0), 0.0, 1.0, cos(length(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), (_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)) || false)))))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-476.503))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bool(! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(-476.503))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bool(! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, log(1.0), 0.0, 1.0, cos(length(vec3(0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), (_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true)) || false)))))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))) || false))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)) || false), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), false, false, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) && true)))))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))), true && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)) || false), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), false, false, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) && true)))))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)) || false), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), false, false, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) && true)))))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))), ! (! (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, abs(sin(0.0)), 1.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, cos(0.0)), vec3(sin(0.0), 1.0, log(1.0))), dot(vec3(1.0, 0.0, cos(0.0)), vec3(sin(0.0), 1.0, log(1.0))))))) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool(bool(injectionSwitch.x > injectionSwitch.y))), false || (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), true && (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true))))))), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))) && true)) || false), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))), false, false, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7723.4985) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(49.87)), float(injectionSwitch.x), bool(true)))))) / exp(0.0)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))) || false))), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))) && _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(844.717) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), false, false, false)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true, ((_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))), false)))))) && true)))))))))), false, false)), true && (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))) && _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(844.717) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), false, false, false)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true, ((_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))), false)))))) && true)))))))))), false, false)), (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))) && _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y)))))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(844.717) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), (_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), false, false, false)))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true, ((_GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))), false)))))) && true)))))))))), false, false))) && true)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, ! (! ((bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(distance(vec3(9.5, 5.2, -9.2), vec3(4.2, 9.4, 4.4))) : injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7559.3715) : injectionSwitch.y)), _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((! (bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true))))))), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))))))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base)).y, (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.y, max(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.y, _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.y, (false ? _GLF_FUZZED(99239u) : GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.y))))) << 0u), clamp(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.y, GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.y, _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base, min(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base, GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base)).y, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.y, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) ^ (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.y)))))) + _GLF_IDENTITY(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base, (GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base) / uvec4(1u, 1u, 1u, 1u)).z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), true && (! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), true && (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, true)))), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))), true))))) || false)))
  barrier();
 uint read_val = atomicLoad(write_val, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(int(64)), (int(int(64))) | (int(int(64))))), 2);
 GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.x = read_val;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(GLF_merged4_0_1_8_1_1_13_2_1_17_3_1_14read_valsubgroup_basesubgroup_local_idworkgroup_base.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(54.27))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      barrier();
     barrier();
    }
   barrier();
  }
}
