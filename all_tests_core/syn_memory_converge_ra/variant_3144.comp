#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true, false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), true, false))), true, false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED((9591.8495 / -55.14))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(7295.9649), _GLF_FUZZED(2704.6694)), bvec2(false, false))) - vec2(0.0, 0.0)).x), bool(true))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED((9591.8495 / -55.14))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(float(55301u)), _GLF_FUZZED(72.90)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x), bool(true))) > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED((9591.8495 / -55.14))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))).x), min(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - abs(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - abs(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, 1.0, 0.0, 1.0, sqrt(1.0), 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1], max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1]))), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(-29.39)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1], max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1]))), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(-29.39)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1], max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1]))), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(-29.39)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1], max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)))[1]))), vec2(_GLF_FUZZED(-9.9), _GLF_FUZZED(-29.39)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x) - 0.0)))))), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0)))))) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))).x, mix(float(_GLF_FUZZED((9591.8495 / -55.14))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x), min(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))), bool(true))) > injectionSwitch.y)) || false), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-83892))), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-85.46)), bool(false)))), bool(true))), 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0)), max(determinant(mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) - log(1.0)), 1.0, 0.0, 1.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 0.0, abs(0.0), 0.0), vec4(abs(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), sqrt(0.0))), dot(vec4(abs(1.0), 0.0, abs(0.0), 0.0), vec4(abs(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), sqrt(0.0)))), sqrt(0.0), abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, cos(0.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, cos(0.0)), vec3(0.0, 1.0, 0.0))))), float(mat2x3(float(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) - log(1.0)), 1.0, 0.0, 1.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 0.0, abs(0.0), 0.0), vec4(abs(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), sqrt(0.0))), dot(vec4(abs(1.0), 0.0, abs(0.0), 0.0), vec4(abs(1.0), sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), sqrt(0.0)))), sqrt(0.0), abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, cos(0.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, cos(0.0)), vec3(0.0, 1.0, 0.0))))), 0.0, 0.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-333.465)), float(1.0), bool(true))))), 0.0, 0.0, 0.0)), _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(4730.2955, 9.8, 28.18, 7433.2154, -4.4, -68.85, -6.4, 40.57, 9.9, -3.8, 8.4, -6.6, -8862.4887, -324.713, 1.6, -9257.8282)) : mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0)))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, log(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(4224.4651) : sqrt(1.0))), sqrt(1.0), sqrt(1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0)), (determinant(mat4(0.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, 0.0)))))))), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), clamp(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(vec3(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), 0.0, 1.0), clamp(vec3(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), 0.0, 1.0), vec3(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), 0.0, 1.0), vec3(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), 0.0, 1.0))))), dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0))) * 1.0), determinant(mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), (dot(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) + 0.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(4.1), min(_GLF_FUZZED(4.1), _GLF_FUZZED(4.1)))), bool(false)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(mat3(vec3(1.0, 1.0, 0.0), 1.0, 1.0, length(0.0), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))))), 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2814.8489)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - sqrt(0.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(mat3(vec3(1.0, 1.0, 0.0), 1.0, 1.0, length(0.0), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))))), 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2814.8489)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0), vec4(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - sqrt(0.0))))))), (_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 0.0), vec3(mat3(vec3(1.0, 1.0, 0.0), 1.0, 1.0, length(0.0), 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))))), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, determinant(mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2814.8489)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0), vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(3422.5776)), bool(false))), min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), float(float((1.0)))) - 0.0))), 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - sqrt(0.0)))))))) - 0.0)) / 1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(4.1), clamp(_GLF_IDENTITY(_GLF_FUZZED(4.1), (false ? _GLF_FUZZED(3496.0018) : _GLF_IDENTITY(_GLF_FUZZED(4.1), 0.0 + (_GLF_FUZZED(4.1))))), _GLF_FUZZED(4.1), _GLF_FUZZED(4.1)))), bool(false)))), (vec2(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) * mat3(1.0))) / vec3(1.0, 1.0, 1.0)), vec3(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)), mix(float(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat4(vec3(0.0, 0.0, 1.0), sqrt(1.0), 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), vec3(1.0, 1.0, 0.0))), float(_GLF_FUZZED((-584.997 / 2059.7784))), bool(false))))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) / 1.0), 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0)))))), dot(vec4(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.1)), bool(false))))) - log(vec2(1.0, 1.0))), vec2(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, 0.0, log(1.0), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.8))), mix(float(0.0), float(_GLF_FUZZED(4.1)), bool(false))))))).x, mix(float(_GLF_FUZZED((9591.8495 / -55.14))), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), mat2(1.0) * ((injectionSwitch) - vec2(0.0, 0.0)))).x), bool(true))) > injectionSwitch.y)))))))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & _GLF_IDENTITY(77819, max(_GLF_IDENTITY(77819, (_GLF_IDENTITY(77819, clamp(77819, 77819, 77819))) * (1 & 1)), _GLF_IDENTITY(77819, (77819) >> (0 ^ 0)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(bvec2((true), false))))) || false) && (false))) || false)) && true)))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (false ? _GLF_FUZZED(vec2(5224.1635, -0.8)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))))) / vec2(1.0, 1.0)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)).y, false, false, false))))))), true && (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (false ? _GLF_FUZZED(vec2(5224.1635, -0.8)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))))) / vec2(1.0, 1.0)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)).y, false, false, false))))))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (false ? _GLF_FUZZED(vec2(5224.1635, -0.8)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))))) / vec2(1.0, 1.0)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) / vec2(1.0, 1.0)).y, false, false, false))))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
            break;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))));
        }
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))), 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))), (injectionSwitch) - vec2(0.0, 0.0)).y)))))))
        break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(dot(vec4(-9234.8178, -8.3, 407.865, 2.1), vec4(85.34, -9953.0221, -796.172, -86.59))) : injectionSwitch.y))))))
        {
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 break;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                continue;
               continue;
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.6, -4041.9101)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))), (injectionSwitch) / vec2(1.0, 1.0))))) - tan(vec2(0.0, 0.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.6, -4041.9101)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))), (injectionSwitch) / vec2(1.0, 1.0))))) - tan(vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))), 1))))), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base.y = subgroup_size;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
        return;
       break;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     break;
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ((_GLF_WRAPPED_LOOP(false))) && true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(false)), bool(_GLF_IDENTITY(bool(false || (_GLF_WRAPPED_LOOP(false))), _GLF_IDENTITY(! (! (bool(false || (_GLF_WRAPPED_LOOP(false))))), ! (! (! (! (bool(false || (_GLF_WRAPPED_LOOP(false))))))))))))), true && ((! (_GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(false)), bool(_GLF_IDENTITY(bool(false || (_GLF_WRAPPED_LOOP(false))), _GLF_IDENTITY(! (! (bool(false || (_GLF_WRAPPED_LOOP(false))))), ! (! (! (! (bool(false || (_GLF_WRAPPED_LOOP(false))))))))))))))))));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)))), uvec3(uvec3(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize))))))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)))), max((gl_WorkGroupSize), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)), min(_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], gl_WorkGroupSize[1], gl_WorkGroupSize[_GLF_IDENTITY(2, 0 | (2))]))), ((gl_WorkGroupSize)) / _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) * 1u)), (uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) * 1u))) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u)))))) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     else
      {
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1 * (_GLF_IDENTITY(1, clamp(1, 1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
        {
         return;
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), (true ? _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(injectionSwitch.y, 1.0, 1.0) : _GLF_FUZZED(vec3(93.75, vec2(62.73, -54.87)))))))), _GLF_IDENTITY((_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), float(mat3x2(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), (false ? _GLF_FUZZED(-36.54) : 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))) - 0.0, min(_GLF_IDENTITY((_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), float(mat3x2(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), (false ? _GLF_FUZZED(-36.54) : 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))) - 0.0, ((_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), float(mat3x2(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), (false ? _GLF_FUZZED(-36.54) : 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))) - 0.0) / 1.0), (_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), float(mat3x2(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))), (false ? _GLF_FUZZED(-36.54) : 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))) - 0.0))) : _GLF_FUZZED(-49.03))))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(false, ! (! (false))), true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))).y)))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))) || false))))))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), (injectionSwitch) * mat2(1.0)))))).y : _GLF_FUZZED(-3.6), clamp(true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y : _GLF_FUZZED(_GLF_IDENTITY(-3.6, mix(float(_GLF_FUZZED(69.41)), float(-3.6), bool(true)))), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y : _GLF_FUZZED(-3.6), float(mat3x2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))), ! (! (bool(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (_GLF_IDENTITY(injectionSwitch[1], float(mat4(injectionSwitch[1], 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))), (injectionSwitch) * mat2(1.0)).y : _GLF_FUZZED(-3.6), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0))), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(8026.8257), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), bvec2(false, true))).y : _GLF_FUZZED(-3.6)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         break;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))))
          continue;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter --)
              {
               return;
              }
            }
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          break;
         return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((true ? 1.5 : -67.22)) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (injectionSwitch.x) / 1.0) > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y))))) || false) && true))) || false))))))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
          return;
         break;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -17851)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false))))))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), _GLF_IDENTITY(false, bool(bool(false))), false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          continue;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false, (false) || false) || (false))))))
                continue;
               _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base.z = workgroup_base, (GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base.z = workgroup_base) * 1u);
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            continue;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
          return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base, ~ (~ (GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base))).y, (subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base, ~ (~ (GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base))).y) | (subgroup_id * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base, ~ (~ (GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base))).y));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), true && (bool(bvec3(! (false), false, false)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))), bool(bvec3(! (false), false, false)))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (false))), bool(bvec3(! (false), false, false))))))) && true))))))) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(dot(685.484, -94.29)) : injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), false, false))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), false, false)))))))), true && (! ((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), false || ((false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY((false), false || ((false))))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY((false), false || ((false))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY((false), false || ((false))))), true), bvec2(bvec2(bvec2(bool(bool(_GLF_IDENTITY((false), false || ((false))))), true))))))))))))))), false, false)))))))))))))) && true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false, true)))))
  {
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) && true), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))) || false), (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))))))), ! (! (bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))))))))))))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.5))) > injectionSwitch.y))))))) || false))))))))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))))
        {
         if(_GLF_DEAD(false))
          break;
         break;
        }
       continue;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 537.211)), _GLF_FUZZED(-323.354)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
    }
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.1, mix(float(7.1), float(_GLF_FUZZED((+ (46.80 * 8317.0258)))), bool(false))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))).x), min(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))).x), float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))).x))), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, log(cos(0.0)), 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), tan(0.0), 1.0)), (float(mat2x3(injectionSwitch.x, log(cos(0.0)), 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), tan(0.0), 1.0))) - 0.0)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9626.9004) : injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(5437.5839)), bool(false))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            return;
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, 0 ^ (5)), (0 << _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(5, (5) >> 0)))), (false ? _GLF_FUZZED(54684) : _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(ivec4(52375, -87901, -13450, 43406)[0])))) >> 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(5), int(int(int(5))))), (~ (_GLF_IDENTITY(int(5), int(int(int(5)))))) - 0)))))))); _injected_loop_counter --)
            {
             return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) / 1.0))) > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base.x = _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base));
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base.z + GLF_merged3_0_1_13_1_1_13_2_1_14subgroup_basesubgroup_sizeworkgroup_base.x + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (true ? _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0) : _GLF_FUZZED(_injected_loop_counter))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))
      break;
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          continue;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.2) : injectionSwitch.x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     continue;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-68036) : 64))) | (_GLF_IDENTITY(64, (64) / 1))), 4);
 uint read_val = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(write_val, max(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), clamp(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(15644u) : _GLF_FUZZED(workgroup_size))))), _GLF_FUZZED(workgroup_size))))), write_val)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(write_val, max(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_size))), write_val))), (~ (_GLF_IDENTITY(write_val, max(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_size))), write_val)))) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(write_val, max(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_size))), write_val)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(write_val, max(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_size))), write_val))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(write_val, min(_GLF_IDENTITY(write_val, (write_val) | (write_val)), write_val)), max(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_size))), write_val)))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(write_val, max(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_size))), write_val)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(write_val, max(_GLF_IDENTITY(write_val, _GLF_IDENTITY((true ? write_val : _GLF_FUZZED(workgroup_size)), ((true ? write_val : _GLF_FUZZED(workgroup_size))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), write_val))), (~ (_GLF_IDENTITY(write_val, max(_GLF_IDENTITY(write_val, (true ? write_val : _GLF_FUZZED(workgroup_size))), write_val)))) >> 0u))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED(num_workgroup) : write_val)), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, (64) | (64)), 1), _GLF_IDENTITY(ivec2(ivec3(_GLF_IDENTITY(ivec2(64, 1), max(ivec2(64, 1), ivec2(64, 1))), 1)), ivec2(ivec4(ivec2(ivec3(_GLF_IDENTITY(ivec2(64, 1), max(ivec2(64, 1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(64, min(64, 64)), 1), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(64, min(64, 64)), 1))))), 1)), 1, 1))))), _GLF_IDENTITY((int(ivec2(64, 1))), (_GLF_IDENTITY((int(ivec2(64, 1))), clamp(_GLF_IDENTITY((int(ivec2(64, 1))), ((int(ivec2(64, 1)))) | ((int(ivec2(64, 1))))), (int(ivec2(64, _GLF_IDENTITY(1, (1) ^ 0)))), (int(ivec2(64, 1)))))) | 0) | _GLF_IDENTITY(0, max(0, 0)))), _GLF_IDENTITY(2, ~ (~ (2)))), (atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(556.588)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-19.00) : _GLF_IDENTITY(float(_GLF_FUZZED(556.588)), float(mat2x3(float(_GLF_FUZZED(556.588)), 1.0, 0.0, 1.0, 1.0, 0.0))))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : write_val)), (_GLF_IDENTITY(write_val, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(556.588)), float(float(float(_GLF_FUZZED(556.588))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(77.88)), float(injectionSwitch.x), bool(true)))), bool(true))), injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : write_val))) << 0u), _GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(64, 1)), min(int(ivec2(64, 1)), int(ivec2(64, 1)))), (int(ivec2(64, 1))) | 0)), 2)) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        continue;
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))), true, false)))))), true)))))), false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), (true) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), false, true)))))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), true && ((! (true)))))))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (true)), true))))))))), true, false)))))), true)))))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false)))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true)))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))), ! (! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true))))))))), (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (! (true)))))))))) && true))))))))), true, false)))))), true)))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false)))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2((true), false))), false || ((true))) || false), true, true), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, true)))) || false)) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), false || ((! (true)))))))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), ! (! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! _GLF_IDENTITY((! (! (true))), bool(bvec2(_GLF_IDENTITY((! (! (true))), ((! (! (true)))) || false), true))))))))))), true, false)))))), true)))))), (injectionSwitch.x < injectionSwitch.y)))) && true)))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))))
      continue;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   buf[virtual_gid] = uint(subgroupAllEqual(read_val));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, abs(1.0), round(length(normalize(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), min(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0))))), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0))), abs(0.0), 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - determinant(mat3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat4(injectionSwitch, 0.0, 1.0, abs(1.0), _GLF_IDENTITY(round(length(normalize(exp(vec2(0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(7.4) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(701.471), min(_GLF_FUZZED(701.471), _GLF_FUZZED(701.471)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, abs(1.0), abs(0.0), 1.0, 1.0, 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, abs(1.0), abs(0.0), 1.0, 1.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), bool(true)))))), (true ? mat3x2(round(length(normalize(exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0))))))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, 1.0))), 1.0)), sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) : _GLF_FUZZED(mat3x2(_GLF_IDENTITY(3.3, max(_GLF_IDENTITY(3.3, (3.3) * 1.0), 3.3)), -525.018, -5.7, -7.3, -3011.1494, 3352.1163))))), max(float(_GLF_IDENTITY(mat3x2(round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (_GLF_IDENTITY(true, (true) || false) ? mat3x2(round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) : _GLF_FUZZED(mat3x2(3.3, -525.018, -5.7, _GLF_IDENTITY(_GLF_IDENTITY(-7.3, (-7.3) - 0.0), _GLF_IDENTITY(float(mat4(-7.3, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), tan(0.0), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0)), (float(mat4(-7.3, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), tan(0.0), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0))) / 1.0)), -3011.1494, 3352.1163))))), float(_GLF_IDENTITY(mat3x2(round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(exp(vec2(0.0, 0.0))), vec2(1.0, 1.0) * (normalize(exp(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-2.7)), bool(false)))))))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(sqrt(0.0), 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(sqrt(0.0), 1.0)), (dot(vec2(1.0, 0.0), vec2(sqrt(0.0), 1.0))) * abs(round(length(normalize(vec3(1.0, 1.0, 1.0)))))))), mat2(1.0) * (mat4x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-81.78)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.0)), bool(false)))), bool(true))), 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(sqrt(0.0), 1.0)), dot(vec2(1.0, 0.0), vec2(sqrt(0.0), 1.0)))))))), injectionSwitch.x)) + _GLF_IDENTITY((normalize(exp(vec2(0.0, 0.0)))), max((normalize(exp(vec2(0.0, 0.0)))), (normalize(exp(vec2(0.0, 0.0))))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), mix(float(min(0.0, 0.0)), float(_GLF_FUZZED(9.5)), bool(false))))), float(_GLF_FUZZED(-5.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(abs(0.0), 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(abs(0.0), 0.0, 1.0, 0.0)))))), (false ? _GLF_FUZZED(1.3) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1096.4761)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0)), 0.0))), (true ? mat3x2(round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.5)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) : _GLF_FUZZED(mat3x2(3.3, _GLF_IDENTITY(-525.018, (true ? _GLF_IDENTITY(_GLF_IDENTITY(-525.018, 0.0 + (-525.018)), clamp(_GLF_IDENTITY(-525.018, 0.0 + (-525.018)), _GLF_IDENTITY(-525.018, 0.0 + (-525.018)), _GLF_IDENTITY(-525.018, 0.0 + (-525.018)))) : _GLF_FUZZED(-356.160))), -5.7, -7.3, -3011.1494, _GLF_IDENTITY(3352.1163, max(3352.1163, 3352.1163)))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), min(clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(-89.94)), bool(false))), (0.0) - 0.0), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, float(mat4x3((0.0) - 0.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0)))), 0.0)))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(7457.0711, 0.0 + (7457.0711)), clamp(7457.0711, 7457.0711, 7457.0711))))), 1.0, 1.0)) - mat4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)), min(injectionSwitch, injectionSwitch)), 0.0, 1.0, abs(1.0), round(length(normalize(_GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))), 0.0)), _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-1.7, float(mat3x4(-1.7, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), determinant(mat3(0.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0))))))), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))) - abs(_GLF_ZERO(0.0, injectionSwitch.x))), 0.0)), min(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), _GLF_IDENTITY(float(_GLF_FUZZED(float(false))), mix(float(float(_GLF_FUZZED(float(false)))), float(_GLF_FUZZED(-1668.4754)), bool(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? 3.0 : 7916.8098))), bool(false)))), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), _GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-95.77, 67.30, 9.7, -100.874, -7.0, 5.8, -26.74, 5294.9492)) : _GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 1.0, 0.0))))), 0.0)), min(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.7)), (float(_GLF_FUZZED(-1.7))) + 0.0), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), _GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), _GLF_IDENTITY(bool(true), (bool(true)) && true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)) : _GLF_FUZZED(3904.6312))), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), (vec2(mat4x2(_GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && true) ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), tan(0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), min(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), false, false, true)), (bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), false, false, true))) || false)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), _GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_FUZZED(-1.7), _GLF_FUZZED(-1.7)))), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1.7), 1.0 * (_GLF_FUZZED(-1.7))) : _GLF_FUZZED(41.98)))), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), false || (bool(bvec3(bool(false), true, false)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))) * mat2(1.0))), min((_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-95.77, 67.30, 9.7, -100.874, -7.0, 5.8, -26.74, 5294.9492)) : _GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 1.0, 0.0))))), 0.0)), min(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.7)), (float(_GLF_FUZZED(-1.7))) + 0.0), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), _GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), _GLF_IDENTITY(bool(true), (bool(true)) && true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)) : _GLF_FUZZED(3904.6312))), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), (vec2(mat4x2(_GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && true) ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), tan(0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), min(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), false, false, true)), (bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), false, false, true))) || false)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), _GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_FUZZED(-1.7), _GLF_FUZZED(-1.7)))), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1.7), 1.0 * (_GLF_FUZZED(-1.7))) : _GLF_FUZZED(41.98)))), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), false || (bool(bvec3(bool(false), true, false)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))) * mat2(1.0))), (_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-95.77, 67.30, 9.7, -100.874, -7.0, 5.8, -26.74, 5294.9492)) : _GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 1.0, 0.0))))), 0.0)), min(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-1.7)), (float(_GLF_FUZZED(-1.7))) + 0.0), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), _GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), _GLF_IDENTITY(bool(true), (bool(true)) && true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)) : _GLF_FUZZED(3904.6312))), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), (vec2(mat4x2(_GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && true) ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), tan(0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), min(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), false, false, true)), (bool(bvec4(_GLF_IDENTITY(bool(true), (bool(true)) || false), false, false, true))) || false)))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), _GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), min(_GLF_FUZZED(-1.7), _GLF_FUZZED(-1.7)))), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : exp(vec2(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true)), mix(float(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), (true ? _GLF_IDENTITY(_GLF_FUZZED(-1.7), 1.0 * (_GLF_FUZZED(-1.7))) : _GLF_FUZZED(41.98)))), float(0.0), bool(true))), float(_GLF_FUZZED(float(false))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, false)), false || (bool(bvec3(bool(false), true, false)))))))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.57) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6.6)), bool(false))))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.7)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 0.0)))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))) * mat2(1.0))))) - abs(vec2(0.0, 0.0))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat4(injectionSwitch, 0.0, 1.0, abs(1.0), _GLF_IDENTITY(round(length(normalize(exp(vec2(0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(round(length(normalize(exp(vec2(0.0, 0.0))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (true ? 1.0 : _GLF_FUZZED(620.997))))), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (true ? 1.0 : _GLF_FUZZED(620.997)))))) + 0.0)) / _GLF_ONE(1.0, injectionSwitch.y)), sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (true ? mat3x2(round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(exp(vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(exp(vec2(0.0, 0.0)), (_GLF_IDENTITY(exp(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(49531))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), max(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0))))) * vec2(1.0, 1.0)), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 0.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(exp(vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(exp(vec2(0.0, 0.0)), max(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0)))), (_GLF_IDENTITY(exp(vec2(0.0, 0.0)), max(exp(vec2(0.0, 0.0)), exp(vec2(0.0, 0.0))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * vec2(1.0, 1.0)), 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 0.0, _GLF_IDENTITY(round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), max(round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), round(length(normalize(vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))))), max(_GLF_IDENTITY(length(normalize(exp(vec2(0.0, 0.0)))), min(length(normalize(exp(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), _GLF_IDENTITY(length(normalize(exp(vec2(0.0, 0.0)))), _GLF_IDENTITY(float(mat4x3(length(normalize(exp(vec2(0.0, 0.0)))), length(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, sqrt(1.0), 0.0)), (false ? _GLF_FUZZED(383.840) : float(mat4x3(length(normalize(exp(vec2(0.0, 0.0)))), length(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, sqrt(1.0), 0.0))))))), _GLF_IDENTITY(length(normalize(exp(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.1))), 0.0)))), float(_GLF_IDENTITY(mat4x3(length(normalize(exp(vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat4x3(mat4(mat4x3(length(normalize(exp(vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))))), 1.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) : _GLF_FUZZED(mat3x2(3.3, -525.018, -5.7, -7.3, -3011.1494, 3352.1163))))), max(float(_GLF_IDENTITY(mat3x2(round(length(normalize(exp(vec2(0.0, 0.0))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), sqrt(0.0), 0.0, 0.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (true ? mat3x2(round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, _GLF_IDENTITY(sqrt(1.0), float(mat4x3(sqrt(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(3.2)), float(exp(0.0)), bool(true))), 1.0, 0.0, 0.0, 1.0, length(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), min(float(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) : _GLF_FUZZED(mat3x2(3.3, -525.018, -5.7, _GLF_IDENTITY(-7.3, (false ? _GLF_FUZZED(0.2) : -7.3)), -3011.1494, 3352.1163))))), float(_GLF_IDENTITY(mat3x2(round(length(_GLF_IDENTITY(normalize(_GLF_IDENTITY(exp(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec3(4.9, 7.3, -0.8))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(exp(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec3(4.9, 7.3, -0.8))))))), mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-0.2)), vec2((exp(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(length(vec3(4.9, _GLF_IDENTITY(7.3, (7.3) / 1.0), -0.8))))))))[0], (exp(vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))) ? 0.0 : _GLF_FUZZED(length(vec3(4.9, 7.3, _GLF_IDENTITY(-0.8, (_GLF_IDENTITY(-0.8, (-0.8) / 1.0)) / 1.0)))))))))[1]), bvec2(true, true)))))), vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-2.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-210.938)), bool(false)))))), _GLF_ZERO(0.0, injectionSwitch.x)) + (normalize(_GLF_IDENTITY(exp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(vec2(vec2(0.0, 0.0))), (true ? vec2(vec2(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch)))), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), sqrt(vec2(1.0, 1.0)) * (vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))), clamp(_GLF_IDENTITY(exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))), min(exp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), max(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) / vec2(1.0, 1.0)), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))))), exp(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(max(vec2(0.0, 0.0), vec2(0.0, 0.0)), (max(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(8.8), _GLF_FUZZED(8.0)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true), false, true, false))))))))))))), vec2(0.0, 0.0))) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(vec3(exp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))) * mat2(1.0))), _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))))), mat3(1.0) * (vec3(exp(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))) * mat2(1.0))), _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))))))))), exp(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))))))))), 1.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (true ? mat3x2(round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) : _GLF_FUZZED(mat3x2(3.3, _GLF_IDENTITY(-525.018, (true ? _GLF_IDENTITY(-525.018, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(-525.018, float(_GLF_IDENTITY(mat2(-525.018, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(-525.018, 0.0, 0.0, 0.0), (mat2(-525.018, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY((0.0 + (-525.018)) + 0.0, mix(float(_GLF_IDENTITY((0.0 + (-525.018)) + 0.0, ((0.0 + (-525.018)) + 0.0) / 1.0)), float(_GLF_FUZZED(-2.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) : _GLF_FUZZED(-356.160))), -5.7, -7.3, -3011.1494, _GLF_IDENTITY(3352.1163, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(3352.1163, abs(1.0), 1.0, 0.0, 0.0, 1.0, determinant(mat3(tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat3x4(3352.1163, abs(1.0), 1.0, 0.0, 0.0, 1.0, determinant(mat3(tan(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, abs(0.0))))), clamp(float(_GLF_IDENTITY(mat3x4(3352.1163, abs(1.0), 1.0, 0.0, 0.0, 1.0, determinant(mat3(tan(0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(determinant(mat3(5.4, 715.021, 823.274, 7.2, -4.2, -78.82, -892.285, -8.3, 1.2))))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, abs(0.0)), mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * (mat3x4(3352.1163, abs(1.0), 1.0, 0.0, 0.0, 1.0, determinant(mat3(tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, abs(0.0))))), float(_GLF_IDENTITY(mat3x4(3352.1163, abs(1.0), 1.0, 0.0, 0.0, 1.0, determinant(mat3(tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat3x4(3352.1163, abs(1.0), 1.0, 0.0, 0.0, 1.0, determinant(mat3(tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, abs(0.0))))), float(_GLF_IDENTITY(mat3x4(3352.1163, abs(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-927.502) : determinant(mat3(tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, abs(0.0)), mat4(1.0) * (mat3x4(3352.1163, abs(1.0), 1.0, 0.0, 0.0, 1.0, determinant(mat3(tan(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, abs(0.0)))))))))))))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) : _GLF_FUZZED(7457.0711), (false ? _GLF_FUZZED(dot(vec4(6.8, -621.733, -7.6, 1.0), vec4(915.058, -4450.3738, -2554.0029, -6.6))) : _GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) : _GLF_FUZZED(7457.0711), mix(float(true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) : _GLF_FUZZED(7457.0711)), float(_GLF_FUZZED(7.4)), bool(false))), max(true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) : _GLF_FUZZED(7457.0711), true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) : _GLF_FUZZED(7457.0711))))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED((vec2(4.5, 62.35) / 451.143)))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), false, false)), false || (bool(bvec4((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))) && (true)), (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -47371)); _injected_loop_counter --)
              {
               return;
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
        }
       else
        {
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), true))))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) + 0.0), 1.0)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-570.946))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     do
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8055.9437)), vec2(_GLF_FUZZED(_GLF_IDENTITY(171.391, min(171.391, 171.391))), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))))
              return;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
}
