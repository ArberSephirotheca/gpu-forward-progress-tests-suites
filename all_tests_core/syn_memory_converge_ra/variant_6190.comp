#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false, false, true)), bool(bvec2(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), false, false, true)), false))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(136.385))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 1.0, 1.0)), float(mat4x3(float(vec3(injectionSwitch.y, 1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + sin(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), ! (! (! (injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec2(1.0, 1.0)))))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, round(length(normalize(vec2(1.0, 1.0)))))))), true, false))), true, false, false)), bool(bvec3(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), false, true)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), true && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(32.21)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), true, false)), (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), true, false))) || false))) || false)) && true)) || false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(32.21)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), true, false)), (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), true, false))) || false))) || false)) && true)) || false))))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(34.97) : _GLF_IDENTITY(1.0, (1.0) - 0.0))))), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), mix(vec2(_GLF_FUZZED(-6.7), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[1]), vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], mix(float(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0]), float(_GLF_FUZZED(-7.1)), bool(false))), _GLF_FUZZED(float((vec4(14.90, -706.040, 5.4, 569.724) == vec4(31.63, -200.051, 27.26, 6.1))))), bvec2(true, false))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(32.21)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), max(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), float(float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)))), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), true, false)), (bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0)), float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0))))), true, false))) || false))) || false)) && true)) || false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(173407u, 40491u, 146761u)) : (gl_WorkGroupID))), ((gl_WorkGroupID)) | uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(173407u, 40491u, 146761u)) : (gl_WorkGroupID))), ((gl_WorkGroupID)) | uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), clamp((gl_WorkGroupID), (gl_WorkGroupID), (gl_WorkGroupID)))) | uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((workgroup_id + write_val), 1u * ((_GLF_IDENTITY(workgroup_id + write_val, min(workgroup_id + write_val, workgroup_id + write_val)))))), 1u * (_GLF_FUZZED(_GLF_IDENTITY((workgroup_id + write_val), 1u * ((_GLF_IDENTITY(workgroup_id + write_val, min(workgroup_id + write_val, workgroup_id + write_val)))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)), 0u + (workgroup_id)), max(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), _GLF_IDENTITY(workgroup_id, 0u + (workgroup_id))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(9.6)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))))).y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), min(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u)))))), uint(1u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), min(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u)))))), uint(1u)))))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), min(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u)))))), uint(1u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), min(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u)))))), uint(1u)))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), min(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u)))))), uint(1u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), min(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u))))) | (uint(1u)))))), uint(1u)))))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), 0u + (uint(1u))), uint(1u)))) | (uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), 0u + (uint(1u))), uint(1u)))) | (uint(1u))))))), uint(uvec3(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), 0u + (uint(1u))), uint(1u)))) | (uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), 0u + (uint(1u))), uint(1u)))) | (uint(1u))))))), 1u, 0u)))) | (0u | 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), clamp(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), max(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), 0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))), _GLF_IDENTITY(uint(1u), uint(uvec3(uint(1u), 0u, 1u))))) | 0u), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)))) | 0u, (true ? (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size))) | 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_size)))))) | 0u : _GLF_FUZZED(write_val)))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u | uint(_GLF_ONE(1.0, injectionSwitch.y))) * (1u))), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) << 0u), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), max(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))))))))))))))) << (90533u & 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat4x3(mat4(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), mix(float(_GLF_FUZZED(3.1)), float(float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), mat4x3(mat4(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), bool(true)))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(sqrt(1.0) * (injectionSwitch.x), (false ? _GLF_FUZZED(-76.36) : sqrt(1.0) * (injectionSwitch.x)))) > injectionSwitch.y, false)))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(0.0)) > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), min(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))))), _GLF_IDENTITY(0.0, (0.0) / determinant(mat2(1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0))), 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-493.225))), 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0))))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0))))).y), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-463.704)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2365.3258) : 1.0)), 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-463.704)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2365.3258) : 1.0)), 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-463.704)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2365.3258) : 1.0)), 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-463.704)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2365.3258) : 1.0)), 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0)))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-463.704)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2365.3258) : 1.0)), 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-463.704)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2365.3258) : 1.0)), 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0))))) * vec2(1.0, 1.0)), 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), vec2(mat4x2(vec2(mat3x4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-463.704)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2365.3258) : 1.0)), 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-463.704)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2365.3258) : 1.0)), 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0)))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-463.704)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2365.3258) : 1.0)), 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat4x2(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, tan(0.0), log(1.0), abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-463.704)), bool(false))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)))), (mat3(1.0, tan(0.0), log(1.0), abs(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 1.0, 1.0), vec4(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2365.3258) : 1.0)), 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 1.0))))) * vec2(1.0, 1.0)), 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, abs(0.0), 0.0, 1.0, 1.0, cos(0.0)))))))).y)) || false)))) || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6215.8927)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec2(! (_GLF_IDENTITY(! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-25.07)), bool(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(! (! (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | 0)))))), 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true && (! (_GLF_DEAD(false))))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x < injectionSwitch.y))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(read_val, read_val)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val)))))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(142150u) : ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val))))), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val)))))) / 1u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u ^ (uint(subgroupAllEqual(read_val))))))), ~ (~ _GLF_IDENTITY((uint(subgroupAllEqual(read_val))), 0u ^ ((uint(subgroupAllEqual(read_val)))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))))) ^ 0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY((uint(subgroupAllEqual(read_val))) << 0u, ((uint(subgroupAllEqual(read_val))) << 0u) * 1u))) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u)) ^ 0u, ((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u)) ^ 0u) ^ 0u)) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))))), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(_GLF_IDENTITY(read_val, uint(uint(_GLF_IDENTITY(read_val, min(read_val, read_val))))))))))), (false ? _GLF_FUZZED(142150u) : ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val))))), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u) : uint(subgroupAllEqual(read_val))))) >> (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) | 0u)))))))) / 1u)), 0u ^ ((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u ^ (uint(subgroupAllEqual(read_val))))) * 1u)), 0u ^ _GLF_IDENTITY(((uint(subgroupAllEqual(read_val)))), (0u & 104839u) | (((uint(subgroupAllEqual(read_val)))))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u ^ (uint(subgroupAllEqual(read_val))))) * 1u)), 0u ^ _GLF_IDENTITY(((uint(subgroupAllEqual(read_val)))), (0u & 104839u) | (((uint(subgroupAllEqual(read_val))))))))) | 0u), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(subgroup_base) : uint(subgroupAllEqual(read_val))))) ^ 0u)), 0u ^ ((uint(subgroupAllEqual(read_val))))), (false ? _GLF_FUZZED(num_workgroup) : ~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(subgroup_base) : uint(subgroupAllEqual(read_val))))) ^ 0u)), 0u ^ ((uint(subgroupAllEqual(read_val)))))))))), ~ (_GLF_IDENTITY(~ ((~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(subgroup_base) : uint(subgroupAllEqual(read_val))))) ^ 0u)), 0u ^ ((uint(subgroupAllEqual(read_val))))), (false ? _GLF_FUZZED(num_workgroup) : ~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(subgroup_base) : uint(subgroupAllEqual(read_val))))) ^ 0u)), 0u ^ ((uint(subgroupAllEqual(read_val))))))))))), (_GLF_IDENTITY(~ ((~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(subgroup_base) : uint(subgroupAllEqual(read_val))))) ^ 0u)), 0u ^ ((uint(subgroupAllEqual(read_val))))), (false ? _GLF_FUZZED(num_workgroup) : ~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(subgroup_base) : uint(subgroupAllEqual(read_val))))) ^ 0u)), 0u ^ ((uint(subgroupAllEqual(read_val))))))))))), ~ (~ (~ ((~ (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(subgroup_base) : uint(subgroupAllEqual(read_val))))) ^ 0u)), 0u ^ ((uint(subgroupAllEqual(read_val))))), (false ? _GLF_FUZZED(num_workgroup) : ~ _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(subgroup_base) : uint(subgroupAllEqual(read_val))))) ^ 0u)), 0u ^ ((uint(subgroupAllEqual(read_val))))))))))))))) * 1u)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, uint(uint(read_val))))), (uint(subgroupAllEqual(read_val))) << 0u)) ^ 0u, (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u)) ^ 0u))))), (buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) ^ (_GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val)))))), (false ? _GLF_FUZZED(142150u) : ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val))))), (_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ (uint(subgroupAllEqual(read_val)))))) / 1u)), 0u ^ ((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), ~ (~ _GLF_IDENTITY((uint(subgroupAllEqual(read_val))), 0u ^ ((uint(subgroupAllEqual(read_val)))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(subgroupAllEqual(read_val)), (uint(subgroupAllEqual(read_val))) << 0u)) ^ 0u, (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, (false ? _GLF_FUZZED(virtual_gid) : read_val)))), (uint(subgroupAllEqual(read_val))) << 0u)) ^ 0u)))))) ^ 0u)) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(268.729), _GLF_FUZZED(565.356)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
