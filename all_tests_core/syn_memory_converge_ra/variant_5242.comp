#version 460
struct _GLF_struct_9 {
 bool _f0;
 mat3x4 _f1;
 vec4 _f2;
 bool _f3;
 bvec2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 mat3x4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 mat4 _f1;
 ivec3 _f2;
 mat4x3 _f3;
 ivec4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 bvec2 _f1;
 uint _f2;
 mat3 _f3;
 ivec2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 uvec4 _f1;
 uvec4 _f2;
 vec2 _f3;
 uint read_val;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 ivec2 _f1;
 mat4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat2 _f1;
 bool _f2;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 mat2x3 _f1;
 mat2x4 _f2;
 int _f3;
 int _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 float _f1;
 mat2 _f2;
 mat4x2 _f3;
 mat3x2 _f4;
 uint _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 vec2 _f1;
 mat4 _f2;
 _GLF_struct_1 _f3;
 uint num_workgroup;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14subgroup_basesubgroup_idsubgroup_local_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x = subgroup_id;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14subgroup_basesubgroup_idsubgroup_local_idworkgroup_base.y = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y = subgroup_local_id;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14subgroup_basesubgroup_idsubgroup_local_idworkgroup_base.z = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(bvec4(true), 1.0, mat2(1.0), mat4x2(1.0), mat3x2(1.0), 1u), vec2(1.0), mat4(1.0), _GLF_struct_1(bvec2(true), mat2x3(1.0), mat2x4(1.0), 1, 1, bvec4(true)), gl_NumWorkGroups.x, _GLF_struct_2(mat3x2(1.0), mat2(1.0), true)));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14subgroup_basesubgroup_idsubgroup_local_idworkgroup_base.w = workgroup_base;
 uint subgroup_base = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14subgroup_basesubgroup_idsubgroup_local_idworkgroup_base.y * subgroup_size;
 GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14subgroup_basesubgroup_idsubgroup_local_idworkgroup_base.x = subgroup_base;
 uint virtual_gid = GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14subgroup_basesubgroup_idsubgroup_local_idworkgroup_base.w + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14subgroup_basesubgroup_idsubgroup_local_idworkgroup_base.x + GLF_merged4_0_1_13_1_1_11_2_1_17_3_1_14subgroup_basesubgroup_idsubgroup_local_idworkgroup_base.z;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(ivec3(1), ivec2(1), mat4(1.0), _GLF_struct_5(mat4x2(1.0), uvec4(1u), uvec4(1u), vec2(1.0), atomicLoad(write_val, 4, 64, 2)), _GLF_struct_10(_GLF_struct_6(uvec2(1u), bvec2(true), 1u, mat3(1.0), ivec2(1), ivec4(1)), _GLF_struct_7(bvec2(true), mat4(1.0), ivec3(1), mat4x3(1.0), ivec4(1), uvec2(1u)), _GLF_struct_8(uvec3(1u), mat3x4(1.0), mat2x4(1.0)), _GLF_struct_9(true, mat3x4(1.0), vec4(1.0), true, bvec2(true), vec3(1.0))));
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_struct_replacement_11._f3.read_val));
}
