#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(clamp((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0))), injectionSwitch, injectionSwitch))), (injectionSwitch), (injectionSwitch)), (clamp((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0))), injectionSwitch, injectionSwitch))), (injectionSwitch), (injectionSwitch))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(-68.63)), _GLF_IDENTITY(vec2(_GLF_FUZZED(68.72), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2(_GLF_FUZZED(68.72), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(68.72), (injectionSwitch)[1])))) * vec2(1.0, 1.0)), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec2(0, 1)))))], _GLF_IDENTITY(1.0 * ((injectionSwitch)[0]), _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0 * ((injectionSwitch)[0]), (1.0 * ((injectionSwitch)[0])) - 0.0))), float(vec4(_GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0 * ((injectionSwitch)[0]), (1.0 * ((injectionSwitch)[0])) - 0.0))), max(float(float(_GLF_IDENTITY(1.0 * ((injectionSwitch)[0]), (1.0 * ((injectionSwitch)[0])) - 0.0))), float(float(_GLF_IDENTITY(1.0 * ((injectionSwitch)[0]), (1.0 * ((injectionSwitch)[0])) - 0.0))))), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))), _GLF_FUZZED(-8.7)), bvec2(_GLF_IDENTITY(true, (true) || false), false))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(false, bool(bool(false))) || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(9.9), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, int(ivec2(0, 1)))))], _GLF_IDENTITY(1.0 * ((injectionSwitch)[0]), _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0 * ((injectionSwitch)[0]), (1.0 * ((injectionSwitch)[0])) - 0.0))), float(vec4(_GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0 * ((injectionSwitch)[0]), (1.0 * ((injectionSwitch)[0])) - 0.0))), max(float(float(_GLF_IDENTITY(1.0 * ((injectionSwitch)[0]), (1.0 * ((injectionSwitch)[0])) - 0.0))), float(float(_GLF_IDENTITY(1.0 * ((injectionSwitch)[0]), (1.0 * ((injectionSwitch)[0])) - 0.0))))), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))), _GLF_FUZZED(-8.7)), bvec2(_GLF_IDENTITY(true, (true) || false), false))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false)))))) || false));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | (0 << _GLF_IDENTITY(int(2), int(2))))); _injected_loop_counter --)
      {
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, false)))) && true)))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))));
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(95868u, 111130u, 188283u)))), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(95868u, 111130u, 188283u)))), 1u)) >> uvec4(0u, 0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(95868u, 111130u, 188283u)))), 1u), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(95868u, 111130u, 188283u)))), 1u)) >> uvec4(0u, 0u, 0u, 0u)))) * uvec3(1u, 1u, 1u))).x)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8833.8108), _GLF_FUZZED(801.989)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))))))))))
      barrier();
    }
   else
    {
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_injected_loop_counter > 0)), true && _GLF_IDENTITY(((! (_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) > 0))), (((! (_GLF_IDENTITY(_injected_loop_counter, int(ivec4(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) > 0)))) && _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(! (! ((! (_injected_loop_counter > 0)))), bool(bvec3(! (! ((! (_injected_loop_counter > 0)))), false, true)))))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2049.9316)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), max(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)))), injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-4575.8453, _GLF_IDENTITY(56.18, max(_GLF_IDENTITY(56.18, float(mat3x4(_GLF_IDENTITY(56.18, min(56.18, 56.18)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(56.18, min(_GLF_IDENTITY(56.18, min(56.18, 56.18)), 56.18))))).gr))).y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))), false))) && true))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6834.2247), _GLF_FUZZED(-2331.0629)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), injectionSwitch, injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mat2(1.0) * (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), injectionSwitch, injectionSwitch)), 0.0, determinant(mat3(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(1.0))), (true ? vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)), 0.0, determinant(mat3(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, abs(1.0))) : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(vec2(-4575.8453, 56.18).gr))).y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))), false)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(float(60082u)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[0], _GLF_FUZZED(-382.828)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(float(60082u)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[0], _GLF_FUZZED(-382.828)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))), false))) || false)), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(float(60082u)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[0], _GLF_FUZZED(-382.828)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(float(60082u)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[0], _GLF_FUZZED(-382.828)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))), false))) || false)), true && ((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(float(60082u)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[0], _GLF_FUZZED(-382.828)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), mix(vec2(_GLF_FUZZED(float(60082u)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[0], _GLF_FUZZED(-382.828)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))), false))) || false)))), true, _GLF_IDENTITY(true, (true) && true), false))) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-4575.8453, 56.18).gr))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))), false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))))))), ! (! (! ((! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-4575.8453, _GLF_IDENTITY(56.18, (_GLF_IDENTITY(56.18, (56.18) + 0.0)) / sqrt(1.0))).gr))).y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))), false))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)), (! (true)) || false))))))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(cos(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))).x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 atomicStore(write_val, uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u), min(virtual_gid, virtual_gid))), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 uint read_val = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) / 1)))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-82249))), 2))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (false ? _GLF_FUZZED((virtual_gid - write_val)) : atomicLoad(write_val, 4, 64, 2))), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (false ? _GLF_FUZZED((virtual_gid - write_val)) : atomicLoad(write_val, 4, 64, 2))), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (false ? _GLF_FUZZED((virtual_gid - write_val)) : atomicLoad(write_val, 4, 64, 2))), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (false ? _GLF_FUZZED((virtual_gid - write_val)) : atomicLoad(write_val, 4, 64, 2))), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), max(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))))), max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, _GLF_IDENTITY(4, min(4, 4)), 64, 2))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0, ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), 64, 2), 0u + (atomicLoad(_GLF_IDENTITY(write_val, 0u + (write_val)), 4, 64, 2))))), clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, _GLF_IDENTITY(64, (64) << 0), 2), 0u | _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) >> 0), (1 | 1), 0)))), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))), (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))) ^ 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 1u * (atomicLoad(write_val, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0, ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, clamp(4, 4, 4))))) / 1))))))) | 0) | (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))), (_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))) | 0)))) | 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0, max((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0))) - 0)))), 64, 2))), 0u + (atomicLoad(write_val, 4, 64, 2)))))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | 0))) | 0), 64, 2), 0u + (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(write_val, 4, 64, 2)) + 0u)) << (0u & 193617u)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, _GLF_IDENTITY(2, (2) >> 0)), 0u + (atomicLoad(write_val, 4, 64, 2))))), clamp(_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, 0 + (4)), (0 & -89073), (0 << _GLF_IDENTITY(int(5), int(5)))))), 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) / 1))), max((~ (_GLF_IDENTITY(4, (4) / 1))), (~ (_GLF_IDENTITY(4, (4) / 1))))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1)))))))))) << 0))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), ~ (~ (~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))))))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))))), min(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), ~ (~ (~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))))))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))))), clamp(uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), ~ (~ (~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))))))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))))), uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), ~ (~ (~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))))))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))))), uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), ~ (~ (~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))))))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), ~ (~ (~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))))))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))))), max(uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), ~ (~ (~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))))))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))))), uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))), ~ (~ (~ (_GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))) | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))))))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))))))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), max(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))))), ((_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), 0 | (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))))) * 1) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, int(ivec2(64, 1))), 64)), 2))))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))), (max(4, _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (true ? (_GLF_IDENTITY(4, (4) / 1)) : _GLF_FUZZED(83404)))) ^ 0))))) / 1))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - ((0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)) | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))), 0u | (0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))))), uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (4) / 1))), (~ (~ (_GLF_IDENTITY(4, (4) / 1)))) ^ 0))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), 4))) / 1), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) / 1)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) - 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) - 0))) * 1))))) / 1)))))) | 0, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(23161) : (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) | (1))))))), (max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) | (1)))))))) ^ 0))) | 0))), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ 0)), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0)), (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0))) | 0))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0))), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, ~ (~ (1)))))), ((~ (_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, ~ (~ (1))))))) >> 0))))) | 0), 64, 2), (atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2)) >> 0u), 0u + (atomicLoad(write_val, 4, 64, 2))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), min(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1))))))))) | 0)) >> 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))), min((_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0, ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0) | ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0)) >> 0)) - 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))), (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0)) >> 0), _GLF_IDENTITY(64, (64) ^ 0), 2), 0u + (atomicLoad(write_val, 4, 64, 2))))))), uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), (false ? _GLF_FUZZED(-65207) : (_GLF_IDENTITY(4, (4) / 1))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) / 1)), (-32821 & 0) | (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), ~ (~ ((_GLF_IDENTITY(4, (4) / 1)))))))))))) | 0), 64, 2), 0u + _GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), max((atomicLoad(write_val, 4, 64, 2)), _GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), clamp((atomicLoad(write_val, 4, 64, 2)), _GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), ~ (~ ((atomicLoad(write_val, 4, 64, 2))))), (atomicLoad(write_val, 4, 64, 2))))))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), (false ? _GLF_FUZZED(-75578) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0))), 64, 2), 0u + (atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, (2) << 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) + 0)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) + 0)))), clamp((~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) + 0)))), (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) + 0)))), (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) + 0)))))), (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, ((4) / 1) + 0)))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / 1)), 1 * ((_GLF_IDENTITY(4, (4) / 1))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), max(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))), (clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), _GLF_IDENTITY(0u, max(0u, 0u)) + (atomicLoad(write_val, 4, 64, 2))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), (atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2)) | (atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2))), 0u + (atomicLoad(write_val, 4, 64, 2))))), uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), (atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2)) ^ 0u), 0u + (atomicLoad(write_val, 4, 64, 2))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(write_val, 4, 64, 2)) * 1u), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-52269))), (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(_GLF_IDENTITY(int((4)), (int((4))) - 0))) / _GLF_IDENTITY(1, min(1, 1))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) | ((64))) / int(_GLF_ONE(1.0, injectionSwitch.y))), 2))))), clamp(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), _GLF_IDENTITY(0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + _GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), (_GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), clamp(_GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), ~ (~ ((atomicLoad(write_val, 4, 64, 2))))), (atomicLoad(write_val, 4, 64, 2)), _GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), ((atomicLoad(write_val, 4, 64, 2))) / 1u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (0u | _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + _GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), (_GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), clamp(_GLF_IDENTITY((atomicLoad(write_val, _GLF_IDENTITY(4, ~ (~ (4))), 64, 2)), ~ (~ ((atomicLoad(write_val, 4, 64, 2))))), (atomicLoad(write_val, 4, 64, 2)), _GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), ((atomicLoad(write_val, 4, 64, 2))) / 1u)))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), (false ? _GLF_FUZZED(108501u) : (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + _GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), (_GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), clamp(_GLF_IDENTITY((atomicLoad(write_val, _GLF_IDENTITY(4, ~ (~ (4))), 64, 2)), ~ (~ ((atomicLoad(write_val, 4, 64, 2))))), (atomicLoad(write_val, 4, 64, 2)), _GLF_IDENTITY((atomicLoad(write_val, 4, 64, 2)), ((atomicLoad(write_val, 4, 64, 2))) / 1u)))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, (write_val) >> 0u), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> (1 ^ 1)), (4) / 1))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> (1 ^ 1)), (4) / 1))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> (1 ^ 1)), (4) / 1)))) - (0 << _GLF_IDENTITY(int(6), int(6))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> (1 ^ 1)), (4) / 1))), ~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> (1 ^ 1)), (4) / 1)))))))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, _GLF_IDENTITY(4, (4) | 0), 64, 2))))), uint(uint(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2)))))))), _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))), ((_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1)))))))) << 0) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, 64, 2))))), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), 0u | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) / 1))))))) | 0), 64, 2), 0u + (atomicLoad(write_val, 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(34586) : 64)), 64)), 2)))))) >> (0u & 197712u))))));
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (true ? _GLF_IDENTITY(6, ~ (~ (_GLF_IDENTITY(6, _GLF_IDENTITY((6), (_GLF_IDENTITY((6), ((6)) | ((6)))) / 1) + 0)))) : _GLF_FUZZED((~ 66722))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   do
    {
     buf[virtual_gid] = uint(subgroupAllEqual(read_val));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED((822.295 - 4066.0629)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.0)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED((822.295 - 4066.0629)), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(-5.0), min(_GLF_FUZZED(-5.0), _GLF_FUZZED(-5.0)))), bvec2(true, false))) / vec2(1.0, 1.0))).x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), true, false, true)))))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false))))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     barrier();
    }
  }
}
