#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0))), mix(vec2((vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 0.0, cos(0.0))))[0], _GLF_FUZZED((6.1))), vec2(_GLF_FUZZED(-3798.1321), (vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0)), 0.0, cos(0.0))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(312.085), (injectionSwitch)[1]), bvec2(false, true))).y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, (false ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, (false ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false))))))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), 1.0, tan(0.0), 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), 0.0)), mix(float(_GLF_FUZZED(750.480)), float(float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), mix(float(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), float(_GLF_FUZZED(-120.724)), bool(false))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), 0.0))), bool(true)))))), (mat4x3(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), min(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))))), 0.0)))), float(vec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), min(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))))), 0.0)))), 1.0, 1.0)))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, tan(0.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-27.85) : injectionSwitch.y))) - length(0.0))), (max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(312.085), (injectionSwitch)[1]), bvec2(false, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)))))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(_GLF_IDENTITY(-5.1, max(_GLF_IDENTITY(-5.1, 0.0 + (-5.1)), -5.1))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, (false ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, (false ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), 1.0, tan(0.0), 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0), sin(0.0)))), 0.0)), mix(float(_GLF_FUZZED(750.480)), float(_GLF_IDENTITY(float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-906.434))), tan(0.0), sin(0.0))), dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-195.665)), float(1.0), bool(true))), 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), 0.0)), clamp(float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), 0.0)), float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, tan(0.0), sin(0.0)), mat3(1.0) * (vec3(0.0, tan(0.0), sin(0.0)))))), 0.0)), float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), 0.0))))), bool(true)))))), (mat4x3(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(44.06), max(_GLF_FUZZED(44.06), _GLF_FUZZED(44.06))) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), mix(vec4(_GLF_FUZZED((9.7 - 3.3)), (vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[3]), vec4(_GLF_IDENTITY((vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[0], clamp((vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[0])), _GLF_FUZZED(747.113), _GLF_FUZZED(-89.84), _GLF_FUZZED(26.93)), bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))))) - abs(0.0)), 0.0))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, tan(0.0))) - mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-27.85) : injectionSwitch.y))) - length(0.0)))) / cos(0.0)))))), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(312.085), (injectionSwitch)[1]), bvec2(false, true))).y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, (false ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, (false ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false))))))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), 1.0, tan(0.0), 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), 0.0)), mix(float(_GLF_FUZZED(750.480)), float(float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), mix(float(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), float(_GLF_FUZZED(-120.724)), bool(false))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), 0.0))), bool(true)))))), (mat4x3(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), min(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))))), 0.0)))), float(vec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), min(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))))), 0.0)))), 1.0, 1.0)))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, tan(0.0))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-27.85) : injectionSwitch.y))) - length(0.0))), (max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), vec2(_GLF_FUZZED(312.085), (injectionSwitch)[1]), bvec2(false, true))).y, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true)))))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(_GLF_IDENTITY(-5.1, max(_GLF_IDENTITY(-5.1, 0.0 + (-5.1)), -5.1))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, (false ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), float(vec4(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, (false ? _GLF_FUZZED(7.5) : _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), 1.0, tan(0.0), 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0), sin(0.0)))), 0.0)), mix(float(_GLF_FUZZED(750.480)), float(_GLF_IDENTITY(float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-906.434))), tan(0.0), sin(0.0))), dot(vec3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-195.665)), float(1.0), bool(true))), 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), 0.0)), clamp(float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), 0.0)), float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, tan(0.0), sin(0.0)), mat3(1.0) * (vec3(0.0, tan(0.0), sin(0.0)))))), 0.0)), float(mat4x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, tan(0.0), sin(0.0)))), 0.0))))), bool(true)))))), (mat4x3(_GLF_IDENTITY(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)), min(false ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_IDENTITY(_GLF_FUZZED(44.06), max(_GLF_FUZZED(44.06), _GLF_FUZZED(44.06))) : injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))))), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), mix(vec4(_GLF_FUZZED((9.7 - 3.3)), (vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[3]), vec4(_GLF_IDENTITY((vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[0], clamp((vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[0], (vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))[0])), _GLF_FUZZED(747.113), _GLF_FUZZED(-89.84), _GLF_FUZZED(26.93)), bvec4(_GLF_IDENTITY(true, (true) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec4(1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(0.0, (0.0) * exp(0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))))) - abs(0.0)), 0.0))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) ? _GLF_FUZZED(-5.1) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(44.06) : injectionSwitch.y)))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 0.0, tan(0.0))) - mat4x3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-27.85) : injectionSwitch.y))) - length(0.0)))) / cos(0.0)))))), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6.5))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0)))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(24898u, 121303u, _GLF_IDENTITY(87873u, (_GLF_IDENTITY(87873u, _GLF_IDENTITY(max(87873u, 87873u), (_GLF_IDENTITY(max(87873u, 87873u), (max(_GLF_IDENTITY(87873u, 0u ^ (87873u)), 87873u)) ^ 0u)) | (max(87873u, 87873u))))) / 1u))) : gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, abs(0.0), 0.0), mix(vec3((vec3(injectionSwitch.y, abs(0.0), 0.0))[0], (vec3(injectionSwitch.y, abs(0.0), 0.0))[1], _GLF_FUZZED(2.6)), vec3(_GLF_FUZZED(159.683), _GLF_FUZZED(-1780.9497), (vec3(injectionSwitch.y, abs(0.0), 0.0))[2]), bvec3(false, false, true)))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)), (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))) && true))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true))), false))))))) && true))) && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))) && true))) && (false)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true)))), (bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))) && true))) && (false))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), (bool(bvec4(_GLF_DEAD(false), true, false, true))) || false))) || false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), false))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))) || false))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), false || (true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-84.65)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-84.65)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), false || (bool(true))))))))) > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, false))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) * ((injectionSwitch)), max(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)), mat2(_GLF_IDENTITY(1.0, (1.0) * cos(0.0))) * ((injectionSwitch)))))))), log(1.0), 0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 1.0), (mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? -4049.9781 : -3.0)), _GLF_FUZZED(-9.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + (injectionSwitch)), 0.0, 1.0, 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 1.0, 1.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)))))))), log(1.0), 0.0, 0.0, 0.0))))), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.4) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 1.0, 1.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-526.402) : 0.0))))) + (injectionSwitch)), 0.0, 1.0, 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 1.0, 1.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(6.6)), vec2(_GLF_FUZZED(-34.27), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), clamp(mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch)))), mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)))))))), log(1.0), 0.0, 0.0, 0.0))))), 0.0, 1.0, 1.0, 1.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + (injectionSwitch)), 0.0, 1.0, 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, 1.0, 1.0, 1.0), (mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), (false ? _GLF_FUZZED(vec2(2.5, -1683.7598)) : vec2(0.0, 0.0) + (injectionSwitch)))), 0.0, 1.0, 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - vec2(0.0, 0.0)))[1]), bvec2(false, true)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-27.17), _GLF_FUZZED(float(false))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), sin(0.0), 1.0, 1.0, 0.0, 1.0)))))), float(_GLF_FUZZED(14.85)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), true, false)))) && true)) || false)) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false), false)))) && true))), _GLF_IDENTITY(false || (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true)))), ! (! (false || (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true))))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(bvec3(false, true, true), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (true)), true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (true)), true), true)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, true && (true)), true), true))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))) && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), true)))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))))) * (1u & 1u))), (false ? _GLF_FUZZED(write_val) : workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))), 0u ^ (~ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), max(((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))))))) * (1u & 1u))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))))) * (1u & 1u))), (false ? _GLF_FUZZED(write_val) : workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))), 0u ^ (~ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), max(((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))))))) * (1u & 1u)))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))))) * (1u & 1u))), (false ? _GLF_FUZZED(write_val) : workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), min(_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u))))))), ~ (_GLF_IDENTITY(~ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))), 0u ^ (~ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), (1u << _GLF_IDENTITY(uint(4u), uint(4u))) << 0u), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(4u), uint(4u)), min(1u << _GLF_IDENTITY(uint(4u), uint(4u)), 1u << _GLF_IDENTITY(uint(4u), uint(4u)))), 1u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), uint(uint(uint(_GLF_IDENTITY(4u, (4u) >> 0u)))))))))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), subgroup_base))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), max(((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))))))) * (1u & 1u))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), (virtual_gid) >> 0u)), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(vec3(8.9, -9474.8199, 7640.6740))))))) > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), ! (! (! (bool(_GLF_IDENTITY(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), (false || (_GLF_IDENTITY(false, (false) || false))) || false)), _GLF_IDENTITY(false, ! (! (false))), false, true)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, false, true))), true && ((bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, false, true))))) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), true && ((false))))), true && (bool(bool(_GLF_IDENTITY((false), true && ((false)))))))) || false))), false, false, true))), true && ((bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, false, true))))) && true, false || (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, false, true))), true && ((bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, false, true))))) && true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))), false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, ~ (~ (4))), 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), true)))), _GLF_IDENTITY(true, true && (true)) && (bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec4(bvec3((false), true, true), true)))))))), false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
}
