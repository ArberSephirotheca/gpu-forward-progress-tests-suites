#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(1.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(acos(6992.2114))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true, false)))) || false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), (false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true)))))) && true, ((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), true && (bool(bvec2(_GLF_DEAD(false), true)))))) && true) && true)), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))) && true))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.3) : injectionSwitch.x)) > injectionSwitch.y)))))))) && true, true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-35.34)), float(injectionSwitch.y), bool(true)))) - 0.0)))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false, false, true)))) && true))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.3) : injectionSwitch.x)) > injectionSwitch.y)))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(43.61)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, tan(0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) + _GLF_ZERO(0.0, injectionSwitch.x))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))), -439.252, 5.8).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(_GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), (vec2((_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))))[0], _GLF_FUZZED(2.1))) * vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-5037.8419), ((injectionSwitch))[1]), bvec2(false, true)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))]), bvec2(true, true))).y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(vec4(-48.45, _GLF_IDENTITY(_GLF_IDENTITY(61.47, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-7997.9898 - -86.12)) : _GLF_IDENTITY(61.47, min(61.47, 61.47)))), float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), _GLF_IDENTITY(-439.252, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -439.252 : _GLF_FUZZED(-55.80))), 5.8).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(-5037.8419), ((injectionSwitch))[1]), bvec2(false, true)))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 0)), int(int(int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 0))))))]), bvec2(true, true))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(vec4(-48.45, _GLF_IDENTITY(_GLF_IDENTITY(61.47, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-7997.9898 - -86.12)) : _GLF_IDENTITY(61.47, min(61.47, 61.47)))), float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), _GLF_IDENTITY(-439.252, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -439.252 : _GLF_FUZZED(-55.80))), 5.8).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(-5037.8419), ((injectionSwitch))[1]), bvec2(false, true)))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 0)), int(int(int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 0))))))]), bvec2(true, true))).y, mix(float(_GLF_FUZZED(-2712.4965)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(vec4(-48.45, _GLF_IDENTITY(_GLF_IDENTITY(61.47, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-7997.9898 - -86.12)) : _GLF_IDENTITY(61.47, min(61.47, 61.47)))), float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), _GLF_IDENTITY(-439.252, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -439.252 : _GLF_FUZZED(-55.80))), 5.8).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(-5037.8419), ((injectionSwitch))[1]), bvec2(false, true)))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 0)), int(int(int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 0))))))]), bvec2(true, true))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(vec4(-48.45, _GLF_IDENTITY(_GLF_IDENTITY(61.47, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-7997.9898 - -86.12)) : _GLF_IDENTITY(61.47, min(61.47, 61.47)))), float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), _GLF_IDENTITY(-439.252, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -439.252 : _GLF_FUZZED(-55.80))), 5.8).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(-5037.8419), ((injectionSwitch))[1]), bvec2(false, true)))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 0)), int(int(int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 0))))))]), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(vec4(-48.45, _GLF_IDENTITY(_GLF_IDENTITY(61.47, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-7997.9898 - -86.12)) : _GLF_IDENTITY(61.47, min(61.47, 61.47)))), float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), _GLF_IDENTITY(-439.252, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -439.252 : _GLF_FUZZED(-55.80))), 5.8).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(-5037.8419), ((injectionSwitch))[1]), bvec2(false, true)))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 0)), int(int(int(ivec2(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), 0))))))]), bvec2(true, true))).y)), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), -439.252, 5.8).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(-5037.8419), ((injectionSwitch))[1]), bvec2(false, true)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))]), bvec2(true, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), -439.252, 5.8).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(-5037.8419), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) || false), true)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))]), bvec2(true, true))).y))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(_GLF_IDENTITY(vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(61.47, min(61.47, 61.47)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))), clamp(clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))), (false ? _GLF_FUZZED(656.793) : clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))))), clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)))))), _GLF_IDENTITY(61.47, _GLF_IDENTITY(min(61.47, 61.47), clamp(min(61.47, 61.47), _GLF_IDENTITY(min(61.47, 61.47), (_GLF_IDENTITY(min(61.47, 61.47), max(min(61.47, 61.47), min(61.47, 61.47)))) * exp(0.0)), min(61.47, 61.47)))), _GLF_IDENTITY(61.47, min(61.47, 61.47)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), -439.252, 5.8).x, min(vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(61.47, min(61.47, 61.47)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))), clamp(clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))), (false ? _GLF_FUZZED(656.793) : clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))))), clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)))))), _GLF_IDENTITY(61.47, _GLF_IDENTITY(min(61.47, 61.47), clamp(min(61.47, 61.47), _GLF_IDENTITY(min(61.47, 61.47), (_GLF_IDENTITY(min(61.47, 61.47), max(min(61.47, 61.47), min(61.47, 61.47)))) * exp(0.0)), min(61.47, 61.47)))), _GLF_IDENTITY(61.47, min(61.47, 61.47)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), -439.252, 5.8).x, vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(61.47, min(61.47, 61.47)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))), clamp(clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))), (false ? _GLF_FUZZED(656.793) : clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47))))), clamp(_GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)), _GLF_IDENTITY(61.47, min(61.47, 61.47)))))), _GLF_IDENTITY(61.47, _GLF_IDENTITY(min(61.47, 61.47), clamp(min(61.47, 61.47), _GLF_IDENTITY(min(61.47, 61.47), (_GLF_IDENTITY(min(61.47, 61.47), max(min(61.47, 61.47), min(61.47, 61.47)))) * exp(0.0)), min(61.47, 61.47)))), _GLF_IDENTITY(61.47, min(61.47, 61.47)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), -439.252, 5.8).x)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(-5037.8419), _GLF_IDENTITY(((injectionSwitch))[1], clamp(((injectionSwitch))[1], ((injectionSwitch))[1], ((injectionSwitch))[1]))), bvec2(false, true)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))]), bvec2(true, true))).y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), cos(0.0)))), -439.252, 5.8).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(_GLF_IDENTITY(vec2(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))[0], _GLF_FUZZED(2.1)), (vec2(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[0], _GLF_FUZZED(2.1))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-5037.8419), ((injectionSwitch))[1]), bvec2(false, true)))[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))]), bvec2(true, true))).y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(_GLF_IDENTITY(vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), -439.252, 5.8), (_GLF_IDENTITY(vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), -439.252, 5.8), (vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), -439.252, 5.8)) * mat4(1.0))) - vec4(0.0, 0.0, 0.0, 0.0)).x)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(0.8))), _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5037.8419), float(vec3(_GLF_FUZZED(-5037.8419), cos(0.0), 0.0))), ((injectionSwitch))[1]), bvec2(false, true)))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, min((1) >> 0, (1) >> 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))) ^ 0)) ^ 0)]), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec2((true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))).y))), false || (_GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), -439.252, 5.8).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5037.8419), float(vec3(_GLF_FUZZED(-5037.8419), cos(0.0), 0.0))), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) * mat2(1.0))))[1]), bvec2(false, true)))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))) ^ 0)) ^ 0)], min(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5037.8419), float(vec3(_GLF_FUZZED(-5037.8419), cos(0.0), 0.0))), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) * mat2(1.0))))[1]), bvec2(false, true)))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))) ^ 0)) ^ 0)], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(2.1)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5037.8419), float(vec3(_GLF_FUZZED(-5037.8419), cos(0.0), 0.0))), _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) * mat2(1.0))))[1]), bvec2(false, true)))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))) ^ 0)) ^ 0)]))), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec2((true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))).y))), (bool(bool((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((74.69 / -17.18)), _GLF_FUZZED(vec4(-48.45, _GLF_IDENTITY(61.47, float(mat4x2(_GLF_IDENTITY(61.47, min(61.47, 61.47)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))), -439.252, 5.8).x)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-5037.8419), float(vec3(_GLF_FUZZED(-5037.8419), cos(0.0), 0.0))), ((injectionSwitch))[1]), bvec2(false, true)))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | 0), _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) >> 0)))) ^ 0)) ^ 0)]), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(bvec2((true) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))).y)))) && true)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(bvec4(false, true, false, false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0))) * vec2(1.0, 1.0), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0))) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0))) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) ^ 0u), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))), clamp(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, 0u ^ (0u)))), uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, 0u ^ (0u))), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), gl_WorkGroupSize)), 0u)) ^ uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), clamp(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, (_GLF_IDENTITY((0u) - 0u, ((0u) - 0u) / 1u)) >> (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(min(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) | (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], gl_WorkGroupSize[2])), 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)), 0u)), 0u)))), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(70390u, 0u + (70390u)), clamp(_GLF_IDENTITY(70390u, 0u + (70390u)), _GLF_IDENTITY(70390u, 0u + (70390u)), _GLF_IDENTITY(70390u, 0u + (70390u)))), 126934u, 142095u)) : _GLF_IDENTITY(min(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(1u, _GLF_IDENTITY(1u, (1u) * 1u), 1u) * (_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), (uvec3(uvec4(gl_WorkGroupSize, 0u))) >> uvec3(0u, 0u, 0u)))), uvec3(uvec4(gl_WorkGroupSize, 0u))), (false ? _GLF_FUZZED(uvec3(151697u, 37429u, 53548u)) : min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))))))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (0u) / 1u)), (uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (0u) / 1u))) << uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))), uvec3(uvec4(gl_WorkGroupSize, 0u))))), min(clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))))), clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | 0)], ~ (~ (gl_WorkGroupSize[_GLF_IDENTITY(1, (1) | 0)]))), gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), 0u)))))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), clamp(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(max(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), (_GLF_IDENTITY(max(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), clamp(max(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), max(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), max(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))))) * uvec3(1u, 1u, 1u))), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, _GLF_IDENTITY(min(_GLF_IDENTITY(0u, 1u * (0u)), 0u), clamp(min(_GLF_IDENTITY(0u, 1u * (0u)), 0u), min(_GLF_IDENTITY(0u, 1u * (0u)), 0u), min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)))))), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))) : 0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))), clamp(_GLF_IDENTITY(_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))), clamp(_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))), _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))), _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))))), _GLF_IDENTITY(_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))), (_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28)))) | (_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))))), _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))))) : _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, 0u ^ (0u)))), uint(uint(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))) : 0u)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))), clamp(_GLF_IDENTITY(_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))), clamp(_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))), _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))), _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))))), _GLF_IDENTITY(_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))), (_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28)))) | (_GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))))), _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))))) : _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u, 0u ^ (0u)))), uint(uint(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))) : 0u))))) ^ 0u) ^ 0u)))))))))))).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), clamp(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, 0u ^ (0u)))), uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), gl_WorkGroupSize)), 0u)) ^ uvec4(0u, 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(69521u, 105150u, 120046u, 11150u)) : _GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), gl_WorkGroupSize)), 0u)) ^ uvec4(0u, 0u, 0u, 0u))))), (false ? _GLF_FUZZED(uvec4(145766u, 27026u, 160519u, 55622u)) : _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), gl_WorkGroupSize)), 0u)) ^ uvec4(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))), (uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), gl_WorkGroupSize)), 0u)) ^ uvec4(0u, 0u, 0u, 0u)))) - uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), (false ? _GLF_FUZZED(uvec3(70390u, 126934u, 142095u)) : _GLF_IDENTITY(min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), (false ? _GLF_FUZZED(uvec3(151697u, _GLF_IDENTITY(37429u, min(_GLF_IDENTITY(37429u, (37429u) | (37429u)), 37429u)), 53548u)) : min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))))))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (0u) - 0u))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))), uvec3(uvec4(gl_WorkGroupSize, 0u))))), min(clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))))), clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), 0u)))))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), clamp(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), max(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)))), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-0.9)), float(injectionSwitch.y), bool(true))))) ? _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))) : 0u))))))))))).x, _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), clamp(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, 0u ^ (0u)))), uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(min(write_val, subgroup_id)))), 0u, 0u) | (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), gl_WorkGroupSize)), 0u)) ^ uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) - uvec4(0u, 0u, 0u, 0u))), uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), (true ? _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), max(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))) : _GLF_FUZZED(uvec3(162025u, 39007u, 189352u)))), clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), (false ? _GLF_FUZZED(uvec3(70390u, 126934u, 142095u)) : _GLF_IDENTITY(min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(151697u, ~ (~ (151697u))), 37429u, 53548u)) : min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))))))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (uvec4(gl_WorkGroupSize, 0u))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, _GLF_IDENTITY(94628u, (94628u) / 1u), 52829u)) : uvec4(gl_WorkGroupSize, 0u)))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))), (uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(3751u, 0u + (3751u)), 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u)))))))) ^ uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) + uvec4(0u, 0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))))), uvec3(uvec4(gl_WorkGroupSize, 0u))))), min(clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), (min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))) >> uvec3(0u, 0u, 0u)))), clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) + (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))), gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), 0u)))))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), clamp(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), max(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (true ? uvec4(gl_WorkGroupSize, 0u) : _GLF_FUZZED(uvec4(131018u, 99537u, 118769u, 115066u))))), uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)))), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))) : 0u))))))))))).x : _GLF_FUZZED((subgroup_id & subgroup_id))), (false ? _GLF_FUZZED(atomicAnd(subgroup_local_id, subgroup_size)) : (true ? _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), clamp(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, 0u ^ (0u)))), uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), uvec4(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) | (0u)) : _GLF_FUZZED(min(write_val, subgroup_id)))), 0u, 0u) | (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))), gl_WorkGroupSize)), 0u)) ^ uvec4(0u, 0u, 0u, 0u))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) - uvec4(0u, 0u, 0u, 0u))), uvec3(uvec4(gl_WorkGroupSize, 0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), (true ? _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), max(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))) : _GLF_FUZZED(uvec3(162025u, 39007u, 189352u)))), clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), (false ? _GLF_FUZZED(uvec3(70390u, 126934u, 142095u)) : _GLF_IDENTITY(min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(151697u, ~ (~ (151697u))), 37429u, 53548u)) : min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))))))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (uvec4(gl_WorkGroupSize, 0u))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)), 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))), uvec3(uvec3(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, _GLF_IDENTITY(94628u, (94628u) / 1u), 52829u)) : uvec4(gl_WorkGroupSize, 0u)))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))), (uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(3751u, 0u + (3751u)), 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u)))))))) ^ uvec3(0u, 0u, 0u))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (uvec4(gl_WorkGroupSize, 0u)) + uvec4(0u, 0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (false ? _GLF_FUZZED(uvec4(3751u, 149085u, 94628u, 52829u)) : uvec4(gl_WorkGroupSize, 0u))))))))), uvec3(uvec4(gl_WorkGroupSize, 0u))))), min(clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u))), (min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)))) >> uvec3(0u, 0u, 0u)))), clamp(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], (gl_WorkGroupSize[1]) + (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))), gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)), 0u)))))))), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), clamp(_GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, 0u)), max(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 0u), (true ? uvec4(gl_WorkGroupSize, 0u) : _GLF_FUZZED(uvec4(131018u, 99537u, 118769u, 115066u))))), uvec3(uvec4(gl_WorkGroupSize, 0u)))), uvec3(uvec4(gl_WorkGroupSize, 0u)), _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)))), min(uvec3(uvec4(gl_WorkGroupSize, 0u)), uvec3(uvec4(gl_WorkGroupSize, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(packSnorm4x8(vec4(52.28, -2.4, -9443.1098, 38.28))) : 0u))))))))))).x : _GLF_FUZZED((subgroup_id & subgroup_id))))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), (vec2(mat2x4(injectionSwitch, 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0))) * mat2(1.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || _GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-705.833))) : _GLF_FUZZED(257.023))), injectionSwitch.x))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(341.205)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x : _GLF_FUZZED(7983.8833))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false, false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(read_val)), 0u ^ (uint(subgroupAllEqual(read_val))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6296.3851) : injectionSwitch.y)))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6296.3851) : injectionSwitch.y)))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))))))) && true, ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6296.3851) : injectionSwitch.y)))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))))))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
