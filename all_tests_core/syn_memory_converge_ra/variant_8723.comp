#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec2((false), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), true))))) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bvec2((false), false)))) && true)), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bvec2((false), false)))) && true)), true && (_GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bvec2((false), false)))) && true)), ! (! ((! _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bvec2((false), false)))) && true)))))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (bool(bvec3(_GLF_DEAD(false), false, true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(36.02), _GLF_FUZZED(-7.3)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, true))))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.9, 5.8))))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.9, 5.8))))), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.9, 5.8)))))) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.9, 5.8))))), mix(vec2(_GLF_FUZZED(-7.6), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.9, 5.8))))))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.9, 5.8))))))[0], _GLF_FUZZED(-2.8)), bvec2(true, false))))) * mat2(1.0)).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-714.821), _GLF_FUZZED(vec4(-98.29, 2153.8530, -5.3, -296.221).s)), bvec2(false, false))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, bool(bvec4((injectionSwitch.x > injectionSwitch.y) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(820.888, 7.1)))))).y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-699.086, -8.0)) : vec2(0.0, 0.0)))).x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) * 1.0))) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-699.086, -8.0)) : vec2(0.0, 0.0)))).x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) * 1.0))) > injectionSwitch.y))))), ! (! ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(-699.086, -8.0)) : vec2(0.0, 0.0)))).x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) * 1.0))) > injectionSwitch.y)))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), clamp((0u), _GLF_IDENTITY((0u), 1u * ((0u))), _GLF_IDENTITY((0u), 0u | ((0u)))))), 0u)))), _GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY(min(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 0u)), max(_GLF_IDENTITY(min(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 0u)), (false ? _GLF_FUZZED((true ? uvec3(27558u, 159371u, 84875u) : uvec3(129467u, 6228u, 139052u))) : min(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 0u)))), _GLF_IDENTITY(min(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 0u)), (min(uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), 0u))) - uvec3(0u, 0u, 0u)))))), gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.0) : 0.0))), (mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(183.693)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.0) : 0.0))), (mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(183.693)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.0) : 0.0))), (mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(183.693)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))) > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.0) : 0.0))), (mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(183.693)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.0) : 0.0))), (mat3x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(183.693)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))) > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) | 0u)) - 0u)), uint(6u))) | (gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY((0u) + 0u, (_GLF_IDENTITY((0u) + 0u, ~ (_GLF_IDENTITY(~ ((0u) + 0u), ~ (~ (~ ((0u) + 0u))))))) ^ 0u)) - 0u)) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, 6u))), uint(6u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) << _GLF_IDENTITY(uint(6u), uint(6u))), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) << _GLF_IDENTITY(uint(6u), uint(6u))), ~ (~ (((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) << _GLF_IDENTITY(uint(6u), uint(6u)))))), ((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) << _GLF_IDENTITY(uint(6u), uint(6u))), ((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) << _GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)), ((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> 0u))) << 0u, (((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)), ((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> 0u))) << 0u) >> 0u))), 0u ^ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (1u ^ 1u) + (_GLF_IDENTITY(0u, (0u) << 0u)))) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(0u ^ (uint(0u)), (0u ^ (uint(0u))) ^ 0u)), uint(_GLF_IDENTITY(0u, (0u) - 0u)))) << _GLF_IDENTITY(uint(6u), uint(6u))), (((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(6u) : _GLF_FUZZED(workgroup_size)))) - 0u), uint(6u)))) << 0u)))))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), ~ (~ ((gl_WorkGroupID.x)))), ((gl_WorkGroupID.x)) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), 0u ^ (_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) + (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) - 0u)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID.x)), max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), 6u))))), (_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(uint(_GLF_IDENTITY(uint(6u), uint(6u)))))))), uint(uvec3(_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), max(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u)), min((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))))))), 0u, 0u)))) - (0u ^ 0u)) | (gl_WorkGroupID.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupID)), (uvec3(uvec3(gl_WorkGroupID))) << uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, max(6u, 6u))))), (((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, max(6u, 6u)))))) >> 0u) | (gl_WorkGroupID.x)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)), ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))))) | 0u)) >> (0u | 0u))) | (gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, (_GLF_IDENTITY((0u) + 0u, ((0u) + 0u) ^ 0u)) - 0u)) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, 6u))), _GLF_IDENTITY(uint(6u), (uint(6u)) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) / 1u)) << _GLF_IDENTITY(uint(6u), uint(6u))), ((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)), ((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> 0u))) << 0u)), max((_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) / 1u)) << _GLF_IDENTITY(uint(6u), uint(6u))), ((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)), ((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> 0u))) << 0u)), (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) / 1u)) << _GLF_IDENTITY(uint(6u), uint(6u))), ((_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)), ((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> 0u))) << 0u)))), 0u ^ _GLF_IDENTITY((~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))), (((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u))), clamp((~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))), (((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u))), (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))), (((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u))), (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (uint(_GLF_IDENTITY(0u, (0u) - 0u)))), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))), (((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)))) << 0u)))))))) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uint(gl_WorkGroupID.x), ~ (~ (uint(gl_WorkGroupID.x))))))) | 0u))), (((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uint(gl_WorkGroupID.x), ~ (~ (uint(gl_WorkGroupID.x))))))) | 0u)))) >> 0u) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), 0u ^ (_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID.x)), max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), 6u))))), (_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), uint(uvec3(_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) | (~ (~ (0u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), max(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), vec2(mat4(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0)))).x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ (0u)), ((~ (0u))) - 0u), (~ (0u))))))), _GLF_IDENTITY(1u, 1u * (1u)), 0u, 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), (((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u)))) / 1u))), 0u, 0u)))) - (0u ^ 0u)) | (gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, max(6u, 6u))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID.x)), max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), 6u))))), (_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), uint(uvec3(_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) | (~ (~ (0u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), max(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), vec2(mat4(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0)))).x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ (0u)), ((~ (0u))) - 0u), (~ (0u))))))), _GLF_IDENTITY(1u, 1u * (1u)), 0u, 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), (((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u)))) / 1u))), 0u, 0u)))) - (0u ^ 0u)) | (gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, max(6u, 6u))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID.x)), max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), 6u))))), (_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), uint(uvec3(_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) | (~ (~ (0u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), max(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), vec2(mat4(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0)))).x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ (0u)), ((~ (0u))) - 0u), (~ (0u))))))), _GLF_IDENTITY(1u, 1u * (1u)), 0u, 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), (((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u)))) / 1u))), 0u, 0u)))) - (0u ^ 0u)) | (gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, max(6u, 6u))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID.x)), max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), 6u))))), (_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), uint(uvec3(_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) | (~ (~ (0u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), max(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 1u, 0u)), min(uint(uvec3(0u, 1u, 0u)), uint(uvec3(0u, 1u, 0u))))))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), vec2(mat4(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.3)), vec2(_GLF_FUZZED(-0.7), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), sqrt(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, abs(0.0), 0.0, 1.0, 1.0, 0.0)))).x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), min(_GLF_IDENTITY((~ (0u)), ((~ (0u))) - 0u), (~ (0u))))))), _GLF_IDENTITY(1u, 1u * (1u)), 0u, 0u)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(uint(6u), uint(6u))))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), (((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), ((~ (0u))) | (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u)))) / 1u))), 0u, 0u)))) - (0u ^ 0u)) | (gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, max(6u, 6u))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, (_GLF_IDENTITY((0u) + 0u, (_GLF_IDENTITY((0u) + 0u, clamp((0u) + 0u, (0u) + 0u, (0u) + 0u))) ^ 0u)) - 0u)) << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, max(0u, 0u))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, 6u))), uint(6u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) / 1u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u)), ((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> 0u))) << 0u)), 0u ^ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0u, (0u) + 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))), (((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min(_GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), 0u ^ ((0u)))))), (0u))) + _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) | (0u)), 0u))) << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) / 1u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) << 0u)))))) | _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), 0u ^ (_GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(24248u, 112185u, 66438u)) : _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(126759u, 88246u, 24369u)) : gl_WorkGroupID)))).x, _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID.x), max(_GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID.x), (false ? _GLF_FUZZED(write_val) : _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID.x), (((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID.x)) - 0u))), ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(6u))) | (gl_WorkGroupID.x)))), max(_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)), 6u))))), (_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u))), max(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u))), _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))))) << _GLF_IDENTITY(uint(6u), uint(6u))), uint(uvec3(_GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-6.5)))) / 1.0) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), max(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-474.217))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))), 1u, 0u, 0u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-474.217, mix(float(_GLF_FUZZED(1.5)), float(-474.217), bool(true))))))), clamp(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-474.217, mix(float(_GLF_FUZZED(1.5)), float(-474.217), bool(true))))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-474.217, mix(float(_GLF_FUZZED(1.5)), float(-474.217), bool(true))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-474.217, mix(float(_GLF_FUZZED(1.5)), float(-474.217), bool(true))))))), uint(uint(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-474.217, mix(float(_GLF_FUZZED(1.5)), float(-474.217), bool(true))))))))))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) | (~ (~ (0u))))))), 1u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u))), 0u)))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u | (6u))), uint(6u))), (((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-474.217, mix(float(_GLF_FUZZED(1.5)), float(-474.217), bool(true))))))), clamp(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-474.217, mix(float(_GLF_FUZZED(1.5)), float(-474.217), bool(true))))))), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-474.217, mix(float(_GLF_FUZZED(1.5)), float(-474.217), bool(true))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-474.217, mix(float(_GLF_FUZZED(1.5)), float(-474.217), bool(true))))))), uint(uint(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-474.217, mix(float(_GLF_FUZZED(1.5)), float(-474.217), bool(true))))))))))))), uint(_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) | (~ (~ (0u))))))), 1u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u))), 0u)))))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u | (6u))), uint(6u)))) - 0u))), 0u, 0u)))) - (0u ^ 0u)) | (gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, max(6u, 6u))))) | (gl_WorkGroupID.x))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))) && true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-1.2) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < injectionSwitch.y))))))))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), (_GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), false || (! (false)))))))) || false))), false, true, true))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) && true), true)), (bool(bvec2(_GLF_IDENTITY(bool(bool(bool(false))), (bool(bool(bool(false)))) && true), true))) && true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(176897u))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4223.2201)), bool(_GLF_IDENTITY(false, false || (false))))))) || (_GLF_DEAD(false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x), float(_GLF_FUZZED((- 5.6))), bool(false))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), 1u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 1u * (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), clamp(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) ^ 0u))), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 1u * (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), clamp(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) ^ 0u))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 1u * (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (_GLF_IDENTITY(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), clamp(uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec3(subgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) ^ 0u))), 0u, 1u)))) / uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u);
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), (uint(virtual_gid)) / 1u), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(max(64, 64), (max(64, 64)) * 1), (_GLF_IDENTITY(max(64, 64), (max(64, _GLF_IDENTITY(64, (64) | (64)))) * 1)) + 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), 0 ^ (_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), _GLF_IDENTITY(int(ivec4(max(64, 64), 1, 1, 0)), (int(ivec4(max(64, 64), 1, 1, 0))) << 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (_GLF_IDENTITY(64, max(64, 64))) | (_GLF_IDENTITY(64, max(64, 64)))) : _GLF_FUZZED(95653)), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (_GLF_IDENTITY(64, max(64, 64))) | (_GLF_IDENTITY(64, max(64, 64)))) : _GLF_FUZZED(95653))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(64, max(64, 64))) >> 0), _GLF_IDENTITY(64, max(64, 64))))) | (64)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))))), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, (4) + 0), _GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(2), int(2))))))) - (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) && (_GLF_DEAD(false))), false, true, false))))
  barrier();
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, _GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), (false ? _GLF_FUZZED(-50972) : ~ (64))))))), 2), _GLF_IDENTITY(max(atomicLoad(write_val, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) - 0), 64, _GLF_IDENTITY(2, (2) / (1 & ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), clamp(atomicLoad(write_val, 4, 64, 2), atomicLoad(write_val, 4, 64, 2), _GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(write_val, 4, 64, 2)) / 1u), atomicLoad(write_val, 4, 64, 2)))))), 1u * (max(atomicLoad(write_val, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-72122))), 64, _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (int(2)) | 0), max(_GLF_IDENTITY(int(2), (int(2)) | 0), _GLF_IDENTITY(int(2), (int(2)) | 0)))) ^ 0)), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(71408), (true ? _GLF_FUZZED(71408) : _GLF_FUZZED(89885))) : int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 ^ 0) | (2))), (int(2)) | 0))), int(_GLF_IDENTITY(ivec2((false ? _GLF_IDENTITY(_GLF_FUZZED(71408), (true ? _GLF_FUZZED(71408) : _GLF_FUZZED(89885))) : int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 ^ 0) | (2))), (int(2)) | 0))), (1 | 1)), (_GLF_IDENTITY(ivec2((false ? _GLF_IDENTITY(_GLF_FUZZED(71408), (true ? _GLF_FUZZED(71408) : _GLF_FUZZED(89885))) : int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 ^ 0) | (2))), (int(2)) | 0))), (1 | 1)), (ivec2((false ? _GLF_IDENTITY(_GLF_FUZZED(71408), (true ? _GLF_FUZZED(71408) : _GLF_FUZZED(89885))) : int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 ^ 0) | (2))), (int(2)) | 0))), (1 | 1))) - ivec2(0, 0))) | (ivec2((false ? _GLF_IDENTITY(_GLF_FUZZED(71408), (true ? _GLF_FUZZED(71408) : _GLF_FUZZED(89885))) : int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (0 ^ 0) | (2))), (int(2)) | 0))), (1 | 1)))))))), (2) / 1)), atomicLoad(write_val, 4, 64, 2)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch))), (false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch))))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch))), (false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch))))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch))), (false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch))))))[0], _GLF_FUZZED(8.5)), vec2(_GLF_FUZZED(1.4), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch))), (false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch))))))[1]), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch))), (false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch), (false ? _GLF_FUZZED(vec2(-9.9, 736.967)) : injectionSwitch))))))) - vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), float(_GLF_FUZZED(-3.9)), bool(false))), 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-9.2)), max(float(_GLF_FUZZED(-9.2)), float(_GLF_FUZZED(-9.2)))), float(injectionSwitch[0]), bool(true))))), injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-9.2)), max(float(_GLF_FUZZED(-9.2)), float(_GLF_FUZZED(-9.2)))), float(injectionSwitch[0]), bool(true))))), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(-9.2)), max(float(_GLF_FUZZED(-9.2)), float(_GLF_FUZZED(-9.2)))), float(injectionSwitch[0]), bool(true))))), injectionSwitch[1])))))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.2), _GLF_FUZZED(913.702)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-52.97) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true, false)))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, cos(0.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true), false))))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(75.99, -2.5)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(50.84, 7.6)) : injectionSwitch)))), mat2(1.0) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || false))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, ! (! (((injectionSwitch.x > injectionSwitch.y)) || false))))))))))
  return;
 _GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), _GLF_IDENTITY((buf[virtual_gid] = uint(subgroupAllEqual(read_val))) ^ 0u, (false ? _GLF_FUZZED(workgroup_base) : (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) ^ 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true, true, true))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 0.0, 0.0))))) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(61.31))) > injectionSwitch.y, false)), false, false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec2(true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}
