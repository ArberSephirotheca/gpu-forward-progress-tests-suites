#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_37 {
 uvec3 _f0;
 bvec2 _f1;
 float _f2;
 bvec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_36 {
 mat4x3 _f0;
 mat2 _f1;
 vec3 _f2;
 vec3 _f3;
 uvec3 _f4;
 uint workgroup_size;
 uvec3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_35 {
 mat3x2 _f0;
 bvec2 _f1;
 uint _f2;
 mat4 _f3;
} ;

struct _GLF_struct_38 {
 _GLF_struct_35 _f0;
 _GLF_struct_36 _f1;
 mat4x3 _f2;
 float _f3;
 _GLF_struct_37 _f4;
} ;

struct _GLF_struct_39 {
 _GLF_struct_38 _f0;
} ;

struct _GLF_struct_34 {
 uint subgroup_base;
 uvec4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_31 {
 mat3x2 _f0;
 float _f1;
 vec4 _f2;
 uvec3 _f3;
 uvec4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_30 {
 mat3x4 _f0;
 vec2 _f1;
 uvec4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_32 {
 mat3x2 _f0;
 mat3x4 _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_31 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_28 {
 mat3 _f0;
 mat3 _f1;
 uvec4 _f2;
 mat3 _f3;
 mat2x4 _f4;
 bool _f5;
} ;

struct _GLF_struct_27 {
 mat2 _f0;
 mat3x2 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_29 {
 _GLF_struct_27 _f0;
 mat2x3 _f1;
 float _f2;
 mat3x2 _f3;
 mat2 _f4;
 _GLF_struct_28 _f5;
} ;

struct _GLF_struct_25 {
 mat2 _f0;
 int _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_24 {
 float _f0;
 int _f1;
 vec3 _f2;
 ivec2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_23 {
 ivec4 _f0;
 float _f1;
} ;

struct _GLF_struct_22 {
 ivec3 _f0;
 mat2x4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_26 {
 bvec2 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_24 _f3;
 _GLF_struct_25 _f4;
} ;

struct _GLF_struct_20 {
 float _f0;
 bvec3 _f1;
 bvec3 _f2;
 vec2 _f3;
 bvec4 _f4;
 bool _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 float _f1;
} ;

struct _GLF_struct_21 {
 vec4 _f0;
 _GLF_struct_19 _f1;
 mat2 _f2;
 _GLF_struct_20 _f3;
} ;

struct _GLF_struct_17 {
 float _f0;
 float _f1;
 float _f2;
} ;

struct _GLF_struct_16 {
 mat3 _f0;
 int _f1;
 bvec4 _f2;
 int _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_15 {
 bvec3 _f0;
} ;

struct _GLF_struct_14 {
 uvec3 _f0;
 mat2 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_18 {
 _GLF_struct_14 _f0;
 mat2x4 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_16 _f3;
 mat3 _f4;
 _GLF_struct_17 _f5;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_11 {
 ivec2 _f0;
 bool _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_10 {
 float _f0;
 int _f1;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 bool _f1;
 mat3x4 _f2;
 mat4x3 _f3;
 mat3x2 _f4;
 uint _f5;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 bvec4 _f1;
 bvec3 _f2;
 vec4 _f3;
 vec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
 ivec4 _f1;
 vec3 _f2;
 ivec3 _f3;
 vec2 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_13 {
 _GLF_struct_7 _f0;
 float _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_33 {
 _GLF_struct_13 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_26 _f3;
 uint subgroup_id;
 _GLF_struct_29 _f4;
 _GLF_struct_32 _f5;
} ;

struct _GLF_struct_4 {
 float _f0;
 bvec2 _f1;
 vec4 _f2;
 mat3x2 _f3;
 int _f4;
 mat3 _f5;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 mat2x3 _f1;
 mat3x2 _f2;
 uint _f3;
 mat2x4 _f4;
 mat3x2 _f5;
 bool _f6;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 ivec2 _f1;
 int _f2;
 int _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 uvec4 _f1;
 mat3x4 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint _f2;
 _GLF_struct_2 _f3;
 float _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 bool _f1;
 mat2x3 _f2;
 uint workgroup_base;
 uvec2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(_GLF_struct_13(_GLF_struct_7(mat4x3(1.0), ivec4(1), vec3(1.0), ivec3(1), vec2(1.0), bvec4(true)), 1.0, _GLF_struct_8(uvec2(1u), bvec4(true), bvec3(true), vec4(1.0), vec2(1.0), ivec3(1)), _GLF_struct_9(bvec3(true), true, mat3x4(1.0), mat4x3(1.0), mat3x2(1.0), 1u), _GLF_struct_10(1.0, 1), _GLF_struct_11(ivec2(1), true, mat4x2(1.0)), _GLF_struct_12(ivec4(1), mat4x2(1.0))), _GLF_struct_18(_GLF_struct_14(uvec3(1u), mat2(1.0), vec3(1.0)), mat2x4(1.0), _GLF_struct_15(bvec3(true)), _GLF_struct_16(mat3(1.0), 1, bvec4(true), 1, ivec4(1)), mat3(1.0), _GLF_struct_17(1.0, 1.0, 1.0)), _GLF_struct_21(vec4(1.0), _GLF_struct_19(ivec4(1), 1.0), mat2(1.0), _GLF_struct_20(1.0, bvec3(true), bvec3(true), vec2(1.0), bvec4(true), true, mat3x4(1.0))), _GLF_struct_26(bvec2(true), _GLF_struct_22(ivec3(1), mat2x4(1.0), mat4x3(1.0)), _GLF_struct_23(ivec4(1), 1.0), _GLF_struct_24(1.0, 1, vec3(1.0), ivec2(1), mat4x2(1.0)), _GLF_struct_25(mat2(1.0), 1, ivec4(1))), gl_SubgroupID, _GLF_struct_29(_GLF_struct_27(mat2(1.0), mat3x2(1.0), mat3(1.0)), mat2x3(1.0), 1.0, mat3x2(1.0), mat2(1.0), _GLF_struct_28(mat3(1.0), mat3(1.0), uvec4(1u), mat3(1.0), mat2x4(1.0), true)), _GLF_struct_32(mat3x2(1.0), mat3x4(1.0), _GLF_struct_30(mat3x4(1.0), vec2(1.0), uvec4(1u), mat2(1.0)), _GLF_struct_31(mat3x2(1.0), 1.0, vec4(1.0), uvec3(1u), uvec4(1u), ivec2(1)), ivec2(1)));
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_struct_38(_GLF_struct_35(mat3x2(1.0), bvec2(true), 1u, mat4(1.0)), _GLF_struct_36(mat4x3(1.0), mat2(1.0), vec3(1.0), vec3(1.0), uvec3(1u), gl_WorkGroupSize.x, uvec3(1u), mat4x2(1.0)), mat4x3(1.0), 1.0, _GLF_struct_37(uvec3(1u), bvec2(true), 1.0, bvec2(true), 1u)));
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_5(_GLF_struct_0(mat4x3(1.0)), _GLF_struct_1(vec4(1.0), uvec4(1u), mat3x4(1.0), vec2(1.0)), 1u, _GLF_struct_2(vec3(1.0), ivec2(1), 1, 1, ivec4(1)), 1.0, _GLF_struct_3(ivec3(1), mat2x3(1.0), mat3x2(1.0), 1u, mat2x4(1.0), mat3x2(1.0), true), _GLF_struct_4(1.0, bvec2(true), vec4(1.0), mat3x2(1.0), 1, mat3(1.0))), true, mat2x3(1.0), _GLF_struct_replacement_39._f0._f1.workgroup_size * workgroup_id, uvec2(1u));
 _GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(_GLF_struct_replacement_33.subgroup_id * subgroup_size, uvec4(1u), ivec4(1));
 uint virtual_gid = _GLF_struct_replacement_6.workgroup_base + _GLF_struct_replacement_34.subgroup_base + subgroup_local_id;
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   switch(_GLF_SWITCH((1 ^ 1)))
    {
     case 59:
     ;
     case 57:
     for(int _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v[79]; (ivec3(-54741, -30449, -96181) != (ivec3(-69876, 5754, 65169) - ivec3(-40723, 32829, 13688))); false)
      {
       ;
       uvec4(uvec2(155386u, 11256u), virtual_gid, write_val);
       651.329;
       bvec2 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
       for(       ivec2(-9202, 30302);
 false; mat3x4(33.11, -8.5, -3.1, 59.85, -8959.2913, -8.2, -6433.0481, -68.14, -1572.1226, 261.948, -93.56, 116.183))
        {
         mat3x2 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v[69], _GLF_SWITCH_0_8v;
        }
      }
     case 0:
     case 48:
     case 15:
     atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
     break;
     default:
     1;
    }
  }
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
}
