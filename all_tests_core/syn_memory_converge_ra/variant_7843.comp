#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), true)), (bool(bvec2(bool(bool(false)), true))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2004.7178)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(921.819)), bool(false)))))) + 0.0), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, _GLF_IDENTITY(true, false || (true))))), true, false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-58.07), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9209.2089)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(921.819)), bool(false)))))) + 0.0), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))))))), true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))))))))))))))) && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(921.819)), bool(false)))))) + 0.0), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) && ((injectionSwitch.x > injectionSwitch.y)))))))))), (bool(_GLF_IDENTITY(bool((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(921.819)), bool(false)))))) + 0.0), true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(91.14)), bool(false))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.5))), abs(0.0)), min(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.5))), abs(0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.5))), abs(0.0)), vec2(mat4(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.5))), abs(0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(921.819)), bool(false)))))) + 0.0))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, tan(0.0))))) * 1.0), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(921.819)), bool(false)))))) + 0.0), bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), true, false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) && ((injectionSwitch.x > injectionSwitch.y))))))))))) || false)), true && ((_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))) || false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3((false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3((false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), true))))))), true)))))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((false), true, false)), bvec3(bvec3(bvec3(bvec3((false), true, false))))))))))), ((bool(_GLF_IDENTITY((false), bool(bvec3((false), true, false)))))) || false) && true, ! (! ((bool(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), ! (! (bool(bvec3((false), true, false)))))))) && true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec3((false), true, false)))), (bool(_GLF_IDENTITY((false), bool(bvec3((false), true, false))))) && _GLF_IDENTITY(true, true && (true))))), ! (! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), bool(bvec3((false), true, false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), (bool(bvec3((false), true, false))) || false)))) && true, true && ((bool(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), (bool(bvec3((false), true, false))) || false)))) && true))))))))))))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, abs(0.0), 1.0))))).x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / 1.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), _GLF_IDENTITY((! (false)) || false, true && ((! (false)) || false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), true, false, false))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(62412)), _GLF_FUZZED(0.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))), true, false, false))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false)), (bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, false))) && true)))))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))))) + vec2(0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(460.768, -8887.1246)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), false, true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true)), false), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true)), false))))))), false, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true)))))) && true)))), ((_GLF_DEAD(false))) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), _GLF_IDENTITY(false, true && (false)), true)))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), _GLF_IDENTITY(false, true && (false)), true)))))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), _GLF_IDENTITY(false, true && (false)), true)))))), bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), _GLF_IDENTITY(false, true && (false)), true))))))))), true, true, false)))))))), (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-67.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, false || ((injectionSwitch.x < injectionSwitch.y) && true)))), (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, false || ((injectionSwitch.x < injectionSwitch.y) && true)))), ((! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, false || ((injectionSwitch.x < injectionSwitch.y) && true))))) || false)) || false)))) || _GLF_IDENTITY(false, true && (false))), false, false)))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < injectionSwitch.y), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) / 1.0) < injectionSwitch.y)))), false), true))), false, true))))))))) && true))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (! (true)))))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), _GLF_IDENTITY(false, (false) || false), true))))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0)))) / abs(1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0)))))).y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), false, true))))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), _GLF_IDENTITY(true, true && (true))))), false, true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, false), false)), bvec2(bvec4(bvec2(bvec3(bvec2(true, false), false)), true, true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(clamp(injectionSwitch, float(80804), 33.46)))).x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0)))))).y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), false), true))), false, true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), false, true))))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(vec3(-5.0, -608.601, -4.9)) - vec2(-8.1, -4.6))) : injectionSwitch)).x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), false, true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), false, true))))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(vec3(-5.0, -608.601, -4.9)) - vec2(-8.1, -4.6))) : injectionSwitch)).x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), false, true))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), false, true)))), true && (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), true))), false, true))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 1.0, log(1.0)), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, tan(0.0), 1.0, log(1.0)), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, log(1.0), 1.0)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(vec3(-5.0, -608.601, -4.9)) - vec2(-8.1, -4.6))) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), tan(0.0), abs(log(1.0)), 1.0, 0.0, 1.0, 0.0))).y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y), false), true))), false, true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 1.0, log(1.0)), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, tan(0.0), 1.0, log(1.0)), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, log(1.0), 1.0)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(vec3(-5.0, -608.601, -4.9)) - vec2(-8.1, -4.6))) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), tan(0.0), abs(log(1.0)), 1.0, 0.0, 1.0, 0.0))).y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y), false), true))), false, true)))))))), ! (! ((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 1.0, log(1.0)), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, tan(0.0), 1.0, log(1.0)), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, log(1.0), 1.0)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(vec3(-5.0, -608.601, -4.9)) - vec2(-8.1, -4.6))) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), tan(0.0), abs(log(1.0)), 1.0, 0.0, 1.0, 0.0))).y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y), false), true))), false, true))))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 1.0, log(1.0)), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, tan(0.0), 1.0, log(1.0)), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, log(1.0), 1.0)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(vec3(-5.0, -608.601, -4.9)) - vec2(-8.1, -4.6))) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), tan(0.0), abs(log(1.0)), 1.0, 0.0, 1.0, 0.0))).y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y), false), true))), false, true)))))))), ! (! ((_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), ((_GLF_DEAD(false))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, tan(0.0), 1.0, log(1.0)), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(0.0, tan(0.0), 1.0, log(1.0)), vec4(1.0, 1.0, 0.0, 1.0))), 1.0, 0.0, 0.0, log(1.0), 1.0)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(vec3(-5.0, -608.601, -4.9)) - vec2(-8.1, -4.6))) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), tan(0.0), abs(log(1.0)), 1.0, 0.0, 1.0, 0.0))).y), false), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), false), bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y), false), true))), false, true))))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false))))))))))))))), false, false), false))))) || false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec2(bool(bvec3(false, true, false)), true)))), _GLF_IDENTITY(true, bool(bvec2(true, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-48.66)), float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), bool(true))) + (injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(8.4)), bool(false))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
        return;
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3581.0158) : injectionSwitch.x), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3581.0158) : injectionSwitch.x)) / 1.0)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) || false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) || false), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) || false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))) || false), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, false)))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u)), (uint(uvec4(subgroup_id * subgroup_size, 1u, 0u, 0u))) - 0u))))), subgroup_id * subgroup_size, subgroup_id * subgroup_size));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y)), ((! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / abs(vec2(1.0, 1.0))).x > injectionSwitch.y))) && true))))) && true)) || false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false)))))) && (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (true && _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))), (! (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))) || false))))))))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(write_val, uint(virtual_gid), 4, _GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, min(64, 64)))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, true, false)))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, true, false))))))) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_val = _GLF_IDENTITY(atomicLoad(write_val, 4, _GLF_IDENTITY(64, min(64, 64)), 2), min(atomicLoad(write_val, 4, _GLF_IDENTITY(64, min(64, 64)), 2), atomicLoad(write_val, 4, _GLF_IDENTITY(64, min(64, 64)), 2)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_DEAD(false))), false), bvec2(bvec3(bvec2(bool(bool(_GLF_DEAD(false))), false), false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, false)))), ((! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))), bool(bool((! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))))))), false, true, false))))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))) || false), false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), bool(bool(false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), bool(bvec2(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}
