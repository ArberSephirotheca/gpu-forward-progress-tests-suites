#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(! ((false))))))) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(94.80), _GLF_FUZZED(_GLF_IDENTITY(-2.5, min(-2.5, -2.5)))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), bvec2(true, true))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9.6) : (injectionSwitch)[0])), _GLF_FUZZED(-5009.9817)), bvec2(true, false))), 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec2(0.0, 1.0))), float(mat3x4(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, determinant(mat3(0.0, sin(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(19.80)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, true)))) || false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (_GLF_IDENTITY(false, bool(bool(false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(78.35), _GLF_FUZZED(974.309)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), sqrt(1.0), 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (vec4(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), sqrt(1.0), 1.0, determinant(mat4(tan(0.0), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) + vec4(0.0, 0.0, 0.0, 0.0)))), (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(true && (! ((false))), bool(_GLF_IDENTITY(bvec3(true && (! ((false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(true && (! ((false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true)), ! (! (! (! ((false))))))), false, true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))), true))), true))))))), false)))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((false)) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((true ? -9.9 : 979.455)), _GLF_FUZZED(377.978)), bvec2(false, false))).x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((false)) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((true ? -9.9 : 979.455)), _GLF_FUZZED(377.978)), bvec2(false, false))).x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((false)) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((true ? -9.9 : 979.455)), _GLF_FUZZED(377.978)), bvec2(false, false))).x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))))))))))))))))), ((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true, ! (! ((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true))))), ! (! (! (! ((false))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false)))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true, ! (! ((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true))))), ! (! (! (! ((false))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false)))))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (! ((false)))), bool(bool(_GLF_IDENTITY(! ((false)), true && (! ((false)))))))) && true))))), ! (! (! (! ((false))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true))), false || (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), false || (((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true)))))))))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec2(! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), bool(bvec3(bool(bvec2(! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), true, false)))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), (_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, _GLF_IDENTITY(true, ! (! (true)))))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) || (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), true, true)), true, true)))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false))))))) && true))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false)))))) || _GLF_IDENTITY(false, ! (! (false)))))))))) || false)), true && (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true, ! (! ((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true))))), ! (! (! (! ((false))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false)))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true, ! (! ((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true))))), ! (! (! (! ((false))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false)))))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (! ((false)))), bool(bool(_GLF_IDENTITY(! ((false)), true && (! ((false)))))))) && true))))), ! (! (! (! ((false))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true))), false || (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), false || (((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true)))))))))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec2(! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), bool(bvec3(bool(bvec2(! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), true, false)))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), (_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, _GLF_IDENTITY(true, ! (! (true)))))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) || (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), true, true)), true, true)))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false))))))) && true))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false)))))) || _GLF_IDENTITY(false, ! (! (false)))))))))) || false)), true && ((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true, ! (! ((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true))))), ! (! (! (! ((false))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false)))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true, ! (! ((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true))))), ! (! (! (! ((false))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false)))))) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (! ((false)))), bool(bool(_GLF_IDENTITY(! ((false)), true && (! ((false)))))))) && true))))), ! (! (! (! ((false))))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true)))))), ! (! (((false))))))), false, true))), false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) || (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true))), false || (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), false || (((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true)))))))))))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec2(! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), bool(bvec3(bool(bvec2(! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), true, false)))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), (_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, _GLF_IDENTITY(true, ! (! (true)))))), false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) || (! (_GLF_IDENTITY((false), _GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), bool(bool(((_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))), true, true)), true, true)))) && true)))))), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY(! (! ((false))), ! (! (! (! (_GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false))))))) && true))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), bool(bvec4(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))), true && (bool(bvec3(false, false, true))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true, true), false)))))))), true, false, true))), false))), ! (! (((false))))))), false, true))), false)))))) || _GLF_IDENTITY(false, ! (! (false)))))))))) || false)))))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
        return;
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (! (! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (! (! (_GLF_IDENTITY(! (false), true && (! (false))))))), true && (bool(! (! (! (! (false)))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (! (_GLF_IDENTITY(! (false), true && (! (false))))))), true && (bool(! (! (! (! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (! (_GLF_IDENTITY(! (false), true && (! (false))))))), true && (bool(! (! (! (! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(bool(_GLF_IDENTITY(bool(! (! (! (_GLF_IDENTITY(! (false), true && (! (false))))))), true && (bool(! (! (! (! (false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), (bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (_GLF_IDENTITY(false, false || (false))))))))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (false)))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true))))))))), (bool(_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))) || false)), true, false), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (false)))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true))))))))), (bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))) || false)), true, false))))), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) && true)))), true, true))))))))), (bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false))))))))))), bool(bool(_GLF_IDENTITY(! (! (! (false))), ! (_GLF_IDENTITY(! (! (! (! (false)))), (! (! (! (! (false))))) || false))))))))) || false)), true, false)), (_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))) || false), true, true)))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), bool(_GLF_IDENTITY(bvec3((! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))) || false), true, true)))))))))))), (bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), bool(_GLF_IDENTITY(bvec3((! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), true, false), bvec3(bvec4(bvec3((! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))), true, false), true))))))))))) || false)), true, _GLF_IDENTITY(false, (false) || false))), false || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! _GLF_IDENTITY((! (false || (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) || false)))))), bool(bvec4((! (false || (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) || false)))))), _GLF_IDENTITY(true, (true) && true), false, false))))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), true, true, false))), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) || false), ! _GLF_IDENTITY((! (! (false))), bool(bvec2((! (! (false))), _GLF_IDENTITY(true, ! (! (true))))))))), true, true))))))))), (bool(_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && true)))))) || false)), true, false))))) || false)) && true), false || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), ! (! (! (false))))), (bool(_GLF_IDENTITY(! (false), ! (! (! (false)))))) || false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), false)))))))), false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))), vec2(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))), clamp((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))) - sin(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) && true)) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, false, false))), true, true))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, false, false))), true, true))), false, true)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (true)))) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2162.3848)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true)) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.5)), vec2(_GLF_FUZZED(470.978), _GLF_IDENTITY((injectionSwitch)[1], float(vec2((injectionSwitch)[1], 1.0)))), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))).x < _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))) && true)) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 0, (1 & 1))), 0 ^ (int(ivec3(0, 0, (1 & 1))))))], _GLF_FUZZED(0.5)), vec2(_GLF_FUZZED(470.978), _GLF_IDENTITY((injectionSwitch)[1], float(vec2((injectionSwitch)[1], 1.0)))), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), bool(bool(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)), true))).x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))) && true)))))) || false, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mix(vec2(_GLF_FUZZED(2.8), _GLF_FUZZED(-6820.4707)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))), clamp((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), vec2(mat3x4(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), abs(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))))))[0], (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))[1]), bvec2(true, true))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))))).y) && true)) || false), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(vec2((injectionSwitch)))), (injectionSwitch), (injectionSwitch))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, abs(1.0) * (0.0)), 0.0)), injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- 0.9))), float(injectionSwitch.y), bool(true)))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), false, true)))) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec2(false, false))), true, true)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2713.6038) : injectionSwitch.x)), sqrt(exp(0.0)), 1.0, 1.0, 1.0, log(1.0), 1.0, 0.0))) > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-96.58, 2978.0068)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y)))) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) || false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, abs(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8893.2555)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8893.2555)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), vec2(mat2x3(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), (max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)) / vec2(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0)))))).x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x), 1.0 * (_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x), (true ? 0.0 + (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.1, -169.672)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x) : _GLF_FUZZED(-788.986)))))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), vec2(0.0, 0.0) + (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-92.32), _GLF_FUZZED(-1261.8632)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))))).x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0, abs(cos(0.0)), 1.0, sqrt(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(1905.4405)), float(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(131.808))), 0.0, 0.0)), 0.0, 0.0, 0.0))), bool(true)))), sin(0.0), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(306.008) : log(_GLF_IDENTITY(1.0, (1.0) * 1.0)))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-131.898)), float(1.0), bool(true))), 0.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(9.5, min(9.5, 9.5)))), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0, abs(cos(0.0)), 1.0, sqrt(determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), _GLF_IDENTITY(mat3(mat3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), (mat3(mat3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), sin(0.0), 1.0, sqrt(1.0), log(1.0), 1.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(596.770))), 1.0, 1.0))), float(vec3(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false)), float(mat3(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false)), _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), vec2(1.0, 1.0))), cos(0.0), 1.0, 1.0, 0.0, abs(1.0), 0.0, log(1.0)))), (_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false)), (mix(_GLF_IDENTITY(float(injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(float(injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2x3(float(injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat2x3(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).x), 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_FUZZED(9.5)), bool(false))) * 1.0)) * 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, abs(cos(0.0)), 1.0, sqrt(_GLF_IDENTITY(determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(4343.1933)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false)))), sin(0.0), 1.0, sqrt(1.0), log(1.0), 1.0, 1.0, 0.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false)), (_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(9.5), clamp(_GLF_FUZZED(9.5), _GLF_FUZZED(9.5), _GLF_FUZZED(9.5)))), bool(false))) * 1.0)) * 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, abs(cos(0.0)), 1.0, sqrt(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), sin(0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5636.1733))), sqrt(1.0), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), 1.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x))) - 0.0), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3.0)))), _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(_GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), clamp(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED((-1.7 + 3.2))), bool(false))))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), mix(vec4((vec4(1.0, 0.0, 0.0, 0.0))[0], (vec4(1.0, 0.0, 0.0, 0.0))[1], _GLF_FUZZED(4341.2611), _GLF_FUZZED(7.3)), vec4(_GLF_FUZZED(-7.1), _GLF_FUZZED(36.81), (vec4(1.0, 0.0, 0.0, 0.0))[2], (vec4(1.0, 0.0, 0.0, 0.0))[3]), bvec4(false, false, true, true))), vec4(1.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) - 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(9.5)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0, abs(cos(0.0)), 1.0, sqrt(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), sin(0.0), 1.0, sqrt(1.0), log(1.0), 1.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-568.024)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0))))))), float(_GLF_FUZZED(-2.8)), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(9.5), max(_GLF_FUZZED(9.5), _GLF_FUZZED(9.5)))), bool(false))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 1.0, abs(cos(0.0)), 1.0, sqrt(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(1905.4405)), float(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), bool(true)))), sin(0.0), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(306.008) : log(1.0))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-131.898)), float(1.0), bool(true))), 0.0), (mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false)))) * determinant(mat2(1.0, 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(cos(0.0)), 1.0, sqrt(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0))), sin(0.0), 1.0, sqrt(1.0), log(1.0), 1.0, 1.0, 0.0)) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(596.770))), 1.0, 1.0))), float(vec3(float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false)), _GLF_IDENTITY((_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false)), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true)))), float(_GLF_IDENTITY(mat2x3(float(injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2x3(float(injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat2x3(float(injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_FUZZED(9.5)), bool(false))) * 1.0)), (false ? _GLF_FUZZED(557.779) : (_GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false)), (mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(true))), float(injectionSwitch.x), bool(true)))), float(_GLF_IDENTITY(mat2x3(float(injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2x3(float(injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0)), transpose(transpose(transpose(mat2x3(float(injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_FUZZED(9.5)), bool(false))) * 1.0)))) * 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, abs(cos(0.0)), 1.0, sqrt(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mix(float(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(4343.1933)), bool(false)))), sin(0.0), 1.0, sqrt(1.0), _GLF_IDENTITY(log(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-7.7))), 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-7.7))), 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 1.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-7.7))), 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 1.0), (mat3x4(_GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-7.7))), 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 1.0)) * mat3(1.0)))) / 1.0)), 1.0, 1.0, 0.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.5)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-7.7), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[1]), vec2((mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))[0], _GLF_FUZZED(8949.0596)), bvec2(true, false)))).x), float(_GLF_FUZZED(9.5)), bool(false)), (mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(9.5), clamp(_GLF_FUZZED(9.5), _GLF_FUZZED(9.5), _GLF_FUZZED(9.5)))), bool(false))) * 1.0)) * 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, abs(cos(0.0)), 1.0, sqrt(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), sin(0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5636.1733))), sqrt(1.0), log(1.0), 1.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4402.0622)), float(injectionSwitch.x), bool(true))), (injectionSwitch.x) - 0.0), 1.0, _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) - 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(9.5), (_GLF_FUZZED(9.5)) - 0.0)), bool(false))), 0.0, 1.0, 0.0, 1.0, 1.0, abs(cos(0.0)), 1.0, sqrt(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), sin(0.0), 1.0, sqrt(1.0), log(1.0), 1.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-568.024)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 1.0))))))), float(_GLF_FUZZED(-2.8)), bool(false)))), float(_GLF_FUZZED(631.280)), bool(false))) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8497.7682), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(66234u))), bvec2(true, false))).x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bvec2(bool(bool((false))), true)))), false, false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), ! (! (true && (_GLF_IDENTITY(false, true && (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))).y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(injectionSwitch, injectionSwitch) : _GLF_FUZZED(fma(log(injectionSwitch), injectionSwitch, vec2(-4.9, 631.051)))))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.4), _GLF_FUZZED(-733.104)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))) && true)) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bvec2(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true)))))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0, 0.0, log(1.0), 1.0))) > injectionSwitch.y)) ? _GLF_FUZZED(-91.01) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-92.32)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), abs(1.0), 0.0, 0.0, 0.0, log(1.0), abs(0.0))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((803.439 * -622.903))), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y))), vec2(vec4(_GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y))), clamp(vec2(vec3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y))), vec2(vec3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y))), vec2(vec3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0)))).y)) && true))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false)))))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))))), (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))))))))) && true))))))))), ! (! ((! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))) && true), (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))) && true), (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))) && _GLF_IDENTITY(true, true && (true))), (injectionSwitch.x > injectionSwitch.y))))) || false)))))), ! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))) && true), (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))) && true), (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))) && _GLF_IDENTITY(true, true && (true))), (injectionSwitch.x > injectionSwitch.y))))) || false))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4.1, clamp(_GLF_IDENTITY(-4.1, (-4.1) + 0.0), -4.1, -4.1))) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-4.1, clamp(_GLF_IDENTITY(-4.1, (-4.1) + 0.0), -4.1, -4.1))) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-50.22)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))) || false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(5.9), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_DEAD(false))), false, false)), false || (bool(bvec3(! (! (_GLF_DEAD(false))), false, false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), max((uint(1)), (uint(1)))) | (uint(1)))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7434.1933), _GLF_FUZZED(3.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, (4) + 0)), clamp(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) + 0)), int(int((_GLF_IDENTITY(4, (4) + 0))))), 0 ^ (_GLF_IDENTITY(4, (4) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, (4) + 0)), max(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, (4) + 0)), min(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, (4) + 0)), 0 ^ (0 ^ (_GLF_IDENTITY(4, (4) + 0)))), 0 ^ (_GLF_IDENTITY(4, (4) + 0)))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(4, (4) + 0)), (0 ^ (_GLF_IDENTITY(4, (4) + 0))) ^ 0))), max(0 ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) + 0, (_GLF_IDENTITY((4) + 0, 0 + ((4) + 0))) | ((4) + 0)))), 0 ^ (_GLF_IDENTITY(4, (4) + 0))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, false)), _GLF_IDENTITY(false || (bool(bvec3(! (false), true, false))), true && (false || (_GLF_IDENTITY(bool(bvec3(! (false), true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(! (false), true, false)), true, _GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(bool(bvec3(bool(bvec3(! (false), true, false)), true, _GLF_IDENTITY(true, ! (! (true))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(bvec2(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), length(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(sqrt(determinant(mat3(-306.239, -578.854, 3.4, -87.99, -329.640, 29.68, 463.527, -66.47, 9.8)))))) > injectionSwitch.y)), false)))), bool(bvec4(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), false)))), false, true, false))), false || (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(bool((injectionSwitch.x > injectionSwitch.y)), false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (1.0) * 1.0)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat3x2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))) * mat3(1.0)))), _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) * 1.0)) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), (1.0) * _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.0) : 1.0))))))) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(fma(-2.8, 1.2, -658.266)) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat4x2((injectionSwitch)[0], 0.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.740), _GLF_FUZZED(7.1)), bvec2(false, false))).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-8.9, 1.9)))), 0.0, 0.0)), (vec2(vec4(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-8.9, 1.9)))), 0.0, 0.0))) * vec2(1.0, 1.0))) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), clamp(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7658.4433)), bool(false)))))))))) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).y))) && true)), (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).y))) && true))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bool(bool(_GLF_IDENTITY(true, ! (! (true))))))), false, true, true))))))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8495.8457)), float(1.0), bool(true)))))) * round(length(normalize(vec2(1.0, 1.0))))), 1.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6032.9702)), _GLF_IDENTITY(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(160014u))), bool(false)))), float(mat2x3(float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(160014u))), bool(false)))), 0.0, 1.0, 1.0, 1.0, exp(0.0)))), bool(true))), injectionSwitch.y)) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY((vec2(1.0, 1.0))[0], ((vec2(1.0, 1.0))[0]) + 0.0), _GLF_FUZZED(-77.93)), vec2(_GLF_FUZZED(-1393.3057), (vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1]), bvec2(false, true)))).y)), (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).y)), bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) / vec2(1.0, 1.0)).y)), true, false)))) && true)))))) && true)))))
    barrier();
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u ^ 0u, (1u ^ 0u) >> 0u), (_GLF_IDENTITY(1u ^ 0u, (1u ^ 0u) >> 0u)) >> 0u)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[0])), injectionSwitch[1])).y)) ? (_GLF_IDENTITY(1u ^ 0u, (1u ^ 0u) >> 0u)) : _GLF_FUZZED(164613u))) * _GLF_IDENTITY((next_virtual_gid), (true ? (next_virtual_gid) : _GLF_FUZZED(workgroup_id))))], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(_GLF_IDENTITY((uint(2)), clamp(_GLF_IDENTITY((uint(2)), ~ (~ ((uint(2))))), _GLF_IDENTITY((uint(2)), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-76306) : _GLF_IDENTITY(2, 0 ^ (2)))) : _GLF_FUZZED(-74328))))), ((uint(2))) | ((uint(2)))), (uint(2)))), (uint(2)))), ((uint(_GLF_IDENTITY(2, int(ivec2(2, 1)))))) << 0u) | (uint(2))), _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), ~ (~ (max(4, 4))))), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5416.0515)))) * round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5416.0515)))) * round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0))))))))))))), bool(bvec3((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) - abs(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true), true)))), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true), _GLF_IDENTITY(true, true && (true))))))) || false)))))), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
