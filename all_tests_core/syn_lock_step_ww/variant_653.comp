#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 bvec4 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 uvec2 _f1;
 ivec2 _f2;
 uint _f3;
 vec4 _f4;
 float _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 mat4 _f1;
 mat2 _f2;
 mat3x4 _f3;
 ivec2 _f4;
 bvec4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 mat3 _f1;
 _GLF_struct_4 _f2;
 vec2 _f3;
 ivec3 _f4;
 _GLF_struct_5 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_2 {
 float _f0;
 bool _f1;
} ;

struct _GLF_struct_3 {
 uint workgroup_size;
 ivec3 _f0;
 _GLF_struct_2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 uvec2 _f1;
 bool _f2;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_8 {
 vec3 _f0;
 _GLF_struct_1 _f1;
 mat4x2 _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_7 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / _GLF_ONE(1.0, injectionSwitch.y))) / 1.0)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))))) || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)), (vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, 1.0, length(vec2(0.0, 0.0)), cos(0.0))), 1.0 * (float(mat2(0.0, 1.0, length(vec2(0.0, 0.0)), cos(0.0)))))), 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0))) + _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.8) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)), (vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0))) + _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.8) : injectionSwitch.y))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)), (vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0))) + _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(7.8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(7.8) : _GLF_FUZZED(89.90))) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(tan(0.0), 1.0 * (tan(0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)), (vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0))) + _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.8) : injectionSwitch.y))) && true))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)), (vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0))) + _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), clamp(clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(7.8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(7.8) : _GLF_FUZZED(89.90))) : injectionSwitch.y, float(mat2x3(false ? _GLF_IDENTITY(_GLF_FUZZED(7.8), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(7.8) : _GLF_FUZZED(89.90))) : injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), _GLF_IDENTITY(tan(0.0), 1.0 * (tan(0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, (1.0) * 1.0))), (vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0))) + _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.8) : injectionSwitch.y))) && true))))))), bool(bvec3(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.2))), 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.2))), 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.2))), 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0), (mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9.2))), 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))).x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.8) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, sqrt(1.0), _GLF_IDENTITY(1.0, (1.0) + length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0)), (vec2(mat4(injectionSwitch, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3.0, (-3.0) / 1.0))), float(0.0), bool(true))), 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 1.0))) + _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.8) : injectionSwitch.y))) && true)))), true, true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), bool(bool((false)))))) && true))), ! (! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), true && ((! (false))))) || false)))))), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-20.80)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), true && (bool(bvec4(true, true, true, false))))))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), (bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), false, false, false)), false, false)))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), false || (false || ((injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), false, false, false)), false, false)))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), false || (false || ((injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), true, false)))) && true), false, false, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), false, false, false)), false, false)))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), false || (false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), false || (false || ((injectionSwitch.x > injectionSwitch.y))))))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((17.64 + (48.32 * -330.360)))), bool(false))))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)))))))))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(vec3(1.0), _GLF_struct_1(ivec3(1), _GLF_struct_0(vec3(_GLF_IDENTITY(1.0, (1.0) + tan(0.0))), uvec2(1u), true)), mat4x2(1.0), _GLF_struct_3(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), ivec3(1), _GLF_struct_2(1.0, _GLF_IDENTITY(true, (true) || false)), bvec2(true)), _GLF_struct_7(mat4x2(1.0), mat3(1.0), _GLF_struct_4(ivec3(1), mat4(1.0), mat2(1.0), mat3x4(1.0), ivec2(1), bvec4(true), ivec3(1)), vec2(1.0), ivec3(1), _GLF_struct_5(uvec3(1u), uvec2(1u), ivec2(1), 1u, _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1330.4425) : 1.0))), (vec4(1.0)) * _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))), 1.0, _GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(1), max(ivec3(1), ivec3(1)))))), _GLF_struct_6(bvec4(true), mat3x4(1.0), mat2x3(1.0), mat2(1.0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5521.6616)), bool(false)))) * _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-1242.1676)), float(abs(1.0)), bool(true))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_8._f3.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))))) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), min(_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(next_virtual_gid) : uint(2))), uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(2, 1, 1, 1)))) / 1)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
