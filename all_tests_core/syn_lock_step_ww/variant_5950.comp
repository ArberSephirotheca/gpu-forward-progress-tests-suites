#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), float(_GLF_FUZZED(7905.2163)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true)), false, true, false)), (bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true)), false, true, false))) && true))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, false || (true)), false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))))), true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, determinant(mat4(tan(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, determinant(mat4(tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat3(sqrt(1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6.2)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), 1.0, 1.0, 0.0, 0.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))) > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) / 1.0)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))), true && (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || ((! (injectionSwitch.x > injectionSwitch.y))))))), false, false))))) && true)), false || ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(-5583.7473, 9594.1027).x)), float(injectionSwitch.y), bool(true)), (true ? mix(_GLF_IDENTITY(float(_GLF_FUZZED(vec2(-5583.7473, 9594.1027).x)), mix(float(float(_GLF_FUZZED(vec2(-5583.7473, 9594.1027).x))), float(_GLF_FUZZED(7598.3982)), bool(false))), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(4.8))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(61.09)), bool(false))) > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true))), true)))))), false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), true))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), 1u * (workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, abs(1.0), 0.0, 0.0, abs(0.0), 0.0, 0.0))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) << _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | 0u)))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id))), (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, abs(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(820.301)), bool(false)))))), 1.0, 1.0, 1.0, sqrt(0.0)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-933.361)), bool(false))))) * (subgroup_local_id))))), clamp(_GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y)) * _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), max(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))), uint(_GLF_IDENTITY(uint((uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 0u | (_GLF_IDENTITY(uint((uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (uint((uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))))))) * (subgroup_local_id))), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u)))))) * (subgroup_local_id)))) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))) * (subgroup_local_id))))) >> 0u)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)))), (_GLF_IDENTITY((min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)))), (_GLF_IDENTITY((min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(0u ^ ((min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id))))), (_GLF_IDENTITY(0u ^ ((min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id))))), uint(uint(0u ^ ((min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id))))))))) << 0u))) / 1u)) | (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), ~ (~ (~ (min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id))))))))), _GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, 0.0 + (injectionSwitch.y)) : _GLF_FUZZED(-2397.8375))))) * (subgroup_local_id))), _GLF_IDENTITY(max(min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id), (uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)) << 0u), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) * (subgroup_local_id), min(uint(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))) - _GLF_IDENTITY(0u, 0u | (0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)))) + 0u))), min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec3(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))) * (subgroup_local_id)))), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, log(1.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0)), mix(float(float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0, abs(1.0), 1.0, log(1.0), 0.0, 1.0, 0.0, abs(0.0), 1.0, 1.0))), float(_GLF_FUZZED(-4445.3964)), bool(false)))))) ^ (max(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id))), min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u)) | ((subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id))) | 0u), max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))) * (subgroup_local_id)) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_id * workgroup_id)) : subgroup_local_id)))), min(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(5.5)), bvec2(false, false))).y)) * (subgroup_local_id))), (min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), (true ? (subgroup_local_id) | (subgroup_local_id) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), uint(uvec4(_GLF_FUZZED(subgroup_size), 1u, 1u, (19718u & 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), clamp(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) ^ 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)) - 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), clamp(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), 0u ^ (uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)))))))) / 1u), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)) - 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), clamp(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)), 0u ^ (uint(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)))))))) / 1u), 0u, 0u, 1u)))) | 0u)) | (subgroup_local_id), (true ? _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ~ (~ ((subgroup_local_id) | (subgroup_local_id)))), (subgroup_local_id) | (subgroup_local_id))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ~ (~ ((subgroup_local_id) | (subgroup_local_id)))), (true ? (subgroup_local_id) | (subgroup_local_id) : _GLF_FUZZED(subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)), (false ? _GLF_FUZZED(165252u) : _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)))))) >> (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))))), 0u | (_GLF_IDENTITY(min(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(69.59) : 1.0, (false ? _GLF_FUZZED(determinant(mat4(6.0, -6315.0347, -6180.8247, 23.79, 6.3, -1.9, 70.25, 5441.8079, -209.442, 10.98, 9632.4681, -9.5, 852.139, -0.5, -9.5, -1.0))) : _GLF_IDENTITY(false ? _GLF_FUZZED(69.59) : 1.0, min(false ? _GLF_FUZZED(69.59) : 1.0, false ? _GLF_FUZZED(69.59) : 1.0)))))), injectionSwitch.y)), 0u ^ (uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(69.59) : 1.0)), injectionSwitch.y)))) * (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)))))) | 0u)), (min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))) | (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))), ((subgroup_local_id)) | ((subgroup_local_id)))) | (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))))))))), _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_local_id)))) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) / 1u)), uint(2u)), 0u + (_GLF_IDENTITY(uint(2u), uint(2u)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), true, false, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(subgroup_base, subgroup_base), (false ? _GLF_FUZZED(subgroup_size) : max(subgroup_base, subgroup_base)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u | (_GLF_FUZZED(virtual_gid)))) | (_GLF_FUZZED(virtual_gid))) : _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec2(subgroup_base, 1u)), _GLF_IDENTITY((uint(uvec2(subgroup_base, 1u))), 0u | ((uint(uvec2(subgroup_base, 1u))))) ^ 0u)), _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(subgroup_base) : subgroup_base)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), (false ? _GLF_FUZZED(virtual_gid) : subgroup_base)), _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) ^ 0u, ((subgroup_base) ^ 0u) + 0u)))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), (false ? _GLF_FUZZED(virtual_gid) : subgroup_base)), _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))), _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u | (_GLF_FUZZED(virtual_gid)))) | (_GLF_FUZZED(virtual_gid))) : _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec2(subgroup_base, _GLF_IDENTITY(1u, (1u) / 1u))), (uint(uvec2(subgroup_base, 1u))) ^ 0u)), _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), (false ? _GLF_FUZZED(virtual_gid) : subgroup_base)), _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))), _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), (false ? _GLF_FUZZED(virtual_gid) : subgroup_base)), _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))), _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u)))))) << 0u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (1) | (1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && true))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))), ((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec3(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec3(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) && ((false))), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec3((false), true, false))), bool(bvec3(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)), bool(bool(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))), true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))))))), false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)), false || (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2(_GLF_FUZZED((2890.9187 * -6.1)), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_FUZZED(4180.2303), 1.0 * (_GLF_FUZZED(4180.2303)))), bvec2(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))))), (max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), mix(vec2(_GLF_FUZZED((2890.9187 * -6.1)), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - sin(0.0)), (injectionSwitch)[0])), max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(4180.2303)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), ! (! (bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), ! (! (bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), ! (! (bool(bool(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), false, true, true)))))), true, false))) || false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-609.933 / -82.21))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3137.0808) : 1.0)), 0.0)), mix(float(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-3137.0808) : 1.0), min((false ? _GLF_FUZZED(-3137.0808) : 1.0), (false ? _GLF_FUZZED(-3137.0808) : 1.0)))), 0.0))), float(_GLF_FUZZED(1013.1599)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 1.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3137.0808) : 1.0)), 0.0)), mix(float(float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3137.0808) : 1.0)), 0.0))), float(_GLF_FUZZED(1013.1599)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(bool(true && (false))))) && true)))))))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(0, (0) | (0)) + (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (_GLF_IDENTITY(4, (4) - 0)) | 0))))))), ((~ (_GLF_IDENTITY(4, (4) - _GLF_IDENTITY(0, (0) | (0)))))) ^ 0)));
 if(_GLF_DEAD(false))
  barrier();
}
