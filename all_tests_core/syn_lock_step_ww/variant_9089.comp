#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-254.433)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9929.7859), _GLF_FUZZED(-861.228)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y)), false)), (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))).y)), false))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), true, true, false))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))), false, false, false))))), (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, 1.0)), vec2(vec2(vec2(mat2(injectionSwitch, 0.0, 1.0)))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(0.4, -330.932).y)), float(0.0), bool(true))), 0.0))), vec3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), dot(vec3(1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false)), clamp(mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false)), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false)), (true ? mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false)) : _GLF_FUZZED(-389.615))), mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false)), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false)), min(mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false)))))), _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false)), 1.0 * (mix(float(0.0), float(_GLF_FUZZED(-5.2)), bool(false))))))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), vec3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true))), true, true)))) || false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), false || (_GLF_DEAD(false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))), true, false))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), (mat3x4(injectionSwitch.y, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)) * mat3(1.0)))), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true, true, false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(_GLF_IDENTITY(bvec2(! (! (! (false))), false), bvec2(bvec3(bvec2(! (! (! (false))), false), false)))))))))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bool(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(! ((false))))))), ! (! (! (false)))))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))), false || ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, abs(determinant(mat2(0.0, 0.0, 1.0, 0.0)))))).x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(34.64)), vec2(_GLF_FUZZED(3.0), (injectionSwitch)[1]), bvec2(false, true))).y : _GLF_FUZZED(abs(235.262)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), min(float(mat4x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9862.6699))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, exp(0.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, exp(0.0), 0.0, 0.0))), 1.0, exp(0.0), 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0)))), float(mat4x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) - 0.0), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, sqrt(0.0), 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)))), (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262))))) + 0.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)))), (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262))))) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)))), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)))), (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262))))) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, sqrt(0.0), 1.0), vec3(0.0, 1.0, 0.0))))) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262))), (true ? (true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262))) : _GLF_FUZZED(trunc(-5.9))))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.7))), 0.0)), 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)) * mat2(1.0))))), vec3(0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), 0.0, 0.0, sqrt(0.0), 1.0, 1.0)))), 1.0 * _GLF_IDENTITY((float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)), min(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)), (false ? _GLF_FUZZED(-5740.4086) : true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)))), true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.7))), 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-1.7))), injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, sqrt(0.0), 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y : _GLF_FUZZED(abs(235.262)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)) * mat2(1.0))))), vec3(0.0, 1.0, 0.0)))), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0), vec2(0.0, 1.0))))), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), 0.0, 0.0, sqrt(0.0), 1.0, 1.0))))), 1.0 * (_GLF_IDENTITY((float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)), min(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)), (false ? _GLF_FUZZED(-5740.4086) : true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)))), true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.7))), 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-1.7))), injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, sqrt(0.0), 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y : _GLF_FUZZED(abs(235.262)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)) * mat2(1.0))))), vec3(0.0, 1.0, 0.0)))), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0), vec2(0.0, 1.0))))), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), 0.0, 0.0, sqrt(0.0), 1.0, 1.0))))), 0.0 + ((float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)), min(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)), (false ? _GLF_FUZZED(-5740.4086) : true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)))), true ? injectionSwitch.y : _GLF_FUZZED(abs(235.262)))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.7))), 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-1.7))), injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), max(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), 0.0, 0.0, sqrt(0.0), 1.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y : _GLF_FUZZED(abs(235.262)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)) * mat2(1.0))))), vec3(0.0, 1.0, 0.0)))), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(injectionSwitch)))), dot(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0), vec2(0.0, 1.0))))), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), 0.0, 0.0, sqrt(0.0), 1.0, 1.0)))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_IDENTITY(false, bool(bool(false))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || false)) || false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), _GLF_IDENTITY(bool(bvec2(! ((false) && true), true)), true && (bool(bvec2(! ((false) && true), true))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7781.7186), _GLF_FUZZED(-2.7)), bvec2(false, false))).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-2512.4670)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))) * (injectionSwitch), vec2(mat4x3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 1.0, 1.0, 1.0, 0.0)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false), false))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, false, true))))) && true))), ! (! (bool(bvec4(false, true, true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9955.1605)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 0u | _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)) + subgroup_local_id), _GLF_IDENTITY(max((workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), subgroup_local_id))), (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)) + subgroup_local_id)), (true ? _GLF_IDENTITY(max((workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), subgroup_local_id))), (workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)) + subgroup_local_id)), (true ? max((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ (0u ^ 0u)), 0u | (subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))), subgroup_local_id))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)), (true ? _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)) : _GLF_FUZZED(workgroup_id))) + subgroup_local_id)) : _GLF_FUZZED(workgroup_base))) : _GLF_FUZZED(subgroup_base))))), min(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, uint(uvec4(workgroup_base + subgroup_base + subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))), workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), (_GLF_DEAD(false)) || false)))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0) : _GLF_FUZZED(abs(-77.34)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || false)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1.0))), _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.8, -4296.8725)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.8, -4296.8725)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.8, -4296.8725)))))[0], _GLF_FUZZED(float(-76030))), vec2(_GLF_FUZZED(-3439.7959), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.8, -4296.8725)))))[1]), bvec2(false, true)))) - vec2(0.0, 0.0)).y), exp(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(sin(0.0), float(_GLF_IDENTITY(mat2(sin(0.0), 1.0, 1.0, 0.0), (mat2(sin(0.0), 1.0, 1.0, 0.0)) / mat2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-285.360) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0))))), 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))) / 1.0), 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0)))), 1.0, 1.0))), 1.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), exp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(6.6)), float(determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), bool(true)))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.5))), 1.0)), 1.0, 1.0)), 1.0, 1.0, abs(sin(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.1) : 0.0))), _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-6.0)), float(sqrt(0.0)), bool(true))), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0))), 0.0, 1.0)), clamp(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(mat2x3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))), sqrt(0.0), 0.0, 1.0)), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), mix(vec3((vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0)))), tan(0.0), abs(1.0)), mat4x2(mat4x2(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), abs(1.0))))))), 1.0)))[0], _GLF_IDENTITY((vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0))), vec3(mat2x3((vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0))), exp(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))[1], _GLF_IDENTITY(_GLF_IDENTITY((vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0))), (false ? _GLF_FUZZED(vec3(3.5, -24.75, -3656.5789)) : (vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))))[2], ((vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))[2]) - 0.0)), vec3(_GLF_FUZZED(float(false)), _GLF_FUZZED(668.973), _GLF_FUZZED(-1.7)), bvec3(false, false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), clamp(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), mix(vec3((vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))[0], (vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))[1], (vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))[2]), vec3(_GLF_FUZZED(float(false)), _GLF_FUZZED(668.973), _GLF_FUZZED(-1.7)), bvec3(false, false, false)))))))), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), clamp(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) + 0.0) : _GLF_FUZZED(58.51)))) * (_GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), mix(vec3((vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))[0], (vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-80.52)))), 0.0, 1.0)))[1], (vec3(mat2x3(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (true ? float(mat4x3(0.0, log(1.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(2.9))))), sqrt(0.0), 0.0, 1.0)))[2]), vec3(_GLF_FUZZED(float(false)), _GLF_FUZZED(668.973), _GLF_FUZZED(-1.7)), bvec3(false, false, false))))))))))) / vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y), _GLF_ONE(1.0, injectionSwitch.y))), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), float(vec2(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), 1.0)))), 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), exp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), 1.0 * (float(0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(6.6)), float(determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), bool(true)))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(3.5), 0.0 + (_GLF_FUZZED(3.5))))), 1.0)), 1.0, 1.0)), 1.0, 1.0, abs(sin(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(sqrt(0.0), max(_GLF_IDENTITY(sqrt(0.0), mix(float(_GLF_FUZZED(-6.0)), float(sqrt(0.0)), bool(true))), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0))), 0.0, 1.0)), clamp(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(mat2x3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), sqrt(0.0), 0.0, 1.0)), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), mix(vec3((vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), abs(1.0)), mat4x2(mat4x2(mat4x2(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, tan(0.0), abs(1.0))))))), 1.0)))[0], (vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))[1], _GLF_IDENTITY((vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))[2], ((vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))), 0.0, 1.0)))[2]) - 0.0)), vec3(_GLF_FUZZED(float(false)), _GLF_FUZZED(668.973), _GLF_FUZZED(-1.7)), bvec3(false, false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((71.81 + 209.525))), bool(false))), 0.0), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), clamp(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(mat2x3(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), sqrt(0.0), 0.0, 1.0)), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), mix(vec3((vec3(mat2x3(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5488.4117) : 0.0)), 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))[0], (vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))[1], (vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))[2]), vec3(_GLF_FUZZED(float(false)), _GLF_FUZZED(668.973), _GLF_FUZZED(-1.7)), bvec3(false, _GLF_IDENTITY(false, false || (false)), false)))))))), mat3(1.0) * (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), (vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0))) / cos(vec3(0.0, 0.0, 0.0))), clamp(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(mat2x3(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), max(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), sqrt(0.0), 0.0, 1.0)), _GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)), mix(vec3((vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), 0.0, 1.0)))[0], (vec3(mat2x3(vec3(0.0, 0.0, 0.0), sqrt(0.0), 0.0, 1.0)))[1], (vec3(mat2x3(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (true ? float(mat4x3(0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(2.9))))), sqrt(0.0), 0.0, 1.0)))[2]), vec3(_GLF_FUZZED(float(false)), _GLF_FUZZED(668.973), _GLF_FUZZED(-1.7)), bvec3(false, false, false))))))))))) / vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), float(vec2(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), 1.0)))), 1.0))))) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.5)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0), (mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.0)), bool(false))), 0.0, 0.0))))), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8206.2902))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / abs(vec2(1.0, 1.0)))).y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(-8206.2902))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), true, false, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8206.2902))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8206.2902))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8206.2902))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, false)), false || (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-8206.2902), max(true ? injectionSwitch.x : _GLF_FUZZED(-8206.2902), true ? injectionSwitch.x : _GLF_FUZZED(-8206.2902))))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8206.2902))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-8206.2902))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false, false))))) || false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, tan(0.0), 1.0, sqrt(0.0), 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, tan(0.0), 1.0, sqrt(0.0), 1.0))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(36.61, _GLF_IDENTITY(5926.0887, mix(float(_GLF_FUZZED(-748.226)), float(5926.0887), bool(true))))))), injectionSwitch)), injectionSwitch, injectionSwitch)).y)) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), _GLF_IDENTITY(false, ! (! (false))) || (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.6))), 1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-822.849)), float(float(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.6))), 1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0))), bool(true)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, (true) && true))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, (true) && true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, (true) && true))), true), false, false))), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, (true) && true))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, (true) && true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, (true) && true))), true), false, false))), false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))), (false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))) || false))))) && true, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) && true), ! (! ((false) && _GLF_IDENTITY(true, (true) && true)))), ((false) && _GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (true && ((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((false) && true, true && ((false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && ((false) && _GLF_IDENTITY(true, (true) && true)), ! (! (true && ((false) && _GLF_IDENTITY(true, (true) && true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(90.39, 3.4)) : injectionSwitch)).x < injectionSwitch.y)))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0)))) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.8), max(_GLF_IDENTITY(_GLF_FUZZED(-0.8), min(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8))), _GLF_IDENTITY(_GLF_FUZZED(-0.8), min(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8))))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-0.8), min(_GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8))), _GLF_FUZZED(-0.8), _GLF_FUZZED(-0.8)))), float(injectionSwitch.y), bool(true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false)))) || false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
