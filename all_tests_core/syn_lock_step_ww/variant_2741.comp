#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 ivec2 _f0;
 uint _f1;
 ivec3 _f2;
 mat2x3 _f3;
 bvec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_2 {
 uint workgroup_base;
 uint _f0;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) * vec2(1.0, 1.0)), vec2(mat4x3(injectionSwitch, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), true), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))), bool(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))), false))))) && (_GLF_DEAD(false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true), false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))), bool(bvec2(_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))), false))))) && (_GLF_DEAD(false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true), false))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (! ((! ((false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (false)))))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), true && ((false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY((false), true && ((false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false, true && ((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), true && ((false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY((false), true && ((false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (bool(bvec3(_GLF_IDENTITY((false), true && ((false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false)))) && true), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 0.0, 1.0))).x < injectionSwitch.y, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).x < injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), min(vec3(injectionSwitch, 0.0), _GLF_IDENTITY(vec3(injectionSwitch, 0.0), mat3(1.0) * (vec3(injectionSwitch, 0.0))))))).x < injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))), false), false, true)))))), ! (! ((_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(-3.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))))) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), min(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))), 0.0, 0.0, 1.0, log(1.0), 0.0)), (float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0))))), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), min(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))), 0.0, 0.0, 1.0, log(1.0), 0.0)), (float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0))))), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), min(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))), 0.0, 0.0, 1.0, log(1.0), 0.0)), (float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0))))), (mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), min(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))), 0.0, 0.0, 1.0, log(1.0), 0.0)), (float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0)))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(mat4(8.1, -2.8, -2525.8606, 96.61, 645.998, -5.2, 924.658, 3.0, 9592.1593, -51.87, 1073.2517, -1.4, 5.1, 725.113, -84.70, 3607.3098)))) * (vec4(injectionSwitch, 1.0, 0.0))), vec4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(sqrt(0.0)), 1.0, 0.0)))), mat4(1.0) * (vec4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), mix(vec4(_GLF_FUZZED(_GLF_IDENTITY(-589.295, (-589.295) / 1.0)), _GLF_FUZZED(847.662), _GLF_FUZZED(-2.9), (_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mat4(1.0) * (vec4(injectionSwitch, 1.0, 0.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), vec4(mat4x3(vec4(injectionSwitch, 1.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0))), mat4(1.0) * (vec4(injectionSwitch, 1.0, 0.0))))[0], (_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mat4(1.0) * _GLF_IDENTITY((vec4(injectionSwitch, 1.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : _GLF_IDENTITY((vec4(injectionSwitch, 1.0, 0.0)), (false ? _GLF_FUZZED(vec4(-765.189, -0.0, -9.9, 89.30)) : _GLF_IDENTITY(_GLF_IDENTITY((vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(injectionSwitch, 1.0, 0.0)))), mix(vec4(_GLF_IDENTITY(_GLF_FUZZED(11.07), mix(float(_GLF_FUZZED(-109.775)), float(_GLF_IDENTITY(_GLF_FUZZED(11.07), max(_GLF_FUZZED(11.07), _GLF_IDENTITY(_GLF_FUZZED(11.07), (_GLF_FUZZED(11.07)) + 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-2.6), _GLF_FUZZED(-56.42), ((vec4(injectionSwitch, 1.0, 0.0)))[3]), vec4(((vec4(injectionSwitch, 1.0, 0.0)))[0], ((vec4(injectionSwitch, 1.0, 0.0)))[1], ((vec4(injectionSwitch, 1.0, 0.0)))[2], _GLF_FUZZED(-100.919)), bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), mix(vec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)), 0.0, 0.0))))[0], (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)))[1], (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)))[2], _GLF_FUZZED(float(22461))), vec4(_GLF_FUZZED(3.6), _GLF_FUZZED(_GLF_IDENTITY(55.62, min(55.62, 55.62))), _GLF_FUZZED(51.81), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)))[3]), bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))[1], (_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mat4(1.0) * (vec4(injectionSwitch, 1.0, 0.0))))[2], _GLF_FUZZED(_GLF_IDENTITY(-23.24, max(-23.24, _GLF_IDENTITY(-23.24, max(-23.24, _GLF_IDENTITY(-23.24, max(-23.24, -23.24)))))))), bvec4(true, true, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(sqrt(0.0)), 1.0, 0.0)))), mat4(1.0) * (vec4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), mix(vec4(_GLF_FUZZED(_GLF_IDENTITY(-589.295, (-589.295) / 1.0)), _GLF_FUZZED(847.662), _GLF_FUZZED(-2.9), (_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mat4(1.0) * (vec4(injectionSwitch, 1.0, 0.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), vec4(mat4x3(vec4(injectionSwitch, 1.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0))), mat4(1.0) * (vec4(injectionSwitch, 1.0, 0.0))))[0], (_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mat4(1.0) * _GLF_IDENTITY((vec4(injectionSwitch, 1.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : _GLF_IDENTITY((vec4(injectionSwitch, 1.0, 0.0)), (false ? _GLF_FUZZED(vec4(-765.189, -0.0, -9.9, 89.30)) : _GLF_IDENTITY(_GLF_IDENTITY((vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(injectionSwitch, 1.0, 0.0)))), mix(vec4(_GLF_IDENTITY(_GLF_FUZZED(11.07), mix(float(_GLF_FUZZED(-109.775)), float(_GLF_IDENTITY(_GLF_FUZZED(11.07), max(_GLF_FUZZED(11.07), _GLF_IDENTITY(_GLF_FUZZED(11.07), (_GLF_FUZZED(11.07)) + 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-2.6), _GLF_FUZZED(-56.42), ((vec4(injectionSwitch, 1.0, 0.0)))[3]), vec4(((vec4(injectionSwitch, 1.0, 0.0)))[0], ((vec4(injectionSwitch, 1.0, 0.0)))[1], ((vec4(injectionSwitch, 1.0, 0.0)))[2], _GLF_FUZZED(-100.919)), bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), mix(vec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)), 0.0, 0.0))))[0], (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)))[1], (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)))[2], _GLF_FUZZED(float(22461))), vec4(_GLF_FUZZED(3.6), _GLF_FUZZED(_GLF_IDENTITY(55.62, min(55.62, 55.62))), _GLF_FUZZED(51.81), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)))[3]), bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))[1], (_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mat4(1.0) * (vec4(injectionSwitch, 1.0, 0.0))))[2], _GLF_FUZZED(_GLF_IDENTITY(-23.24, max(-23.24, _GLF_IDENTITY(-23.24, max(-23.24, _GLF_IDENTITY(-23.24, max(-23.24, -23.24)))))))), bvec4(true, true, true, false)))) * mat4(1.0))))))), 0.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), min(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))), 0.0, 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, max((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, _GLF_IDENTITY((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, float(mat2((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, 0.0, 0.0, 1.0)))))))))), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), min(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))), 0.0, 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, max((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, _GLF_IDENTITY((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, float(mat2((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, 0.0, 0.0, 1.0)))))))))), mat4(1.0) * (mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), min(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0.0, float(mat4x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0))), 0.0, 0.0, 1.0, log(1.0), 0.0)), _GLF_IDENTITY((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, max((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, _GLF_IDENTITY((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, float(mat2((float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0))) + 0.0, 0.0, 0.0, 1.0))))))))))))))) * (vec4(injectionSwitch, 1.0, 0.0))), vec4(mat2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sqrt(sqrt(0.0)), 1.0, 0.0)))), mat4(1.0) * (vec4(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))), mix(vec4(_GLF_FUZZED(_GLF_IDENTITY(-589.295, (-589.295) / 1.0)), _GLF_FUZZED(847.662), _GLF_FUZZED(-2.9), (_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mat4(1.0) * (vec4(injectionSwitch, 1.0, 0.0))))[3]), vec4((_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), vec4(mat4x3(vec4(injectionSwitch, 1.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0))), mat4(1.0) * (vec4(injectionSwitch, 1.0, 0.0))))[0], (_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(7.2)), bool(false)))) * _GLF_IDENTITY((vec4(injectionSwitch, 1.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : _GLF_IDENTITY((vec4(injectionSwitch, 1.0, 0.0)), (false ? _GLF_FUZZED(vec4(-765.189, -0.0, -9.9, 89.30)) : _GLF_IDENTITY(_GLF_IDENTITY((vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(max(0.0, 0.0)), float(_GLF_FUZZED(268.611)), bool(false)))))), vec4(1.0, 1.0, 1.0, 1.0) * ((vec4(injectionSwitch, 1.0, 0.0)))), mix(vec4(_GLF_IDENTITY(_GLF_FUZZED(11.07), mix(float(_GLF_FUZZED(-109.775)), float(_GLF_IDENTITY(_GLF_FUZZED(11.07), max(_GLF_FUZZED(11.07), _GLF_IDENTITY(_GLF_FUZZED(11.07), (_GLF_FUZZED(11.07)) + 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-2.6), _GLF_FUZZED(-56.42), ((vec4(injectionSwitch, 1.0, 0.0)))[3]), vec4(((vec4(injectionSwitch, 1.0, 0.0)))[0], ((vec4(injectionSwitch, 1.0, 0.0)))[1], ((vec4(injectionSwitch, 1.0, 0.0)))[2], _GLF_FUZZED(-100.919)), bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), mix(vec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)), vec4(mat3x2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, false), false))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, false), false))), true))))), true)))))))))), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), true)))))))))), false, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))), true))))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)), 0.0, 0.0))))[0], (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, true))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(-5.2))))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), true)))))))))))))) && true) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)))[2], _GLF_FUZZED(float(22461))), _GLF_IDENTITY(vec4(_GLF_FUZZED(3.6), _GLF_FUZZED(_GLF_IDENTITY(55.62, min(55.62, 55.62))), _GLF_FUZZED(51.81), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)))[3]), (vec4(_GLF_FUZZED(3.6), _GLF_FUZZED(_GLF_IDENTITY(55.62, min(55.62, 55.62))), _GLF_FUZZED(51.81), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(vec4(1.0, -4624.1650, -2102.5460, -9994.5593)) : (vec4(injectionSwitch, 1.0, 0.0)))[3])) - vec4(0.0, 0.0, 0.0, 0.0)), bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))[1], (_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 0.0), mat4(1.0) * (vec4(injectionSwitch, 1.0, 0.0))))[2], _GLF_FUZZED(_GLF_IDENTITY(-23.24, max(-23.24, _GLF_IDENTITY(-23.24, max(-23.24, _GLF_IDENTITY(-23.24, max(-23.24, -23.24)))))))), bvec4(true, true, true, false)))))))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 1.0)))) * mat2(1.0)).x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.9), _GLF_FUZZED(vec3(-4634.8894, 7.7, 37.24).g)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), false, false, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), ((! (_GLF_IDENTITY(false, ! (! (false)))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.x = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, _GLF_IDENTITY(min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id), (true ? min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id)))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, _GLF_IDENTITY(min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id), (true ? min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id)))), (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, _GLF_IDENTITY(min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id), (true ? min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id))))) | _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id), (true ? min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id))), ~ (~ (_GLF_IDENTITY(min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id), (true ? min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id)))))))), (true ? (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id), (true ? min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id))), ~ (~ (_GLF_IDENTITY(min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id), (true ? min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id)))))))) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id)))), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, _GLF_IDENTITY(min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id), (true ? min(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id, GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id) : _GLF_FUZZED(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.3)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(_GLF_IDENTITY(bvec3(false || (false), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false || (false), true, true)), bvec3(bvec4(bvec3(bvec3(false || (false), true, true)), true))))))))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0) : _GLF_FUZZED(-5389.7254))), ! (! (injectionSwitch.x > injectionSwitch.y))), true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(805.277)), vec2(_GLF_FUZZED(-89.25), (injectionSwitch)[1]), bvec2(false, true))))).y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.4)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(184.863, -907.226)))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), bvec3(bvec3(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))), true)))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))), true)))))), true && (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))), true)))))), (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))), true)))))), (! (! (bool(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true, true))), false, false))))))), true))))))) && true)) && true)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))).y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY((min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(min((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[0]), float(_GLF_IDENTITY(mat2(min((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[0]), 1.0, sqrt(1.0), 1.0), _GLF_IDENTITY(mat2(mat2x3(mat2(min((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[0]), 1.0, sqrt(1.0), 1.0))), (true ? mat2(mat2x3(mat2(min((min(injectionSwitch, injectionSwitch))[0], (min(injectionSwitch, injectionSwitch))[0]), 1.0, sqrt(1.0), 1.0))) : _GLF_FUZZED(mat2(-4.0, 1.6, -37.45, -9259.4957)))))))), _GLF_FUZZED(6292.1038)), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(24.10, -4618.5792), (vec2(24.10, -4618.5792)) / vec2(1.0, 1.0)).s), (min(injectionSwitch, injectionSwitch))[1]), bvec2(false, true)))).y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.8)))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) && true), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) && true)), true && ((_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) && true)))) && true))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))) || false))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true, false, _GLF_IDENTITY(false, bool(bool(false))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y : _GLF_FUZZED(0.8)))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, true))) || false)), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))) || false)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), false)))))), true && (bool(bvec3(false, false, true))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true)), true && (bool(bvec3(false, false, true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true, false, _GLF_IDENTITY(false, bool(bool(false)))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), true, false, _GLF_IDENTITY(false, bool(bool(false))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(0.8)))))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, true))) || false)), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)), (bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))) && true))) || false))))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (true ? vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))) : _GLF_FUZZED(max(vec2(4500.3237, 6661.5111), injectionSwitch))))).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)).y, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + 0.0), injectionSwitch.x)) > injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.y = num_workgroup;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))).x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch))))).y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0))), clamp(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-2.8))), vec2(_GLF_FUZZED(-9.3), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0))), vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + log(1.0)), 0.0)), abs(0.0))), _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, abs(0.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0)))))))).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(771.723), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-995.530)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-97.24), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-6.9)), bvec2(true, false)))) / vec2(1.0, 1.0))).x > injectionSwitch.y)))))), true)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))) && true)), false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), (dot(vec2(sqrt(_GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(82.83)), bool(false))), 0.0, 0.0)))), 0.0), vec2(0.0, 1.0))) + 0.0)), 1.0)), (_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.x, float(vec4(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), log(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0))), 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), (dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0))) + 0.0)), 1.0)), max(float(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), (dot(_GLF_IDENTITY(vec2(sqrt(1.0), 0.0), (vec2(sqrt(1.0), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)))) - vec2(0.0, 0.0)), vec2(0.0, 1.0))) + 0.0)), 1.0)), float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), (dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0))) / 1.0), (dot(vec2(sqrt(1.0), 0.0), vec2(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2840.9326) : 1.0))))) + 0.0)), 1.0), (true ? mat2(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0)), (dot(vec2(sqrt(1.0), 0.0), vec2(0.0, 1.0))) / 1.0), (dot(vec2(sqrt(1.0), 0.0), vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-2840.9326) : 1.0), min((false ? _GLF_FUZZED(-2840.9326) : 1.0), (false ? _GLF_FUZZED(-2840.9326) : 1.0))))))) + 0.0)), 1.0) : _GLF_FUZZED(mat2(mat4x3(4013.2859, -1.2, 8796.5039, -8.6, 1.5, -935.933, -4.6, _GLF_IDENTITY(4362.9574, (false ? _GLF_FUZZED(-49.56) : 4362.9574)), 8.8, -444.498, -35.62, -532.703))))))))) / 1.0)) > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(bvec4(! (_GLF_DEAD(false)), false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(workgroup_size * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.z, (false ? _GLF_FUZZED(uint(80492)) : GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.z)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | (1u)), _GLF_struct_1(_GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(_GLF_IDENTITY(1, (1) | (1)), 1, _GLF_IDENTITY(1, max(1, 1)), 1)), _GLF_struct_0(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, (1) | (1)))), min((ivec2(_GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(1, (1) | (1)))), ivec2(0, 0) + ((ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED((+ ivec3(97592, 1489, -63048))[2]))), (1) | (1)))))))) - ivec2(0, 0)), 1u, _GLF_IDENTITY(ivec3(1), ivec3(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(ivec4(ivec3(1), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), min(ivec4(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(77326)))), min((1), (1))) : _GLF_FUZZED(99657))) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 1), _GLF_IDENTITY(clamp(_GLF_IDENTITY(ivec3(1, 1, 1), min(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1))))), ivec3(1, 1, 1), ivec3(1, 1, 1)), max(clamp(_GLF_IDENTITY(ivec3(1, 1, 1), min(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1))))), ivec3(1, 1, 1), ivec3(1, 1, 1)), clamp(_GLF_IDENTITY(ivec3(1, 1, 1), min(ivec3(1, 1, 1), _GLF_IDENTITY(ivec3(1, 1, 1), clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1))))), ivec3(1, 1, 1), ivec3(1, 1, 1))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 1), clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1))))))), ~ (~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 1), clamp(ivec3(1, 1, 1), ivec3(1, 1, 1), ivec3(1, 1, 1)))))))))))))), int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, 0))) ^ ivec3(0, 0, 0)), int(_GLF_ONE(1.0, injectionSwitch.y))))), ivec4(ivec3(1), int(_GLF_ONE(1.0, injectionSwitch.y))))))), mat2x3(1.0), bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)), false || ((true))), _GLF_IDENTITY((! (true)), ((! (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 + (_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), 0 | ((1))), _GLF_IDENTITY((1), int(ivec2((1), 0))))))) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) | (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) - 0)))))), clamp((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0))))) * 1, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), clamp((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0))))) * 1, ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), clamp((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0))))) * 1))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), clamp((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0))))) * 1, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), clamp((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0))))) * 1, int(ivec4((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), clamp((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0))))) * 1, 1, 1, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), clamp((_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(1, (1) >> 0))))) * 1))) / 1)) | (1))), ~ (~ (ivec4(1)))))));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, min(subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w, subgroup_id * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! ((false)), ! (! (! ((false))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)) || false)), true, true)), false || (_GLF_IDENTITY(bool(bvec4(! ((false)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), true, true)), ! (! (bool(bvec4(! ((false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true, true)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec3(bool(bvec4(false, false, true, true)), true, true)))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.4), _GLF_FUZZED(5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.4), _GLF_FUZZED(5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))), clamp(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.4), _GLF_FUZZED(5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.4), _GLF_FUZZED(5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.4), _GLF_FUZZED(5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0))))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.4), _GLF_FUZZED(5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * mat2(1.0)))))).x > injectionSwitch.y))))))))), ! (! (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)), true, true)), false || (bool(bvec4(! ((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec4(false, false, false, false))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), false, true))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, cos(0.0), 0.0, 0.0))).x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(float(1.0))), min(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))))), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))), 0.0)), sin(0.0), 0.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)).x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_2.workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec4(subgroup_base, 1u, 1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 0u, 1u)))), ~ (~ (uvec4(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), 1u, 1u, 1u))))))) ^ 0u, ~ (~ ((_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec4(subgroup_base, 1u, 1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(max(1u, 1u), max(max(1u, 1u), max(1u, 1u))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(max(1u, 1u), max(max(1u, 1u), max(1u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), max(max(1u, 1u), max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), max(max(1u, 1u), max(1u, 1u)))))), (false ? _GLF_FUZZED(subgroup_size) : ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), max(max(1u, 1u), max(1u, 1u)))))))))) >> 0u), 0u, 1u)))), ~ _GLF_IDENTITY((~ (uvec4(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), 1u, 1u, 1u))), (uvec4(0u, 0u, 0u, 0u) | uvec4(0u, 0u, 0u, 0u)) | ((~ (uvec4(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), 1u, 1u, 1u))))))))) ^ 0u))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 0.0 + (max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(78134u) : (_GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec4(subgroup_base, 1u, 1u, _GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(0u, (0u) >> 0u), 1u)))), ~ (~ _GLF_IDENTITY((uvec4(subgroup_base, 1u, 1u, 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uvec4(subgroup_base, 1u, 1u, 1u)), ((uvec4(subgroup_base, 1u, 1u, 1u))) / uvec4(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.y)))) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (uint(2u)) | (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u)))))) >> 0u), _GLF_IDENTITY(uint(2u), 0u ^ (uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), 1u, 1u))), (~ ((uvec4(subgroup_base, 1u, 1u, 1u)))) * uvec4(1u, 1u, 1u, 1u))))))))) ^ 0u))) + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z;
 GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.y = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_2.workgroup_base + subgroup_base + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), max(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1), 0u ^ ((GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1))), (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.z + 1))) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.w);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x = next_virtual_gid, (_GLF_IDENTITY(186580u & 0u, (_GLF_IDENTITY(186580u & 0u, (186580u & 0u) ^ 0u)) + 0u)) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x = next_virtual_gid, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x = next_virtual_gid))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) || false)), true, true))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[GLF_merged3_0_1_13_1_1_11_2_1_12subgroup_sizevirtual_gidworkgroup_id.y], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(1, 1))), 0u + (uint(_GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | (4)), 4, 4)), 4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x, max(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x, GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidnum_workgroupsubgroup_local_idsubgroup_size.x))], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true)), false, false))), false, false, false)), (bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, true, true)), false, false))), false, false, false))) || false))) ? 4 : _GLF_FUZZED(65868))), _GLF_IDENTITY(64, ~ (~ (64))), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-151.399)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true), true, true)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true))) || false, true && ((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true))) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(94.00, -25.38)) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 1.0, tan(0.0))), mix(float(float(vec4(injectionSwitch.y, 0.0, 1.0, tan(0.0)))), float(_GLF_FUZZED(7.5)), bool(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(8.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, false, true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((false), ! (! ((false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(0.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (true ? vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), cos(0.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(vec2(9576.7287, -8.2))))) : _GLF_FUZZED(injectionSwitch), min(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)))), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-2.8 + 257.648)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.6)), bvec2(true, false))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch), true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch), min(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)))), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch), true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-46.15)), vec2(_GLF_FUZZED(-43.44), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat4(injectionSwitch[1], 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4(injectionSwitch[1], 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0)))))))))[1]), bvec2(false, true))))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
}
