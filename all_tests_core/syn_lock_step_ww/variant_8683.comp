#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 ivec3 _f0;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(137.779))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.9) : injectionSwitch.y))) - 0.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED((-62.28 / atan(7303.7734))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.9) : injectionSwitch.y))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.9) : injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.9) : injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.9) : injectionSwitch.y))), (true ? (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.9) : injectionSwitch.y))) : _GLF_FUZZED((- -2.4)))) - 0.0))))), (true ? injectionSwitch.y : _GLF_FUZZED(distance(vec2(633.213, _GLF_IDENTITY(_GLF_IDENTITY(2.0, (false ? _GLF_FUZZED(-29.74) : 2.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(3.1, clamp(3.1, 3.1, 3.1))) : 2.0))), injectionSwitch))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), clamp(_GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1)))), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(max(ivec3(1), ivec3(1)), (false ? _GLF_FUZZED(ivec3(-82902, -92206, -3487)) : max(ivec3(1), ivec3(1))))), ivec3(1)))) | ivec3(0, 0, 0))) * ivec3(1, 1, 1)), gl_SubgroupInvocationID);
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) * uvec3(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))))) * uvec3(1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u)), _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) + ((gl_NumWorkGroups))), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))))), gl_NumWorkGroups)), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) * uvec3(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))))) * uvec3(1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u)), _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) + ((gl_NumWorkGroups))), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))))), gl_NumWorkGroups)), clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) * uvec3(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))))) * uvec3(1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u)), _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) + ((gl_NumWorkGroups))), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))))), gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) * uvec3(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))))) * uvec3(1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u)), _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) + ((gl_NumWorkGroups))), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))))), gl_NumWorkGroups)), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) * uvec3(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))))) * uvec3(1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u)), _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) + ((gl_NumWorkGroups))), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))))), gl_NumWorkGroups)), 1u))), _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) * uvec3(1u, 1u, 1u), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)))))) * uvec3(1u, _GLF_IDENTITY(1u, (1u) << 0u), 1u)), _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_NumWorkGroups), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) + ((gl_NumWorkGroups))), max(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups))))))), gl_NumWorkGroups)))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9.4))), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), true && (bool(! (injectionSwitch.x > injectionSwitch.y))))))) || false)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) && true, ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && true, ((_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && true, ((_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))) && true)))), ! (! (! ((! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bool(! (injectionSwitch.x > injectionSwitch.y)), (bool(! (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && true, ((_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))) && true))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)), (clamp(vec2(1.0, 1.0), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(205.649)), bool(false)))), vec2(1.0, 1.0))) * vec2(1.0, 1.0))))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / abs(vec2(1.0, 1.0))).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))))).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y))))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), (bool(bvec4(_GLF_DEAD(false), true, true, false))) && true)), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), (bool(bvec4(_GLF_DEAD(false), true, true, false))) && true)), false))) || false), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), false))), false, true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_DEAD(false), false)), true), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), false)), true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) / 1u), (false ? _GLF_FUZZED((num_workgroup / packSnorm2x16(vec2(-9.7, _GLF_IDENTITY(908.063, clamp(_GLF_IDENTITY(908.063, clamp(908.063, 908.063, 908.063)), 908.063, 908.063)))))) : _GLF_IDENTITY((workgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), max((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * (workgroup_size))), (workgroup_size))) >> (0u | 0u))))))), (((_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u)))))))) - 0u)) | 0u))), workgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), 1u * _GLF_IDENTITY(((workgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(((workgroup_size)), (((workgroup_size))) - (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))) | 0u, (false ? _GLF_FUZZED((num_workgroup / packSnorm2x16(vec2(-9.7, 908.063)))) : _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, workgroup_size), min(min(workgroup_size, workgroup_size), min(workgroup_size, workgroup_size))))))) >> (0u | 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u)), min(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u)), _GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u)))) : _GLF_FUZZED(num_workgroup)))))))), _GLF_IDENTITY((((_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u)))))))) - 0u, ((((_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) >> (0u | 0u), (true ? (_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size))) >> (0u | 0u) : _GLF_FUZZED(atomicCompSwap(workgroup_id, subgroup_id, workgroup_size))))))))))) - 0u) | ((((_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u)))))))) - 0u))), 0u ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(workgroup_size)))) - 0u))) ^ _GLF_IDENTITY(((_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (_GLF_IDENTITY(0u, max(0u, 0u)) | 0u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (_GLF_IDENTITY(0u, max(0u, 0u)) | 0u)))), 0u | (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (_GLF_IDENTITY(0u, max(0u, 0u)) | 0u)))), (~ (uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (_GLF_IDENTITY(0u, max(0u, 0u)) | 0u))))) + 0u))))))))), (((_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> (0u | 0u)))))))) - 0u)))) | 0u))), workgroup_size)))) * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id, (0u | 0u), 0u, 1u), uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u) ^ (uvec4(subgroup_id, _GLF_IDENTITY((0u | _GLF_IDENTITY(0u, (0u) >> 0u)), ~ (_GLF_IDENTITY(~ ((0u | 0u)), ~ (~ (_GLF_IDENTITY(~ ((0u | 0u)), 0u ^ (~ ((0u | 0u))))))))), 0u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_id, (_GLF_IDENTITY(0u | 0u, uint(uvec2(0u | 0u, 0u)))), 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id, (_GLF_IDENTITY(0u | 0u, uint(uvec2(0u | 0u, 0u)))), 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(subgroup_id, (_GLF_IDENTITY(0u | 0u, uint(uvec2(0u | 0u, 0u)))), 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(uvec4(subgroup_id, (_GLF_IDENTITY(0u | 0u, uint(uvec2(0u | 0u, 0u)))), 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (_GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u))), 0u, 1u)))), max((_GLF_IDENTITY(uvec4(subgroup_id, (_GLF_IDENTITY(0u | 0u, uint(uvec2(0u | 0u, 0u)))), 0u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)), (uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u))) | (uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u))))) * ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), clamp(uvec4(6u), uvec4(6u), uvec4(6u))))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)))))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) | (subgroup_id)), (_GLF_IDENTITY(0u | 0u, uint(uvec2(0u | 0u, 0u)))), 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)))))), (_GLF_IDENTITY(uvec4(subgroup_id, (_GLF_IDENTITY(0u | 0u, uint(uvec2(0u | 0u, 0u)))), 0u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u))))))) - uvec4(0u, 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec4(subgroup_id, (0u | 0u), 0u, 1u), uvec4(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), (0u) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ (uvec4(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (0u | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))), 0u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, 1u * (0u))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_id, (0u | 0u), 0u, 1u), (uvec4(subgroup_id, (0u | 0u), 0u, 1u)) - (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u) | uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)), min(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)), uvec4(0u, _GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))), 1u)), min(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))), 1u)), max(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))), 1u)), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))), 1u)))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))), 1u)))), (false ? _GLF_FUZZED(uvec4(101290u, 95030u, 47181u, _GLF_IDENTITY(48096u, max(48096u, 48096u)))) : uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)))))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)), (uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))))), min(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (_GLF_IDENTITY(0u, ~ (~ (0u))) | 0u), 0u, 1u)), min(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)), uvec4(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)), 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | _GLF_IDENTITY(0u, 0u ^ (0u))), 0u, 1u)), (false ? _GLF_FUZZED(uvec4(101290u, 95030u, 47181u, 48096u)) : uvec4(0u, 0u, 0u, 0u) ^ _GLF_IDENTITY((uvec4(subgroup_id, (0u | 0u), 0u, 1u)), ((uvec4(subgroup_id, (0u | 0u), 0u, 1u))) ^ uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u) ^ (uvec4(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((0u | 0u), 0u | ((0u | 0u))), 0u, 1u)), (uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u))) ^ uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)), min(_GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) | (~ _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((0u), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(uvec3((0u), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec3((0u), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec3((0u), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), (uint(_GLF_IDENTITY(uvec3((0u), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(uvec3((0u), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec3((0u), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec3((0u), 0u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))))) | 0u)))))), 0u) ^ (uvec4(subgroup_id, (0u | 0u), _GLF_IDENTITY(0u, 0u + (0u)), 1u)), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)), (false ? _GLF_FUZZED(uvec4(101290u, 95030u, 47181u, 48096u)) : _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)), (uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u))) / uvec4(1u, 1u, 1u, 1u)))))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)), (uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u))) ^ uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)) >> uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)) | 0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)) | 0u, 0u + (_GLF_IDENTITY(0u, (0u) | (0u)) | 0u)), _GLF_IDENTITY(0u, (0u) | (0u)) | 0u))) | 0u)), 0u, 1u)), min(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ _GLF_IDENTITY((uvec4(subgroup_id, (0u | 0u), 0u, 1u)), min((uvec4(subgroup_id, (0u | 0u), 0u, 1u)), _GLF_IDENTITY((uvec4(subgroup_id, (0u | 0u), 0u, 1u)), (true ? _GLF_IDENTITY((uvec4(subgroup_id, (0u | 0u), 0u, 1u)), ((uvec4(subgroup_id, (0u | 0u), 0u, 1u))) | uvec4(0u, 0u, 0u, 0u)) : _GLF_FUZZED(uvec4(4892u, 58274u, 78851u, 26174u)))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)), (false ? _GLF_FUZZED(uvec4(101290u, 95030u, 47181u, 48096u)) : uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u)))))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) >> uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-69.01)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (0u | 0u), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), ~ (~ (uvec2(1u, 1u)))))), _GLF_IDENTITY(1u, max(1u, 1u)))))), (uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u) ^ (uvec4(subgroup_id, (0u | 0u), 0u, 1u))) ^ uvec4(0u, 0u, 0u, 0u))))) / (uvec4(1u, 1u, 1u, 1u) | uvec4(1u, 1u, 1u, 1u)))))))))) * subgroup_size + _GLF_struct_replacement_0.subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u)))))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) : _GLF_FUZZED(virtual_gid))), subgroup_size))) ^ _GLF_IDENTITY(0u, (0u) >> 0u)), workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u) + ((_GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, max(_GLF_struct_replacement_0.subgroup_local_id, _GLF_struct_replacement_0.subgroup_local_id)))) + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false)))))))))), false || (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false))))))), (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false)))))))) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) || false, ! (! ((_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) || false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec2(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), false || (false || (! (! (false)))))))))), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false)))))))))), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) || false)))), true && (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false)))))))))), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) || false)))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false)))))))))), (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) || false)))), true && (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), false, false, false)))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false)))))))))), (_GLF_IDENTITY(! (! (false)), false || (! (! _GLF_IDENTITY((false), false || ((false))))))) || false))))))))) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false || (! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false))))))))), bool(bool(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (! (! (false))), ! (! (false || _GLF_IDENTITY((! (! (false))), (_GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))) || false)))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false))))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false))))))))), bool(bool(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false))))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), false || (! (! (false))))), false, true)))))))) || false)))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bvec2((false), false))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bvec2((false), false)))) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), bool(bvec2(false || (! (! (false))), false))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false))))))), ! (! (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true))), true)))))))))))))))))), bool(bool(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false))))))))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false || (! (! (false))), ! (! (false || (! (! (false)))))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))), bool(bool(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))) || false)), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false)))))))))))))), false || ((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false || (! (! (false))), ! (! (false || (! (! (false)))))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))), bool(bool(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))) || false)), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false)))))))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! _GLF_IDENTITY((! (false)), ((! (false))) || false)), false || (_GLF_IDENTITY(false || (! _GLF_IDENTITY((! (false)), true && ((! (false))))), false || (false || (! (! (false))))))))), bool(bool(_GLF_IDENTITY(false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), false || (! (! (false))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(false || (! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false)))))))), (false || (_GLF_IDENTITY(false || (! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! _GLF_IDENTITY((false), true && ((false)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false)))))), ! (! ((_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))) || false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || _GLF_IDENTITY((_GLF_IDENTITY(false || (! (! (false))), ! (! (false || (! (! (false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(false || (! (! (false))), ! (! (false || (! (! (false))))))), ((_GLF_IDENTITY(false || (! (! (false))), ! (! (false || (! (! (false)))))))) && true)) || false)))))), bool(bool(_GLF_IDENTITY(false || (! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (_GLF_IDENTITY(false || (! (! (false))), false || (false || (! (! (false)))))))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), true && ((! (false)))), true && (! (! (false)))), false, false))))), false || (! (! (false))))), bool(bvec3((_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), false, true)))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u), ~ (~ (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))))], uint(1), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4)))))), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true)))))), true, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)) || (! (! (false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) && true), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))) && true), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y)), true, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))))
  barrier();
}
