#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), false || ((_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 0.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), 0.0, 0.0)), mix(float(_GLF_FUZZED(-529.481)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6.2)), bool(false))), injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(1, 1)), 1))])).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))]), float(_GLF_IDENTITY(_GLF_FUZZED(-6.2), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(-6.2), max(_GLF_FUZZED(-6.2), _GLF_FUZZED(-6.2))), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec2(exp(0.0), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), max(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(-6.2), max(_GLF_FUZZED(-6.2), _GLF_FUZZED(-6.2))), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec2(exp(0.0), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), (float(mat3(_GLF_IDENTITY(_GLF_FUZZED(-6.2), max(_GLF_FUZZED(-6.2), _GLF_FUZZED(-6.2))), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec2(exp(0.0), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))) - 0.0), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(-6.2), max(_GLF_FUZZED(-6.2), _GLF_FUZZED(-6.2))), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0)), dot(vec4(0.0, 0.0, 1.0, sin(0.0)), vec4(0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(exp(0.0), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec2(exp(0.0), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))))), bool(false))), injectionSwitch[1])).y), float(_GLF_FUZZED((-24.34))), bool(false)))), 1.0, tan(0.0), 0.0, 0.0), (mat4(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.8)), float(0.0), bool(true))))), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6.2)), bool(false))), min(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6.2)), bool(false))), _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6.2)), bool(false))))), injectionSwitch[1])).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6.2)), bool(false))), injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6.2)), bool(false))), injectionSwitch[1]))) * vec2(1.0, 1.0)).y), float(_GLF_FUZZED((-24.34))), bool(false)))), 1.0, tan(0.0), 0.0, 0.0)) - mat4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-1.7) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), mix(float(_GLF_FUZZED(-8.7)), float(float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((+ 795.877))), bool(false))), 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0), 0.0, 0.0))), bool(true)))), bool(true)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))) || false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((7.6 + injectionSwitch)))).y), false, true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) * 1.0)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))[2], clamp(gl_WorkGroupID[2], gl_WorkGroupID[2], gl_WorkGroupID[2])), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupID[2], clamp(_GLF_IDENTITY(gl_WorkGroupID[_GLF_IDENTITY(2, ~ (~ (2)))], (gl_WorkGroupID[_GLF_IDENTITY(2, ~ (~ (2)))]) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))), clamp(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))))))[_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (2) ^ 0)], gl_WorkGroupID[2])))), clamp((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), min(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2]))))) >> (0u | 0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), min(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2]))))) >> (0u | 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), min(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2]))))) >> (0u | 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), min(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2]))))) >> (0u | 0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), min(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2]))))) >> (0u | 0u))))), 0u), ~ (~ (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), min(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2]))))) >> (0u | 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), min(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2]))))) >> (0u | 0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), min(_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])), _GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) - 0))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2]))))) >> (0u | 0u))))), 0u)))))))))), (~ (_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, ~ (~ (2)))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])))), (~ (_GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[_GLF_IDENTITY(2, ~ (~ (2)))], _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))))[_GLF_IDENTITY(2, (2) ^ 0)], gl_WorkGroupID[2])))))))) | _GLF_IDENTITY((gl_WorkGroupID[2]), ((gl_WorkGroupID[2])) ^ 0u))))[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | (_GLF_IDENTITY((2), ((2)) * (1 | 1)))) | (2)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | (_GLF_IDENTITY((2), ((2)) * (1 | 1)))) | (2)), clamp(_GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | (_GLF_IDENTITY((2), ((2)) * (1 | 1)))) | (2)), _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | (_GLF_IDENTITY((2), ((2)) * (1 | 1)))) | (2)), _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) | (_GLF_IDENTITY((2), ((2)) * (1 | 1)))) | (2)))))), 1))), (2) | (2))])), gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))).y)) * (injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.1))))).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))).y)) * (injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.1))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))).y)) * (injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.1))))).y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))).y)) * (injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.1))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), (vec4(injectionSwitch, 1.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))).y)) * (injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8.1))))).y)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, sin(0.0), 1.0), mat2x4(mat2x4(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, sin(0.0), 1.0)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.7)))))) * 1.0), 1.0))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - _GLF_ZERO(0.0, injectionSwitch.x))))))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8472.3288) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), false, false, false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.9)), float(injectionSwitch.x), bool(true))), tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))), 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat3x2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0)))), transpose(transpose(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0)))))))))), clamp(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat3x2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0)))), transpose(transpose(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0)))))))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat3x2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0)))), transpose(transpose(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0)))))))))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat3x2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0)))), transpose(transpose(mat4x2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(1.0, 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), exp(0.0), 1.0)))))))))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + _GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-8.4)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(false), false, false, true))), true), false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bvec4(bool(false), false, false, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), false, false, true)), true && (bool(bvec4(bool(false), false, false, true))))), true), false)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false))))))
      barrier();
    }
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) | 0u)) >> 0u))), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) >> 0u)) | 0u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) * 1u)))) >> 0u))))), (false ? _GLF_FUZZED(90803u) : _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))), ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) - 0u))) * 1u), (workgroup_base) >> 0u))) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) ^ 0u)) + 0u)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) - 0u) | (subgroup_size)), subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) >> 0u)) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(119422u) : workgroup_base)), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), 0u + ((workgroup_base)))) | ((workgroup_base))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))) * 1u), (workgroup_base) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) ^ (0u | 0u), clamp(((subgroup_size)) ^ (0u | 0u), ((subgroup_size)) ^ (0u | 0u), ((subgroup_size)) ^ (0u | 0u))))), subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))) | ((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) >> 0u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) >> 0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) >> 0u), 0u + (uint(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) >> 0u))))))))) | 0u), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) >> 0u, 1u * _GLF_IDENTITY(((workgroup_base) >> 0u), _GLF_IDENTITY(uint(uint(((workgroup_base) >> 0u))), uint(uint(_GLF_IDENTITY(uint(uint(((workgroup_base) >> 0u))), (uint(uint(((workgroup_base) >> 0u)))) | (uint(uint(((workgroup_base) >> 0u))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))) * 1u), (workgroup_base) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size))) - 0u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) >> 0u)) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) >> 0u, _GLF_IDENTITY(((workgroup_base) >> 0u), _GLF_IDENTITY(0u, (0u) >> 0u) ^ (_GLF_IDENTITY(((workgroup_base) >> 0u), (false ? _GLF_FUZZED(workgroup_base) : ((workgroup_base) >> 0u))))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))) * 1u), _GLF_IDENTITY((workgroup_base), max(_GLF_IDENTITY((workgroup_base), 0u + (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))))), (workgroup_base))) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))), (workgroup_base) - 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) >> 0u)) | 0u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base))) | 0u, ((_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base))) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(subgroup_id) : ~ (0u)))))) * 1u))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))))) * 1u), (workgroup_base) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), (0u | (subgroup_size)) | (_GLF_IDENTITY(0u | (subgroup_size), clamp(0u | (subgroup_size), 0u | (subgroup_size), 0u | (subgroup_size)))))), subgroup_size, subgroup_size), 1u * (clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> _GLF_IDENTITY(0u, (0u) << 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (0u) ^ 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)) - _GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) * 1u))), (workgroup_base) >> 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), uint(uvec2((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), 0u))), 0u ^ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) >> 0u)) | 0u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))), ~ (~ ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))))), ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, (0u) + 0u)))))) | ((_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base, 0u)))))))) * 1u), (workgroup_base) >> 0u))) + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) : subgroup_id)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) : subgroup_id)), uint(uvec3(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) : subgroup_id)), 1u, 1u))), 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) : subgroup_id)), uint(uvec3(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) : subgroup_id)), 1u, 1u))), 0u))) / 1u)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size))) | 0u)) >> 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (workgroup_base) >> 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) - 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u)), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | 0u))))))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))), 1u, 0u, 0u))) >> 0u)) | 0u), min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))), ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) << 0u)))), min((_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) << 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) << 0u)))))) >> 0u)))))) | ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))) * 1u), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) >> 0u))) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id))), max(clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id))), clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u | (subgroup_size)), subgroup_size, subgroup_size))) | 0u)) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) >> 0u, max((workgroup_base) >> 0u, _GLF_IDENTITY((workgroup_base) >> 0u, ((workgroup_base) >> 0u) | (_GLF_IDENTITY((workgroup_base) >> 0u, min((workgroup_base) >> 0u, (workgroup_base) >> 0u))))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | 0u, ((workgroup_base) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))) / 1u)), (workgroup_base) >> 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))) | 0u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u)) - 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) - 0u, (_GLF_IDENTITY((workgroup_base) - 0u, clamp((workgroup_base) - 0u, (workgroup_base) - 0u, (workgroup_base) - 0u))) - 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base))) - 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), 1u, 0u), (uvec3((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), 1u, 0u)) + uvec3(0u, 0u, 0u)))), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)), 0u ^ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))))) >> 0u)) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u))), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))), ((_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), uint(uvec2(workgroup_base, 0u)))))) * 1u), (workgroup_base) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) ^ 0u), clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size), ~ (~ (clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | (subgroup_size), 0u ^ (0u | (subgroup_size)))), subgroup_size, subgroup_size)))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 1u))))), clamp(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size, subgroup_size))) | 0u)) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) - 0u))))) - 0u))) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)), uint(uvec3(subgroup_local_id, 1u, 0u))), (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(~ (~ (subgroup_local_id)), uint(uvec3(~ (~ (subgroup_local_id)), 0u, 1u)))))) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, (_GLF_IDENTITY((_GLF_DEAD(false)) || false, bool(bvec4((_GLF_DEAD(false)) || false, false, false, true)))) || false)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(84.79)), bool(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(84.79)), bool(false))))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(84.79)), bool(false))))), false, false)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(84.79)), bool(false))))), false, false))) && true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
}
