#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(288.983))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), (false || (bool(bvec4(true, false, true, false)))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.38)), bool(false)))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-40.38)), float(_GLF_IDENTITY(float(float(_GLF_FUZZED(-40.38))), float(mat2x3(_GLF_IDENTITY(float(float(_GLF_FUZZED(-40.38))), mix(float(float(float(_GLF_FUZZED(-40.38)))), float(_GLF_FUZZED(-8.2)), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0))))), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.38)), bool(false)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.38)), bool(false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.38)), bool(false))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.38)), bool(false)))))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(145097u))), bool(false))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.38)), bool(false)))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.38)), bool(false)))), true, true))))))), bool(bool(bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-21.13)), bool(false))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-40.38)), bool(false)))))))))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) && true) && true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))))), true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))))), ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true)))), false, true, true))))) || false)) && true)) && true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, false))), false)), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (bool(bvec4(false, false, true, false))) && true)), true, false), false)))))) && true), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))), true && (! (bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(! (bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))), true && (! (bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))))))))))))))))))), false, true, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))), true && (! (bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(! (bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))), true && (! (bool((_GLF_IDENTITY(! ((false)), false || (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))))))))))))))))))), false, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))), ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (_GLF_IDENTITY(! (false), false || (! (false)))))))))), false, true, true))))) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))), ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))) || false), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))), ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))) || false), false)), false || (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true)))), ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))))) || false), false)))))))))) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-827.022)))), float(_GLF_FUZZED((-8948.5794 - -3777.7196))), bool(false))) < injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))))), true, true)))) && true)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), true && (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y) || false))), bool(bvec4(((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y) || false))), false, true, false)))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), ! (! (_GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x : _GLF_FUZZED(-995.066))), injectionSwitch.x)) < injectionSwitch.y)), (_GLF_IDENTITY(false || _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false || ((injectionSwitch.x < injectionSwitch.y))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1109.5084), _GLF_FUZZED(4719.3132)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), true && (false)), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), true && (false)), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), false))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), true && (false)), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), false))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), true && (false)), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), false))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), true && (false)), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false, false, true)), false))))))), true, false, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) - 0u)), uint(6u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / 1u), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED((++ workgroup_id)) : uint(6u)))) | (_GLF_IDENTITY(uint(6u), uint(uvec3(uint(6u), 1u, 0u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), max(clamp(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), clamp(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), max(clamp(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), clamp(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) >> 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)), 0u))), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 0u), uvec2(0u, 0u), uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))) - uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, uint(uvec4(_GLF_IDENTITY(2u, (2u) << 0u), 1u, 1u, 1u)))))))), max(clamp(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (0u))), uvec2(0u, 0u), uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))) | (_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), clamp(uvec2(1u, 0u), uvec2(1u, 0u), uvec2(1u, 0u))), (uvec2(1u, 0u)) + uvec2(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_size | workgroup_id))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))))))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)))))))) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, (2u) * 1u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), _GLF_IDENTITY(clamp(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(1u, 0u)) + uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (_GLF_IDENTITY(uvec2(1u, 0u), (_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) ^ uvec2(0u, 0u))) >> uvec2(0u, 0u))) + uvec2(0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), max(clamp(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))), uvec2(0u, 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), clamp(uint(_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)))), (uvec2(1u, 0u)) + uvec2(_GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u))), uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + _GLF_IDENTITY(uvec2(0u, 0u), clamp(uvec2(0u, 0u), uvec2(0u, 0u), _GLF_IDENTITY(uvec2(0u, 0u), _GLF_IDENTITY(clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)), uvec2(0u, 0u) | (_GLF_IDENTITY(clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u)), (clamp(uvec2(0u, 0u), uvec2(0u, 0u), uvec2(0u, 0u))) ^ uvec2(0u, 0u))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, _GLF_IDENTITY(0u, max(0u, 0u)))) + uvec2(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))))))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) >> 0u))), _GLF_IDENTITY(clamp((0u << _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), clamp(~ (~ (1u)), ~ (~ (1u)), _GLF_IDENTITY(~ (~ (1u)), (_GLF_IDENTITY(~ (~ (1u)), 0u | (~ (~ (1u))))) << 0u))))) / 1u)), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))) : _GLF_FUZZED(mix(workgroup_id, workgroup_size, true)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / 1u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(workgroup_id) : 6u))), uint(6u))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 1u * (uint(0u))), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u + ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))) | (_GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, ~ (~ (6u))))))), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / 1u)), max(clamp((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) >> 0u)), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) >> 0u)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), uint(6u))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(6u), uint(6u))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u), ((_GLF_IDENTITY(uint(6u), uint(6u))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u)) >> 0u)))), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? _GLF_IDENTITY(uint(6u), _GLF_IDENTITY((uint(6u)), (true ? (uint(6u)) : _GLF_FUZZED((true ? subgroup_size : subgroup_id)))) | (uint(6u))) : _GLF_FUZZED(mix(workgroup_id, workgroup_size, true)))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / 1u), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(workgroup_id) : 6u))), uint(6u))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u + ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(0u))))) | (_GLF_IDENTITY(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, ~ (~ (6u))))))), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / 1u)), clamp((0u << _GLF_IDENTITY(uint(6u), uint(6u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, ~ (~ (1u)))) / 1u, 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (0u | 0u) ^ (_GLF_IDENTITY(1u, (1u) ^ 0u))), ~ (~ (1u)))) / 1u)))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, max(6u, 6u))), _GLF_IDENTITY(uint(6u), (true ? _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))) : _GLF_FUZZED(_GLF_IDENTITY(mix(workgroup_id, workgroup_size, true), 1u * (mix(workgroup_id, workgroup_size, true)))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / 1u), _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(workgroup_id) : 6u))), uint(6u))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u + ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))) | (_GLF_IDENTITY(uint(0u), uint(0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))) | (_GLF_IDENTITY(uint(0u), uint(0u)))) | 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))), (false ? _GLF_FUZZED(uvec2(6513u, 137276u).g) : (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(workgroup_id) : 6u))), uint(6u))) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u + ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))) | (_GLF_IDENTITY(uint(0u), uint(0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))) | (_GLF_IDENTITY(uint(0u), uint(0u)))) | 0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, ~ (~ (6u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, ~ (~ (6u)))))), clamp(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, ~ (~ (6u)))))), _GLF_IDENTITY(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, ~ (~ (6u)))))), min(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, ~ (~ (6u)))))), _GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, ~ (~ (6u)))))))), _GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, ~ (~ (6u))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) / 1u)))))) / (1u & _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, 0u + (1u))))), clamp((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, 0u + (1u))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | (0u)) + (1u))))), ((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), 0u + (1u)))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, 0u + (1u))))), uint(uvec3((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, 0u + (1u))))), 0u, 1u)))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))), true, false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base)))), 1u * (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base)))))) + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) | (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u), (subgroup_local_id))) * 1u)), (_GLF_IDENTITY((subgroup_local_id) * 1u, _GLF_IDENTITY(((subgroup_local_id) * 1u), clamp(((subgroup_local_id) * 1u), ((subgroup_local_id) * 1u), ((subgroup_local_id) * 1u))) | _GLF_IDENTITY(((subgroup_local_id) * 1u), (((subgroup_local_id) * 1u)) | (((subgroup_local_id) * 1u))))) / 1u)), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))))) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)));
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
