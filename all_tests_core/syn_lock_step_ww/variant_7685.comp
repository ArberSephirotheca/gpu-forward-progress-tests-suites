#version 460
struct _GLF_struct_6 {
 ivec3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 ivec4 _f1;
 mat2x3 _f2;
 bool _f3;
 uvec2 _f4;
 vec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_3 {
 bool _f0;
 ivec4 _f1;
 ivec3 _f2;
 uvec2 _f3;
 uvec2 _f4;
 mat4 _f5;
 uint _f6;
} ;

struct _GLF_struct_2 {
 mat4x2 _f0;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 bool _f1;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat2 _f1;
 float _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 ivec3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 mat4x3 _f1;
 uint subgroup_size;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(vec3(1.0), mat4x3(1.0), gl_SubgroupSize, _GLF_struct_5(_GLF_struct_0(1u, mat2(1.0), 1.0), ivec3(1), _GLF_struct_1(ivec4(1), true), _GLF_struct_2(mat4x2(1.0)), _GLF_struct_3(true, ivec4(1), ivec3(1), uvec2(1u), uvec2(1u), mat4(1.0), 1u), _GLF_struct_4(uvec3(1u), ivec4(1), mat2x3(1.0), true, uvec2(1u), vec2(1.0), mat2(1.0))), _GLF_struct_6(ivec3(1), mat4x3(1.0)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_7.subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_7.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_7.subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}
