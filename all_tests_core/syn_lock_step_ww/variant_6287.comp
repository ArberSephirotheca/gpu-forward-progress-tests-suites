#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), true && (_GLF_IDENTITY(true && ((false)), (true && ((false))) && true)))))))))), (bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, true, true))))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), float(_GLF_FUZZED(vec3(-5776.7691, -6593.7904, 591.744).p)), bool(false)))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))), ! (! (! (! (false))))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false, false))), true)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) + (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0, 1.0, sqrt(0.0), 1.0)), (true ? vec2(mat2x4(injectionSwitch, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(0.0), 1.0)) : _GLF_FUZZED(vec2(-92.15, 8.5))))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sqrt(1.0), 0.0, 0.0, 1.0, 1.0, 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * mat2(1.0))).y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.8)), bool(false)))), min(vec2(injectionSwitch.x, 1.0), vec2(injectionSwitch.x, 1.0))))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), ! (! ((false)))), bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) && true), true, true, false)))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y)) && (false))), ! (! ((_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), injectionSwitch.x)) < injectionSwitch.y)) && (false)))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y)))))))))) || false)) || false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true)))), ! (! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true), bvec2(bvec4(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), true), false, true)))))))))))) || false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0)), (float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0))) - 0.0), float(_GLF_FUZZED(806.998)), bool(false))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, log(1.0), 1.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true)), false || (_GLF_IDENTITY(false, false || (false))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5021.0695) : 1.0))))), (round(length(normalize(1.0)))) * 1.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 1.0)), clamp(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))), 1.0, 0.0, abs(1.0), 0.0))), 1.0)), 1.0)), 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(5.5), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(5.5), mix(float(_GLF_FUZZED(5.5)), float(_GLF_FUZZED(vec4(-7058.2342, 3.2, -61.38, 9.5).r)), bool(false)))))), bvec2(true, false))), injectionSwitch)).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(930.051) : float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))), float(_GLF_FUZZED(_GLF_IDENTITY(-2603.9478, mix(float(_GLF_FUZZED(9.5)), float(-2603.9478), bool(true))))), bool(false))), float(mat3x2(injectionSwitch.x, round(length(normalize(1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-224.680 - -56.03))), bool(false))), 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(930.051), float(mat4(_GLF_FUZZED(930.051), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, abs(0.0), 0.0, 0.0), vec4(1.0, 0.0, length(0.0), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, abs(0.0), 0.0, 0.0), vec4(1.0, 0.0, length(0.0), 0.0)), (dot(vec4(1.0, abs(0.0), 0.0, 0.0), vec4(1.0, 0.0, length(0.0), 0.0))) + 0.0)), 0.0))) : float(injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY(-2603.9478, mix(float(_GLF_FUZZED(9.5)), float(-2603.9478), bool(true))))), bool(false))), float(mat3x2(injectionSwitch.x, round(length(normalize(1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.6)), float(1.0), bool(true)))) - sqrt(0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0)), float(_GLF_IDENTITY(_GLF_FUZZED((-224.680 - -56.03)), clamp(_GLF_IDENTITY(_GLF_FUZZED((-224.680 - -56.03)), min(_GLF_FUZZED((-224.680 - -56.03)), _GLF_FUZZED((-224.680 - -56.03)))), _GLF_IDENTITY(_GLF_FUZZED((-224.680 - -56.03)), clamp(_GLF_FUZZED((-224.680 - -56.03)), _GLF_FUZZED((-224.680 - -56.03)), _GLF_FUZZED((-224.680 - -56.03)))), _GLF_FUZZED((-224.680 - -56.03))))), bool(false))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(930.051) : float(injectionSwitch.x))), float(_GLF_FUZZED(_GLF_IDENTITY(-2603.9478, mix(float(_GLF_FUZZED(9.5)), float(-2603.9478), bool(true))))), bool(false))), float(mat3x2(injectionSwitch.x, round(length(normalize(1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-224.680 - -56.03))), bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), 0.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2603.9478)), bool(false))), float(mat3x2(injectionSwitch.x, round(length(normalize(1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(-224.680, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(faceforward(length(vec4(-82.67, 2667.3127, 69.31, _GLF_IDENTITY(-8953.4680, clamp(-8953.4680, -8953.4680, _GLF_IDENTITY(-8953.4680, (-8953.4680) / 1.0))))), -6.6, 17.43)) : -224.680)) - -56.03)), (_GLF_FUZZED((_GLF_IDENTITY(-224.680 - -56.03, float(mat2x4(-224.680 - -56.03, 0.0, 1.0, abs(1.0), 0.0, cos(0.0), 1.0, 0.0)))))) * 1.0)), bool(false))), 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2603.9478)), bool(false))), float(mat3x2(injectionSwitch.x, round(length(normalize(1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(-224.680, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) ? _GLF_FUZZED(faceforward(length(vec4(-82.67, 2667.3127, 69.31, _GLF_IDENTITY(-8953.4680, clamp(-8953.4680, -8953.4680, _GLF_IDENTITY(-8953.4680, (-8953.4680) / 1.0))))), -6.6, 17.43)) : -224.680)) - -56.03)), (_GLF_FUZZED((_GLF_IDENTITY(-224.680 - -56.03, float(mat2x4(-224.680 - -56.03, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, 0.0 + (0.0)), cos(0.0), 0.0))), 1.0, abs(1.0), 0.0, cos(0.0), 1.0, 0.0)))))) * 1.0)), bool(false))), 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-6028.7361)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(164.206), _GLF_FUZZED(-934.791)), bvec2(false, false))), injectionSwitch, injectionSwitch)), 0.0, determinant(mat3(cos(0.0), 0.0, sqrt(0.0), 1.0, 1.0, log(1.0), abs(1.0), 1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2603.9478)), bool(false))), float(mat3x2(injectionSwitch.x, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((_GLF_IDENTITY(-224.680, (false ? _GLF_IDENTITY(_GLF_FUZZED(exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, -48.38, -3.5)))), min(_GLF_FUZZED(exp2(dot(vec4(402.429, 0.7, _GLF_IDENTITY(-27.32, clamp(-27.32, -27.32, -27.32)), -5.8), vec4(-2159.8579, -7210.7222, _GLF_IDENTITY(-48.38, min(-48.38, _GLF_IDENTITY(-48.38, min(-48.38, -48.38)))), -3.5)))), _GLF_FUZZED(exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), _GLF_IDENTITY(vec4(-2159.8579, -7210.7222, -48.38, -3.5), (vec4(-2159.8579, -7210.7222, -48.38, -3.5)) / vec4(1.0, 1.0, 1.0, 1.0))))))) : -224.680)) - _GLF_IDENTITY(-56.03, max(_GLF_IDENTITY(-56.03, clamp(-56.03, -56.03, -56.03)), -56.03))))), _GLF_IDENTITY(bool(false), (bool(false)) && true))), 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2603.9478)), bool(false))), float(mat3x2(injectionSwitch.x, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((_GLF_IDENTITY(-224.680, (false ? _GLF_IDENTITY(_GLF_FUZZED(exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, -48.38, -3.5)))), min(_GLF_FUZZED(exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, _GLF_IDENTITY(-48.38, min(-48.38, _GLF_IDENTITY(-48.38, min(-48.38, -48.38)))), -3.5)))), _GLF_FUZZED(_GLF_IDENTITY(exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, -48.38, -3.5))), min(exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, -48.38, -3.5))), exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, -48.38, -3.5)))))))) : -224.680)) - -56.03))), _GLF_IDENTITY(bool(false), (bool(false)) && true))), 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-2603.9478)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-2603.9478)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-707.015) : _GLF_IDENTITY(float(_GLF_FUZZED(-2603.9478)), float(mat4x2(float(_GLF_FUZZED(-2603.9478)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(-2603.9478)))), bool(false))), float(mat3x2(injectionSwitch.x, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((_GLF_IDENTITY(-224.680, (false ? _GLF_IDENTITY(_GLF_FUZZED(exp2(dot(vec4(402.429, _GLF_IDENTITY(0.7, mix(float(0.7), float(_GLF_FUZZED((-741.862 - 2228.9872))), bool(false))), -27.32, -5.8), vec4(-2159.8579, -7210.7222, -48.38, -3.5)))), min(_GLF_FUZZED(exp2(dot(vec4(_GLF_IDENTITY(402.429, mix(float(_GLF_FUZZED(-7.5)), float(_GLF_IDENTITY(402.429, max(402.429, _GLF_IDENTITY(402.429, mix(float(_GLF_FUZZED(-4441.6787)), float(402.429), bool(true)))))), bool(true))), 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, _GLF_IDENTITY(-48.38, min(-48.38, _GLF_IDENTITY(-48.38, min(-48.38, -48.38)))), _GLF_IDENTITY(-3.5, (true ? -3.5 : _GLF_FUZZED(1003.1536))))))), _GLF_FUZZED(exp2(dot(vec4(402.429, _GLF_IDENTITY(0.7, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.7, 1.0 * (0.7)), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.7, 1.0 * (0.7)), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), (float(mat4x3(_GLF_IDENTITY(0.7, 1.0 * (0.7)), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0))) / 1.0), float(mat4x3(_GLF_IDENTITY(0.7, 1.0 * (0.7)), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(0.7, 1.0 * (0.7)), 1.0, sqrt(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0))))), -27.32, -5.8), _GLF_IDENTITY(vec4(-2159.8579, -7210.7222, -48.38, -3.5), (_GLF_IDENTITY(vec4(-2159.8579, -7210.7222, -48.38, -3.5), (vec4(-2159.8579, -7210.7222, -48.38, -3.5)) - vec4(0.0, 0.0, 0.0, 0.0))) - vec4(0.0, 0.0, 0.0, 0.0))))))) : -224.680)) - -56.03))), _GLF_IDENTITY(bool(false), (bool(false)) && true))), 0.0))) : _GLF_FUZZED(distance(vec3(8167.8764, -6.4, -1.0), vec3(823.944, -35.97, 25.08))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2603.9478)), bool(false))), float(mat3x2(injectionSwitch.x, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((_GLF_IDENTITY(-224.680, (false ? _GLF_IDENTITY(_GLF_FUZZED(exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, -48.38, _GLF_IDENTITY(-3.5, (-3.5) + 0.0))))), min(_GLF_FUZZED(exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, _GLF_IDENTITY(-48.38, min(-48.38, _GLF_IDENTITY(_GLF_IDENTITY(-48.38, mix(float(-48.38), float(_GLF_FUZZED(1966.8237)), bool(false))), min(-48.38, -48.38)))), -3.5)))), _GLF_FUZZED(exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, -48.38, -3.5)))))) : -224.680)) - -56.03))), _GLF_IDENTITY(bool(false), (bool(false)) && true))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2603.9478)), bool(false))), float(mat3x2(injectionSwitch.x, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((_GLF_IDENTITY(-224.680, (false ? _GLF_IDENTITY(_GLF_FUZZED(exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, -48.38, -3.5)))), min(_GLF_FUZZED(exp2(dot(vec4(402.429, 0.7, -27.32, -5.8), vec4(-2159.8579, -7210.7222, _GLF_IDENTITY(-48.38, min(-48.38, _GLF_IDENTITY(-48.38, min(-48.38, -48.38)))), -3.5)))), _GLF_FUZZED(exp2(dot(vec4(402.429, 0.7, -27.32, _GLF_IDENTITY(-5.8, (true ? -5.8 : _GLF_FUZZED(-660.333)))), vec4(-2159.8579, -7210.7222, -48.38, -3.5)))))) : -224.680)) - -56.03))), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, (true) && true)))), 0.0))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-3569.2643)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), bool(true)))) * 1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y) / 1.0)))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), bool(bool(_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(155781u, 10290u, 40374u)))))).x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u)))), (~ (~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ 0u))))) - 0u)))), gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x))) ^ 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, false || (false))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false))), ! (! ((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false)))))), true && ((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), bool(bvec4(bool(bvec2(! (false), true)), true, true, true))))) || false))))))))), ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false))), true && ((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false)))))))))) || false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))))))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), bool(bvec4(true && (! (false)), true, true, false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false))))) || false) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), bool(bool(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))))))), true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))))))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), bool(bvec4(true && (! (false)), true, true, false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false))))) || false) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), bool(bool(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))))))), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))))))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), bool(bvec4(true && (! (false)), true, true, false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false))))) || false) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), bool(bool(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))))))), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))))))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), bool(bvec4(true && (! (false)), true, true, false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false))))) || false) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), bool(bool(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))))))), true))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), false))))) && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (true)) && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false))))))))))), true && ((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))), bool(bvec2(! (false), true)))) || false))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false))), true && ((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false))))))))), true && ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(true, false || (true))))) && _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false))), true && ((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false)))))))))))) || false))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false))))), false || (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false)))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false)))))), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)))), ! (! (bool(bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(bool(_GLF_IDENTITY(false, bool(bool(false)))), false, true))))))), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))))))))), bool(bvec3((_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false)))))), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))) || false)))), ! (! (bool(bool(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(bool(_GLF_IDENTITY(false, bool(bool(false)))), false, true))))))), true && (! (! (_GLF_IDENTITY(false, true && (false))))))))))))))), true, false))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (! _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(true && (! (false)), true, true, false)))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))), true && (! (false)))), _GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false))))) || false, (_GLF_IDENTITY(((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false))))) || false, false || (((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false))))) || false))) && true)) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), bool(bool(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))))))), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ((! (_GLF_IDENTITY(false, false || (false))))) && true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false))), true && ((! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false))))))))), ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec4((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false, true), bvec3(bvec4(bvec3(bool(bvec4((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false, true), true))))))) && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false))), true && ((! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))) || false)))))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false)))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (false)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), true && (! (! (_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false)))))))), ! (! (true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), ! (! (! (! (_GLF_IDENTITY(false, true && (false))))))))))))))), ! (! (bool(bool(! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(false, true && (false))))), (true && (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), false || ((! (_GLF_IDENTITY(false, true && (false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), bool(bvec4(true && (! (false)), true, true, _GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), true && (! (false)))), ((_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (false))))) || false) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), true, true)), bool(bvec2(bool(bvec3((! (false)), true, true)), true)))), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), true, true)), bool(bvec2(bool(bvec3((! (false)), true, true)), true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), true, true)), bool(bvec2(bool(bvec3((! (false)), true, true)), true)))), bool(bvec4(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), true, true)), bool(bvec2(bool(bvec3((! (false)), true, true)), true)))), false, true, true)))))), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))))))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bvec2(_GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), true))))))))))), true))))))))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), true && ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))) && true), bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), false, true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + determinant(mat2(0.0, 0.0, 0.0, 0.0)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec2(false, true)))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))), (injectionSwitch.x < injectionSwitch.y)), false), false))))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y) - sqrt(0.0)))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-4.0) : (injectionSwitch.y))) - sqrt(0.0)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-4.0) : (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) - sqrt(0.0))) && true))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, true)), bool(bvec2(bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), true, true)), true))), true && (_GLF_IDENTITY(bool(bvec4(true, false, true, true)), (bool(bvec4(true, false, true, true))) || false)))))), (injectionSwitch.x < injectionSwitch.y))), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), true)))))) || false), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.1) : injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.3)), vec2(_GLF_FUZZED((0.7 / 7200.1411)), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), bvec2(false, true))).y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), true)))))), (! (true)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), true)))))), (! (true)) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), true)))))), (! (true)) && true), false)), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), true)))))), (! (true)) && true), false))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, false || (false))), false))), false))), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.1))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), 0u ^ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(uint(uvec3((workgroup_id), 1u, (1u ^ 1u))), min(uint(uvec3((workgroup_id), 1u, (1u ^ 1u))), uint(uvec3((workgroup_id), 1u, (1u ^ 1u)))))), (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(uint(uvec3((workgroup_id), 1u, (1u ^ 1u))), min(uint(uvec3((workgroup_id), 1u, (1u ^ 1u))), uint(uvec3((workgroup_id), 1u, (1u ^ 1u))))))) << 0u) << 0u)) - 0u), ~ (~ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))) << 0u), (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) | (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))))))), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), 0u ^ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u), (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(uint(uvec3((workgroup_id), 1u, (1u ^ 1u))), min(uint(uvec3((workgroup_id), 1u, (1u ^ 1u))), uint(uvec3((workgroup_id), 1u, (1u ^ 1u)))))), (_GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(uint(uvec3((workgroup_id), 1u, (1u ^ 1u))), min(uint(uvec3((workgroup_id), 1u, (1u ^ 1u))), uint(uvec3((workgroup_id), 1u, (1u ^ 1u))))))) << 0u) << 0u)) - 0u), ~ (~ (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))) << 0u), (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)) | (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u))))))))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), _GLF_FUZZED((vec3(_GLF_IDENTITY(7.0, (true ? 7.0 : _GLF_FUZZED(-7.8))), -29.28, 1.0).t / 693.588))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(8562.9601)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-33.91)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4612.2412) : 0.0))), bool(true))), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 0.0, 1.0))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) || false, ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) || false, ! (! ((! ((injectionSwitch.x > injectionSwitch.y))) || false))))))))))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), uint(uvec2((subgroup_id) | (subgroup_id), (1u | 0u))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)), 1u))), (subgroup_id) - 0u)))))) - 0u) : _GLF_FUZZED(workgroup_base), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))) - 0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(162719u) : _GLF_FUZZED(workgroup_base)))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), uint(uvec2((subgroup_id) | (subgroup_id), (1u | 0u))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)), 1u))), (subgroup_id) - 0u)))))) - 0u) : _GLF_FUZZED(workgroup_base), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))) - 0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(162719u) : _GLF_FUZZED(workgroup_base)))) * 1u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), uint(uvec2((subgroup_id) | (subgroup_id), (1u | 0u))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)), 1u))), (subgroup_id) - 0u)))))) - 0u) : _GLF_FUZZED(workgroup_base), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))) - 0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(162719u) : _GLF_FUZZED(workgroup_base)))) * 1u)) << 0u), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), uint(uvec2((subgroup_id) | (subgroup_id), (1u | 0u))))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id)), 1u))), (subgroup_id) - 0u)))))) - 0u) : _GLF_FUZZED(workgroup_base), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)))))) - 0u))) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (false ? _GLF_FUZZED(162719u) : _GLF_FUZZED(workgroup_base)))) * 1u))))) * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) - 0))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), max(clamp(1, 1, 1), clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), max(clamp(1, 1, 1), clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))) % subgroup_size)) << (0u & 40446u)), ~ (~ (((subgroup_local_id + 1) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id) << 0u), 1u * (((subgroup_local_id) << 0u))), (true ? _GLF_IDENTITY(((subgroup_local_id) << 0u), 1u * (((subgroup_local_id) << 0u))) : _GLF_FUZZED((workgroup_base << num_workgroup))))))) + 1) % subgroup_size))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) - 0))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 0u | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size) | _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), max(clamp(1, 1, 1), clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), max(clamp(1, 1, 1), clamp(1, _GLF_IDENTITY(1, (1) ^ 0), 1))))) % subgroup_size)) << (0u & 40446u)), ~ (~ (((subgroup_local_id + 1) % subgroup_size) | ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id) << 0u), 1u * (((subgroup_local_id) << 0u))), (true ? _GLF_IDENTITY(((subgroup_local_id) << 0u), 1u * (((subgroup_local_id) << 0u))) : _GLF_FUZZED((workgroup_base << num_workgroup))))))) + 1) % subgroup_size))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false))) || false, bool(bvec3((bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false), false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), true, true), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), true, true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-44.92)), vec2(_GLF_FUZZED(779.782), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec2(next_virtual_gid, ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | 1u))), (uint(uvec2(next_virtual_gid, ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | 1u)))) >> 0u))], uint(2), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, clamp(4, 4, 4)) : _GLF_FUZZED(74513))), (4) | (4)), int(ivec2(_GLF_IDENTITY(4, (4) | (4)), 0))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(false)))), true, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false)), false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0) : _GLF_FUZZED(floor(sqrt(8591.8013))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))) && true))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))))) && true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), false)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8.7)), bool(false))) > injectionSwitch.y)))))) && _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), true && (bool(bvec4(true, false, true, true))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-271.682) : injectionSwitch.x)) > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true))), true)), false || (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true))), _GLF_IDENTITY(true, ! (! (true))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) && true))), true)), false || (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) || false)) && true))), true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))) && true)) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, true && (true)), true))) ? _GLF_FUZZED(vec2(9.5, -8.1)) : injectionSwitch)), injectionSwitch) : _GLF_FUZZED(vec2(0.3, 6819.3870)))), max(injectionSwitch, injectionSwitch)))).y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(fract(4297.5025)))), min(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(fract(4297.5025)))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(fract(4297.5025)), float(float(_GLF_FUZZED(fract(4297.5025))))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(min(_GLF_IDENTITY(_GLF_IDENTITY(208.787, min(_GLF_IDENTITY(208.787, min(208.787, 208.787)), 208.787)), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(208.787, min(_GLF_IDENTITY(208.787, min(208.787, 208.787)), 208.787)), (_GLF_IDENTITY(_GLF_IDENTITY(208.787, min(_GLF_IDENTITY(208.787, _GLF_IDENTITY(min(208.787, 208.787), min(min(208.787, 208.787), min(208.787, 208.787)))), _GLF_IDENTITY(208.787, clamp(208.787, _GLF_IDENTITY(208.787, clamp(_GLF_IDENTITY(208.787, (208.787) + 0.0), 208.787, 208.787)), 208.787)))), mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(208.787, min(_GLF_IDENTITY(208.787, min(208.787, 208.787)), 208.787))), bool(true)))) + 0.0), 1.0, exp(0.0), 0.0), (mat2(_GLF_IDENTITY(_GLF_IDENTITY(208.787, min(_GLF_IDENTITY(208.787, min(208.787, 208.787)), 208.787)), (_GLF_IDENTITY(_GLF_IDENTITY(208.787, min(_GLF_IDENTITY(_GLF_IDENTITY(208.787, min(208.787, 208.787)), clamp(_GLF_IDENTITY(208.787, min(208.787, 208.787)), _GLF_IDENTITY(_GLF_IDENTITY(208.787, min(208.787, 208.787)), max(_GLF_IDENTITY(208.787, min(208.787, 208.787)), _GLF_IDENTITY(208.787, min(208.787, 208.787)))), _GLF_IDENTITY(208.787, min(208.787, 208.787)))), 208.787)), mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(208.787, min(_GLF_IDENTITY(208.787, min(208.787, 208.787)), 208.787))), bool(true)))) + 0.0), 1.0, exp(0.0), 0.0)) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2(-781.363, 234.654, -212.896, -2147.8833)) : mat2(1.0, 1.0, 1.0, 1.0)))))), -73.29)) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.6)), bool(false))) + (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec2(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, log(1.0), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, log(1.0), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, log(1.0), 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(mat3x4(421.347, -884.740, -926.707, -5644.2288, -6.2, 1.9, 4.8, -1.8, -35.76, 272.108, 53.09, -2525.8840))) : mat4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, log(1.0), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, log(1.0), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, log(1.0), 0.0, 1.0, 0.0)))))))), float(_GLF_FUZZED(-64.13)), bool(false))), injectionSwitch.x)) > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false)))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
