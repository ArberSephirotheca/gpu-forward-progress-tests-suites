#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.6)), _GLF_IDENTITY(bool(false), true && (bool(false))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(2.8, (2.8) / 1.0)) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, determinant(mat2(1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, abs(0.0)), (true ? mat3x4(injectionSwitch, 0.0, 1.0, 1.0, determinant(mat2(1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, abs(0.0)) : _GLF_FUZZED(mat3x4(524.847, -11.48, 2.6, 2978.4133, -7925.1979, -98.25, 3.1, -9229.8464, 189.560, 716.977, -26.93, 7295.0324)))))).y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) && true), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))), false || (bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))))))))))))), (bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) && true), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))), false || (bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)))))))))))))) || false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) && true), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))), false || (bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))))))))))))), (bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) && true), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))), false || (bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)))))))))))))) || false)), false || (bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) && true), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))), false || (bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))))))))))))), (bool((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) && true), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true))), false || (bool(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)))))))))))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4336.1082)), float(injectionSwitch.x), bool(true)))) / 1.0) > injectionSwitch.y), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4336.1082)), float(injectionSwitch.x), bool(true)))) / 1.0) > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4336.1082)), float(injectionSwitch.x), bool(true)))) / 1.0) > injectionSwitch.y), true))), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), (false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) && true)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_IDENTITY(false, false || (false)), false))))))))), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-3720.8594, -242.796)) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, tan(0.0)))))).x > injectionSwitch.y), true))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat2x4((injectionSwitch) * mat2(1.0), 0.0, abs(0.0), sin(0.0), 1.0, 0.0, 1.0), (true ? mat2x4((injectionSwitch) * mat2(1.0), 0.0, abs(0.0), sin(0.0), 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(933.013, -2.1, 38.50, 3494.2597, -3519.6395, 9.9, 3030.9476, -9.4)))))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))), true))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))), true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) : (injectionSwitch) * mat2(1.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))), true)))) || false)))))) && true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false, false)), bool(bool(bool(bvec4(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-3720.8594, -242.796)) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, tan(0.0)))))).x > injectionSwitch.y), true))))))))), bool(bvec4(bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat2x4((injectionSwitch) * mat2(1.0), 0.0, abs(0.0), sin(0.0), 1.0, 0.0, 1.0), (true ? mat2x4((injectionSwitch) * mat2(1.0), 0.0, abs(0.0), sin(0.0), 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x4(933.013, -2.1, 38.50, 3494.2597, -3519.6395, 9.9, 3030.9476, -9.4)))))), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))), true))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))), true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) : (injectionSwitch) * mat2(1.0))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))), true)))) || false)))))) && true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false, false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), false, false, true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))) && (false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) && (false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true, true))))), ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), bool(bvec3(! ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && (false))), true, true)))))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), clamp((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) + vec2(0.0, 0.0))))).x > injectionSwitch.y)))) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), false || (bool(false))))))), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, abs(1.0), 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)) - vec2(0.0, 0.0)), 1.0, abs(1.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - log(1.0)), 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-83.00)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-83.00)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(-83.00)), mix(float(_GLF_FUZZED(-5575.4738)), float(float(_GLF_FUZZED(-83.00))), bool(true))) : _GLF_FUZZED(836.783))), float(_GLF_FUZZED(-83.00)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false ? _GLF_FUZZED(1.7) : mix(float(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - log(1.0)), length(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - log(1.0)), float(mat4x3(_GLF_IDENTITY(1.0, (1.0) - log(1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-83.00)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-83.00)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(-83.00)), mix(float(_GLF_FUZZED(-5575.4738)), float(float(_GLF_FUZZED(-83.00))), bool(true))) : _GLF_FUZZED(836.783))), float(_GLF_FUZZED(-83.00)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 1.0)))))).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(52.57), _GLF_FUZZED((vec4(-176.229, -58.50, 4.3, 5.6) * mat4(8827.2274, 286.634, -6.7, 7940.2635, -430.661, 3963.3623, 4623.2793, 846.543, 6.9, 0.9, 1601.3449, 9.6, -4.1, -4.1, 9.8, 607.683)).s)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, true))))), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(-3.8), max(_GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8)))), vec2(_GLF_FUZZED(1.7), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(float(28902u)), (_GLF_IDENTITY(_GLF_FUZZED(float(28902u)), float(mat4x3(_GLF_FUZZED(float(28902u)), 1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, abs(0.0))))) * 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(true, true))).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))), true && ((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))))) || false))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(-3.8), max(_GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8)))), vec2(_GLF_FUZZED(1.7), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(float(28902u)), (_GLF_IDENTITY(_GLF_FUZZED(float(28902u)), float(mat4x3(_GLF_FUZZED(float(28902u)), 1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, abs(0.0))))) * 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(true, true))).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))), true && ((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))))) || false))))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (true ? mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), bvec2(true, true)) : _GLF_FUZZED(faceforward(vec2(-3403.3733, 5715.8762), vec2(-20.42, -3.2), vec2(47.97, 895.134)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0), sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0), sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.3)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))).x > injectionSwitch.y), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-36.56)), float(injectionSwitch.y), bool(true)))))), bool(bool((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-36.56)), float(injectionSwitch.y), bool(true))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))) || false)))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, true))))), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(-3.8), max(_GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8)))), vec2(_GLF_FUZZED(1.7), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(float(28902u)), (_GLF_IDENTITY(_GLF_FUZZED(float(28902u)), float(mat4x3(_GLF_FUZZED(float(28902u)), 1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, abs(0.0))))) * 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(true, true))).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))), true && ((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))))) || false))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(-3.8), max(_GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8)))), vec2(_GLF_FUZZED(1.7), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(float(28902u)), (_GLF_IDENTITY(_GLF_FUZZED(float(28902u)), float(mat4x3(_GLF_FUZZED(float(28902u)), 1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, abs(0.0))))) * 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(true, true))).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))), true && ((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))))) || false))))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (true ? mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), bvec2(true, true)) : _GLF_FUZZED(faceforward(vec2(-3403.3733, 5715.8762), vec2(-20.42, -3.2), vec2(47.97, 895.134)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0), sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0), sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.3)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))).x > injectionSwitch.y), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-36.56)), float(injectionSwitch.y), bool(true)))))), bool(bool((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-36.56)), float(injectionSwitch.y), bool(true))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))) || false)))))))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, true))))), bool(bool(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(-3.8), max(_GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8)))), vec2(_GLF_FUZZED(1.7), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(float(28902u)), (_GLF_IDENTITY(_GLF_FUZZED(float(28902u)), float(mat4x3(_GLF_FUZZED(float(28902u)), 1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, abs(0.0))))) * 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(true, true))).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))), true && ((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))))) || false))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(-3.8), max(_GLF_FUZZED(-3.8), _GLF_FUZZED(-3.8)))), vec2(_GLF_FUZZED(1.7), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY(_GLF_FUZZED(float(28902u)), (_GLF_IDENTITY(_GLF_FUZZED(float(28902u)), float(mat4x3(_GLF_FUZZED(float(28902u)), 1.0, sqrt(1.0), 1.0, 0.0, sqrt(0.0), 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, abs(0.0))))) * 1.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(true, true))).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))), true && ((_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))), true, true, false)))))), true, true)), false || (bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))))))) || false))))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (true ? mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))[1]), bvec2(true, true)) : _GLF_FUZZED(faceforward(vec2(-3403.3733, 5715.8762), vec2(-20.42, -3.2), vec2(47.97, 895.134)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0), vec2(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0), sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), mat2(1.0) * (mat4x2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_FUZZED(float(28902u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0), sqrt(determinant(mat2(0.0, 0.0, 0.0, 0.0))), length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))), 1.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.3)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))).x > injectionSwitch.y), ! _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-36.56)), float(injectionSwitch.y), bool(true)))))), bool(bool((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-36.56)), float(injectionSwitch.y), bool(true))))))))), (_GLF_IDENTITY((! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), true, true)))) || false))))))))))))))))))), _GLF_IDENTITY(false, (false) && true)), bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.0)), bool(false))), 1.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(46.32)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0 * _GLF_IDENTITY((dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), float(vec2((dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0))))), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))) ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-22.72) : injectionSwitch.x)) : _GLF_FUZZED(448.424))) : _GLF_FUZZED(-0.5))) < injectionSwitch.y)))) || false))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.8)), vec2(_GLF_FUZZED(-2.2), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false))), true, false))))))))) && true)))
      return;
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) + 0.0)), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))))), false || ((! (true))))) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))), true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.2)), bool(false))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(156.126), _GLF_FUZZED(-6.3)), (true ? vec2(_GLF_FUZZED(156.126), _GLF_FUZZED(-6.3)) : _GLF_FUZZED(sign(injectionSwitch)))), bvec2(false, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.2)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(156.126), _GLF_FUZZED(-6.3)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.2)), bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(156.126), _GLF_FUZZED(-6.3)), vec2(vec4(vec2(_GLF_FUZZED(156.126), _GLF_FUZZED(-6.3)), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), bvec2(false, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.2)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(156.126), _GLF_FUZZED(-6.3)), bvec2(false, false))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.2)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(156.126), _GLF_FUZZED(-6.3)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.2)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(156.126), _GLF_FUZZED(-6.3)), bvec2(false, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.2)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(156.126), _GLF_FUZZED(-6.3)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-8.2)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(156.126), _GLF_FUZZED(-6.3)), bvec2(false, false))))))).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, false, false)))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), true, false, false))))))))) || false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), bool(bvec3(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), false, false)))))))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.9) : injectionSwitch.x)) > injectionSwitch.y)) || (false)), bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, false)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))), bvec2(bvec2(bvec2(false, true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), (_GLF_IDENTITY(! (true), (! (true)) || false)) && true))))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) || false)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-980.507) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, true)))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) + vec2(0.0, 0.0))).y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-21.57)), vec2(_GLF_FUZZED(7.8), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) + vec2(0.0, 0.0))).y)))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0)), 1.0 * (float(mat3x2(injectionSwitch.y, sqrt(1.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))), true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(232.637)), vec2(_GLF_FUZZED((-6166.0550 / -73.66)), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), bvec2(false, true))))))))))[0], _GLF_FUZZED(-86.21)), vec2(_GLF_FUZZED(9.3), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))))[1]), bvec2(false, true))))).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).x > injectionSwitch.y))), true && (! (((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).x > injectionSwitch.y))))))) || false)))), ((! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).x > injectionSwitch.y))), true && (! (((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).x > injectionSwitch.y))))))) || false))))) || false), false || (! (! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))) - 0.0)) - 0.0), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false)), false || ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.y : _GLF_FUZZED(-27.39)))), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || false))))))))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(true && (! (_GLF_DEAD(false))), bool(bvec2(true && (! (_GLF_DEAD(false))), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), 0u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)), (workgroup_base) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), workgroup_base)), (workgroup_base) ^ 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4128.3435), _GLF_FUZZED(272.775)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), (min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u))) | (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), min(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)))))))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), (min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u))) | (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), min(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)))))))), (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), (min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u))) | (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), min(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u))))))))) | (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), (min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u))) | (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), min(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)))))))))), ~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), (min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u))) | (_GLF_IDENTITY(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), min(min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u)), min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_base : _GLF_FUZZED(workgroup_id))), workgroup_base, workgroup_base)), (workgroup_base) ^ 0u))))))))))))) / 1u)) + 0u), clamp(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u)) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), 1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) / 1u)))), 0u))), min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))), _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u))))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(vec4(_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 0.0)))) > injectionSwitch.y))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, true)))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, true)))), false)))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, true)))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, true)))), false))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false, false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-6462.6373))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0))) * vec2(1.0, 1.0))))[_GLF_IDENTITY(0, (0) | 0)], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(8686.6306), _GLF_FUZZED(3915.3150)), (vec2(_GLF_FUZZED(8686.6306), _GLF_FUZZED(3915.3150))) * mat2(1.0)), bvec2(false, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, false))))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! _GLF_IDENTITY((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)))))), ((! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))), false, true))))), true, false, true)))), false, false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(4755.6616, 19.10)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) * 1.0), injectionSwitch.y), 1.0 * (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) * 1.0), injectionSwitch.y)))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(71.00)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.3)), bool(false))), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-4148.3823, -890.866)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : 0.0)))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / 1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(71.00)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.3)), bool(false))), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-4148.3823, -890.866)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : 0.0)))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / 1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(71.00)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.3)), bool(false))), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-4148.3823, -890.866)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : 0.0)))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / 1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) && true), false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(4755.6616, 19.10)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) * 1.0), injectionSwitch.y), 1.0 * (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) * 1.0), injectionSwitch.y)))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(71.00)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.3)), bool(false))), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-4148.3823, -890.866)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : 0.0)))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / 1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(71.00)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.3)), bool(false))), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-4148.3823, -890.866)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : 0.0)))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / 1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(71.00)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.3)), bool(false))), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-4148.3823, -890.866)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : 0.0)))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / 1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) && true), false))))))))), bool(bool(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) && true)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(4755.6616, 19.10)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, injectionSwitch.y)))))))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) * 1.0), injectionSwitch.y), 1.0 * (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) * 1.0), injectionSwitch.y)))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(71.00)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.3)), bool(false))), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-4148.3823, -890.866)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : 0.0)))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / 1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(71.00)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.3)), bool(false))), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-4148.3823, -890.866)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : 0.0)))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / 1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), ((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(71.00)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), clamp(determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.3)), bool(false))), 0.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(vec2(-4148.3823, -890.866)) : clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.8) : 0.0)))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)))))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))) / 1.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0))))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))) && true), false)))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(_GLF_IDENTITY(2, 1 * (2)), (_GLF_IDENTITY(2, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (2), max(~ (2), ~ (2)))), ((_GLF_IDENTITY(~ _GLF_IDENTITY((2), (_GLF_IDENTITY((2), max((2), (2)))) / 1), max(~ (2), ~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) ^ 0)), ((_GLF_IDENTITY(2, (2) ^ 0))) * 1))))) | 0))) - _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) - 0)) | (0), ((_GLF_IDENTITY(0, (0) - 0)) | (0)) | ((_GLF_IDENTITY(0, (0) - 0)) | (0))))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), clamp(~ (2), ~ (2), _GLF_IDENTITY(~ (2), max(~ (2), ~ (2))))))), _GLF_IDENTITY(~ (~ (2)), _GLF_IDENTITY(0, (0) ^ 0) | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2)), max(~ _GLF_IDENTITY(((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2)), int(int(((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2))))), ~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2)), max(_GLF_IDENTITY(~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2)), ~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2)), 0 | (~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2))))))), ~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-68162) : _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((_GLF_IDENTITY(~ (2), ~ (~ (~ (2))))))))))) | (2), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 1 * ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (2), clamp(~ (2), ~ (2), ~ (2)))), ((_GLF_IDENTITY(~ (2), clamp(~ (2), ~ (2), ~ (2))))) << 0), _GLF_IDENTITY(1 * ((~ (2))), (true ? _GLF_IDENTITY(1 * ((~ (2))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(1137)))) | 0) * ((~ (2)))) - 0) : _GLF_FUZZED(20004))))) - 0))))) | (2)), max(~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * _GLF_IDENTITY((_GLF_IDENTITY((~ (2)), int(int((~ (2)))))), ~ (~ ((_GLF_IDENTITY((~ (2)), int(int((~ (2)))))))))))))) | (2)), ~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (2)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) | (~ (~ (2)))))), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2)))))))), ~ (~ ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-68162) : _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((_GLF_IDENTITY(~ (2), ~ (~ (~ (2))))))))))) | (2), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (2)), 1 * ((~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (2), clamp(~ (2), ~ (2), ~ (2)))), ((_GLF_IDENTITY(~ (2), clamp(~ (2), ~ (2), ~ (2))))) << 0), _GLF_IDENTITY(1 * ((~ (2))), (true ? _GLF_IDENTITY(1 * ((~ (2))), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(1137)))) | 0) * ((~ (2)))) - 0) : _GLF_FUZZED(20004))))) - 0))))) | (2)), max(~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * _GLF_IDENTITY((_GLF_IDENTITY((~ (2)), int(int((~ (2)))))), ~ (~ ((_GLF_IDENTITY((~ (2)), int(int((~ (2)))))))))))))) | (2)), ~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (2)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(~ (~ (2)), (~ (~ (2))) | (~ (~ (2)))))), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2)))))))))))), _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2)), max(~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))))) | (2)), ~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), 1 * ((~ (2)))))), ~ (~ (_GLF_IDENTITY(~ (~ (2)), 0 | (~ _GLF_IDENTITY((~ (2)), _GLF_IDENTITY(1, int(int(1))) * ((~ (2))))))))))) | (2)))))))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
}
