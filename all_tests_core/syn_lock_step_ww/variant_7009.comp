#version 460
struct _GLF_struct_2 {
 mat3 _f0;
 mat4 _f1;
 mat3x2 _f2;
 bvec3 _f3;
 mat3x4 _f4;
 uint _f5;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 mat3 _f1;
 uint subgroup_size;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 _GLF_struct_3 _f1;
 mat4x2 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_0 {
 uint workgroup_size;
 mat2x4 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat2x3(1.0), _GLF_struct_3(_GLF_struct_1(vec2(1.0), mat3(1.0), gl_SubgroupSize), _GLF_struct_2(mat3(1.0), mat4(1.0), mat3x2(1.0), bvec3(true), mat3x4(1.0), 1u)), mat4x2(1.0), ivec3(1));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(gl_WorkGroupSize.x, mat2x4(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y = workgroup_id;
 uint workgroup_base = _GLF_struct_replacement_0.workgroup_size * GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.y;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_4._f1._f0.subgroup_size + GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_4._f1._f0.subgroup_size + ((GLF_merged2_0_1_17_1_1_12subgroup_local_idworkgroup_id.x + 1) % _GLF_struct_replacement_4._f1._f0.subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}
