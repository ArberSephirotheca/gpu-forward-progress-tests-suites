#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 float _f0;
 vec2 _f1;
 vec4 _f2;
 uint virtual_gid;
 ivec3 _f3;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 mat2x3 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 mat4x3 _f1;
 _GLF_struct_0 _f2;
 mat2 _f3;
 _GLF_struct_1 _f4;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 _GLF_struct_2 _f1;
 mat4x2 _f2;
 ivec3 _f3;
 vec3 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), gl_WorkGroupSize)).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat4x2(1.0), _GLF_struct_2(mat3x2(1.0), mat4x3(1.0), _GLF_struct_0(uvec2(1u), mat2x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-65.40)), bool(false)))), bvec3(true)), mat2(1.0), _GLF_struct_1(1.0, vec2(1.0), vec4(1.0), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ivec3(1))), mat4x2(1.0), ivec3(1), vec3(1.0));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) + (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[_GLF_struct_replacement_3._f1._f4.virtual_gid], uint(1), 4, 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}
