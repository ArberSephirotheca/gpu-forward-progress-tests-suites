#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 uint next_virtual_gid;
 int _f0;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 bvec4 _f1;
 uint subgroup_local_id;
 vec3 _f2;
 mat2x3 _f3;
 vec3 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 vec2 _f1;
 uint _f2;
 mat4x2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(_GLF_struct_0(mat2x3(1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4911.5496)))) * 1.0), min(1.0, 1.0))), 1u, mat4x2(1.0), vec3(1.0)), _GLF_struct_1(bvec3(true), bvec4(true), gl_SubgroupInvocationID, vec3(1.0), mat2x3(1.0), vec3(1.0), mat2(1.0)), vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.9)), bool(false))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), false)))))))))) && true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), (! (! (false))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true)))))))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), (! (! (false))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true)))))))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), (! (! (false))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true)))))))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), (! (! (false))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true)))))))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))) && true), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), (! (! (false))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), ! (! (false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true)))))))))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4(! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0, 1.0, sin(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) || false)))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false, true))))) || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_base, subgroup_base), (1u ^ (1u & 1u)) ^ (min(subgroup_base, subgroup_base))), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u)))), min(subgroup_base, subgroup_base)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base))))))) + _GLF_struct_replacement_3._f0._f1.subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false || (false))), bool(bool((_GLF_IDENTITY(false, false || (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1)), (_GLF_IDENTITY(((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1)), (((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1))) / 1u)) * _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u))))) - 0u, _GLF_IDENTITY((false ? _GLF_FUZZED(126307u) : ((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1)) - 0u), clamp((false ? _GLF_FUZZED(126307u) : ((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1)) - 0u), (false ? _GLF_FUZZED(126307u) : ((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1)) - 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(126307u) : ((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1)) - 0u), clamp((false ? _GLF_FUZZED(126307u) : ((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1)) - 0u), (false ? _GLF_FUZZED(126307u) : ((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1)) - 0u), (false ? _GLF_FUZZED(126307u) : ((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1)) - 0u)))))))) << 0u) % subgroup_size), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1)), (((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1))) | 0u) - 0u)) << 0u) % _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_struct_replacement_3._f0._f1.subgroup_local_id + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, clamp(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, max(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, _GLF_struct_replacement_3._f0._f1.subgroup_local_id)), _GLF_struct_replacement_3._f0._f1.subgroup_local_id))) ^ 0u), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, (_GLF_struct_replacement_3._f0._f1.subgroup_local_id) - 0u))), _GLF_struct_replacement_3._f0._f1.subgroup_local_id))), (~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id)) << 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, (_GLF_struct_replacement_3._f0._f1.subgroup_local_id) ^ 0u), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id), (~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id)) << _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, (_GLF_struct_replacement_3._f0._f1.subgroup_local_id) ^ 0u), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id), (~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id)) << 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, (_GLF_struct_replacement_3._f0._f1.subgroup_local_id) ^ 0u), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id), (~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id)) << 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, (_GLF_struct_replacement_3._f0._f1.subgroup_local_id) ^ 0u), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id), (~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id)) << 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, (_GLF_struct_replacement_3._f0._f1.subgroup_local_id) ^ 0u), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id), (~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id)) << _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, (_GLF_struct_replacement_3._f0._f1.subgroup_local_id) ^ 0u), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id), (~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id)) << 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, (_GLF_struct_replacement_3._f0._f1.subgroup_local_id) ^ 0u), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id), (~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id)) << 0u))))), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, max(_GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, (_GLF_struct_replacement_3._f0._f1.subgroup_local_id) ^ 0u), _GLF_IDENTITY(_GLF_struct_replacement_3._f0._f1.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id), (~ (_GLF_struct_replacement_3._f0._f1.subgroup_local_id)) << 0u)))))))) * ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))) - 0u) + 1)) - 0u)) << 0u) % _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + 0u)))))))), 1);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), ! (! (! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), true), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), true), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_WRAPPED_IF_TRUE(true)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true)))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))))))))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true)))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false)))))))))), bool(bvec2(! (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true)))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true))))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true))))), true, false)))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(false, (false) || false))))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec3(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, true))))))))), true && (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))), ! (! (! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), ! (! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), false, true), bvec3(bvec3(bvec3((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), false, true)))), false)))), (bool(_GLF_IDENTITY(bvec3((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), false, true), bvec3(bvec3(bvec3((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), false, true)))), false))))) && true)))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false)))))))))))))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), true), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_WRAPPED_IF_TRUE(true)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true)))), false || (true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true)))))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))))))))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true)))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false), bvec2(bvec4(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false), false, true)))))))))))), bool(bvec2(! (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, false)))), true)))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false)), false || (_GLF_IDENTITY(bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false)), true && (bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false)))))))))))))), false))))), true && (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), ! (! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), true && ((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))))), false || ((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), ! (! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), true && ((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false)))))))))))))), false)), true && (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), true), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_TRUE(true), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_TRUE(true), true), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_TRUE(true), true)))))))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_WRAPPED_IF_TRUE(true)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false, true)))) && true), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true)))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))))))))), ! (_GLF_IDENTITY(! (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true)))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false)))))))))), bool(bvec2(! (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))), true)))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false)))))))))), false))))), true && (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool((_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))), ! (! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true)))))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false))), true && (_GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), bool(bvec2((! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))), false)))))))))))))), false))))) || false)) && true))
  {
   atomicStore(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, max(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)))), virtual_gid))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_4.next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-40407)))) / int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(true ? _GLF_IDENTITY(uint(2), max(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) | _GLF_IDENTITY(0u, (0u) / (0u ^ 1u))))) : _GLF_FUZZED(virtual_gid), max(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? uint(_GLF_IDENTITY(2, 0 + (_GLF_IDENTITY(2, (2) | 0)))) : _GLF_FUZZED(virtual_gid), (true ? uint(2) : _GLF_FUZZED(virtual_gid)) * 1u), true ? uint(2) : _GLF_FUZZED(virtual_gid)))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))) * 1u)), 4, 64, _GLF_IDENTITY(4, int(ivec4(4, 1, 1, 1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(577.364, 58.58)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(577.364, 58.58)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(577.364, 58.58)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, sqrt(1.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0))), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), ! (! ((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(577.364, 58.58)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(577.364, 58.58)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(577.364, 58.58)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))))))), (bool(_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(577.364, 58.58), min(vec2(577.364, 58.58), vec2(577.364, 58.58)))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(577.364, 58.58)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0)), mat2(1.0) * (vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(577.364, 58.58)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 0.0))))).x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) ? _GLF_FUZZED(vec2(577.364, 58.58)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x3(mat2(1.0) * (injectionSwitch), 1.0, 1.0, 1.0, 1.0))))))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) / vec2(1.0, 1.0))))).y))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (vec2(mat3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) / vec2(1.0, 1.0))))).y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.1), _GLF_FUZZED(978.947)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y)))))))))))))) ? _GLF_FUZZED(vec2(577.364, 58.58)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))))) * abs(vec2(1.0, 1.0)))).x > injectionSwitch.y))))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(_GLF_FUZZED(24.03), (_GLF_IDENTITY(_GLF_FUZZED(24.03), float(vec4(_GLF_FUZZED(24.03), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))) - 0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]), max(_GLF_IDENTITY(clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]), clamp(_GLF_IDENTITY(clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]), (clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])) / 1.0), clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]), clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0]))), clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), mix(float(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, clamp((0) | 0, (0) | 0, (0) | 0)))) << 0)]), float(_GLF_FUZZED(292.939)), bool(false)))), bool(true))), injectionSwitch[1])), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(24.03)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), bool(false)))), (true ? float(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), bool(false)))) : _GLF_FUZZED(3742.8732))), bool(true))), injectionSwitch[1])), 0.0, 1.0), vec4(mat2x4(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(24.03)), max(_GLF_IDENTITY(float(_GLF_FUZZED(24.03)), (false ? _GLF_FUZZED(-42.65) : float(_GLF_FUZZED(24.03)))), float(_GLF_FUZZED(24.03)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0]))), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false)))), bool(bvec4(! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false)))), true, true, true)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ((! (bool(false)))) && true)), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false)))))), mix(float(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false))))))), float(_GLF_FUZZED(vec4(942.480, -4.5, 403.376, -9305.9434).x)), bool(false)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false)))))), mix(float(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false))))))), float(_GLF_FUZZED(vec4(942.480, -4.5, 403.376, -9305.9434).x)), bool(false)))), max(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false)))))), mix(float(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(_GLF_IDENTITY(! (bool(false)), ! (! (_GLF_IDENTITY(! (bool(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, true))), true), false, false)))))))), true, true, false))))))), float(_GLF_FUZZED(vec4(942.480, -4.5, 403.376, -9305.9434).x)), bool(false)))), _GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false)))))), ! (! (! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false))))))))))))))), mix(float(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false), true, true))))))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false))))))), float(_GLF_FUZZED(vec4(942.480, -4.5, 403.376, -9305.9434).x)), bool(false)))))), _GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false)))))), mix(float(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false))))))), float(_GLF_FUZZED(vec4(942.480, -4.5, 403.376, -9305.9434).x)), bool(false)))))), _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(bvec4(! (bool(false)), true, true, false)), (bool(bvec4(! (bool(false)), true, true, false))) || false)))))), _GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(injectionSwitch[0]), (float(injectionSwitch[0])) - 0.0), float(_GLF_FUZZED(292.939)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec4(! (bool(false)), true, true, false)))))))))), bool(true))), injectionSwitch[1])), 0.0, 1.0), 1.0, 0.0, 1.0, 1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(_GLF_FUZZED(24.03), max(_GLF_FUZZED(24.03), _GLF_IDENTITY(_GLF_FUZZED(24.03), max(_GLF_FUZZED(24.03), _GLF_FUZZED(24.03)))))), float(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), bool(false)))), bool(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-5561.0416)), bool(false)))), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))), injectionSwitch.y)))) && (true))))), injectionSwitch[1])), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(24.03)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0)))[_GLF_IDENTITY(0, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(0, min(0, 0)))), clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, min(0, 0)))), int(ivec2(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(int(ivec2(int(int(_GLF_IDENTITY(0, min(0, 0)))), 0)), (true ? int(ivec2(int(int(_GLF_IDENTITY(0, min(0, 0)))), 0)) : _GLF_FUZZED(7617)))), 1))), int(int(_GLF_IDENTITY(0, min(0, 0)))), int(int(_GLF_IDENTITY(0, min(0, 0)))))))))], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(292.939)), bool(false)))), bool(true))), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(77929, (77929) - (0 >> _GLF_IDENTITY(int(1), int(1)))) & 0) | (1))])), 0.0, 1.0), vec4(mat2x4(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(24.03)), float(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), _GLF_IDENTITY(float(_GLF_FUZZED(292.939)), (float(_GLF_FUZZED(292.939))) / 1.0), bool(false)))), bool(true))), injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(24.03)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), _GLF_IDENTITY(float(_GLF_FUZZED(292.939)), (float(_GLF_FUZZED(292.939))) / 1.0), bool(_GLF_IDENTITY(false, false || (false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sign(-2.2)) : _GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), _GLF_IDENTITY(float(_GLF_FUZZED(292.939)), (float(_GLF_FUZZED(292.939))) / 1.0), bool(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))))))))), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), injectionSwitch[1])) * vec2(1.0, 1.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(_GLF_FUZZED(24.03)), max(float(_GLF_FUZZED(24.03)), _GLF_IDENTITY(float(_GLF_FUZZED(24.03)), min(float(_GLF_FUZZED(24.03)), float(_GLF_FUZZED(_GLF_IDENTITY(24.03, (false ? _GLF_FUZZED(-5.2) : _GLF_IDENTITY(24.03, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 24.03 : _GLF_FUZZED(167.382))))))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(-8170.3343, 17.50)) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(-8.7) : _GLF_IDENTITY((_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0)))), clamp((_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0)))), (_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0)))), (_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0)))))))) / 1.0), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (false ? _GLF_FUZZED(vec2(-8170.3343, 17.50)) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))[0], mix(_GLF_IDENTITY(float(injectionSwitch[0]), max(float(injectionSwitch[0]), float(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0)))))), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(292.939, mix(float(_GLF_IDENTITY(292.939, (292.939) * 1.0)), float(_GLF_FUZZED(-7672.4653)), bool(false)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(292.939, mix(float(_GLF_IDENTITY(292.939, (292.939) * 1.0)), float(_GLF_FUZZED(-7672.4653)), bool(false)))), (_GLF_FUZZED(_GLF_IDENTITY(292.939, mix(float(_GLF_IDENTITY(292.939, (292.939) * 1.0)), float(_GLF_FUZZED(-7672.4653)), bool(false))))) * abs(1.0)), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(292.939, mix(float(_GLF_IDENTITY(292.939, (292.939) * 1.0)), float(_GLF_FUZZED(-7672.4653)), bool(false)))), (_GLF_FUZZED(_GLF_IDENTITY(292.939, mix(float(_GLF_IDENTITY(292.939, (292.939) * 1.0)), float(_GLF_FUZZED(-7672.4653)), bool(false))))) * abs(1.0)), 1.0, sin(0.0), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(292.939, mix(float(_GLF_IDENTITY(292.939, (292.939) * 1.0)), float(_GLF_FUZZED(-7672.4653)), bool(false)))), (_GLF_FUZZED(_GLF_IDENTITY(292.939, mix(float(_GLF_IDENTITY(292.939, (292.939) * 1.0)), float(_GLF_FUZZED(-7672.4653)), bool(false))))) * abs(1.0)), 1.0, sin(0.0), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))) : _GLF_FUZZED(-97.14)))), bool(false)))), bool(true))), injectionSwitch[1])) : _GLF_FUZZED(vec2(98.16, 41.16)))), 0.0, 1.0), 1.0, 0.0, 1.0, 1.0)))))) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false, true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false, true)))), false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
