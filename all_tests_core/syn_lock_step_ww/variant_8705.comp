#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       switch(_GLF_SWITCH(0))
        {
         case 67:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(true)
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              while(true)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
             }
            do
             {
              switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))
               {
                case 33:
                mat4(7.6, 85.10, 247.834, 29.46, -3817.3155, -375.925, 8.6, -2.2, -157.264, 655.326, -29.89, -6388.0251, 2824.1862, -7.2, -3.3, -170.597);
                case 0:
                case 93:
                case 21:
                case 3:
                case 78:
                if(_GLF_DEAD(false))
                 return;
                break;
                case 19:
                ivec2(-57599, -96183);
                default:
                1;
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
            if(_GLF_DEAD(false))
             break;
            for(mat2x3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v; false; ivec3(-38993, 45400, -24035))
             {
              for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
               {
                mat4x2(1.9, 4112.2711, 3946.2707, 7.4, -4.5, -1139.2321, -72.13, 28.55);
               }
              if(_GLF_DEAD(false))
               return;
              uint _GLF_SWITCH_0_2v[96], _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                break;
                if(_GLF_DEAD(false))
                 break;
               }
              do
               {
                if(_GLF_DEAD(false))
                 return;
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  return;
                 }
                return;
               }
              mat4x2 _GLF_SWITCH_0_5v[65], _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
             }
            for(mat2x3 _GLF_SWITCH_0_8v[30], _GLF_SWITCH_0_9v; (mat4x2(958.221, 938.959, 1212.1125, -4.9, 9924.9505, 2779.0996, -2767.5624, -9.6) != mat4x2(7854.3315, 9.9, 20.37, 966.356, 6.6, -3979.8734, 887.697, 7.8)); vec2(543.619, -9.8))
             {
              cos(mix(vec2(-1.2, 3.1), vec2(5.9, -6.5), bvec2(true, true)));
              mat4 _GLF_SWITCH_0_10v[17], _GLF_SWITCH_0_11v;
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
               {
                switch(_GLF_SWITCH((0 | 0)))
                 {
                  case 0:
                  case 58:
                  case 84:
                  case 45:
                  case 41:
                  case 94:
                  case 23:
                  case 91:
                  case 96:
                  (-50604 & ivec3(72255, 93694, 98207)).sts;
                  break;
                  case 72:
                  uvec4(80119u, 170123u, 131161u, 13322u);
                  default:
                  1;
                 }
               }
              ivec3 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               continue;
              ;
             }
           }
           if(_GLF_DEAD(false))
            return;
           if((-85.75 != 104.800))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                   switch(_GLF_SWITCH(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(int(0))), 0))))
                    {
                     case 73:
                     (subgroup_id & uvec4(75766u, 167964u, 136399u, 107072u));
                     case 0:
                     case 10:
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       return;
                      }
                     break;
                     default:
                     1;
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                    break;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 -55050;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   continue;
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
              }
             bvec2(false, true).yxyy;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                }
               return;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             (vec4(-376.342, 9.9, -6.4, -9.9) , bvec3(false, true, true));
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                return;
              }
             uvec3 _GLF_SWITCH_0_14v;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             {
              mat4(1.2, 3.7, 2.0, 3.9, 4.9, -3204.6056, -80.63, 82.12, -6414.8128, 1506.4470, 969.188, 2.5, 49.64, -407.185, -95.37, 444.669);
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                switch(_GLF_SWITCH(_GLF_IDENTITY(0, min(0, 0))))
                 {
                  case 7:
                  ivec4(56990, -51876, -60211, -94986).wwz;
                  case 0:
                  case 68:
                  case 17:
                  case 11:
                  atanh(vec2(731.674, -634.271));
                  case 49:
                  case 79:
                  case 74:
                  case 99:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  break;
                  case 31:
                  bvec4 _GLF_SWITCH_5_0v[28];
                  default:
                  1;
                 }
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               return;
              ivec2 _GLF_SWITCH_0_15v[89], _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
              uvec3 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v[63], _GLF_SWITCH_0_20v;
              bvec4 _GLF_SWITCH_0_21v;
              mat4x3 _GLF_SWITCH_0_22v[89];
              bvec4(true, true, true, false);
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  do
                   {
                    return;
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                break;
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 continue;
                for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                 {
                  return;
                 }
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              156778u;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 continue;
                continue;
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                continue;
               }
              if(_GLF_DEAD(false))
               return;
             }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
              return;
             if(_GLF_DEAD(false))
              continue;
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                if(_GLF_DEAD(false))
                 return;
                break;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              (mat3x2(-9135.1447, 9.7, 10.31, -82.57, 21.55, -76.23) + 72.83);
              ;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  return;
                 }
               }
              ;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 break;
                return;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              uvec2(40210u, 7441u);
              if(_GLF_DEAD(false))
               return;
              do
               {
                do
                 {
                  switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) & 89711)))
                   {
                    case 0:
                    bvec3(true, true, true);
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      break;
                     }
                    case 12:
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         {
                          do
                           {
                            return;
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        break;
                       }
                      continue;
                     }
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     return;
                    break;
                    case 29:
                    mat2x3(5.3, 120.954, 99.65, -29.47, 178.961, -87.93);
                    case 62:
                    mat3x2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                    default:
                    1;
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                     break;
                    if(_GLF_DEAD(false))
                     continue;
                   }
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               return;
             }
             for(int _injected_loop_counter = (-6722 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 transpose((mat3(961.435, 663.698, -9.2, 673.134, -5.0, -8.8, 28.09, 8.5, 8.1) - mat3(-28.93, -9.5, -9.8, 5.3, -1.0, 4017.8425, -6.9, -802.173, 254.114)));
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 do
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 23:
                     _injected_loop_counter;
                     case 99:
                     ivec3(12558, -96462, 62484);
                     case 0:
                     case 34:
                     case 75:
                     case 16:
                     case 72:
                     if(_GLF_DEAD(false))
                      break;
                     return;
                     break;
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             if((93.76 != -4.1))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
               if(_GLF_DEAD(false))
                return;
               switch(_GLF_SWITCH(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-75567) : 0)), 0))))
                {
                 case 0:
                 if(_GLF_DEAD(false))
                  break;
                 case 47:
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 switch(_GLF_SWITCH(0))
                  {
                   case 49:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   uvec2 _GLF_SWITCH_2_0v;
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   case 41:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     do
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     break;
                    }
                   (mat4x2(mat2(2.9, -739.529, -8.8, -3220.7026)) - (mat4x2(-6553.8338, 671.572, 726.057, -4907.3669, 4.9, -21.15, 530.751, 87.87) / mat4x2(-9.6, -8609.4258, 5.8, -7377.3396, 486.283, 79.25, -3.5, 7.3)));
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      return;
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1)))); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(false))
                    break;
                   case 0:
                   (bvec3(true, true, false) != bvec3(true, false, true));
                   if(_GLF_DEAD(false))
                    continue;
                   do
                    {
                     if(_GLF_DEAD(false))
                      break;
                     ;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   case 29:
                   ;
                   mat3 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v[84];
                   if(_GLF_DEAD(false))
                    break;
                   case 54:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   case 70:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   case 30:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    continue;
                   mat2x4 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(false))
                    {
                     switch(_GLF_SWITCH((0 | 0)))
                      {
                       case 14:
                       uvec2 _GLF_SWITCH_3_0v[6], _GLF_SWITCH_3_1v;
                       case 4:
                       ;
                       case 0:
                       case 96:
                       case 82:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                       continue;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       break;
                       default:
                       if(_GLF_DEAD(false))
                        continue;
                       1;
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   mat4 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
                   case 98:
                   if(_GLF_DEAD(false))
                    break;
                   mat3 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v[3], _GLF_SWITCH_0_32v;
                   do
                    {
                     ;
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     continue;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                    break;
                   _GLF_SWITCH_0_27v;
                   break;
                   case 40:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   min(ivec3(11572, 73285, -2623), ivec3(30218, 1817, -23092));
                   default:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       1;
                      }
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       break;
                      }
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 break;
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   continue;
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  break;
                 mat2x3(35.84, -4577.2552, -216.591, -7.7, -4.0, 1298.6811);
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  continue;
                }
               else
                {
                }
               ivec3 _GLF_SWITCH_0_33v[71];
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
               bvec4 _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
               ivec4 _GLF_SWITCH_0_37v[10], _GLF_SWITCH_0_38v;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               ;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                }
               1477;
               do
                {
                 switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), int(7)))))
                  {
                   case 0:
                   case 17:
                   case 99:
                   case 88:
                   case 26:
                   case 47:
                   case 4:
                   case 81:
                   case 63:
                   case 54:
                   bvec3(false, false, false).gg;
                   break;
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 ;
                }
               if(_GLF_DEAD(false))
                continue;
              }
             uvec2 _GLF_SWITCH_0_39v;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             mat2 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   return;
                  }
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               _GLF_SWITCH_0_41v;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           (uvec2(41470u, 5019u) ^ uvec2(121460u, 3640u));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 20:
         if(_GLF_DEAD(false))
          continue;
         {
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            mat2x3(727.978, -7.7, 0.0, 416.565, -378.097, -9.7);
           }
          for(mat3x2 _GLF_SWITCH_0_42v[76], _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v; (uvec4(140224u, 64477u, 107747u, 35295u) != uvec4(167809u, 154998u, 67892u, 134334u)); (ivec4(32828, 25352, -14537, -36382) | ivec4(ivec3(38896, -97860, -82682), 68469)))
           {
            switch(_GLF_SWITCH(0))
             {
              case 0:
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                mat3x4 _GLF_SWITCH_0_45v;
                if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
                 {
                  if(_GLF_DEAD(false))
                   return;
                 }
                else
                 {
                  subgroup_id;
                 }
                mat4x2(756.882, 3.8, 62.87, 5.3, -27.51, -6027.9562, 24.56, -3.5);
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))) && true)))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      continue;
                     }
                    return;
                   }
                  mat4x2(mat4(-6420.5717, 495.678, -166.627, -477.117, -920.427, -39.37, -56.37, 7.0, -4.5, -0.3, 17.50, -35.79, -9.3, -3.9, 5.7, 9.3));
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   continue;
                 }
                if(_GLF_DEAD(false))
                 break;
                mat2x3(234.894, 7.3, -99.91, -776.811, 1572.0537, -1.3);
                if(_GLF_DEAD(false))
                 continue;
               }
              while(false);
              for(              -6.2;
 false; ivec3(-70296, -99596, -27223))
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
                   return;
                 }
                vec3(9.1, 59.13, -1.7);
                mat4(349.787, 63.28, -2.5, -9163.9536, -1.1, 4030.3540, 2.0, -3534.0367, -14.18, -4.5, -2.1, 8.9, -9.1, -8.9, -2.1, 1.6);
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  break;
                 }
                do
                 {
                  if(_GLF_DEAD(false))
                   break;
                  ;
                 }
                while(_GLF_WRAPPED_LOOP(false));
                float _GLF_SWITCH_0_46v;
                mat2x4(69.04, -21.91, 777.072, -171.695, -1.1, 35.07, -7.3, -20.86);
               }
              case 59:
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               return;
              case 34:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  break;
                 }
                continue;
                if(_GLF_DEAD(false))
                 continue;
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              do
               {
                ivec3 _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v[95], _GLF_SWITCH_0_49v;
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                break;
               }
              mat3 _GLF_SWITCH_0_50v[26], _GLF_SWITCH_0_51v;
              bvec3 _GLF_SWITCH_0_52v;
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  break;
                 }
                return;
                if(_GLF_DEAD(false))
                 return;
               }
              if(true)
               {
                mat2 _GLF_SWITCH_0_53v;
                if(_GLF_DEAD(false))
                 continue;
                ;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  return;
                 }
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 return;
               }
              else
               {
                mat2 _GLF_SWITCH_0_54v;
                do
                 {
                  mat4x3(19.53, -64.17, 6246.7601, -3.5, 8.3, -4263.9508, 5067.3928, -395.583, -73.57, 4.9, 567.974, 7.0);
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                   }
                  else
                   {
                   }
                  all(bvec4(true, true, false, true));
                 }
                uvec3(uvec2(145457u, 179509u), atomicCompSwap(subgroup_id, 163950u, subgroup_id));
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  break;
                 }
                bvec2 _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v[24];
                if(_GLF_DEAD(false))
                 {
                  switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
                   {
                    case 99:
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      ;
                     }
                    case 69:
                    mat3x2(-8.2, -60.30, -1.3, -2.9, 90.97, -9.8);
                    case 0:
                    if(_GLF_DEAD(false))
                     return;
                    case 97:
                    case 78:
                    case 87:
                    case 98:
                    case 90:
                    case 70:
                    if(_GLF_DEAD(false))
                     break;
                    case 22:
                    case 55:
                    do
                     {
                      return;
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    break;
                    case 26:
                    vec3(-1081.9703, 3695.7274, 88.37);
                    case 31:
                    float _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[48], _GLF_SWITCH_3_2v;
                    default:
                    1;
                   }
                 }
                findLSB(56729);
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(38035) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    return;
                   }
                 }
               }
              do
               {
                for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    do
                     {
                      return;
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
              case 39:
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               continue;
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                do
                 {
                  for(                  (82283u & (uvec4(14667u, 12872u, 73827u, 22051u) % uvec4(146454u, 173133u, 55168u, 142449u)));
 false; bvec2(bvec4(false, true, true, true)))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                       {
                        if(_GLF_DEAD(false))
                         return;
                        break;
                       }
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(false))
                       return;
                      break;
                     }
                    if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                     return;
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           break;
                          return;
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        if(_GLF_DEAD(false))
                         break;
                       }
                      bvec2 _GLF_SWITCH_0_58v[79], _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v[92];
                      bvec4 _GLF_SWITCH_0_61v[49], _GLF_SWITCH_0_62v[11];
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           {
                            for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                             {
                              return;
                             }
                           }
                         }
                        else
                         {
                         }
                        continue;
                       }
                      if(_GLF_DEAD(false))
                       continue;
                      case 44:
                      if(_GLF_DEAD(false))
                       continue;
                      case 57:
                      bool _GLF_SWITCH_0_63v[37], _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v[60];
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                         {
                          return;
                         }
                        else
                         {
                         }
                       }
                      if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                       continue;
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(false))
                         return;
                        uvec3(34047u, 152191u, 57325u);
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                       }
                      else
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                       }
                      break;
                      case 15:
                      _GLF_SWITCH_0_59v;
                      default:
                      1;
                      if(_GLF_DEAD(false))
                       break;
                     }
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     continue;
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              case 55:
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  return;
                }
               vec4 _GLF_SWITCH_0_66v;
               vec2 _GLF_SWITCH_0_67v, _GLF_SWITCH_0_68v;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               uvec4(11183u, 58522u, 42481u, 94508u);
               if(_GLF_DEAD(false))
                continue;
               float _GLF_SWITCH_0_69v[45], _GLF_SWITCH_0_70v;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                continue;
              }
              case 1:
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               break;
              uvec2 _GLF_SWITCH_0_71v[28], _GLF_SWITCH_0_72v, _GLF_SWITCH_0_73v;
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               continue;
              break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                break;
               }
              case 52:
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               continue;
              bvec2 _GLF_SWITCH_1_0v[44], _GLF_SWITCH_1_1v[38];
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
               return;
              case 31:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              uvec3(47111u, 147660u, 175882u);
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  break;
                 }
                do
                 {
                  if(_GLF_DEAD(false))
                   return;
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_DEAD(false))
                 break;
               }
              else
               {
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   continue;
                  break;
                 }
                if(_GLF_DEAD(false))
                 break;
               }
              default:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                 }
                break;
               }
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                 {
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true)))))))
                   break;
                  1;
                 }
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
             }
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             continue;
            if(_GLF_DEAD(false))
             return;
           }
          uvec2(37241u, 143603u);
          if(_GLF_DEAD(false))
           break;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                do
                 {
                  return;
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
             }
            else
             {
             }
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                return;
               }
              else
               {
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
                   {
                    return;
                   }
                 }
               }
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 continue;
                continue;
               }
              break;
             }
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
             break;
           }
          if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bvec3(bool(bvec4(true, false, false, false)), false, false))))))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            mat4(617.342, -713.556, 0.1, -82.78, -94.92, 0.5, -93.23, -6.7, -0.7, -3.5, 9.4, -9334.8343, -84.28, -4.1, 5596.1244, -942.076);
           }
          else
           {
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              continue;
             }
           }
          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
           {
            while(all(bvec4(false, true, true, false)))
             {
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 uvec2(32210u, 41690u);
                }
               mat2x3 _GLF_SWITCH_0_74v[61];
               if(_GLF_DEAD(false))
                break;
               mat3x4(806.084, 4.5, -5469.5042, 8.0, -1152.6581, -7.1, 368.646, -8.3, -6242.5398, 5.0, 484.633, 7.3);
               greaterThanEqual(vec2(-3695.9717, 2134.3067), vec2(6.9, 9.2));
               if(_GLF_DEAD(false))
                continue;
              }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                 {
                  return;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(false))
                     return;
                   }
                  break;
                 }
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 return;
                break;
               }
              mat4 _GLF_SWITCH_0_75v[2], _GLF_SWITCH_0_76v;
              for(              mat3x4(-9.6, -0.1, 836.560, 17.32, 9196.9282, 469.294, 8882.7958, 893.386, -9354.1091, -83.50, 728.775, -9631.2205);
 (96214 != 94687); mat3x2(4.5, -652.702, 41.14, -29.12, -64.61, 225.102))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
                   break;
                  break;
                 }
               }
              do
               {
                bvec3 _GLF_SWITCH_0_77v, _GLF_SWITCH_0_78v;
               }
              while(_GLF_WRAPPED_LOOP(false));
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               continue;
              do
               {
                (1.7 - mat2x3(-427.570, -697.636, 7940.8620, 6.3, -8.0, -3.9));
               }
              while(_GLF_WRAPPED_LOOP(false));
              if((mat4x3(281.044, 742.036, -1.5, 7265.3985, 1.2, 2.0, -6.2, -582.899, 255.094, 6876.2060, 719.719, -31.08) != mat4x3(-986.274, 28.96, -87.36, (-98.75 / 480.223), -772.340, -845.841, -417.553, 666.221, -174.632, 3.4, 8.2, 9841.7111)))
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 52:
                  uint _GLF_SWITCH_3_0v[94], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                  case 0:
                  case 60:
                  switch(_GLF_SWITCH(0))
                   {
                    case 17:
                    ;
                    case 89:
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    if(_GLF_DEAD(false))
                     return;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    mat4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                    case 0:
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    case 42:
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      return;
                     }
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       return;
                      break;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                     }
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      do
                       {
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           return;
                          mat2(-2906.4316, -7.4, 4125.7993, -379.881);
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     continue;
                    mat2x3(6.0, -5668.1341, -57.39, -375.316, 75.02, 721.081);
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       break;
                      true;
                     }
                    mat3(mat3x4(-59.03, -9107.7605, 271.908, 6.5, 777.104, 8.9, 86.41, -41.56, 4.1, 1.6, 7.6, 7.1));
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    case 91:
                    float _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v[27];
                    case 83:
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       return;
                      return;
                     }
                    case 69:
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          return;
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                      continue;
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    mat3x4((_GLF_SWITCH_0_79v / mat4(-675.420, -0.4, 548.194, 2.2, -1.4, -81.05, -9536.8960, 3.0, 135.908, 9.2, -70.96, -3702.3719, -848.323, -315.349, -5634.6132, 56.96)));
                    case 62:
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    mat2(mat3x2(4.6, 5259.2466, -5.6, -1057.8236, 9184.5118, -35.18));
                    if(_GLF_DEAD(false))
                     return;
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     return;
                    mat4x3 _GLF_SWITCH_0_81v[30];
                    if(_GLF_DEAD(false))
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        case 57:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         return;
                        case 34:
                        case 13:
                        case 44:
                        case 20:
                        return;
                        break;
                        case 45:
                        ;
                        case 90:
                        mat2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                        default:
                        1;
                       }
                     }
                    case 55:
                    uvec4 _GLF_SWITCH_0_82v[55];
                    break;
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(false))
                       continue;
                      return;
                      if(_GLF_DEAD(false))
                       continue;
                     }
                    case 53:
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                         break;
                        break;
                       }
                      mat3(-2210.8662, 409.119, -9.0, 67.78, -27.55, -2134.6815, 2.1, -3.5, -8.6);
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     return;
                    default:
                    1;
                   }
                  break;
                  default:
                  1;
                 }
               }
              else
               {
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                vec2(34.42, 78.98).tts;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    break;
                   }
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     break;
                    switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(4), int(4)))))
                     {
                      case 35:
                      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                       continue;
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                       break;
                      ;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      case 0:
                      return;
                      break;
                      if(_GLF_DEAD(false))
                       return;
                      case 39:
                      uvec2(170239u, 86887u);
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(false))
                       continue;
                      default:
                      if(_GLF_DEAD(false))
                       {
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                         {
                          return;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           continue;
                         }
                       }
                      1;
                     }
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                ;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                mat2x4(-8.5, 325.249, -103.835, 9.1, 9.8, 1.7, 8.2, 8.9);
                ;
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    break;
                   }
                  if(_GLF_DEAD(false))
                   break;
                  continue;
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   break;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                if(_GLF_DEAD(false))
                 break;
               }
              if(_GLF_DEAD(false))
               {
                do
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  return;
                  if(_GLF_DEAD(false))
                   continue;
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              if(_GLF_DEAD(false))
               return;
             }
           }
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
             {
              do
               {
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                 }
                else
                 {
                 }
                while(false)
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  (mat2(554.112, 3605.9729, -0.2, -0.6));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  mat3x4 _GLF_SWITCH_0_83v[79], _GLF_SWITCH_0_84v[99];
                  if(_GLF_DEAD(false))
                   return;
                  do
                   {
                    if(_GLF_DEAD(false))
                     return;
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(false))
                       return;
                     }
                    else
                     {
                     }
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(false))
                       break;
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                   }
                  else
                   {
                    (uvec2(65729u, 142073u) / uvec2(136189u, 163600u));
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    continue;
                   }
                  if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                     return;
                    break;
                   }
                  mat4x2 _GLF_SWITCH_0_85v, _GLF_SWITCH_0_86v, _GLF_SWITCH_0_87v;
                  if(_GLF_DEAD(false))
                   continue;
                  bvec3 _GLF_SWITCH_0_88v;
                  mat4x2 _GLF_SWITCH_0_89v, _GLF_SWITCH_0_90v, _GLF_SWITCH_0_91v;
                  mat2x4 _GLF_SWITCH_0_92v, _GLF_SWITCH_0_93v[62], _GLF_SWITCH_0_94v[9];
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 98:
                        int _GLF_SWITCH_4_0v;
                        case 0:
                        case 13:
                        if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                         continue;
                        break;
                        case 14:
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          mat2x3(-355.789, 2705.2650, -0.5, -92.16, -9.7, -8.5);
                         }
                        else
                         {
                         }
                        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                         continue;
                        case 23:
                        mat2x3 _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[90];
                        default:
                        1;
                       }
                      if(_GLF_DEAD(false))
                       return;
                     }
                    else
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        case 40:
                        case 47:
                        case 32:
                        case 33:
                        case 39:
                        case 23:
                        case 69:
                        case 19:
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                         {
                          if(_GLF_DEAD(false))
                           break;
                          return;
                         }
                        break;
                        case 38:
                        subgroup_id;
                        default:
                        1;
                       }
                     }
                   }
                  equal(vec4(-9.4, 32.61, 688.166, 5.9), vec4(-814.560, 8815.3930, -872.797, 361.161));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  ivec3(99003, -81390, 6791);
                 }
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    return;
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  switch(_GLF_SWITCH(0))
                   {
                    case 9:
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      vec4(-5.7, 80.03, -3014.0714, 845.066);
                     }
                    else
                     {
                     }
                    case 0:
                    case 74:
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(false))
                     return;
                    case 8:
                    if(_GLF_DEAD(false))
                     break;
                    mat3x4 _GLF_SWITCH_0_95v, _GLF_SWITCH_0_96v;
                    case 84:
                    ;
                    uvec3 _GLF_SWITCH_0_97v;
                    if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false))))
                     return;
                    case 95:
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      do
                       {
                        return;
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    if(_GLF_DEAD(false))
                     return;
                    case 60:
                    (- mat4x2(-5.9, -9.6, -0.2, 2.6, 25.83, 855.673, 691.455, -616.705));
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    break;
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(false))
                     break;
                    case 21:
                    for(int _injected_loop_counter = (0 ^ (1 | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
                     {
                      if(_GLF_DEAD(false))
                       return;
                      mat2x3(-1.5, -0.0, -54.99, 5.1, 0.8, 9091.7830);
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(false))
                       return;
                     }
                    case 48:
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      ;
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(false))
                     return;
                    default:
                    if(_GLF_DEAD(false))
                     continue;
                    1;
                   }
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    break;
                   }
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   return;
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                    if(_GLF_DEAD(false))
                     break;
                   }
                  else
                   {
                    switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                     {
                      case 34:
                      uint _GLF_SWITCH_5_0v[43];
                      case 0:
                      case 81:
                      case 87:
                      case 43:
                      case 91:
                      case 45:
                      case 64:
                      case 42:
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        return;
                       }
                      break;
                      case 39:
                      mat4x2 _GLF_SWITCH_5_1v;
                      default:
                      1;
                     }
                   }
                  if(_GLF_DEAD(false))
                   continue;
                 }
                mat3 _GLF_SWITCH_0_98v, _GLF_SWITCH_0_99v, _GLF_SWITCH_0_100v;
               }
              while((ivec4(634, -49405, -62645, -89682) == ivec4(79521, 89115, -45376, -24008)));
             }
           }
          else
           {
           }
         }
         if(_GLF_DEAD(false))
          continue;
         case 0:
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          break;
         case 32:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
          }
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           continue;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         default:
         do
          {
           1;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             switch(_GLF_SWITCH(0))
              {
               case 94:
               (145266u | uvec2(159573u, 49245u));
               case 0:
               case 46:
               case 49:
               case 66:
               case 76:
               if(_GLF_DEAD(false))
                return;
               case 99:
               case 20:
               if(_GLF_DEAD(false))
                return;
               break;
               case 16:
               mat2x4 _GLF_SWITCH_4_0v[20], _GLF_SWITCH_4_1v[74], _GLF_SWITCH_4_2v;
               case 10:
               mat3x4(-7.2, -106.019, -3.0, -0.4, 69.04, -9.4, -54.80, -66.61, 900.397, 14.28, -7.7, -8.8);
               default:
               1;
               if(_GLF_DEAD(false))
                break;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))));
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH((0 | 0)))
    {
     case 2:
     bvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[53];
     case 0:
     case 12:
     case 69:
     case 86:
     case 73:
     case 97:
     case 16:
     case 3:
     case 30:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
     break;
     case 35:
     mat4(7730.9012, 429.130, -920.630, 8.6, 3.6, 57.77, 9.7, -4421.2071, 388.602, 6.4, 3.3, -7500.6239, 1705.2757, 87.70, -7784.2065, -89.02);
     default:
     1;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        continue;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 0:
       case 95:
       case 90:
       case 92:
       case 88:
       case 2:
       case 15:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       break;
       case 94:
       7.6;
       default:
       1;
      }
    }
   return;
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
}
