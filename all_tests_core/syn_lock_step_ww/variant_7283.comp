#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))) && true)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))) && true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 0u | (_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, (0u | 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) >> 0u)))))), (true ? _GLF_IDENTITY(gl_WorkGroupID.x, 0u | (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uvec3(gl_WorkGroupID.x, (0u | 0u), 0u)), (_GLF_IDENTITY(true, bool(bool(true))) ? uint(uvec3(gl_WorkGroupID.x, (0u | 0u), 0u)) : _GLF_FUZZED(85413u)))))) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size)))) * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), bool(bool(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true))), true, false, false))) || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, log(1.0))), min(float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, log(1.0))), float(mat2(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0, log(1.0))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false, false, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(vec2(4575.7323, -8.6))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.3)), bool(false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), true && (false || (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), true && (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))))))))), true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))) || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x), mix(float(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).x)), float(_GLF_FUZZED(vec4(_GLF_IDENTITY(-5.9, (-5.9) / 1.0), -755.525, -8.2, 378.555).y)), bool(false)))) : _GLF_FUZZED(403.183))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), ! (! ((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true)), (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true))) || false))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), (bool(bool(! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), false || (! (true))))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))), false, true)), false, false)))))))), true, true, false)))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY(! (! (! (true))), true && (! (! (! (true)))))))))), bool(bvec4((_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY(! (! (! (true))), true && (! (! (! (true)))))))))), true, false, false)))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (_GLF_IDENTITY(true, false || (true))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))), _GLF_IDENTITY(bool(bool((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))), (bool(bool((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (_GLF_IDENTITY(! (true), true && (! (true))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bool((true)))), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, false)), (bool(bvec4(true, false, true, false))) && true))) || _GLF_IDENTITY(false, true && (false))))) || false), _GLF_IDENTITY(! (! (! (true))), ! (! (! (! (! (true)))))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, ! (! (true))))) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true)))), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))), ((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, true)))), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))) && true)), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY(! (! (! (true))), false || (_GLF_IDENTITY(! (! (! (true))), false || (_GLF_IDENTITY(! (! (! (true))), true && (! (! (! (true))))))))))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true)))))))))) || _GLF_IDENTITY(false, true && (false))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY(! (! (! (true))), false || (_GLF_IDENTITY(! (! (! (true))), false || (_GLF_IDENTITY(! (! (! (true))), true && (! (! (! (true))))))))))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))) && true)))))))))) || _GLF_IDENTITY(false, true && (false))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), (! ((! (true)))) && true)))))))) || false)))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), (bool(bool(! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), (bool(bool(! (true)))) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), (! (true)) || false), ! (! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (true)), ! (! ((! (true))))))) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), false || (! (true))))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), bool(bool(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), bool(bool(! (true)))), bool(bool(! (true))))), true && _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))), ! (! ((_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && _GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))), bool(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true))))))))))))), bool(bool((! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), true && (! ((true)))))))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)))))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bool(! (true))), ! (! (bool(bool(! (true)))))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bool(! (true)), bool(bvec2(bool(! (true)), false))))))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (_GLF_IDENTITY(! (! (true)), ! (_GLF_IDENTITY(! (! (! (true))), true && (_GLF_IDENTITY(! (! (! (true))), (! (! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), true && (bool(bvec2((true), false)))))))) && true)))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_IDENTITY(! (! (! (true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (! (true))), false || (! (! (! (true)))))), bool(bvec3(bool(_GLF_IDENTITY(! (! (! (true))), false || (! (! (! (true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bool(! (true))))) || false), ! (! (! (true)))))))), bool(bvec2((_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bool(! (true))))) || false), ! (! (! (true)))))))), false)))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bvec4(_GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, true, false))), true, true, true)))) || false) || false), ! (! (! (true))))))))), ((! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), ! (! (! (true)))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), true && (! (_GLF_IDENTITY(! (true), bool(bool(_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))), false, true)), false, false)))))))), true, true, false)))) && true))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true))) && true, ! (! (_GLF_IDENTITY((true) && true, bool(bvec3((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bool((true))))))) && true, false, true))))))), ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), ! (! ((_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true))))))))) && true, ! (! (_GLF_IDENTITY((true) && true, bool(bvec3((_GLF_IDENTITY(true, ! (! (true)))) && true, false, true))))))), ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), ! (! (! ((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true))) && true, ! (! (_GLF_IDENTITY((true) && _GLF_IDENTITY(true, (true) && true), bool(bvec3((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ((! (true))) || false)) && true))) && true, false, true))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), bool(bool(! (true))))), bool(bool(! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))))))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))) : _GLF_FUZZED(injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))) : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))) : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))) : _GLF_FUZZED(injectionSwitch))))).x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))) : _GLF_FUZZED(injectionSwitch))))).x, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))) : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))) : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(-422.486, 4.8), vec2(8926.2037, -298.237), vec2(-4177.4962, _GLF_IDENTITY(-6259.3996, (_GLF_IDENTITY(-6259.3996, (-6259.3996) + 0.0)) - 0.0)))) : _GLF_FUZZED(injectionSwitch))))).x)) > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(47.80) : injectionSwitch.x))) / 1.0) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(47.80) : injectionSwitch.x))) / 1.0) > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(47.80) : injectionSwitch.x))) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(47.80) : injectionSwitch.x))) / 1.0), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(47.80) : injectionSwitch.x))) / 1.0), (false ? _GLF_FUZZED(-0.3) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(47.80) : injectionSwitch.x))) / 1.0)))))), float(_GLF_FUZZED(-1894.5339)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), true, _GLF_IDENTITY(true, ! (! (true))), true))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), false, true)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), subgroup_base)) + ((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id)), (0u | _GLF_IDENTITY(1u, max(1u, 1u)))))) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)))), true))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(float(injectionSwitch[1])))))) / vec2(1.0, 1.0)), injectionSwitch)).y)))), true), _GLF_IDENTITY(true, (true) || false))), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(float(injectionSwitch[1])))))) / vec2(1.0, 1.0)), injectionSwitch)).y)))), true), _GLF_IDENTITY(true, (true) || false))), false))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, mix(float(_GLF_FUZZED(2949.8941)), float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y), bool(true))), (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.2)), bool(false))), 1.0)), injectionSwitch)).y, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))) || false), true), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).y)))), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).y, (false ? _GLF_FUZZED(acosh(-3.9)) : false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(1.0, 1.0) * ((injectionSwitch) / vec2(1.0, 1.0)))), injectionSwitch)).y)))))), true), true))), true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, cos(0.0)), vec3(mat3x4(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, cos(0.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), (vec3(injectionSwitch.y, 0.0, cos(0.0))) - log(vec3(1.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-7.9) : cos(0.0))), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0)))))), (vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-7.9) : cos(0.0))), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))))))) / vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, cos(0.0)), clamp(vec3(injectionSwitch.y, 0.0, cos(0.0)), vec3(injectionSwitch.y, 0.0, cos(0.0)), vec3(injectionSwitch.y, 0.0, cos(0.0))))) - log(vec3(1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, cos(0.0)), (vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(8198.7125))), cos(0.0))) - log(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(539.924)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), (true ? 1.0 : _GLF_FUZZED(6787.5553)))), bool(true))))))), float(_GLF_IDENTITY(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.0)), float(0.0), bool(true))))), cos(0.0)), _GLF_IDENTITY((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))))), vec3(_GLF_IDENTITY(mat4x3((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0), _GLF_IDENTITY(mat3(1.0) * (mat4x3((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0))), 0.0, abs(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0)), transpose(transpose(mat3(1.0) * (mat4x3((vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0))), 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), sqrt(0.0), 0.0)))))))) - log(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), false, false)))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec3(! (_GLF_IDENTITY(false, (false) || false)), false, false)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(116550u)))], uint(1), 4, 64, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-76212) : 4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) || false)) && (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) && true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED((414.426 + vec4(-48.39, -24.42, -9.5, 77.98).p))), bvec2(false, false))).y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(vec2(-2.0, 353.183)) : injectionSwitch)).y))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   return;
  }
}
