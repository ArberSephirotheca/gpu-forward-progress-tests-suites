#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), max(float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), false, true)), true, false)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, true)), true))))), bool(bvec2(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec3(bool(bool(false)), false, true), bvec3(bvec3(bvec3(bool(bool(false)), false, true))))))))), false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false, true, false))), false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-79.28) : injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), true))))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), true))))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), true))))))), true, true)))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), true, false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), min(vec2(mat4(injectionSwitch, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat4(injectionSwitch, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), vec2(mat4(injectionSwitch, 0.0, 0.0, abs(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))))).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)), injectionSwitch.x)))))) > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), true, true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))) | uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)), gl_WorkGroupSize)), ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), max(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u)), ~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(((gl_WorkGroupSize)), max(((gl_WorkGroupSize)), ((gl_WorkGroupSize)))) << uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) << (0u | 0u))), (uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, uint(uvec4((0u) / 1u, 1u, 1u, 0u))))) / 1u), 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(183673u))))), max(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, uint(uvec4((0u) / 1u, 1u, 1u, 0u))))) / 1u), 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(183673u))))), min((uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, uint(uvec4((0u) / 1u, 1u, 1u, 0u))))) / 1u), 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(183673u))))), (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, uint(uvec4((0u) / 1u, 1u, 1u, 0u))))) / 1u), 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(183673u))))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, uint(uvec4((0u) / 1u, 1u, 1u, 0u))))) / 1u), 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(183673u))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, uint(uvec4((0u) / 1u, 1u, 1u, 0u))))) / 1u), 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(183673u))))), ~ (~ ((uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) / 1u, uint(uvec4((0u) / 1u, 1u, 1u, 0u))))) / 1u), 0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(183673u))))))))))))) ^ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), (true ? (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(117944u, 117767u, 24253u))))) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))))))), min(~ _GLF_IDENTITY((gl_WorkGroupSize), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)))))), ((~ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))))), (~ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(((gl_WorkGroupSize)), (_GLF_IDENTITY(((gl_WorkGroupSize)), clamp(((gl_WorkGroupSize)), ((gl_WorkGroupSize)), ((gl_WorkGroupSize))))) * (uvec3(1u, 1u, 1u) ^ uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)))))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY((~ (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)))))))), ((~ (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))))))))) / uvec3(1u, 1u, 1u)))), 1u), (uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(1u, 1u, 1u) * (((gl_WorkGroupSize)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)))))), uvec3(1u, 1u, 1u) * ((~ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u)))))))), 1u)) >> uvec4(0u, 0u, 0u, 0u))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(((gl_WorkGroupSize)), uvec3(0u, 0u, 0u) | (((gl_WorkGroupSize)))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize), uvec3(uvec4((gl_WorkGroupSize), 1u))), ((gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) | (~ _GLF_IDENTITY((gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) | (_GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((subgroup_local_id >> num_workgroup)) : 1u))))))))))))), max(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY(false ? _GLF_FUZZED((~ uvec3(_GLF_IDENTITY(68270u, max(_GLF_IDENTITY(68270u, clamp(68270u, 68270u, 68270u)), 68270u)), 88155u, 14106u))) : (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize))), (false ? _GLF_FUZZED((~ uvec3(_GLF_IDENTITY(_GLF_IDENTITY(68270u, (68270u) | (68270u)), max(68270u, 68270u)), _GLF_IDENTITY(88155u, _GLF_IDENTITY((88155u) | 0u, uint(uint((88155u) | 0u)))), 14106u))) : (_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), gl_WorkGroupSize)))) >> uvec3(0u, 0u, 0u)))), max(~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u))), ~ (gl_WorkGroupSize))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(727.376)), bvec2(true, false))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1])))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bool(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), clamp(~ (workgroup_base + subgroup_id * subgroup_size), ~ (workgroup_base + subgroup_id * subgroup_size), ~ (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))) * 1u) * subgroup_size))))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), min(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), _GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)), 0u | (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))) * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) << 0u), (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))) | 0u)))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true, false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (injectionSwitch.y) / 1.0)), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), false || (false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y) / 1.0)))))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec2(bool(bvec4(false, true, true, false)), false)))) || (false))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u), clamp(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)), virtual_gid, _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))) + 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), min(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) | 0u)) : _GLF_FUZZED(next_virtual_gid))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, min(1, 1))))) | 0)))) / 1)), clamp(uint(1), _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) + 0)))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(ivec4(45504, -91431, -76115, 11619).t), max(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(ivec4(45504, -91431, -76115, 11619).t), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(ivec4(45504, -91431, -76115, 11619).t)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) * (uint(1))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) - 0)))) << 0)), 1u * (uint(1)))) - (0u ^ 0u))) | 0u))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | 0)), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (1)), (_GLF_IDENTITY(1, 0 + (1))) | 0)))))) / 1)), clamp(uint(1), _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(ivec4(45504, -91431, -76115, 11619).t)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) * (uint(1))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) - 0)))), 1u * (uint(1)))) - (0u ^ 0u))) | 0u))), 1u))), 0u ^ (uint(1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (true ? uint(2) : _GLF_FUZZED(workgroup_base))), (true ? uint(2) : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), (_GLF_FUZZED(next_virtual_gid)) | (_GLF_FUZZED(next_virtual_gid))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u | (_GLF_FUZZED(subgroup_id))) : uint(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) << int(_GLF_ZERO(0.0, injectionSwitch.x))), 2))))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(4, 4)), 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) - 0)))) - 0), _GLF_IDENTITY(4, min(4, 4)), 4))) | 0), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false)))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false)))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false)))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)))))))))))) && true), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false)))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false)))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)))))))))))) && true), true, true))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false))))))))), false, true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)))))))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) && true)), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (true) && true)), false, false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false))))))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false)), false))))), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false || (false)), true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false)), false))))), false))))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (false)), true), false)))))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (false)), true), false, true)), true)))))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), true))))), true)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true))))), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false))))), true))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true))))), true)))))))), true))))))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true, false, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(-5.9), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)) || (false), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true, false, false))))) || false) || (false)), true))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(-5.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))).x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true), true, true)), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
