#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 vec2 _f0;
 mat2x4 _f1;
 mat2x4 _f2;
 mat2x4 _f3;
 vec4 _f4;
 mat4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_15 {
 vec4 _f0;
} ;

struct _GLF_struct_14 {
 int _f0;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 uvec2 _f1;
 ivec4 _f2;
 ivec3 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_16 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
} ;

struct _GLF_struct_11 {
 int _f0;
 mat2x4 _f1;
 mat4x2 _f2;
 ivec4 _f3;
 vec3 _f4;
 bvec4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_10 {
 uint _f0;
 bool _f1;
 bool _f2;
 uint _f3;
 mat2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
 bvec3 _f1;
 mat2x4 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 uvec2 _f1;
 _GLF_struct_10 _f2;
 ivec4 _f3;
 uvec4 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_12 _f6;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
 ivec4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_6 {
 uint _f0;
 vec4 _f1;
 bvec3 _f2;
 uvec4 _f3;
 float _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 bvec4 _f1;
 uvec3 _f2;
 int _f3;
 mat2 _f4;
 _GLF_struct_7 _f5;
} ;

struct _GLF_struct_18 {
 _GLF_struct_8 _f0;
 _GLF_struct_13 _f1;
 uint workgroup_size;
 _GLF_struct_17 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 bvec2 _f1;
 vec3 _f2;
 mat3x2 _f3;
 mat4x2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 bvec3 _f1;
 mat4 _f2;
 mat2x4 _f3;
 vec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_4 {
 ivec3 _f0;
 uvec4 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 vec2 _f1;
 ivec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 bvec4 _f1;
 _GLF_struct_0 _f2;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 _GLF_struct_1 _f1;
 uint virtual_gid;
 uvec3 _f2;
 _GLF_struct_4 _f3;
 mat2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(distance(-97.05, -4843.0723)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))) && true)))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, true), true, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, false)))), false, false)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, true), true, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, false)))), false, false))))))), ! (! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, true), true, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, false)))), false, false))))))), (! (bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true, true), true, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, false)))), false, false)))))))) && true)))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, false)))), false, false))))))), true && (_GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, false)))), false, false))))))), true && (true && (bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, false)))), false, false)))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec4(5.1, -645.624, 5600.6667, 0.1), vec4(-4632.4832, -3160.9439, 632.778, 916.496))) : 1.0)), _GLF_ONE(1.0, injectionSwitch.y)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(vec4(5.1, -645.624, 5600.6667, 0.1), vec4(-4632.4832, -3160.9439, 632.778, 916.496))) : 1.0)), _GLF_ONE(1.0, injectionSwitch.y)))).y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true, (_GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true)))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(_GLF_struct_8(_GLF_struct_6(1u, vec4(1.0), bvec3(true), uvec4(1u), 1.0), bvec4(true), uvec3(1u), 1, mat2(1.0), _GLF_struct_7(mat3x2(1.0), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) | (int(ivec2(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, clamp(0, 0, 0))), 0)))))), mat3(1.0))), _GLF_struct_13(_GLF_struct_9(mat2x3(1.0), bvec3(true), mat2x4(1.0), uvec4(1u)), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))))), max(uvec2(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))), uvec2(1u)))) - uvec2(0u, 0u)))), _GLF_struct_10(1u, true, true, 1u, mat2(1.0), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0)), min(mat2(1.0) * (vec2(1.0)), mat2(1.0) * (vec2(1.0)))))), ivec4(1), uvec4(_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_struct_11(1, mat2x4(1.0), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))), ivec4(1), vec3(1.0), bvec4(true), mat3(1.0)), _GLF_struct_12(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), gl_WorkGroupSize.x, _GLF_struct_17(_GLF_struct_14(1), uvec2(1u), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), _GLF_IDENTITY(min(_GLF_IDENTITY(1, 1 * (1)), 1), (0 | 0) ^ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, 1 * (1)), 1), clamp(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, 1 * (1)), 1), clamp(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), max(1 * (1), 1 * (1)))), 1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, 1 * (1)), 1), clamp(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), ((1)) | 0)), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(1, 1 * (1)), 1), clamp(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, _GLF_IDENTITY(1 * (1), (_GLF_IDENTITY(1 * (1), (false ? _GLF_FUZZED(-49144) : 1 * (1)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1))), (_GLF_IDENTITY(min(_GLF_IDENTITY(1, 1 * (1)), 1), clamp(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1)))) / 1)) | (_GLF_IDENTITY(min(_GLF_IDENTITY(1, 1 * (1)), 1), _GLF_IDENTITY(clamp(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1)), ~ (~ (clamp(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1)))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, 1 * (1)), 1), clamp(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, _GLF_IDENTITY(1, (1) + 0) * (1)), 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, 1 * (1)), 1), clamp(min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1))))), (_GLF_IDENTITY(min(_GLF_IDENTITY(1, 1 * (1)), 1), clamp(min(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), ((1)) | ((1)))), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1), min(_GLF_IDENTITY(1, 1 * (1)), 1)))) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))))), ivec3(1), _GLF_struct_15(vec4(1.0)), _GLF_struct_16(vec2(1.0), mat2x4(1.0), mat2x4(1.0), mat2x4(1.0), vec4(1.0), mat4(1.0), uvec4(1u)), mat3x2(1.0)), _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))), ((_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(~ (gl_WorkGroupID), ~ (~ (~ (gl_WorkGroupID)))))))))) << uvec3(0u, 0u, 0u)) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-7.8) : injectionSwitch.y), float(mat3x2((false ? _GLF_FUZZED(-7.8) : injectionSwitch.y), length(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-15.11)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6351.1383) : injectionSwitch.y))) - 0.0)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) && true)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))) || false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)) : _GLF_FUZZED(1.6)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- -4544.2203))), float(1.0), bool(true)))), min(vec4(injectionSwitch, 1.0, 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 1.0, 1.0), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), 1.0, 1.0))))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_18.workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false))), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true), true), false, false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) || false) && true)))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) && true)), true, true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true, true))) && true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(injectionSwitch, -5.8)) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), (! ((false) || false)) || false)))) || false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)), _GLF_IDENTITY(false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), ! (! (false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) | ivec3(0, 0, 0))) | (_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(min(ivec3(1), ivec3(_GLF_IDENTITY(1, 0 | (1)))), (true ? min(ivec3(1), ivec3(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (int(int(1))) / 1))))))))) : _GLF_FUZZED(ivec3(19398, 18859, -83489))))))), _GLF_struct_1(mat4(1.0), bvec4(true), _GLF_struct_0(bvec4(true), vec2(1.0), ivec4(1), 1u)), _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), _GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(uint(uint(~ (subgroup_local_id))), (uint(uint(~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u)))) >> 0u)), ~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))))))) * 1u, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), _GLF_IDENTITY(~ (subgroup_local_id), _GLF_IDENTITY(uint(uint(~ (subgroup_local_id))), (uint(uint(~ (subgroup_local_id)))) >> 0u)), ~ (subgroup_local_id)))))) * 1u)))), uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), max(uvec2(subgroup_local_id, 1u), uvec2(subgroup_local_id, 1u)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)))))) + subgroup_base + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) + 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) + 0u))), (_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) + 0u)))) * 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (true ? _GLF_IDENTITY(6u, clamp(6u, 6u, 6u)) : _GLF_FUZZED(subgroup_base)))), uint(_GLF_IDENTITY(6u, (6u) + 0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_id))))), uint(uvec4((~ (_GLF_IDENTITY(6u, (true ? 6u : _GLF_FUZZED(workgroup_id))))), 0u, 0u, 1u))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u ^ (6u))), _GLF_IDENTITY(min(uint(6u), uint(6u)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-856.171) : 1.0), min((false ? _GLF_FUZZED(-856.171) : 1.0), (false ? _GLF_FUZZED(-856.171) : 1.0))))) / _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(float(165573u))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(_GLF_FUZZED(float(165573u))), float(mat2x4(float(_GLF_FUZZED(float(165573u))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0), 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(1467.7249, -9.0, 77.24, -484.627, 2393.1042, 6.7)) : mat3x2(_GLF_IDENTITY(float(_GLF_FUZZED(float(165573u))), float(mat2x4(float(_GLF_FUZZED(float(165573u))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0), 0.0, 1.0, 0.0)))), min(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(_GLF_FUZZED(float(165573u))), float(mat2x4(float(_GLF_FUZZED(float(165573u))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0), 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(1467.7249, -9.0, 77.24, -484.627, 2393.1042, 6.7)) : mat3x2(_GLF_IDENTITY(float(_GLF_FUZZED(float(165573u))), float(mat2x4(float(_GLF_FUZZED(float(165573u))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0), 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(_GLF_FUZZED(float(165573u))), float(mat2x4(float(_GLF_FUZZED(float(165573u))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0), 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(1467.7249, -9.0, 77.24, -484.627, 2393.1042, 6.7)) : mat3x2(_GLF_IDENTITY(float(_GLF_FUZZED(float(165573u))), float(mat2x4(float(_GLF_FUZZED(float(165573u))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 1.0, length(0.0), 0.0, 1.0, 0.0))))))), float(1.0), bool(true)))), injectionSwitch.y)) * (_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), uint(6u))) << 0u)))), uint(6u))), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u))), max(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(min(uint(6u), uint(6u)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), uint(6u))) << 0u)))), uint(6u))), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, _GLF_IDENTITY((false ? _GLF_FUZZED(uaddCarry(subgroup_id, num_workgroup, subgroup_base)) : _GLF_IDENTITY(6u, 1u * (6u))), ((false ? _GLF_FUZZED(uaddCarry(subgroup_id, num_workgroup, subgroup_base)) : _GLF_IDENTITY(6u, 1u * (6u)))) / (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)))))) - 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, _GLF_IDENTITY((false ? _GLF_FUZZED(uaddCarry(subgroup_id, num_workgroup, subgroup_base)) : _GLF_IDENTITY(6u, 1u * (6u))), ((false ? _GLF_FUZZED(uaddCarry(subgroup_id, num_workgroup, subgroup_base)) : _GLF_IDENTITY(6u, 1u * (6u)))) / (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1u)))))) - 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(6u)), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(min(uint(6u), uint(6u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) * (_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), uint(6u))) << 0u)))), uint(6u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(min(uint(6u), uint(6u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) * (_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), uint(6u))) << 0u)))), uint(6u))), (_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(min(uint(6u), uint(6u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) * (_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), uint(6u))) << 0u)))), uint(6u)))) * 1u)) | (_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(min(uint(6u), uint(6u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) * (_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), uint(6u))) << 0u)))), uint(6u))))), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) * 1u) : (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(6u, _GLF_IDENTITY(6u, uint(_GLF_IDENTITY(uint(6u), (uint(6u)) - 0u))), _GLF_IDENTITY(6u, (6u) ^ 0u)))), (uint(6u)) >> 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(min(uint(6u), uint(6u)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_IDENTITY((_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), uint(6u))) << 0u)), ((_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), _GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u)) | 0u))) << _GLF_IDENTITY(0u, min(0u, 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(min(uint(6u), uint(_GLF_IDENTITY(6u, (6u) * 1u))), (min(uint(6u), uint(6u))) << 0u)), ~ (~ ((_GLF_IDENTITY(min(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ 0u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), uint(6u))) >> 0u), (_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), uint(6u))) >> 0u)) - 0u)) << 0u))))))))), uint(6u))), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)))))) | ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : 6u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : 6u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : 6u)))), (~ (uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : 6u))))) ^ 0u))), 0u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : 6u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : 6u)))), (~ (uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : 6u))))) ^ 0u))), 0u, 1u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : 6u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : 6u)))), (~ (uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_size) : 6u))))) ^ 0u))), 0u, 1u)))))) ^ 0u)), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u))), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))), _GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))))), clamp(_GLF_IDENTITY(min(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (6u))))), (min(uint(6u), uint(6u))) ^ 0u), min(uint(6u), uint(6u)), min(uint(_GLF_IDENTITY(6u, (6u) | (6u))), uint(6u)))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) * (_GLF_IDENTITY(min(uint(6u), uint(6u)), _GLF_IDENTITY((min(uint(6u), uint(6u))) << 0u, ((min(uint(6u), uint(6u))) << 0u) + 0u))))), uint(6u))), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) | 0u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) + 0u)), _GLF_IDENTITY(min(uint(6u), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u) * (_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), _GLF_IDENTITY(uint(6u), 0u | (uint(6u))))) << 0u)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u) * (_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), _GLF_IDENTITY(uint(6u), 0u | (uint(6u))))) << 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED((subgroup_size)))))), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), uint(uvec4(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u, 1u))))))) + 0u))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) << uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, (0u) | 0u))), (0u) ^ 0u), 0u))), (false ? _GLF_FUZZED(subgroup_base) : uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)))), 0u, 0u)))) >> uvec2(0u, 0u), uvec2(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)))), 0u, 0u)))) >> uvec2(0u, 0u), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)))), 0u, 0u)))) >> uvec2(0u, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)))), 0u, 0u)))) >> uvec2(0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)))), 0u, 0u)))) >> uvec2(0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), uvec2(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) | (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), (uvec2(1u, 0u)) << uvec2(0u, 0u)))), 0u, 0u)))) >> uvec2(0u, 0u)) >> uvec2(0u, 0u)))), 1u)))))))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(min(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(min(uint(6u), uint(6u)), _GLF_IDENTITY((min(uint(6u), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, min(6u, 6u))) | (6u))) / 1u)))) << 0u, ((min(uint(6u), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, min(6u, 6u))) | (6u))) / 1u)))) << 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(6u)), max(max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(min(uint(6u), uint(6u)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5211.0055)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true))))))) * (_GLF_IDENTITY(min(uint(6u), uint(6u)), (min(uint(6u), uint(6u))) << 0u)))), uint(6u)), max(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(6u, uint(uvec3(6u, 0u, (0u ^ 0u))))), _GLF_IDENTITY(uint(6u), uint(uvec3(uint(6u), 1u, 0u)))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), uint(_GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(uint(6u), min(uint(6u), _GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(uint(6u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(6u)), (~ (uint(6u))) | (~ (uint(6u)))), max(_GLF_IDENTITY(~ (uint(6u)), (~ (uint(6u))) + 0u), ~ (uint(6u)))))))))), uint(6u)), min(_GLF_IDENTITY(min(uint(6u), uint(6u)), (_GLF_IDENTITY(min(uint(6u), uint(6u)), 0u + (min(uint(6u), uint(6u))))) | (min(uint(6u), uint(6u)))), min(uint(6u), uint(6u)))), (min(uint(6u), uint(6u))) << 0u)))), uint(6u))))), uint(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) - 0u)))))), 0u, 0u))) + subgroup_local_id))) << _GLF_IDENTITY(0u, (0u) | (0u))), uvec3(1u), _GLF_struct_4(ivec3(1), uvec4(1u), _GLF_struct_2(bvec3(true), bvec3(true), mat4(1.0), mat2x4(1.0), vec2(1.0), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (true ? _GLF_IDENTITY(1, ~ (~ (1))) : _GLF_FUZZED(-27376)))) | (1)))), _GLF_struct_3(mat2x4(1.0), bvec2(true), vec3(1.0), mat3x2(1.0), mat4x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(8.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(8.0, clamp(8.0, 8.0, _GLF_IDENTITY(8.0, clamp(8.0, 8.0, 8.0)))), 1.0, 0.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(8.0, clamp(8.0, 8.0, _GLF_IDENTITY(8.0, clamp(8.0, _GLF_IDENTITY(8.0, float(mat2x4(8.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 8.0)))), 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(8.0, clamp(8.0, 8.0, _GLF_IDENTITY(8.0, clamp(8.0, 8.0, 8.0)))), (true ? _GLF_IDENTITY(8.0, clamp(8.0, 8.0, _GLF_IDENTITY(8.0, clamp(8.0, 8.0, 8.0)))) : _GLF_FUZZED(-0.1))), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-45.62)), float(1.0), bool(true)))), float(_GLF_FUZZED(8685.5758)), bool(false))), 1.0, 1.0))))) - mat3x2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(34.82) : 0.0)), 0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(-288.715)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(8.0, clamp(8.0, 8.0, _GLF_IDENTITY(8.0, clamp(8.0, 8.0, 8.0)))), 1.0, 0.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(8.0, clamp(8.0, 8.0, _GLF_IDENTITY(8.0, clamp(8.0, 8.0, 8.0)))), 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(8.0, clamp(8.0, 8.0, _GLF_IDENTITY(8.0, clamp(_GLF_IDENTITY(8.0, min(8.0, 8.0)), 8.0, 8.0)))), 1.0, 0.0, 1.0, 1.0, 1.0))))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0 * (float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(8.0, clamp(8.0, 8.0, _GLF_IDENTITY(8.0, clamp(8.0, 8.0, 8.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0), (_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(8.0, clamp(8.0, 8.0, _GLF_IDENTITY(8.0, clamp(8.0, 8.0, 8.0)))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0))) / sqrt(1.0)), 1.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(8.0, clamp(8.0, 8.0, _GLF_IDENTITY(8.0, clamp(8.0, 8.0, 8.0)))), 1.0, 0.0, 1.0, 1.0, 1.0))))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), bool(true)))))), float(1.0), bool(true)))), vec3(1.0))), mat2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && true)))) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.1), (injectionSwitch)[1]), bvec2(false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.1), (injectionSwitch)[1]), bvec2(false, true))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ 0)], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-0.1), (injectionSwitch)[1]), bvec2(false, true)))))))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((vec2(916.409, -13.75).t - 5.5))), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 0u | (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))) | (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 0u ^ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))))), workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), (workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec4(subgroup_base, _GLF_IDENTITY((148033u & _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), min(0u, 0u))), 0u | (_GLF_IDENTITY((148033u & 0u), ((148033u & 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(1u, (1u) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))), 1u, 0u), (uvec4(subgroup_base, (148033u & 0u), 1u, 0u)) << uvec4(0u, 0u, 0u, 0u)))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))) + 1), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) - 0u)))), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 1u * (1u))) - 0u)))), 0u, 0u, 1u))) + 1)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), (uint(uvec2(subgroup_local_id, 1u))) << 0u)) + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), uint(uint(~ (subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))))))) + 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((436.725)) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, (false) && true))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 1.0))), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0))) * 1.0), max(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0))) * 1.0), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0))) * 1.0)))) - 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0)), (_GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0)), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0))) * 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0)), (vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(vec4(tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(float(0.0)))) * 1.0)), 0.0, sqrt(0.0), 1.0), max(vec4(tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(float(0.0)))) * 1.0)), 0.0, sqrt(0.0), 1.0), vec4(tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(mat3(float(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0, 0.0, 1.0, 1.0), (true ? mat3(float(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3(2518.7020, -8.4, -0.7, 8.3, 5.3, 9.8, -6952.4172, -9156.9928, 6.2))))))))) * 1.0)), 0.0, sqrt(0.0), 1.0)))), (dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(tan(0.0), 0.0, sqrt(0.0), 1.0))) * 1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(refract(1.6, 91.30, -3.7)))), 1.0, 0.0, 1.0, 1.0))) * mat2(1.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4x3(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), 1.0, sqrt(1.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 1.0))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false), true, false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((mat4x3(vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)) * mat4(1.0), mat3(1.0) * ((mat4x3(vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)) * mat4(1.0))))), (false ? _GLF_FUZZED(vec2(-9.1, 95.94)) : vec2(_GLF_IDENTITY(mat4x3(vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY((mat4x3(vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), 1.0, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)) * mat4(1.0), mat3(1.0) * ((mat4x3(vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(-5.2)), bool(false))), 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 0.0)) * mat4(1.0))))))))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4787.6004, -5907.9641)))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, (false ? _GLF_FUZZED(-63.07) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, 1.0, 1.0, 1.0, 1.0, 0.0)))))) / 1.0)), float(_GLF_FUZZED(9.7)), bool(false))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(abs(vec2(0.0, 0.0)))).y), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec4(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false || (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(vec2(773.496, -1.8), vec2(-316.741, -7.3), injectionSwitch)))).x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))), false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))))), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0), mix(vec3(_GLF_FUZZED(-845.328), (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0))[1], (vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0))[2]), vec3((vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0))[0], _GLF_FUZZED(-291.023), _GLF_FUZZED(6.6)), bvec3(true, false, false))))), injectionSwitch)).x > injectionSwitch.y)), false), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(_GLF_FUZZED(-978.787)), bool(false)))))) * 1.0) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))))))), true)))))))) && true), true)), false || (bool(bvec2(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))), false)), true)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(1.0))) * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, bool(bvec2(true, false))), true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)))).x), bool(true)), (mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))).x), bool(true))) * 1.0)) / 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0)).x, abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) * vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.6))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) * vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.6))))))), mix(vec2(_GLF_FUZZED(-9.2), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) * vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.6))))))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) * vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.6))))))))[0], _GLF_FUZZED(-1537.2466)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) * vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.6))))))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) * vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(5.6))))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) * vec2(1.0, 1.0)).x, 1.0, 1.0, cos(0.0), 1.0, cos(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(0.0, 0.0) + (vec2(0.0, 1.0))), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) * vec2(1.0, 1.0)).x, 1.0, 1.0, cos(0.0), 1.0, cos(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat4(8798.6606, -6.1, 607.905, 17.93, -9.8, 9.0, -0.3, -4.4, 4579.3830, 6433.3147, 6786.1112, -7567.1039, 554.435, 4.5, -6.0, -876.214))))), (false ? _GLF_FUZZED(-5.1) : float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) * vec2(1.0, 1.0)).x, 1.0, 1.0, cos(0.0), 1.0, cos(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)))) * vec2(1.0, 1.0)).x, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.8)), float(1.0), bool(true)))), float(_GLF_FUZZED(-1.2)), bool(false))), cos(0.0), 0.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0)) / 1.0), _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0))))), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-163.264))), 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat4(8798.6606, -6.1, 607.905, 17.93, -9.8, 9.0, -0.3, -4.4, 4579.3830, 6433.3147, 6786.1112, -7567.1039, 554.435, 4.5, -6.0, -876.214))))))))))), bool(true))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) * vec2(1.0, 1.0), vec2(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, (0.0) * _GLF_ONE(1.0, injectionSwitch.y)), 0.0))) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) : _GLF_FUZZED(vec2(851.864, -45.57)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), vec2(mat2x3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))), 1.0, 1.0, tan(0.0), 0.0))))) * vec2(1.0, 1.0))), 0.0, 1.0)))).x), bool(true))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(97.27, 621.115)) : injectionSwitch)).x, mix(float(_GLF_FUZZED(-3.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(97.27, 621.115)) : injectionSwitch)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(97.27, 621.115)) : injectionSwitch)).x))), bool(true))), mix(float(_GLF_FUZZED(8.8)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * vec2(1.0, 1.0), vec2(vec4((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) + vec2(0.0, 0.0))) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))), 0.0, 1.0)))).x), bool(true))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0))) : _GLF_FUZZED(2.6))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(float(false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_5.virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bool(bool(bvec3(true, true, true)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2627.5206)), bool(false))))) > injectionSwitch.y)))))), (_GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), mix(vec4((vec4(injectionSwitch, 1.0, 1.0))[0], _GLF_FUZZED(9.7), (vec4(injectionSwitch, 1.0, 1.0))[2], _GLF_FUZZED(218.609)), vec4(_GLF_FUZZED(5500.1505), (vec4(injectionSwitch, 1.0, 1.0))[1], _GLF_FUZZED((-1540.5366 * 2434.9625)), (vec4(injectionSwitch, 1.0, 1.0))[3]), bvec4(false, true, false, true)))), (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), mix(vec4((vec4(injectionSwitch, 1.0, 1.0))[0], _GLF_FUZZED(9.7), (vec4(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), sin(0.0), 1.0, 0.0, exp(0.0), 1.0), (true ? mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), sin(0.0), 1.0, 0.0, exp(0.0), 1.0) : _GLF_FUZZED(mat2x3(-538.285, 4.9, -2.1, -7.4, -415.010, -8.2)))))), 1.0))[2], _GLF_FUZZED(218.609)), vec4(_GLF_FUZZED(5500.1505), (vec4(injectionSwitch, 1.0, 1.0))[1], _GLF_FUZZED((-1540.5366 * 2434.9625)), (vec4(injectionSwitch, 1.0, 1.0))[3]), bvec4(false, true, false, true))))) / _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED((+ vec4(9.1, 8.3, -379.223, 443.954).a)), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-6842.3623)), bvec2(true, false))))).y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false)))), false))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-39.36))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
