#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-9108.0372))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), false || (! (injectionSwitch.x < injectionSwitch.y))))))), true))) && true)))
      return;
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), int(7))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), int(7))), 0 + ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), int(7)))))) << 0) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / 1.0))), (_GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) + 0.0))), mat2(1.0) * (vec2(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) + 0.0)))))) - sqrt(vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-20.03 + 4414.0451)), _GLF_FUZZED((-8.4 + 21.18))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.9))) > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), clamp(true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y : _GLF_FUZZED(-3.6), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), max(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), clamp(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), true ? injectionSwitch.y : _GLF_FUZZED(-3.6), true ? injectionSwitch.y : _GLF_FUZZED(-3.6))))), true ? injectionSwitch.y : _GLF_FUZZED(-3.6))))), injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.6))), injectionSwitch.y)), _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(976.439))), 1.0, 0.0, 0.0, 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.6))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))), mix(float((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.6))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))), float(_GLF_FUZZED(2.5)), bool(false))), float(vec4(_GLF_IDENTITY(determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.6))), injectionSwitch.y))), 0.0 + (determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.6))), injectionSwitch.y))), mix(float((_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.6))), injectionSwitch.y)))), float(_GLF_FUZZED(3.1)), bool(false))))), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), bvec2(false, false))).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(26.43)), float(true ? injectionSwitch.y : _GLF_FUZZED(-3.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true && (true))))))), injectionSwitch.y), float(mat4x2(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), bvec2(false, false))).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(26.43)), float(true ? injectionSwitch.y : _GLF_FUZZED(-3.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true && (true))))))), injectionSwitch.y), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0)))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), bvec2(false, false))).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(26.43)), float(true ? injectionSwitch.y : _GLF_FUZZED(-3.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true && (true))))))), injectionSwitch.y), float(mat4x2(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), bvec2(false, false))).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(26.43)), float(true ? injectionSwitch.y : _GLF_FUZZED(-3.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true && (true))))))), injectionSwitch.y), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(float(175876u))), bool(false))), injectionSwitch[1])), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (true ? vec2((injectionSwitch)[0], (injectionSwitch)[1]) : _GLF_FUZZED(vec2(1.6, -377.738)))), vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), bvec2(false, false))).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(26.43)), float(true ? injectionSwitch.y : _GLF_FUZZED(-3.6)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true && (true))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true && (true))))))))), injectionSwitch.y), float(mat4x2(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) + 0.0), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), bvec2(false, false))).y, (_GLF_IDENTITY(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(26.43)), float(true ? injectionSwitch.y : _GLF_FUZZED(-3.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true && (true))))), float(mat4x3(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(26.43)), float(true ? injectionSwitch.y : _GLF_FUZZED(-3.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true && (true))))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))), injectionSwitch.y), 1.0, abs(1.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-1.8 / 7.9))), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 1.0, 1.0, 1.0))))) && true))))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), min(vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)))), bvec2(false, false))).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(26.43)), float(true ? injectionSwitch.y : _GLF_FUZZED(-3.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))), true && (true))))))), injectionSwitch.y), float(mat4x2(clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), bvec2(false, false))).y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), mix(float(_GLF_IDENTITY(_GLF_FUZZED(26.43), mix(float(_GLF_IDENTITY(_GLF_FUZZED(26.43), float(mat2x3(_GLF_FUZZED(26.43), 1.0, 0.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(-3018.1939)), bool(false)))), float(true ? injectionSwitch.y : _GLF_FUZZED(-3.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), true && (true && (true))))))))))), injectionSwitch.y), 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0)))))))))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), _GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), true)))))).y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7518.5434)), vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), bvec2(false, true)))), mix(vec2(_GLF_FUZZED(-3.8), _GLF_FUZZED(-7581.8553)), vec2(((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7518.5434)), vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), bvec2(false, true)))))[0], ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7518.5434)), vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), bvec2(false, true)))))[1]), bvec2(true, true))) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).y : _GLF_FUZZED(_GLF_IDENTITY(-3.6, max(_GLF_IDENTITY(-3.6, mix(float(-3.6), float(_GLF_FUZZED(-2.0)), bool(false))), -3.6))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(26.43, min(26.43, _GLF_IDENTITY(26.43, (26.43) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))), float(true ? injectionSwitch.y : _GLF_FUZZED(-3.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true && (true))))))), injectionSwitch.y)))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY((vec2((injectionSwitch)[0], (injectionSwitch)[1])) * mat2(1.0), (_GLF_IDENTITY((vec2((injectionSwitch)[0], (injectionSwitch)[1])) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1])) * mat2(1.0)))) + vec2(0.0, 0.0))), vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), bvec2(false, false))).y, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY((vec2((injectionSwitch)[0], (injectionSwitch)[1])) * mat2(1.0), (_GLF_IDENTITY((vec2((injectionSwitch)[0], (injectionSwitch)[1])) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), (injectionSwitch)[1])) * mat2(1.0)))) + vec2(0.0, 0.0))), vec2(_GLF_FUZZED(-1870.8142), _GLF_FUZZED(-39.19)), bvec2(false, false))).y) - 0.0), (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-3.6), mix(float(_GLF_FUZZED(26.43)), float(true ? injectionSwitch.y : _GLF_FUZZED(-3.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true))))))), true && (true))))))), injectionSwitch.y))))))) && true)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true, false)))))))), false || (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))) && true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | _GLF_IDENTITY((_GLF_IDENTITY(int(2), max(int(2), int(2)))), min((_GLF_IDENTITY(int(2), max(int(2), int(2)))), (_GLF_IDENTITY(int(2), max(int(2), int(2))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(80059u, 23143u, 185674u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x))))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)))))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x))))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)).x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)))))))), gl_WorkGroupSize.x)), max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(gl_WorkGroupSize[0], (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (gl_WorkGroupSize[0])), gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))).x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) + 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), ~ (~ (uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))))))) + 0u)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(gl_WorkGroupSize, 0u))))))) >> uvec3(0u, 0u, 0u)).x)) : _GLF_IDENTITY(_GLF_FUZZED(82413u), (true ? _GLF_IDENTITY(_GLF_FUZZED(82413u), clamp(_GLF_FUZZED(82413u), _GLF_FUZZED(82413u), _GLF_FUZZED(82413u))) : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), 0u ^ ((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - 0u), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x)))))) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))))), gl_WorkGroupSize.x)))), gl_WorkGroupSize.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) >> 0u) | (gl_WorkGroupSize.x))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u), (_GLF_IDENTITY(true ? _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), (false ? _GLF_FUZZED(subgroup_id) : (gl_WorkGroupSize.x))) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u), clamp(true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u), true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u), true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u)))) >> (0u | 0u)))), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), 0u + (_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), clamp((gl_WorkGroupSize.x), (gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))))) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x)), max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), min(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))))).x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) : _GLF_FUZZED(subgroup_id)))))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x), _GLF_IDENTITY(uint(uint((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))), (uint(uint((gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))) / 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_FUZZED(subgroup_local_id) : gl_WorkGroupSize.x)))), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))), max(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))), clamp(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))), _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x))))))) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x)))), gl_WorkGroupSize.x), (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x)), max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))))) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))))))), gl_WorkGroupSize.x)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (gl_WorkGroupSize)).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x)), max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, min(_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), gl_WorkGroupSize.x)))))) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((gl_WorkGroupSize.x)))))))), gl_WorkGroupSize.x)))), 0u))), gl_WorkGroupSize.x)) / 1u)) | (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), uint(uvec4(_GLF_IDENTITY((gl_WorkGroupSize.x), ~ (~ ((gl_WorkGroupSize.x)))), 1u, 1u, 0u))) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u)))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))) << (0u ^ 0u)), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x)))))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x))), max(max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x)))))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x)))))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x))), clamp(max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x)))))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x))), max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x)))))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x)))))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x))), (max(_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), 0u ^ ((gl_WorkGroupSize.x)))))))), gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))) | (gl_WorkGroupSize.x))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)), (true ? _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)) : _GLF_FUZZED(82413u))), _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x)))))), gl_WorkGroupSize.x)))) - 0u)))))), gl_WorkGroupSize.x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) ^ 0u)) + (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size), (max(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size)) | 0u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, false)))))
    {
    }
   else
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(4), int(4))), ((0 << _GLF_IDENTITY(int(4), int(4)))) | ((0 << _GLF_IDENTITY(int(4), int(4))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), bvec2(bvec4(bvec2(_injected_loop_counter < 1, false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < 1, false), bvec2(bvec4(bvec2(_injected_loop_counter < 1, false), false, true))))))))); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 1.0))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), _GLF_IDENTITY(float(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0))), (float(float(_GLF_IDENTITY((0.0), ((0.0)) / 1.0)))) / 1.0)) - 0.0)) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 1.0, sin(0.0), 0.0, 1.0)))), mix(vec2(_GLF_FUZZED(-3856.8408), _GLF_FUZZED(-9.9)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], max(((injectionSwitch))[0], ((injectionSwitch))[0])), ((injectionSwitch))[1]), bvec2(true, true)))))), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, cos(0.0), 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0)))))), max(injectionSwitch[1], injectionSwitch[1]))), min(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, cos(0.0), 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0)))))), max(injectionSwitch[1], injectionSwitch[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, cos(0.0), 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0)))))), max(injectionSwitch[1], injectionSwitch[1]))), _GLF_IDENTITY(vec2(mat2(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, cos(0.0), 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0)))))), max(injectionSwitch[1], injectionSwitch[1]))), 0.0, 1.0)), (true ? vec2(mat2(vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, cos(0.0), 1.0, 1.0), transpose(transpose(mat4x3(injectionSwitch[1], 0.0, 1.0, 0.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, cos(0.0), 1.0, 1.0)))))), max(injectionSwitch[1], injectionSwitch[1]))), 0.0, 1.0)) : _GLF_FUZZED(vec2(7.7, 2.5)))))))).y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (uint(4u)), ~ (~ _GLF_IDENTITY((~ (uint(4u))), _GLF_IDENTITY(uint(uint((~ (uint(4u))))), uint(uvec3(uint(uint((~ (uint(4u))))), 1u, 0u)))))))), uint(4u))) + (subgroup_id), 0u | ((_GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (0u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(4u)), ~ (~ (~ (uint(4u)))))), 0u | (~ (_GLF_IDENTITY(~ (uint(4u)), ~ (~ (~ (uint(4u))))))))), uint(4u))) + (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     for(int _injected_loop_counter = (0 & 51128); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false, false))), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat3(1.0) * (mat4x3(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))).x > injectionSwitch.y), true)), true, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat3(1.0) * (mat4x3(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)) + sqrt(vec4(0.0, 0.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat4x3(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0), vec4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))), max(vec4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0))), vec4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0), (vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)) / vec4(1.0, 1.0, 1.0, 1.0)))))))), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), mat3(1.0) * (mat4x3(vec2(vec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0)), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0), 0.0, 0.0, 0.0)), min(float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0), 0.0, 0.0, 0.0)), float(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0), tan(0.0), 0.0, 0.0, 0.0))))), injectionSwitch.y), 0.0, 0.0))))))) * vec2(1.0, 1.0)).x > injectionSwitch.y), true)), true, true))))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, sin(0.0), cos(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, tan(0.0), 1.0, 1.0)))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, sin(0.0), cos(0.0), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, tan(0.0), 1.0, 1.0)))))), true, true, true))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, abs(1.0))), max(vec2(vec4(injectionSwitch, 1.0, abs(1.0))), vec2(vec4(injectionSwitch, 1.0, abs(1.0)))))).y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))), true)))), false, false))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) - 0.0) > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y), true)), true, true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), true)))), true, true)))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true)))), false)), false)))), _GLF_IDENTITY(true, ! (! (true))), true)))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.4, 4.1)) : injectionSwitch)).y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.7)), mix(float(_GLF_FUZZED(-5.0)), float(float(_GLF_FUZZED(0.7))), bool(true))), float(injectionSwitch.x), bool(true))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(514.982))), 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, 1.0, 1.0))), vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0)), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))), 1.0, 1.0, 0.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), length(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), float(_GLF_FUZZED(-5.7)), bool(false)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7251.1026)))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.7)), mix(float(_GLF_FUZZED(-5.0)), float(float(_GLF_FUZZED(0.7))), bool(true))), float(injectionSwitch.x), bool(true))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(514.982))), 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, 1.0, 1.0))), vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0)), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))), 1.0, 1.0, 0.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), length(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), float(_GLF_FUZZED(-5.7)), bool(false)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7251.1026)))))), true && ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(0.7)), mix(float(_GLF_FUZZED(-5.0)), float(float(_GLF_FUZZED(0.7))), bool(true))), float(injectionSwitch.x), bool(true))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(514.982))), 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(1.0, 1.0, 1.0, 1.0))), vec4(1.0, 1.0, 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0)), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))), 1.0, 1.0, 0.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), length(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), float(_GLF_FUZZED(-5.7)), bool(false)))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(injectionSwitch.x), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.7)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))))), 1.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, length(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) < _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7251.1026)))))))), false, true)))), false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))))))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))))))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true)), true, true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 0.0, sqrt(0.0), 0.0, 0.0, sin(0.0), 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0), (mat3x2(injectionSwitch, determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 0.0, sqrt(0.0), 0.0, 0.0, sin(0.0), 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 0.0, sqrt(0.0), 0.0, 0.0, sin(0.0), 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0), (mat3x2(injectionSwitch, determinant(mat4(length(vec3(0.0, 0.0, 0.0)), 0.0, sqrt(0.0), 0.0, 0.0, sin(0.0), 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y)))), true)), true, true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))), true)), true, false))), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))), _GLF_IDENTITY(true, ! (! (true))), true))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true)), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))), true, true))), true, true)), true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true)))), true)), bvec2(bvec4(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))) * determinant(mat4(determinant(mat2(1.0, 1.0, 0.0, 1.0)), log(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), (false ? _GLF_FUZZED(42.47) : float(1.0))))), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.9)))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0), tan(0.0), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false)))), true)), true, true))), true)))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), true)), true, true)))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true)), true, true)))), false)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))))), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true)), true, true)))), false)), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true))))))))))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), max(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_id))), subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))) && true)) || false)) && true))
      return;
    }
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(1))), (uint(1)) | 0u), 1u)), min(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), 1u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), 1u)))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(0), int(0)), ~ (_GLF_IDENTITY(~ (0 << _GLF_IDENTITY(int(0), int(0))), ~ (~ (~ (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, bool(bool(_injected_loop_counter < 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)), true && (bool(bvec4(false, true, true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, true, true, true)))))) || false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), true && (bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), false || (bool(bvec3(true, true, true))))), true && (true))) || false), true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), false || (bool(bvec3(true, true, true))))), true && (true))) || false))), true, true))))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false), true && (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, ! (! ((_GLF_IDENTITY(true, true && (true))) || false)))))), true, true))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(true && (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true, true))), bool(bool(true && (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true, true))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(true && (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true, true))), bool(bool(true && (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true, true))))))))), false, false)), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(true && (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true, true))), bool(bool(true && (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true, true))))))))), false, false)), (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(true && (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true, true))), bool(bool(true && (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true, true))))))))), false, false))) && true)) && true))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bool(true))), true, true)), (bool(bvec4(false, true, true, true))) || false), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, ((_GLF_IDENTITY(true, true && (true))) || false) || false)), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, ((_GLF_IDENTITY(true, true && (true))) || false) || false)))))))))))), true, true)), bool(bvec3(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, true && (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)))))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, ((_GLF_IDENTITY(true, true && (true))) || false) || false)), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))) || false, ((_GLF_IDENTITY(true, true && (true))) || false) || false)))))))))))), true, true)), true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), _GLF_IDENTITY(bool(bvec4(false, true, true, true)), _GLF_IDENTITY(true && (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true, true))), bool(bool(true && (bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), true, true)))))))))))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)], uint(_GLF_IDENTITY(2, max(2, 2))), 4, 64, 4);
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.7)), vec2(_GLF_FUZZED(3.6), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0)))), bvec2(false, true))).y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0)), (true ? float(mat2x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 1.0)) : _GLF_FUZZED(1.2))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))
    barrier();
   barrier();
  }
}
