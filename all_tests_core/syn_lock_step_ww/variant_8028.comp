#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(751.200, 2.9)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(53.97)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(85.30) : 0.0)), 0.0, cos(0.0), _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), min(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0)), clamp(float(mat2(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), min(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0)), float(mat2(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), min(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0)), float(mat2(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), min(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.1) : 1.0)), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(determinant(mat4(-77.40, -7665.0141, -5511.6764, 84.18, 918.057, -632.228, 44.64, -48.83, 304.084, 3.1, 48.48, 494.423, -3265.6907, 3.6, 354.887, -2029.9041))) : determinant(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), 0.0), (true ? mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.7)), float(0.0), bool(true))), 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0) : _GLF_FUZZED(mat2(-658.226, 412.696, 4.8, -8.6)))) : _GLF_FUZZED(mat2(7.5, _GLF_IDENTITY(67.36, (true ? 67.36 : _GLF_FUZZED(544.788))), 959.089, 978.328)))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(751.200, 2.9)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), determinant(mat2(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false) ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) : _GLF_FUZZED(exp2(-963.055))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(determinant(mat4(-77.40, -7665.0141, -5511.6764, 84.18, 918.057, -632.228, 44.64, -48.83, 304.084, 3.1, 48.48, 494.423, -3265.6907, 3.6, 354.887, -2029.9041))) : determinant(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8259.5822)), bool(false))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)), 0.0, 0.0))), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), 0.0), (true ? mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(52.93) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) : _GLF_FUZZED(mat2(-658.226, 412.696, 4.8, -8.6)))) : _GLF_FUZZED(mat2(7.5, 67.36, 959.089, 978.328))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-60.72)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false))) || false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(870.295))), injectionSwitch.y)))), true)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), (! (_GLF_DEAD(false))) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bool(bool(bool(false)))), bool(bool(bool(bool(bool(bool(false)))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) && true)))))))), false, true, true))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))), true)))), bool(bvec4((! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), false || (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), (_GLF_IDENTITY(! (! ((_GLF_DEAD(false)))), (! (! ((_GLF_DEAD(false))))) || false)) || false)))), (! (_GLF_DEAD(false))) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))) + vec2(0.0, 0.0)).y)) || (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, ((! (_GLF_DEAD(false))) && true) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bool(bool(bool(false)))), bool(bool(bool(bool(bool(bool(false)))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))) && true)))))))), false, true, true))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x, (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))), true)))), false, false, true)))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))), _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))), false, true)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat3x4(injectionSwitch[1], 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), sqrt(1.0), 1.0, 0.0, 0.0)), mix(float(float(mat3x4(injectionSwitch[1], 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), sqrt(1.0), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(30.63)), bool(false)))))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))) || false)), true)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))) && true)), true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (! (_GLF_DEAD(false))) && true)), true)), (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (! (_GLF_DEAD(false))) && true)), true))) || _GLF_IDENTITY(false, false || (false)))) || false, ((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), true)), _GLF_IDENTITY((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))) || false) && true)), true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), bool(bvec3(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), false, false)))), true))), ((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))) && true)), true)))) || false)), ! (! (! (_GLF_IDENTITY((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))), ((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), (! (_GLF_DEAD(false))) && true)))), true)), (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))) || false))) || false)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), bool(bvec3(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), false, false)))), true))), ((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))) && true)), true)))) || false)), ! (! (! (_GLF_IDENTITY((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))), ((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), (! (_GLF_DEAD(false))) && true)))), true)), (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))) || false))) || false))))))) && true)) || false)) || false) || false)))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, false)))), true, false, true)))))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))) && true)), true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (! (_GLF_DEAD(false))) && true)), true)), (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (! (_GLF_DEAD(false))) && true)), true))) || _GLF_IDENTITY(false, false || (false)))) || false, ((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), true)), _GLF_IDENTITY((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))) || false) && true)), true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), bool(bvec3(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), false, false)))), true))), ((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))) && true)), true)))) || false)), ! (! (! (_GLF_IDENTITY((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))), ((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), (! (_GLF_DEAD(false))) && true)))), true)), (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))) || false))) || false)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), bool(bvec3(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), false, false)))), true))), ((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))) && true)), true)))) || false)), ! (! (! (_GLF_IDENTITY((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))), ((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), (! (_GLF_DEAD(false))) && true)))), true)), (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))) || false))) || false))))))) && true)) || false)) || false) || false)))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, false)))), true, false, true)))))), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))) && true)), true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (! (_GLF_DEAD(false))) && true)), true)), (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (! (_GLF_DEAD(false))) && true)), true))) || _GLF_IDENTITY(false, false || (false)))) || false, ((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)), true)), _GLF_IDENTITY((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), (_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))) || false) && true)), true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), bool(bvec3(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), false, false)))), true))), ((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))) && true)), true)))) || false)), ! (! (! (_GLF_IDENTITY((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))), ((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), (! (_GLF_DEAD(false))) && true)))), true)), (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))) || false))) || false)))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), bool(bvec3(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true, true, false)), false, false)))), true))), ((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))) && true)), true)))) || false)), ! (! (! (_GLF_IDENTITY((bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))), ((_GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), (! (_GLF_DEAD(false))) && true)))), true)), (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), true))) || false))) || false))))))) && true)) || false)) || false) || false)))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false, false)))), true, false, true)))))), true), false)))))))), bool(bvec3(_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) && true), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), (! (_GLF_DEAD(false))) && true))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(217.834)), bool(false)))) - 0.0))))), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), true, false, true)))))), true))), _GLF_IDENTITY(bool(bvec3((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), false || (! ((_GLF_DEAD(false))))))), (! (_GLF_DEAD(false))) && true))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))), true, false, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))), true, false, true))))), ! (! (! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))), true, false, true)))))))))))), true))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec3((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_DEAD(false))) && true))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - sin(vec2(0.0, 0.0))), injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], clamp(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[_GLF_IDENTITY(0, min(0, 0))])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[1])), max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))), true))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), true))))), true, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(bool(bool(false || (_GLF_IDENTITY(false, ! (! (false)))))), true, false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> (1u ^ 1u)), _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x)))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3594.8503)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y) && true))), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false)))), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))))))))), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true)), bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true)), true, false)))))))), _GLF_IDENTITY(true, true && (true)), true)), false || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), false)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true)), bvec2(bvec4(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true)), true, false)))))))), _GLF_IDENTITY(true, true && (true)), true)))), false, true))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), 1u, 0u))), clamp(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), 1u, 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), 1u, 0u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(84149u, 174202u, 42553u)))).x, gl_WorkGroupID.x)), 1u, 0u))), uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x)), 1u, 0u))), 0u, 1u, 1u))), 1u, 1u, 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.5) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6853.9194)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.w = _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.w, (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.w, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.w, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.w, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.w)), GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.w))) << _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, log(1.0) + (0.0)), injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, log(1.0) + (0.0)), injectionSwitch.x))) / 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED((770.747 + 0.2))), mix(float(_GLF_FUZZED(-185.771)), float(float(_GLF_FUZZED((770.747 + 0.2)))), bool(true))), bool(false))) > injectionSwitch.y)), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((770.747 + 0.2))), bool(false))) > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED((770.747 + 0.2))), mix(float(_GLF_FUZZED(-185.771)), float(float(_GLF_FUZZED((770.747 + 0.2)))), bool(true))), bool(false))) > injectionSwitch.y)), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((770.747 + 0.2))), bool(false))) > injectionSwitch.y))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED((770.747 + 0.2))), mix(float(_GLF_FUZZED(-185.771)), float(float(_GLF_FUZZED((770.747 + 0.2)))), bool(true))), bool(false))) > injectionSwitch.y)), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((770.747 + 0.2))), bool(false))) > injectionSwitch.y))))))), ! (! (bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED((770.747 + 0.2))), mix(float(_GLF_FUZZED(-185.771)), float(float(_GLF_FUZZED((770.747 + 0.2)))), bool(true))), bool(false))) > injectionSwitch.y)), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((770.747 + 0.2))), bool(false))) > injectionSwitch.y)))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-49.87), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(320.793)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, min(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) * 1.0))))), ! (! (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))) && true)) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), (injectionSwitch.y))) * 1.0))) && true)) && true))))) || false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(-519.923)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), max(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), (false ? _GLF_FUZZED(-0.8) : float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), bool(true))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true)))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))), false || (bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true)), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), true))) && true, ((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, true))), true))) && true) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true))))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.z = subgroup_base;
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.z + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), (float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 0.0, 1.0))) / sqrt(1.0))) - 0.0)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, mix(float(_GLF_FUZZED(-8234.2081)), float(injectionSwitch.x), bool(true)))))) > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.z + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, min(_GLF_IDENTITY((subgroup_local_id) | 0u, (true ? (subgroup_local_id) | 0u : _GLF_FUZZED(subgroup_local_id))), (subgroup_local_id) | 0u))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), max(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (false ? _GLF_FUZZED(-45938) : (4))) / (1 & 1)), 4, 4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), 4, 4)), (4) / (1 & 1)), 4, 4))), _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4))) / (1 & 1)), 4, 4), clamp(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 + ((4)))) / int(_GLF_ONE(1.0, injectionSwitch.y))), (4), (4))) / (1 & 1), (4) / (1 & 1))), max(_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), int(ivec2(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), 1))), _GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1)))))), 4, 4), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY((1 & 1), clamp((1 & 1), (1 & 1), (1 & 1)))), 4, 4), (false ? _GLF_FUZZED(_GLF_IDENTITY(50194, max(50194, 50194))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4)), (4) / (1 & 1)), 4, 4), _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (1 & 1), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))) - 0)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) ^ 0)), 0 ^ ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (1 & 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), 1 * ((4))) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))) - 0)), 4, _GLF_IDENTITY(4, int(ivec2(4, 1)))), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) ^ 0)))) | (clamp(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(1 & 1, int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) / 1))), 4, 4))))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) + int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4))), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) | 0)))), max((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4))) / (1 & 1)), 4, 4), clamp(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 + ((4)))) / int(_GLF_ONE(1.0, injectionSwitch.y))), (4), (4))) / (1 & 1), (4) / (1 & 1))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), int(ivec2(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), int(ivec2(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), 1)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), int(ivec2(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), 1))))) | 0))), _GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1)))))), 4, 4), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY((1 & 1), clamp((1 & 1), (1 & 1), (1 & 1)))), 4, 4), (false ? _GLF_FUZZED(_GLF_IDENTITY(50194, max(50194, 50194))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (1 & 1), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))) - 0)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) ^ 0)), 0 ^ ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (1 & 1), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-45009, (-45009) | 0)) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))) - 0)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) ^ 0)))) | (clamp(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(1 & 1, int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) / 1))), 4, 4))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) | 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4))) / (1 & 1)), 4, 4), clamp(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 + ((4)))) / int(_GLF_ONE(1.0, injectionSwitch.y))), (4), (4))) / (1 & 1), (4) / (1 & 1))), max(_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), int(ivec2(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), 1))), _GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1)))))), 4, 4), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY((1 & 1), clamp((1 & 1), (1 & 1), (1 & 1)))), 4, 4), (false ? _GLF_FUZZED(_GLF_IDENTITY(50194, max(50194, 50194))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (1 & 1), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))) - 0)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) ^ 0)), 0 ^ ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (1 & 1), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))) - 0)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) ^ 0)))) | (clamp(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(1 & 1, int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) / 1))), 4, 4))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) | 0))), (false ? _GLF_FUZZED(-98547) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4)), 1, 1)), (int(ivec3(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4)), 1, 1))) | (int(ivec3(_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4)), 1, 1)))))) / (1 & 1)), 4, 4), clamp(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max(_GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (0 ^ 0) + (4)))))), clamp(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 + ((4)))) / _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), injectionSwitch.y)), (int(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), injectionSwitch.y))) / 1)), (4), (4))) / (1 & 1), (4) / (1 & 1))), max(_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), int(ivec2(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), 1))), _GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1)))))), 4, 4), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY((1 & 1), clamp((1 & 1), (1 & 1), (1 & 1)))), 4, 4), (false ? _GLF_FUZZED(_GLF_IDENTITY(50194, max(50194, 50194))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (1 & 1), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))) - 0)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) ^ 0)), 0 ^ ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / _GLF_IDENTITY((1 & 1), ((1 & 1)) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0))))))))) - 0)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | (4)), 4)) ^ 0)))) | (clamp(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(1 & 1, int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) / 1))), 4, 4))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) | 0)))))), max((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4))) / (1 & 1)), 4, 4), clamp(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 + ((4)))) / int(_GLF_ONE(1.0, injectionSwitch.y))), (4), (4))) / (1 & 1), (4) / (1 & 1))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, (4) - 0)))) / (1 & _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) / 1)))), max((4) / (1 & 1), (4) / (1 & 1))), int(ivec2(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), 1))), _GLF_IDENTITY((4) / (1 & _GLF_IDENTITY(1, 0 + (1))), max((4) / (1 & 1), (4) / (1 & 1)))))), 4, 4), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY((1 & 1), clamp((1 & 1), (1 & 1), (1 & 1)))), 4, 4), (false ? _GLF_FUZZED(_GLF_IDENTITY(50194, max(50194, 50194))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), (false ? _GLF_FUZZED(bitfieldExtract(-94370, 84398, 66171)) : _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) | ((4) / (1 & 1))))), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-6685))))) - 0) : _GLF_FUZZED(39887)))) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-29926) : 0))) | (_GLF_IDENTITY(0, (0) + 0))))))) - 0)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) ^ 0)), 0 ^ ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (1 & 1), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0))) + 0), ~ (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0))))))))) - 0)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) ^ 0)))) | (clamp(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY(int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y))))) | (int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))) / 1))), 4, 4))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) | 0)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4))) / (1 & 1)), 4, 4), clamp(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 + ((4)))) / int(_GLF_ONE(1.0, injectionSwitch.y))), (4), (4))) / (1 & 1), (4) / (1 & 1))), max(_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1))), int(ivec2(_GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / _GLF_IDENTITY((1 & 1), ((1 & 1)) - 0))), 1))), _GLF_IDENTITY((4) / (1 & 1), max((4) / (1 & 1), (4) / (1 & 1)))))), 4, 4), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY((1 & 1), clamp((1 & 1), (1 & 1), (_GLF_IDENTITY(1 & 1, 0 + (1 & 1)))))), 4, 4), (false ? _GLF_FUZZED(_GLF_IDENTITY(50194, max(50194, 50194))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), _GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (1 & 1), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(47492)))), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec2((4), 1)), int(int(int(ivec2((4), 1))))))) + 0) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))) - 0)), 4, 4), _GLF_IDENTITY((clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)), ((clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4))) | ((clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)))) ^ 0)), 0 ^ ((_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / (1 & 1), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-45009) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), clamp((4) / (1 & 1), _GLF_IDENTITY((4) / (1 & 1), ~ (~ ((4) / (1 & 1)))), (4) / (1 & 1))), ((4) / (1 & 1)) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0), (true ? _GLF_IDENTITY((4) / (1 & 1), ((4) / (1 & 1)) - 0) : _GLF_FUZZED(39887)))) ^ 0)))) - 0)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) ^ 0)))) | (clamp(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(_GLF_IDENTITY(1 & 1, int(_GLF_IDENTITY(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) - ivec2(0, 0))) | (ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_IDENTITY(1 & 1, int(ivec2(1 & 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))) / 1))), 4, 4))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), (clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4)) | 0)))))))) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), int(ivec4((1 << _GLF_IDENTITY(int(4), int(4))), 0, 0, 0))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), int(4))))))))), ((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (0 >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) + 0)))))) / (1 & 1)), _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (4)), 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (4) / (1 & 1)), _GLF_IDENTITY(4, 0 + (4)), 4), clamp(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec4(4, 1, 1, 0)))) - 0), (4) / (1 & 1)), 4, 4), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1) & 1, 0 ^ (_GLF_IDENTITY(1, (1) / 1) & 1)))), 4, 4), (false ? _GLF_FUZZED(50194) : clamp(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0) & _GLF_IDENTITY(1, 1 * (1)), clamp(_GLF_IDENTITY(1 & 1, int(int(_GLF_IDENTITY(1, max(1, 1)) & _GLF_IDENTITY(1, (1) | (1))))), 1 & 1, 1 & 1)))), 4, 4))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ ((4)), (true ? ~ ((4)) : _GLF_FUZZED(-40399))))) / (1 & 1)), 4, 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, (4) / (1 & 1)), 4, 4), min(clamp(_GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(1 & 1, (1 & _GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(1 & 1, int(ivec4(1 & 1, 0, 1, 1))))))), 4, 4), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4), (false ? _GLF_FUZZED(-76336) : (4))) / (1 & 1)), 4, 4)))) | 0)))) / (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) | ((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), (true ? (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED((96296 ^ 7441)) : 1)), 1, 1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(4), 0, 1), (false ? _GLF_FUZZED(ivec3(-62606, 15443, -60512)) : _GLF_IDENTITY(ivec3(int(4), 0, 1), (true ? ivec3(int(4), 0, 1) : _GLF_FUZZED(ivec3(53630, 41585, 3842))))))), clamp(int(_GLF_IDENTITY(ivec3(int(4), 0, 1), (false ? _GLF_FUZZED(ivec3(-62606, 15443, -60512)) : _GLF_IDENTITY(ivec3(int(4), 0, 1), (true ? ivec3(int(4), 0, 1) : _GLF_FUZZED(ivec3(53630, 41585, 3842))))))), int(_GLF_IDENTITY(ivec3(int(4), 0, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-62606, 15443, -60512)) : _GLF_IDENTITY(ivec3(int(4), 0, 1), (true ? ivec3(int(4), 0, 1) : _GLF_FUZZED(ivec3(53630, 41585, 3842))))), ((false ? _GLF_FUZZED(ivec3(-62606, 15443, -60512)) : _GLF_IDENTITY(ivec3(int(4), 0, 1), (true ? ivec3(int(4), 0, 1) : _GLF_FUZZED(ivec3(53630, 41585, 3842)))))) ^ ivec3(0, 0, 0)))), int(_GLF_IDENTITY(ivec3(int(4), 0, 1), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(ivec3(-62606, 15443, -60512)) : _GLF_IDENTITY(ivec3(int(4), 0, 1), (true ? ivec3(int(4), 0, 1) : _GLF_FUZZED(ivec3(53630, 41585, 3842)))))))))), int(4))) | _GLF_IDENTITY(0, clamp(0, 0, 0)))))) >> _GLF_IDENTITY(int(4), int(4)) : _GLF_FUZZED(66524))))))))))) - 0)), _GLF_IDENTITY(64, 0 | (64)), 4);
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_12next_virtual_gidnum_workgroupsubgroup_baseworkgroup_id.x], uint(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) | (ivec2(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, 0 | (2)), _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, 1 * (2)))))), 1)))))), 4, 64, _GLF_IDENTITY(4, (4) - 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat2(0.0, 0.0, sin(0.0), 0.0)), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0), (true ? mat4(injectionSwitch, determinant(mat2(0.0, 0.0, sin(0.0), 0.0)), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0) : _GLF_FUZZED(mat4(-6.5, -299.562, -591.836, -7.5, -42.87, 0.0, -540.392, -30.97, 0.6, 1.8, -7037.3427, 10.32, 49.21, 4.3, 1.1, 6.2))))), vec2(mat4(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat2(0.0, 0.0, sin(0.0), 0.0)), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0), (true ? mat4(injectionSwitch, determinant(mat2(0.0, 0.0, sin(0.0), 0.0)), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0) : _GLF_FUZZED(mat4(-6.5, -299.562, -591.836, -7.5, -42.87, 0.0, -540.392, -30.97, 0.6, 1.8, -7037.3427, 10.32, 49.21, 4.3, 1.1, 6.2))))), clamp(vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat2(0.0, 0.0, sin(0.0), 0.0)), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0), (true ? mat4(injectionSwitch, determinant(mat2(0.0, 0.0, sin(0.0), 0.0)), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0) : _GLF_FUZZED(mat4(-6.5, -299.562, -591.836, -7.5, -42.87, 0.0, -540.392, -30.97, 0.6, 1.8, -7037.3427, 10.32, 49.21, 4.3, 1.1, 6.2))))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat2(0.0, 0.0, sin(0.0), 0.0)), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0), (true ? mat4(injectionSwitch, determinant(mat2(0.0, 0.0, sin(0.0), 0.0)), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0) : _GLF_FUZZED(mat4(-6.5, -299.562, -591.836, -7.5, -42.87, 0.0, -540.392, -30.97, 0.6, 1.8, -7037.3427, 10.32, 49.21, 4.3, 1.1, 6.2))))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, determinant(mat2(0.0, 0.0, sin(0.0), 0.0)), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0), (true ? mat4(injectionSwitch, determinant(mat2(0.0, 0.0, sin(0.0), 0.0)), 0.0, 1.0, tan(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0) : _GLF_FUZZED(mat4(-6.5, -299.562, -591.836, -7.5, -42.87, 0.0, -540.392, -30.97, 0.6, 1.8, -7037.3427, 10.32, 49.21, 4.3, 1.1, 6.2))))))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455))))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y)), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y)), false, true), bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y)), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4345.1611, -2799.8455)))).x > injectionSwitch.y)))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
