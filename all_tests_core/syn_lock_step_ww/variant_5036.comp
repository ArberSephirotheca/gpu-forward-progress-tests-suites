#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), false, false)), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))))))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_IDENTITY(false, (false) && true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))))))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_IDENTITY(false, (false) && true)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))), bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))))))))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_IDENTITY(false, (false) && true)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))), true, true)))))), (bool(bool(false))) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))) || false, ! (! (_GLF_IDENTITY((bool(bool(false))) || false, ! (! ((bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))) || false)))))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))), ! (! (bool(bool(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))))))))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, _GLF_IDENTITY(false, (false) && true)))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), true, true)), true && (bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), true, true))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), true, true)), true && (bool(bvec4(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true, true)))))) && true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(unpackSnorm2x16(uvec3(125794u, 39647u, 129483u)[0])) : _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.1), _GLF_FUZZED(-0.4)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(445.911, clamp(_GLF_IDENTITY(445.911, mix(float(_GLF_FUZZED(79.68)), float(445.911), bool(true))), 445.911, _GLF_IDENTITY(445.911, (false ? _GLF_FUZZED(2955.8208) : 445.911))))), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y))))))))))))) || false), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(16.32), _GLF_FUZZED(-0.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y), true && (false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y)))))))))))))) || false)), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(445.911), _GLF_FUZZED(-4.3)), bvec2(false, false))).x > injectionSwitch.y)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(445.911), (_GLF_FUZZED(445.911)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(-4.3), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4.3), clamp(_GLF_FUZZED(-4.3), _GLF_FUZZED(-4.3), _GLF_FUZZED(-4.3)))), float(_GLF_FUZZED(-4.7)), bool(false)))), bvec2(_GLF_IDENTITY(false, (false) && true), false))).x > injectionSwitch.y)))))))))) || false))) && true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1.8)), vec2(_GLF_FUZZED(11.42), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-966.196), _GLF_FUZZED(-47.78)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true)))) / vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.6)), bool(false)))))) * 1.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))) && true) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(false))), (! (bool(_GLF_DEAD(false)))) || false))), false || (bool(_GLF_DEAD(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(177166u, _GLF_IDENTITY(16150u, max(16150u, 16150u)), 104697u)) : gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(177166u, _GLF_IDENTITY(16150u, (16150u) / 1u), 104697u)) : gl_WorkGroupID, min(_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(177166u, _GLF_IDENTITY(16150u, (16150u) / 1u), 104697u)) : gl_WorkGroupID, ~ (~ (false ? _GLF_FUZZED(uvec3(177166u, _GLF_IDENTITY(16150u, (16150u) / 1u), 104697u)) : gl_WorkGroupID))), false ? _GLF_FUZZED(uvec3(177166u, _GLF_IDENTITY(16150u, (16150u) / 1u), 104697u)) : gl_WorkGroupID)))), _GLF_IDENTITY(~ (~ (uvec3(uvec3(false ? _GLF_FUZZED(uvec3(177166u, 16150u, 104697u)) : gl_WorkGroupID)))), (~ (~ (uvec3(uvec3(false ? _GLF_FUZZED(uvec3(177166u, 16150u, 104697u)) : gl_WorkGroupID))))) | (~ (~ (uvec3(uvec3(false ? _GLF_FUZZED(uvec3(177166u, 16150u, 104697u)) : gl_WorkGroupID))))))))), (false ? _GLF_FUZZED(uvec3(131133u, 54466u, 132143u)) : (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(177166u, _GLF_IDENTITY(_GLF_IDENTITY(16150u, (16150u) / 1u), max(16150u, 16150u)), 104697u)) : gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(false ? _GLF_FUZZED(uvec3(177166u, _GLF_IDENTITY(16150u, (16150u) / 1u), 104697u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(false ? _GLF_FUZZED(uvec3(177166u, 16150u, 104697u)) : gl_WorkGroupID)), (_GLF_IDENTITY(uvec3(uvec3(false ? _GLF_FUZZED(uvec3(177166u, 16150u, 104697u)) : gl_WorkGroupID)), (uvec3(uvec3(false ? _GLF_FUZZED(uvec3(177166u, 16150u, 104697u)) : gl_WorkGroupID))) << uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))), (! (false)) || false))) ? _GLF_FUZZED(uvec3(177166u, _GLF_IDENTITY(16150u, max(16150u, 16150u)), 104697u)) : gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(false ? _GLF_FUZZED(uvec3(177166u, _GLF_IDENTITY(16150u, (16150u) / 1u), 104697u)) : gl_WorkGroupID)), ~ (~ (uvec3(uvec3(false ? _GLF_FUZZED(uvec3(177166u, 16150u, 104697u)) : gl_WorkGroupID))))))), (false ? _GLF_FUZZED(uvec3(131133u, 54466u, 132143u)) : (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(177166u, _GLF_IDENTITY(16150u, max(16150u, 16150u)), 104697u)) : gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(false ? _GLF_FUZZED(uvec3(177166u, _GLF_IDENTITY(_GLF_IDENTITY(16150u, (_GLF_IDENTITY(16150u, min(16150u, 16150u))) | (16150u)), (16150u) / 1u), 104697u)) : gl_WorkGroupID)), ~ (~ (uvec3(uvec3(false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(177166u, clamp(177166u, 177166u, 177166u)), 16150u, 104697u)) : gl_WorkGroupID)))))))))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u)))))) ^ uvec3(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(3522u) : uint(6u))))) | (_GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(177166u, 16150u, 104697u)) : gl_WorkGroupID))) ^ uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(0u))), uint(uint(_GLF_IDENTITY(uint(uint(uint(0u))), (uint(uint(uint(0u)))) >> 0u)))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(0u)), uint(_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), max(uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(0u)), uint(_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), max(uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(0u)), uint(_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), max(uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))))), ~ (~ (uint(_GLF_IDENTITY(uint(uint(0u)), uint(_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), max(uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u), uvec4(uint(uint(0u)), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)))))))))) >> 0u), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 1u, 0u))))), (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))) | (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | (_GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((0u), ((0u)) | ((0u)))), (~ (_GLF_IDENTITY((0u), ((0u)) | ((0u))))) / 1u))))) | (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))))), _GLF_IDENTITY(uint(uint(uint(0u))), (uint(uint(uint(0u)))) / 1u))), ~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))))))), ~ (~ (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u)))))))))), (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) ^ 0u))))))))))) >> 0u), (~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(0u)), min(uint(uint(0u)), _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u)))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(0u)), min(uint(uint(0u)), _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u)))), (uint(_GLF_IDENTITY(uint(uint(0u)), min(uint(uint(0u)), _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u))))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uint(_GLF_IDENTITY(uint(uint(0u)), min(uint(uint(0u)), _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(0u)), min(uint(uint(0u)), _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u)))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_IDENTITY(uint(uint(0u)), min(uint(uint(0u)), _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) / 1u))))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 0u | (0u))), uint(uint(uint(0u))))) + 0u)))), ~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(0u))), (uint(uint(uint(0u)))) / 1u))), ~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))) | (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))), ~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(0u))), (uint(uint(uint(0u)))) / 1u))), ~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))) | (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))), ~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(0u))), (uint(uint(uint(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))))))) / 1u))), ~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))))), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uint(uint(0u)), (_GLF_IDENTITY(uint(uint(0u)), 0u | (uint(uint(0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))) | (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))), ~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(0u))), (uint(uint(uint(0u)))) / 1u))), ~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), (~ (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uint(uint(0u)), max(uint(uint(0u)), uint(uint(0u)))))))) | (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))), ~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(0u))), _GLF_IDENTITY((uint(uint(uint(0u)))), min((uint(uint(uint(0u)))), (uint(uint(uint(0u)))))) / 1u))), ~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))))))), 0u)), (uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))), uint(uint(uint(0u)))))) | (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))), ~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(0u))), (uint(uint(uint(0u)))) / 1u))), ~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(_GLF_IDENTITY(0u, (0u) + 0u))))))))), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))) | (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(0u))), (uint(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(num_workgroup) : uint(0u)))))) / 1u))), min((_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(0u))), (uint(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(num_workgroup) : uint(0u)))))) / 1u))), (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(0u))), (uint(uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(num_workgroup) : uint(0u)))))) / 1u))))), ~ (_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(uint(uint(0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(uint(0u)), min(uint(uint(0u)), uint(uint(0u)))), 1u), ~ (~ (uvec2(_GLF_IDENTITY(uint(uint(0u)), min(uint(uint(0u)), uint(uint(0u)))), 1u)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(141584u)))))))), (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))) | (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))), ~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))))), (uint(uint(uint(0u)))) / 1u))), ~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(141584u)))))))), (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u)))))) | (~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))), ~ (_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uint(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id)))))), (uint(uint(uint(0u)))) / 1u))), ~ (_GLF_IDENTITY(uint(0u), uint(uint(uint(0u))))))))) / 1u))), 0u))) / 1u)))))))))), _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), 0u, 0u))) | uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), ((workgroup_size)) >> 0u) * 1u)) << 0u) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), injectionSwitch, injectionSwitch)), injectionSwitch)).x < injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), false || (bool(bool(_GLF_DEAD(false))))))) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), false), true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))))))) && true), false, false, false))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(249.728, 6.4)) : injectionSwitch)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.7, 88.98)) : injectionSwitch)))).x > injectionSwitch.y))))), bool(bvec2(! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.7, 88.98)) : injectionSwitch)))).x > injectionSwitch.y))))), true)))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED((injectionSwitch)) : injectionSwitch), (_GLF_IDENTITY((false ? _GLF_FUZZED((injectionSwitch)) : injectionSwitch), max((false ? _GLF_FUZZED((injectionSwitch)) : injectionSwitch), (false ? _GLF_FUZZED((injectionSwitch)) : injectionSwitch)))) - abs(vec2(0.0, 0.0)))).y))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y))))), false, false))), false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), bool(bvec4(bool(bool(_GLF_IDENTITY(false, false || (false)))), false, true, true))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, false || (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((bool(bool(_GLF_IDENTITY(false, false || (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! (false))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), ! (! (false))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((true)), bool(bool(_GLF_IDENTITY(! ((true)), (! ((true))) && true))))), false || ((_GLF_IDENTITY(! ((true)), bool(bool(_GLF_IDENTITY(! ((true)), (! ((true))) && true)))))))) || false), false, false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), ! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp2(injectionSwitch)) : injectionSwitch)).y)), true, true)))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, false))), false), true, false)))))) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true)))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) || (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - tan(0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(1.0))), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-73.76)), bool(false))))))), 1.0, log(1.0), 0.0, 0.0))).y))) && true))) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec4(false, false, true, true))), true), true)))), bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))), true), true)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-905.184)), bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))) || (false))))), (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-839.069, -965.763)) : _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x), (true ? float(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-839.069, -965.763)) : _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x) : _GLF_FUZZED(-54.69))), float(_GLF_FUZZED(-905.184)), bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true))) || (false)))))) && true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec4(false, false, false, false))), ((bool(bvec4(false, false, false, false)))) && true)), false || (! (! (bool(bvec4(false, false, false, false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(_GLF_IDENTITY(bvec2(bool(bool((false))), false), bvec2(bvec3(bvec2(bool(bool((false))), false), true)))))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool((_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(cos(0.0), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(cos(0.0), 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0), 1.0, 1.0, length(log(vec3(1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, cos(0.0), abs(1.0))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) - 0u)), (subgroup_size) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(uvec4((subgroup_size) << _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u)))) >> 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), max(uint(uvec4((subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(83369u) : (0u))) / 1u)) / 1u)))) >> 0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uvec4((subgroup_size) << _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), clamp((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (true ? ~ ((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) : _GLF_FUZZED(subgroup_id))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) >> 0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u, (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), (0u) + ((0u | 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY(uint(0u), _GLF_IDENTITY((true ? uint(0u) : _GLF_FUZZED(subgroup_size)), ((true ? uint(0u) : _GLF_FUZZED(subgroup_size))) | ((true ? uint(0u) : _GLF_FUZZED(subgroup_size)))))))), 0u, 0u))) >> 0u))))), _GLF_IDENTITY(1u, (1u) >> 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), 0u, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uvec4(uint(6u), 1u, 0u, 0u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), _GLF_IDENTITY(1u * (subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (1u * (subgroup_size)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), min(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), ((subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) >> 0u), (1u * (subgroup_size)) ^ 0u), 0u ^ (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), ((subgroup_size)), ((subgroup_size)))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-0.1)))))), (1u * (subgroup_size)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), ((subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))), injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), clamp(_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u ^ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (1u * (subgroup_size)) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) ^ 0u) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), (1u * (subgroup_size)) ^ 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u, ~ (~ (1u))) * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) >> 0u), (1u * (subgroup_size)) ^ 0u), 0u ^ (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), ((subgroup_size)), ((subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))), min(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)))) << 0u))), (1u * (subgroup_size)) ^ 0u), clamp(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1u * (subgroup_size)), _GLF_IDENTITY(((1u * (subgroup_size))), uint(uvec3(((1u * (subgroup_size))), 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))) ^ 0u) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u)))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u), (subgroup_size))), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) >> 0u), (1u * (subgroup_size)) ^ 0u), 0u ^ (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), ((subgroup_size)), ((subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), clamp(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), 0u + (((subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) ^ 0u) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(((subgroup_size)), ((subgroup_size)), ((subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)) / 1u)) >> 0u), _GLF_IDENTITY((1u * (subgroup_size)) ^ 0u, clamp((1u * (subgroup_size)) ^ 0u, (1u * (subgroup_size)) ^ 0u, _GLF_IDENTITY((1u * (subgroup_size)) ^ 0u, uint(uvec3((1u * (subgroup_size)) ^ 0u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)))))), 0u ^ (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), ((subgroup_size)), ((subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) | ((1u * (subgroup_size)))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), clamp(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1u * (subgroup_size)), _GLF_IDENTITY(((1u * (subgroup_size))) ^ 0u, (((1u * (subgroup_size))) ^ 0u) | 0u)) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), (1u * (subgroup_size)) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))), (1u * (subgroup_size)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) + 0u), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) >> 0u), (1u * (subgroup_size)) ^ 0u), 0u ^ (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), ((subgroup_size)), ((subgroup_size)))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), (1u * (subgroup_size)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), clamp(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), 1.0 * (_GLF_IDENTITY(float(vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), mix(float(float(vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED(-9.0)), bool(false)))))), injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) ^ 0u) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) << 0u)), (1u * (subgroup_size)) ^ 0u))))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) >> 0u), (1u * (subgroup_size)) ^ 0u), 0u ^ (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), ((subgroup_size)), ((subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), clamp(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) ^ 0u) ^ 0u, min(_GLF_IDENTITY(_GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) ^ 0u) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) ^ 0u) ^ 0u, 0u, 1u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) ^ 0u) ^ 0u, (true ? _GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) ^ 0u) ^ 0u : _GLF_FUZZED(subgroup_id)))))), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u)))))), min((_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (1u * (subgroup_size)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) >> 0u), (1u * (subgroup_size)) ^ 0u), 0u ^ (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), ((subgroup_size)), ((subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, max(0u, 0u)), 0u))) | (0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size, subgroup_size)))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0))), 0.0)))), injectionSwitch.x))), _GLF_IDENTITY((1u * (subgroup_size)) ^ 0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((1u * (subgroup_size)) ^ 0u, min((1u * (subgroup_size)) ^ 0u, (1u * (subgroup_size)) ^ 0u)), 1u, 1u, 1u)), 0u | (uint(uvec4(_GLF_IDENTITY((1u * (subgroup_size)) ^ 0u, min((1u * (subgroup_size)) ^ 0u, (1u * (subgroup_size)) ^ 0u)), 1u, 1u, 1u)))))), clamp(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) ^ 0u) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u) * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (_GLF_IDENTITY((1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, clamp((1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u, (1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) >> 0u), (1u * (subgroup_size)) ^ 0u), 0u ^ (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), clamp(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u), ((subgroup_size)), ((subgroup_size)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), clamp(_GLF_IDENTITY(1u * _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (subgroup_size)) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((1u * (subgroup_size)), ((1u * (subgroup_size))) ^ 0u) ^ 0u), _GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))))) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(-6.8))))), (1u * (subgroup_size)) ^ 0u)))))))))) >> 0u))) | (subgroup_size)))) + subgroup_local_id, min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size)))) / 1u), _GLF_IDENTITY((subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(25915u) : (subgroup_size))), (subgroup_size))), (_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_size)))) / 1u), _GLF_IDENTITY((subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(25915u) : (subgroup_size))), (subgroup_size)))) | 0u), 1u, 1u))) * 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u)) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), uint(6u)))))), min(_GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec3((subgroup_size), 1u, 1u), (uvec3((subgroup_size), 1u, 1u)) / uvec3(1u, 1u, 1u)))) * _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), min(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (true ? (0u >> _GLF_IDENTITY(uint(6u), uint(6u))) : _GLF_FUZZED(workgroup_size))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (1u) >> (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (subgroup_size)), 1u * (subgroup_size))) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size))), ~ (~ ((subgroup_size))))) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, max(0u, 0u))), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uvec2(170533u, 6900u)[1]) : subgroup_size)), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) ^ 0u))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uvec2(170533u, 6900u)[1]) : subgroup_size)), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) ^ 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), subgroup_size, subgroup_size))) * 1u, (_GLF_IDENTITY((subgroup_size) * 1u, ((subgroup_size) * 1u) | ((subgroup_size) * 1u))) + _GLF_IDENTITY(0u, 0u + (0u)))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u)) * 1u))) | (subgroup_size)))), uint(uvec3(subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uvec2(170533u, 6900u)[1]) : subgroup_size)), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) ^ 0u))), subgroup_size, subgroup_size))) * 1u, ((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(uvec2(170533u, 6900u)[1]) : subgroup_size)), subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) ^ 0u))), subgroup_size, subgroup_size))) * 1u) ^ 0u), (_GLF_IDENTITY((subgroup_size) * 1u, ((subgroup_size) * 1u) | (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) * 1u))) + _GLF_IDENTITY(0u, 0u + (0u)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size), ((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)) | ((_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))))), 1u, 1u))) + subgroup_local_id)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size), (max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size)) >> 0u))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) ^ 0u)) >> 0u), (_GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) ^ 0u)) >> 0u)) | (_GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) ^ 0u)) >> 0u))))) | (subgroup_size))), (min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size), (max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size)) >> 0u))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) ^ 0u)) >> 0u), (_GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) ^ 0u)) >> 0u)) | (_GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) ^ 0u)) >> 0u))))) | (subgroup_size)))) | 0u)) + subgroup_local_id, min(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base))) * 1u) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), _GLF_IDENTITY(1u, (1u) | 0u), 1u))) * 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))), 1u, 1u)), min(uint(uvec3((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))), 1u, 1u)), uint(uvec3((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))), 1u, 1u))))) * 1u)) << 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + _GLF_IDENTITY(0u, min(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) << 0u)), 0u)), (uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), uint(uvec4((subgroup_size), 0u, (189370u & 0u), 0u))))) | (subgroup_size)), 0u))) | 0u)))) + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, 1u, 1u)), (true ? uint(uvec3(subgroup_size, 1u, 1u)) : _GLF_FUZZED(num_workgroup))))), max((subgroup_size), (subgroup_size))) * 1u, clamp((subgroup_size) * 1u, _GLF_IDENTITY((subgroup_size) * 1u, _GLF_IDENTITY(((subgroup_size) * 1u) | ((subgroup_size) * 1u), ((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) * 1u) | ((subgroup_size) * 1u)) / 1u)), (subgroup_size) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(1u * (subgroup_size), max(_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) | (1u * (subgroup_size))), 1u * (subgroup_size))), _GLF_IDENTITY((1u * (subgroup_size)), uint(uint((1u * (subgroup_size))))) ^ 0u)) >> 0u))) | (subgroup_size)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) >> 0u)), subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size)) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size))) << 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : 1u)))))) * (subgroup_size)) ^ 0u)) >> 0u))) | (subgroup_size)))))) + subgroup_local_id, min(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size), (true ? clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) | 0u), uint(uvec4(subgroup_size, 1u, 1u, 1u))))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size) : _GLF_FUZZED((uvec3(78778u, 40568u, 4193u) ^ uvec3(129779u, 39830u, 86486u))[0]))))) * 1u, ((subgroup_size) * 1u) + 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))) + subgroup_local_id)), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (1u * (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))) ^ 0u)) >> 0u))) | (subgroup_size)))) + subgroup_local_id, min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 1u, 1u)), (uint(uvec4(subgroup_size, 0u, 1u, 1u))) / 1u)))), (_GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))))) | (subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_size)), subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))))) * 1u, ((subgroup_size) * 1u) + 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))) + subgroup_local_id))) << 0u)) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec2(uint(uint(_GLF_IDENTITY(0u, min(0u, 0u)))), 1u))))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) : subgroup_size))) | 0u))), (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u), uint(uvec4((subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (clamp(0u, 0u, 0u)) + 0u))) >> 0u), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))), subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) ^ 0u)) >> 0u))) | _GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size)))))) + subgroup_local_id, min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u)) << 0u, max((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u)) << 0u, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), 1u, 1u), max(uvec3((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), 1u, 1u), uvec3((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), 1u, 1u))))) * 1u)) << 0u))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), ~ (~ (_GLF_IDENTITY((workgroup_base), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((workgroup_base), clamp((workgroup_base), (workgroup_base), (workgroup_base))))))))))) >> 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) / 1u)), subgroup_size, subgroup_size)), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) * 1u, ((subgroup_size) * 1u) + 0u)) / 1u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))) + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) * _GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u, uint(uvec2((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u, 1u))))), subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * (1u | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) * (subgroup_size), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u), (1u * (subgroup_size)) ^ 0u)) >> 0u))) | (subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u) ^ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))), (subgroup_size) * _GLF_IDENTITY(1u, (1u) | (1u))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u)), subgroup_size))) | _GLF_IDENTITY((subgroup_size), 0u | (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))), _GLF_IDENTITY(1u * (subgroup_size), (_GLF_IDENTITY(1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u), (1u * (subgroup_size)) ^ 0u)) >> 0u))) | (subgroup_size)))) + subgroup_local_id)), min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u)) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u)) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))), (subgroup_size)))) - 0u), ((subgroup_size)) / 1u), uint(uvec3((subgroup_size), 1u, 1u))) * 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u)) << 0u)) ^ _GLF_IDENTITY(0u, 0u + _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(bitfieldReverse((workgroup_id - num_workgroup))) : _GLF_IDENTITY((0u), 0u + ((0u))))))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base)))))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))))) | 0u) + subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))))) | 0u) + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))))) | 0u) + subgroup_local_id))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) * 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u))) << 0u))), subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u) * (subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(1u * (subgroup_size), uint(uint(1u * (subgroup_size)))), _GLF_IDENTITY((1u * (subgroup_size)) ^ 0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((1u * (subgroup_size)) ^ 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((1u * (subgroup_size)) ^ 0u, ((1u * (subgroup_size)) ^ 0u) / 1u))))))) >> 0u))) | (subgroup_size)))) + subgroup_local_id, min(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u, (_GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u) - ((0u & 156969u) >> _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uvec3((subgroup_size), 1u, 1u))) * 1u)) << 0u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)))) + subgroup_local_id, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u, 1u))))))) * _GLF_IDENTITY(1u, 1u * (1u)), ((subgroup_size) * 1u) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u)) - 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u)))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))), ~ (~ (min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))), (subgroup_size)))))), subgroup_size, subgroup_size))), min((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))), (subgroup_size)))))), subgroup_size, subgroup_size))), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_size))), (subgroup_size)))))), subgroup_size, subgroup_size))))) * 1u, ((subgroup_size) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u)))) >> 0u)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)), subgroup_size, subgroup_size))), min((_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)), subgroup_size, subgroup_size))), (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)), subgroup_size, subgroup_size))))) * 1u, _GLF_IDENTITY(((subgroup_size) * 1u), _GLF_IDENTITY(max(((subgroup_size) * 1u), ((subgroup_size) * 1u)), (false ? _GLF_FUZZED(subgroup_size) : max(((subgroup_size) * 1u), ((subgroup_size) * 1u))))) + 0u)) - 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) * 1u, ((subgroup_size) * 1u) + 0u)))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size))))))) + subgroup_local_id))) << 0u)) ^ 0u)))) ^ _GLF_IDENTITY(0u, (0u) / 1u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec4(! (! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), true)))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec4(! (! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), true)))), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec4(! (! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), true)))), false), true)), true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false), true, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4432.1121), _GLF_FUZZED(1.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0) : _GLF_FUZZED(-5826.5740))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4432.1121), _GLF_FUZZED(1.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * _GLF_IDENTITY(1.0, (1.0) - 0.0)) : _GLF_FUZZED(-5826.5740))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4432.1121), _GLF_FUZZED(1.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * _GLF_IDENTITY(1.0, (1.0) - 0.0)) : _GLF_FUZZED(-5826.5740))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4432.1121), _GLF_FUZZED(1.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * _GLF_IDENTITY(1.0, (1.0) - 0.0)) : _GLF_FUZZED(-5826.5740))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4432.1121), _GLF_FUZZED(1.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * _GLF_IDENTITY(1.0, (1.0) - 0.0)) : _GLF_FUZZED(-5826.5740))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4432.1121), _GLF_FUZZED(1.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) * 1.0) : _GLF_IDENTITY(_GLF_FUZZED(-5826.5740), mix(float(_GLF_FUZZED(vec3(4.5, -1831.0998, 3.1).z)), float(_GLF_IDENTITY(_GLF_FUZZED(-5826.5740), 1.0 * (_GLF_FUZZED(-5826.5740)))), bool(_GLF_IDENTITY(true, (true) && true)))))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (false)), false || (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), false || (false)))), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), false || (false)))), true), bvec2(bvec4(bvec2((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(true, false || (true)), false))))), false || (false)))), true), true, true))))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), true, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(14.18) : 0.0))), vec2(1.0, 0.0)), min(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), min(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (true ? dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))) : _GLF_FUZZED(4.7)))))), 0.0, exp(0.0)))) : _GLF_IDENTITY(_GLF_FUZZED(-6.5), (_GLF_FUZZED(-6.5)) + 0.0)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (bool(bool(_GLF_IDENTITY(false, true && (false))))) || false)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (false ? _GLF_FUZZED(48905) : _GLF_IDENTITY(0 | (1), (0 | (1)) | 0))), (0 | (1)) + 0)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (false ? _GLF_FUZZED(48905) : _GLF_IDENTITY(0 | (1), (0 | (1)) | 0))), (0 | (1)) + 0)), min(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (false ? _GLF_FUZZED(48905) : _GLF_IDENTITY(0 | (1), (0 | (1)) | 0))), (0 | (1)) + 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (false ? _GLF_FUZZED(48905) : _GLF_IDENTITY(0 | (1), (0 | (1)) | 0))), (0 | (1)) + 0)), 1 * (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(0 | (1), (false ? _GLF_FUZZED(48905) : _GLF_IDENTITY(0 | (1), (0 | (1)) | 0))), (0 | (1)) + 0))))))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), ~ (~ (subgroup_size)))), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (84072u & 0u) | (subgroup_id)) * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), _GLF_IDENTITY((0 | (1)), max((0 | (1)), _GLF_IDENTITY((0 | (1)), ((0 | (1))) ^ 0))) + 0))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 0u | (subgroup_size)), ~ _GLF_IDENTITY((~ (subgroup_size)), uint(uint((~ (subgroup_size))))))), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, int(ivec3(1, (1 ^ 0), 0)))), (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, 0 ^ (0)))) | _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((1), ((_GLF_IDENTITY(1, (1) * 1))) / 1), 0, 1), clamp(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), ((1)) / _GLF_IDENTITY(1, (1) / 1)), 0, 1), ivec3(_GLF_IDENTITY(_GLF_IDENTITY((1), max((1), (1))), _GLF_IDENTITY(((1)) / 1, (((1)) / 1) / 1)), 0, 1), ivec3(_GLF_IDENTITY((1), ((1)) / 1), 0, 1)))))) + 0))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u))))), uint(uvec2((subgroup_size), (163886u & 0u)))), (_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), (163886u & 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), (163886u & 0u))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), (163886u & 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), (163886u & 0u))))), ~ (~ ((_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), (163886u & 0u))))))))) | ((_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), (163886u & 0u))))))))))))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), uint(uvec4(uint(_GLF_IDENTITY(uint(subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(subgroup_local_id)), 0u + (_GLF_IDENTITY(uint(uint(subgroup_local_id)), uint(uvec4(uint(uint(subgroup_local_id)), 0u, 0u, 0u)))))), min(uint(_GLF_IDENTITY(uint(uint(subgroup_local_id)), 0u + (_GLF_IDENTITY(uint(uint(subgroup_local_id)), uint(uvec4(uint(uint(subgroup_local_id)), 0u, 0u, 0u)))))), uint(_GLF_IDENTITY(uint(uint(subgroup_local_id)), 0u + (_GLF_IDENTITY(uint(uint(subgroup_local_id)), uint(uvec4(uint(uint(subgroup_local_id)), 0u, 0u, 0u)))))))))), 0u, 1u, (1u & 1u))))) + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) >> 0), 1))), (0 | _GLF_IDENTITY((1), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) << 0) << _GLF_IDENTITY(int(8), int(8))) + (_GLF_IDENTITY((1), ((1)) / (1 & 1))))) + 0))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), ~ (~ (subgroup_size)))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) + 0))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), ~ (~ (subgroup_size)))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_id * subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (0 | (1)) + 0))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), ~ (~ (subgroup_size))))) | 0u), workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0, 0 ^ (0)) | (1)) + 0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (0 ^ (0)) + 0)) | (1)) + 0)), 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), (_GLF_IDENTITY(0, 0 ^ (0)) | (1)) + 0)))) : _GLF_FUZZED(-73152)))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), ~ (~ (subgroup_size))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) / vec2(1.0, 1.0)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) / vec2(1.0, 1.0)))))[0], _GLF_FUZZED(-19.04)), vec2(_GLF_FUZZED(0.9), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x2((injectionSwitch), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(vec2(-9815.4678, -8545.7200)) : _GLF_IDENTITY(vec2(mat4x2((injectionSwitch), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (vec2(mat4x2((injectionSwitch), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) / vec2(1.0, 1.0))))) / vec2(1.0, 1.0)))))[1], max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0))), (_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch) / vec2(1.0, 1.0)))) * vec2(1.0, 1.0))))[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), clamp(vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))))) / vec2(1.0, 1.0)))))[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, (1 & 1), 0, 0), ivec4(0, 0, 0, 0) | (ivec4(1, (1 & 1), 0, 0))))), 1))]))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])), mix(vec2(_GLF_FUZZED(13.77), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-965.374)), bvec2(true, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))[_GLF_IDENTITY(0, (0) + 0)], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (false ? _GLF_FUZZED(504.859) : _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))) / 1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2308.5587)), bvec2(true, false))), 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0), 0.0))).y)) ? _GLF_FUZZED(-81646) : 1))])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(18.95), _GLF_FUZZED(544.786)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-406.935, 6390.9844)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-406.935, 6390.9844)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-406.935, 6390.9844)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.2)), vec2(_GLF_FUZZED(float((81122 * 31456))), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-401.888)), float((injectionSwitch)[1]), bool(true)))), bvec2(false, true)))))[0], injectionSwitch[1])))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-406.935, 6390.9844)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))[0], injectionSwitch[1])))))[0], _GLF_FUZZED(-3.2)), vec2(_GLF_FUZZED(-550.584), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-406.935, 6390.9844)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))))[1], mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-406.935, 6390.9844)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))))[1]), float(_GLF_FUZZED(-39.12)), bool(false)))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-406.935, 6390.9844)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(-406.935, 6390.9844)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6750.7367), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(6943.3129)), bvec2(true, false)))))[0], injectionSwitch[1])))))))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / vec2(1.0, 1.0)).y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bool(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), ! (! (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))))))))))) && true))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))))))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true))))))))))) && true), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-60.89), _GLF_FUZZED(33.18)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y)), false))), true)))))))) && true))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y))) && true))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false)))))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), bool(bvec2(bool(bool(bool(false))), false)))))))))) && true)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), false, false, false)))), ! (! ((bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-6520.6084, (false ? _GLF_FUZZED(-55.46) : _GLF_IDENTITY(-6520.6084, (true ? _GLF_IDENTITY(-6520.6084, (false ? _GLF_FUZZED(-3.9) : -6520.6084)) : _GLF_FUZZED(4.9))))))), bvec2(true, false))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-6520.6084)), bvec2(true, _GLF_IDENTITY(false, true && (false))))).y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(2), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-73054) : 4)), 4, 4)), 64, 4);
}
