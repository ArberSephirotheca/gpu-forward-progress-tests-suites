#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))) || false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((false) && true, bool(bool((false) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.7, -809.007)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-194.770))))))).x)), (injectionSwitch.x) - 0.0), injectionSwitch.x), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-131.412) : min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.7, -809.007)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0)))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))))) + vec2(0.0, 0.0)) + vec2(0.0, 0.0)))).x)), (injectionSwitch.x) - 0.0), injectionSwitch.x), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-131.412) : min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), bool(bool(false))), true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), ! (! (bool(bool((! (false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec2(bvec2(bvec2(false, true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bvec3(! (_GLF_IDENTITY(false, false || (false))), true, true))))) || (false)), true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && (! (bool(bvec2(false, true)))))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && (! (bool(bvec2(false, true))))))), true && (((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && (! (bool(bvec2(false, true)))))))))))), (_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), ! (! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), bool(bvec3(! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), true, false)))))), true && (! _GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) || false)))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))) < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(-242.007)), float((injectionSwitch.y)), bool(true)))), true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)], _GLF_IDENTITY((injectionSwitch[1]) + 0.0, ((injectionSwitch[1]) + 0.0) - 0.0)))).y))), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)], _GLF_IDENTITY((injectionSwitch[1]) + 0.0, ((injectionSwitch[1]) + 0.0) - 0.0)))).y))), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | 0)], _GLF_IDENTITY((injectionSwitch[1]) + 0.0, ((injectionSwitch[1]) + 0.0) - 0.0)))).y))), false))), true, false, true))))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && true)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mat2(1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), injectionSwitch, injectionSwitch)))).y))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(-73.42)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch), clamp(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(-73.42)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(-73.42)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(-73.42)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(-73.42)), _GLF_IDENTITY((vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(-73.42))) * mat2(1.0), vec2(1.0, 1.0) * ((vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(-73.42))) * mat2(1.0)))), _GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), injectionSwitch)).y) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), ((false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false)), false, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (bool(bvec3(_GLF_DEAD(false), false, false)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true)), true && (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))))), ! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false), true))), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((false)))), (! (false)) || false), false), true)))), false)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && (_GLF_IDENTITY(false, (false) && true)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0)), max(float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0))))), 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) - 0.0))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))) && true)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), _GLF_IDENTITY(((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0), mix(vec2((((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))[0], _GLF_IDENTITY((((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))[1], mix(float((((injectionSwitch) - vec2(0.0, 0.0)) - vec2(0.0, 0.0))[1]), float(_GLF_FUZZED(101.813)), bool(false)))), vec2(_GLF_FUZZED(-35.02), _GLF_FUZZED(9.4)), bvec2(false, false))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), vec2(vec2((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))) - abs(vec2(0.0, 0.0))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0)), clamp(clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), vec2(vec2((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))) - abs(vec2(0.0, 0.0))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0)), clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), vec2(vec2((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))) - abs(vec2(0.0, 0.0))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0)), clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), vec2(vec2((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))) - abs(vec2(0.0, 0.0))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), mat2(1.0) * ((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))[0], (true ? ((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))[0] : _GLF_FUZZED(3821.3063))), _GLF_FUZZED(-147.741)), vec2(_GLF_FUZZED(28.72), ((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))[1]), bvec2(false, true))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), max((vec2(injectionSwitch[0], injectionSwitch[1])), (vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0))), max(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bool(true))) ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-81.51)))))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.2)), vec2(_GLF_FUZZED(71.01), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])) * mat2(1.0), (vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(87.04)), bvec2(true, false)))))[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), min(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), _GLF_IDENTITY(clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0)), (true ? clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0)) : _GLF_FUZZED(vec2(1.1, 428.303))))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))]))))))))), injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))))]), _GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])) * mat2(1.0), clamp((_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) + vec2(0.0, 0.0))))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * mat2(1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(1.2)), bool(false)))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1781.5609)), float(1.0), bool(true)))), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))) * mat2(1.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6055.3075)), float(0.0), bool(true))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)), 1.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(5.6, -95.76, 4.0, -25.93, -13.64, -3.8, 6675.3890, -4.0, 0.2, 1.4, -4.2, 9045.9787, -689.540, -8.8, -50.75, 0.9)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))) * mat2(1.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6055.3075)), float(0.0), bool(true))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)), 1.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (mat4x3(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0), (mat3x2(_GLF_IDENTITY((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))), vec2(1.0, 1.0) * ((vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.93)), bool(false))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0)) * mat3(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))) * mat2(1.0))), 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat3(0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6055.3075)), float(0.0), bool(true))), 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)), 1.0, 0.0, abs(1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0))))))))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))))), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.9)), bvec2(true, false)))) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-92.55)), vec2(_GLF_FUZZED(-74.24), (injectionSwitch)[1]), bvec2(false, true)))[0], _GLF_IDENTITY(injectionSwitch[1], float(mat4x2(injectionSwitch[1], 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) + 0)])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))), injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.0) : 1.0))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(vec2(-5363.4794, 3.7).g), _GLF_FUZZED(((false ? -595.849 : 50.79) / -585.259))), vec2(((vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), 0 | (~ (0)))) | (~ (0)))))], injectionSwitch[1])))[0], _GLF_IDENTITY(((vec2(injectionSwitch[0], injectionSwitch[1])))[1], max(((vec2(injectionSwitch[0], injectionSwitch[1])))[1], ((vec2(injectionSwitch[0], injectionSwitch[1])))[1]))), bvec2(true, true))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, (0) ^ (34810 & 0))], injectionSwitch[1])) * mat2(1.0), clamp((vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0)))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) >> 0)], injectionSwitch[1])) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-1.0) : 1.0))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(vec2(-5363.4794, 3.7).g), _GLF_FUZZED(((false ? -595.849 : 50.79) / -585.259))), vec2(((vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_IDENTITY(((vec2(injectionSwitch[0], injectionSwitch[1])))[1], max(((vec2(injectionSwitch[0], injectionSwitch[1])))[1], ((vec2(injectionSwitch[0], injectionSwitch[1])))[1]))), bvec2(true, true))) * mat2(1.0), (vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(0.8) : injectionSwitch[0])), injectionSwitch[1])) * mat2(1.0))))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(4501.7962, uintBitsToFloat(workgroup_size), injectionSwitch)))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat3x2((vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), max((vec2(injectionSwitch[0], injectionSwitch[1])), (vec2(injectionSwitch[0], injectionSwitch[1])))))) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))) / (1 & 1))], injectionSwitch[1])) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((368.365 / (1.2 + 1.8)))), float(injectionSwitch[1]), bool(true))))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch))) / exp(vec2(0.0, 0.0)))), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + tan(vec2(0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(1.0) * (transpose(mat2(1.0)))))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), clamp(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))])) * mat2(1.0))))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(refract(vec4(7358.3816, -541.431, -457.929, -106.442)[3], -3.2, sqrt(-6.2))))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), mat2(1.0) * ((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0)))])) * mat2(1.0))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.4), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(4809.2508)), bvec2(true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])) * mat2(1.0), clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - _GLF_ZERO(0.0, injectionSwitch.x)))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(0.4), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(713.569)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)))[0], _GLF_FUZZED(87.15)), vec2(_GLF_FUZZED(-101.507), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(980.959), ((vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(((vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-1.4)), bvec2(true, false))) : _GLF_FUZZED(log(injectionSwitch)))) * mat2(1.0))))), injectionSwitch)))) / vec2(1.0, 1.0)))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(4501.7962, uintBitsToFloat(workgroup_size), injectionSwitch)))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat3x2((vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), max((vec2(injectionSwitch[0], injectionSwitch[1])), (vec2(injectionSwitch[0], injectionSwitch[1])))))) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))) / (1 & 1))], injectionSwitch[1])) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((368.365 / (1.2 + 1.8)))), float(injectionSwitch[1]), bool(true))))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch))) / exp(vec2(0.0, 0.0)))), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + tan(vec2(0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(1.0) * (transpose(mat2(1.0)))))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), clamp(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))])) * mat2(1.0))))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(refract(vec4(7358.3816, -541.431, -457.929, -106.442)[3], -3.2, sqrt(-6.2))))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), mat2(1.0) * ((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0)))])) * mat2(1.0))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.4), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(4809.2508)), bvec2(true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])) * mat2(1.0), clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - _GLF_ZERO(0.0, injectionSwitch.x)))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(0.4), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(713.569)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)))[0], _GLF_FUZZED(87.15)), vec2(_GLF_FUZZED(-101.507), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(980.959), ((vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(((vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-1.4)), bvec2(true, false))) : _GLF_FUZZED(log(injectionSwitch)))) * mat2(1.0))))), injectionSwitch)))) / vec2(1.0, 1.0)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(4501.7962, uintBitsToFloat(workgroup_size), injectionSwitch)))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat3x2((vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), max((vec2(injectionSwitch[0], injectionSwitch[1])), (vec2(injectionSwitch[0], injectionSwitch[1])))))) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0)))))) / (1 & 1))], injectionSwitch[1])) * _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED((368.365 / (1.2 + 1.8)))), float(injectionSwitch[1]), bool(true))))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch))) / exp(vec2(0.0, 0.0)))), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + tan(vec2(0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(1.0) * (transpose(mat2(1.0)))))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), clamp(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))]), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))])) * mat2(1.0))))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(refract(vec4(7358.3816, -541.431, -457.929, -106.442)[3], -3.2, sqrt(-6.2))))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), mat2(1.0) * ((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) | 0)))])) * mat2(1.0))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.4), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(4809.2508)), bvec2(true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])) * mat2(1.0), clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))))[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - _GLF_ZERO(0.0, injectionSwitch.x)))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(0.4), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED(713.569)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) * mat2(1.0))))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)))[0], _GLF_FUZZED(87.15)), vec2(_GLF_FUZZED(-101.507), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)))[1]), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(980.959), ((vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2(((vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(-1.4)), bvec2(true, false))) : _GLF_FUZZED(log(injectionSwitch)))) * mat2(1.0))))), injectionSwitch)))) / vec2(1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (true ? max(1, 1) : _GLF_FUZZED(69256))))))])) * mat2(1.0), clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * ((vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))))) * mat2(1.0))))), injectionSwitch)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch))[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(368.887), _GLF_IDENTITY(_GLF_FUZZED(-4.9), 1.0 * (_GLF_FUZZED(-4.9)))), bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0), (_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), tan(0.0), 0.0, 0.0, 1.0, 0.0)))) * mat2(1.0), (vec2(_GLF_IDENTITY(injectionSwitch[0], length(vec2(0.0, 0.0)) + (injectionSwitch[0])), injectionSwitch[1])) * mat2(1.0), (vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-6.1)), bool(false))), injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(3.4), _GLF_IDENTITY(_GLF_FUZZED(-3329.5821), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3329.5821), max(_GLF_IDENTITY(_GLF_FUZZED(-3329.5821), 1.0 * (_GLF_FUZZED(-3329.5821))), _GLF_FUZZED(-3329.5821)))), float(_GLF_FUZZED(vec3(-2.0, 99.83, 258.524).r)), bool(false)))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)))[0], mix(float(_GLF_FUZZED(0.1)), float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)))[0]), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(true, true))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 1 * (1))])) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))) - mat2(0.0, 0.0, 0.0, 0.0)), (vec2(injectionSwitch[_GLF_IDENTITY(0, (0) ^ 0)], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4147.3246)), float(1.0), bool(true)))))))), injectionSwitch))) - vec2(0.0, 0.0)), 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0), mat4x2(_GLF_IDENTITY(mat4(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), max((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * ((vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * ((vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0))))), injectionSwitch)), 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0)), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-8.1 * -6.2))), bool(false))), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(28.22) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * ((vec2(injectionSwitch[0], injectionSwitch[1])))) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))))), injectionSwitch)), 0.0, 0.0, 1.0, abs(0.0), 1.0, 1.0))))))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false, false || ((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))) && true)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), false), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true))), true)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false, false || ((_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false))) && true)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false), false), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true))), true)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.5), _GLF_FUZZED(4.3)), bvec2(false, false))).y))) || false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((false)) || false) || false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bool(bool(bvec3(false, false, false))))))) && true))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(! (injectionSwitch.x < injectionSwitch.y), false)), (bool(bvec2(! (injectionSwitch.x < injectionSwitch.y), false))) || false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.2)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))) || false))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.9)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.9)), bool(false)))) / 1.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2742.2869)), bool(false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2742.2869)), bool(false)))))), bool(bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(78.16)), bool(false))))), vec2(_GLF_IDENTITY(vec3(vec2(mat3x4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(130.321)), bool(false))), 1.0, 1.0)), 1.0), max(vec3(vec2(mat3x4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-97.10)), float(injectionSwitch.x), bool(true)))), 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((vec2(7.5, -89.79).x * (8.7 - -2.9)))), bool(false))))), 1.0), vec3(vec2(mat3x4(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 1.0)))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(abs(vec2(1.0, 1.0)))).y))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))) || false)))))) || false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               barrier();
              }
             if(_GLF_DEAD(false))
              return;
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           return;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-56.14))), injectionSwitch.x)) > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), true && (false))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), true))))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))) && true), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))), true, false)))), false || ((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))) && true))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, true, false)))), true, false)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) && true))), (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), false || ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true, true, false))))))) && true), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, true, false)))), true, false)))))), false, false, true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), float(float(min(1.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0)), clamp(float(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0)), float(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0)), float(vec3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 1.0))))), 0.0, 1.0), mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (mat4x3(injectionSwitch.x, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), (_GLF_IDENTITY(0.0, 0.0 + (0.0))) + 0.0), 0.0, 0.0, 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(-946.871, -63.70).g)), float(injectionSwitch.y), bool(true))))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_FUZZED((-6.3 - -7.8))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((3215.9753 - 1005.1674)))), 1.0)), min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), bool(true))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0))), mat3(1.0) * (mat4x3(injectionSwitch.x, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) + 0.0), 0.0, 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), false, true))) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-5687.9254) : (injectionSwitch)[0])), _GLF_FUZZED(-26.11)), vec2(_GLF_FUZZED(-97.74), (injectionSwitch)[1]), bvec2(false, true))))).x, injectionSwitch.x)))))) < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-87.12)), float(0.0), bool(true))), 0.0)), abs(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), min(float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, abs(0.0), 0.0)), float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, abs(0.0), 0.0))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(707.018, -9.6, 1.4, -20.13).w)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), bool(bool(_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), ! (! (bool(bool(false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0) : _GLF_FUZZED(inverse(mat4(-407.454, 226.410, 8.3, -8.7, -8.8, -1692.5550, 1.4, -88.66, 27.08, 7684.1725, -3.3, -92.25, -76.37, 16.78, 0.8, 9.6)))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0) : _GLF_FUZZED(inverse(mat4(-407.454, 226.410, 8.3, -8.7, -8.8, -1692.5550, 1.4, -88.66, 27.08, 7684.1725, -3.3, -92.25, -76.37, 16.78, 0.8, 9.6)))))), min(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0) : _GLF_FUZZED(inverse(mat4(-407.454, 226.410, 8.3, -8.7, -8.8, -1692.5550, 1.4, -88.66, 27.08, 7684.1725, -3.3, -92.25, -76.37, 16.78, 0.8, 9.6)))))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0), (true ? mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0) : _GLF_FUZZED(inverse(mat4(-407.454, 226.410, 8.3, -8.7, -8.8, -1692.5550, 1.4, -88.66, 27.08, 7684.1725, -3.3, -92.25, -76.37, 16.78, 0.8, 9.6))))))))) - vec2(0.0, 0.0))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bool(bool((_GLF_IDENTITY(false, true && (false)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), true)), false || (bool(bvec2(! (_GLF_DEAD(false)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), true)), false || (bool(bvec2(! (_GLF_DEAD(false)), true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), true)), false || (bool(bvec2(! (_GLF_DEAD(false)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))), true)), false || (bool(bvec2(! (_GLF_DEAD(false)), true)))))) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), false, true))), true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (false ? _GLF_FUZZED(2.9) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true))), true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3690.7788, 640.210)))).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), true && ((! ((injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((mat3(injectionSwitch.y, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), ((mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(injectionSwitch.y, injectionSwitch.y)) - 0.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0))), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), mat3(1.0) * (mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))) - mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.7) : 0.0))) - 0.0), 1.0 * (0.0)), 0.0), ((_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))), mat3(1.0) * (mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat3(1.0)) + (mat3(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), tan(0.0) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0), 1.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.5) : 1.0)), injectionSwitch.y))))), _GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(mat3(1.0)), (transpose(mat3(1.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) * (mat4x3(_GLF_IDENTITY(mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))) + (0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(injectionSwitch.y, _GLF_IDENTITY(0.0, tan(0.0) + (0.0)), _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))))))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.7) : 0.0))) - 0.0), 1.0 * (0.0)), 0.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (subgroup_size) + 0u);
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))) && true))), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true))), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))))), false, true)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))))), false, true))), (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))))), false, true)))) || false))), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false)))))))), false, true))) || false)), true, true, false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(194167u))), vec2(_GLF_FUZZED(8.5), (injectionSwitch)[1]), bvec2(false, true))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(194167u))), vec2(_GLF_FUZZED(8.5), (injectionSwitch)[1]), bvec2(false, true))))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(194167u))), vec2(_GLF_FUZZED(8.5), (injectionSwitch)[1]), bvec2(false, true))))[1], clamp((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(194167u))), vec2(_GLF_FUZZED(8.5), (injectionSwitch)[1]), bvec2(false, true))))[1], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(194167u))), vec2(_GLF_FUZZED(8.5), (injectionSwitch)[1]), bvec2(false, true))))[1], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(194167u))), vec2(_GLF_FUZZED(8.5), (injectionSwitch)[1]), bvec2(false, true))))[1]))), vec2(_GLF_FUZZED((334.913 / (+ 3.8))), _GLF_FUZZED((true ? -548.877 : 8.8))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x < injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, (false) && true), true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u, (((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))))), min(((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))))), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))))))))))), (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), _GLF_IDENTITY(((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u, (((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))))), min(((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))))), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u)), ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u))) | ((_GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), ((_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u))) | 0u)))))))))))) >> 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.2)), bool(false)))) + 0.0)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (false ? _GLF_FUZZED(-55864) : _GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(int(64), (int(64)) / 1)) | (_GLF_IDENTITY(int(64), (int(64)) / 1)))) | 0)))), clamp(int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (false ? _GLF_FUZZED(-55864) : _GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(int(64), (int(64)) / 1)) | (_GLF_IDENTITY(int(64), (int(64)) / 1)))) | 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (false ? _GLF_FUZZED(-55864) : _GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(int(64), (int(64)) / 1)) | (_GLF_IDENTITY(int(64), (int(64)) / 1)))) | 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (false ? _GLF_FUZZED(-55864) : _GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(int(64), (int(64)) / 1)) | (_GLF_IDENTITY(int(64), (int(64)) / 1)))) | 0))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (false ? _GLF_FUZZED(-55864) : _GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(int(64), (int(64)) / 1)) | (_GLF_IDENTITY(int(64), (int(64)) / 1)))) | 0)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (false ? _GLF_FUZZED(-55864) : _GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(int(64), (int(64)) / 1)) | (_GLF_IDENTITY(int(64), (int(64)) / 1)))) | 0)))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (false ? _GLF_FUZZED(-55864) : _GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(int(64), (int(64)) / 1)) | (_GLF_IDENTITY(int(64), (int(64)) / 1)))) | 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (false ? _GLF_FUZZED(-55864) : _GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(64), (int(64)) / 1), (_GLF_IDENTITY(int(64), (int(64)) / 1)) | (_GLF_IDENTITY(int(64), (int(64)) / 1)))) | 0))))))))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, ~ (~ (64))), 0, 0), clamp(ivec3(_GLF_IDENTITY(64, ~ (~ (64))), 0, 0), ivec3(_GLF_IDENTITY(64, ~ (~ (64))), 0, 0), ivec3(_GLF_IDENTITY(64, ~ (~ (64))), 0, 0)))))), (int(64)) / 1))) - 0)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / cos(0.0)), 1.0, 0.0), (true ? mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0) : _GLF_FUZZED(mat4x2(-8.4, -10.20, 4.4, 6.1, 7.9, -3.4, 327.820, 39.80)))))), max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / cos(0.0)), 1.0, 0.0), (true ? mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0) : _GLF_FUZZED(mat4x2(-8.4, -10.20, 4.4, 6.1, 7.9, -3.4, 327.820, 39.80)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / cos(0.0)), 1.0, 0.0), (true ? mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0) : _GLF_FUZZED(mat4x2(-8.4, -10.20, 4.4, 6.1, 7.9, -3.4, 327.820, 39.80))))))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) >> 0)), max(_GLF_IDENTITY(uint(2), ~ (~ (_GLF_IDENTITY(uint(2), ~ (~ (uint(2))))))), _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ~ (_GLF_IDENTITY(~ ((uint(2))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((uint(2))), (~ ((uint(2)))) - 0u), clamp(_GLF_IDENTITY(~ ((uint(2))), (~ ((uint(2)))) - 0u), _GLF_IDENTITY(~ ((uint(2))), (~ ((uint(2)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(~ ((uint(2))), (~ ((uint(2)))) - 0u), (_GLF_IDENTITY(~ ((uint(2))), (~ ((uint(2)))) - 0u)) - 0u)))))))) ^ 0u))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 ^ (4)))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(-160.737), _GLF_FUZZED(-7183.6442)), bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))).y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), ((vec2(injectionSwitch[0], injectionSwitch[1]))) - tan(vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (true ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(vec2(-8.2, 855.503)))))[1]), vec2(_GLF_FUZZED(-160.737), _GLF_FUZZED(-7183.6442)), bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))]))[0], max((vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))]))[0], (vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))]))[0])), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(-160.737), _GLF_FUZZED(-7183.6442)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), true)), true))))))).y)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5184.5791)), bool(false))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(-160.737), _GLF_FUZZED(-7183.6442)), bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY((vec2(injectionSwitch[0], injectionSwitch[1])), ((vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), (vec2(injectionSwitch[0], injectionSwitch[1])), (vec2(injectionSwitch[0], injectionSwitch[1]))))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(-160.737), _GLF_FUZZED(-7183.6442)), bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)))).y)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)))
    barrier();
   barrier();
  }
}
