#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5070.7642)), float(injectionSwitch.y), bool(true)))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), float(_GLF_FUZZED(-42.91)), bool(false))) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, cos(0.0), sqrt(1.0), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(8727.7892, 9.3)))).x < injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(172.853, -613.830)) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), (! (_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))) && true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)), (! (_GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))) && true)))))))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(51.21) : injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), float(float(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))))) > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8759.5661))))), abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0, abs(0.0), 0.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
          barrier();
         return;
        }
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true, false)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.2), _GLF_FUZZED(4.3)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (false))))))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))).y) + 0.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ((false) && true) || false)))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ((false) && true) || false))))))) && true))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.7)))) / 1.0), 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.7)))) / 1.0), 1.0), transpose(transpose(mat3(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.7)))) / 1.0), 1.0))))), _GLF_IDENTITY(mat3(mat3(transpose(_GLF_IDENTITY(mat3(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.7)))) / 1.0), 1.0), transpose(transpose(mat3(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.7)))) / 1.0), 1.0))))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(mat3(transpose(_GLF_IDENTITY(mat3(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.7)))) / 1.0), 1.0), transpose(transpose(mat3(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.7)))) / 1.0), 1.0)))))))))))), transpose(transpose(mat3(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 1.0)))))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), ~ (~ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))), (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))) ^ 0)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(-51556)))), int(5)), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(5), int(5))), clamp(0 ^ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(5), int(5))), 0 ^ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(5), int(5))), 0 ^ (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(int(6), int(6))) << _GLF_IDENTITY(int(5), int(5))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(78991) : 0 ^ ((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), ~ (~ (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) | 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(6, (_GLF_IDENTITY(6, ~ (~ (6)))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(45.02))))).x))) : _GLF_FUZZED(-19400))))))))) >> _GLF_IDENTITY(int(6), int(6)), clamp(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-13442) : _GLF_IDENTITY(int(6), max(int(6), int(6)))))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-13442) : _GLF_IDENTITY(int(6), max(int(6), int(6)))))))), int(ivec2(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-13442) : _GLF_IDENTITY(int(6), max(int(6), int(6)))))))), (true ? (1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-13442) : _GLF_IDENTITY(int(6), max(int(6), int(6)))))))) : _GLF_FUZZED(-6133))), 1))), (1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(int(6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-13442) : _GLF_IDENTITY(int(6), max(int(6), int(6)))))))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), int(ivec4((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, _GLF_IDENTITY(1 * (6), (1 * (6)) * 1))) * 1)), int(6)), 0, 1, _GLF_IDENTITY(1, max(1, 1))))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) >> 0), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | (int(6))), (true ? _GLF_IDENTITY(int(6), (int(6)) | (int(6))) : _GLF_FUZZED(78230)))), (~ (_GLF_IDENTITY(int(6), (int(6)) | (int(6))))) ^ 0))), int(6))))))) << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((86715 * 60704))))))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 0.0, 1.0)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bool(! (bool(bool(false))))))))), (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-504.020) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true))))))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       continue;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), false), bvec2(bvec2(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(false, true && (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
      continue;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))) && (_GLF_IDENTITY(false, (false) && true))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))))) && (_GLF_IDENTITY(false, (false) && true)))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))), false)))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-45660))), _GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), ((4)) / 1))) - 0), 4)), _GLF_IDENTITY(64, (64) >> (0 | 0)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY((64), 0 + ((64))), (_GLF_IDENTITY(64, 1 * (64)))), (true ? max((64), (64)) : _GLF_FUZZED(_GLF_IDENTITY(-75842, min(_GLF_IDENTITY(-75842, (-75842) | (-75842)), -75842)))))), (_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY((64), 0 + ((64))), (64)), (true ? max((64), (64)) : _GLF_FUZZED(_GLF_IDENTITY(-75842, min(_GLF_IDENTITY(-75842, (-75842) | (-75842)), -75842))))))) - 0), (_GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(91079))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(3), int(3)), ((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(91079))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(3), int(3))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max((64), (64)), (true ? max((64), (64)) : _GLF_FUZZED(-75842)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max((64), (64)), (true ? max((64), (64)) : _GLF_FUZZED(-75842))))) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max((64), (64)), (true ? max((64), (64)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-75842, 1 * (-75842))), clamp(_GLF_FUZZED(-75842), _GLF_IDENTITY(_GLF_FUZZED(-75842), (true ? _GLF_FUZZED(-75842) : _GLF_FUZZED(bitfieldInsert(61959, -36792, 17291, 17392)))), _GLF_IDENTITY(_GLF_FUZZED(-75842), 0 ^ (_GLF_FUZZED(-75842))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max((64), (64)), (true ? max((64), (64)) : _GLF_IDENTITY(_GLF_FUZZED(-75842), clamp(_GLF_FUZZED(-75842), _GLF_IDENTITY(_GLF_FUZZED(-75842), (true ? _GLF_FUZZED(-75842) : _GLF_FUZZED(bitfieldInsert(61959, -36792, 17291, 17392)))), _GLF_IDENTITY(_GLF_FUZZED(-75842), 0 ^ (_GLF_FUZZED(-75842)))))))))) / 1))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(64, (64) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY((64), 0 + _GLF_IDENTITY(((64)), (((64))) >> 0)), (64)), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? max((64), (64)) : _GLF_FUZZED(_GLF_IDENTITY(-75842, min(_GLF_IDENTITY(-75842, (-75842) | (-75842)), -75842)))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(true, bool(bool(true))) ? 0 : _GLF_FUZZED(91079))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), int(3)), ((_GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(91079), (_GLF_FUZZED(91079)) ^ 0))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(3), int(3))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max((64), (64)), (true ? max((64), (64)) : _GLF_FUZZED(-75842)))), (_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max((64), (64)), _GLF_IDENTITY((true ? max((64), (64)) : _GLF_FUZZED(-75842)), 0 | ((true ? max((64), (64)) : _GLF_FUZZED(-75842))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max((64), (64)), (true ? max((64), (64)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-75842, 1 * (-75842))), clamp(_GLF_FUZZED(-75842), _GLF_IDENTITY(_GLF_FUZZED(-75842), (true ? _GLF_FUZZED(-75842) : _GLF_FUZZED(bitfieldInsert(61959, -36792, 17291, 17392)))), _GLF_IDENTITY(_GLF_FUZZED(-75842), 0 ^ (_GLF_FUZZED(-75842)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max((64), (64)), (true ? max((64), (64)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-75842, 1 * (-75842))), clamp(_GLF_FUZZED(-75842), _GLF_IDENTITY(_GLF_FUZZED(-75842), (true ? _GLF_FUZZED(-75842) : _GLF_FUZZED(bitfieldInsert(61959, -36792, 17291, 17392)))), _GLF_IDENTITY(_GLF_FUZZED(-75842), 0 ^ (_GLF_FUZZED(-75842)))))))), _GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max((64), (64)), (true ? max((64), (64)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-75842, 1 * (-75842))), clamp(_GLF_FUZZED(-75842), _GLF_IDENTITY(_GLF_FUZZED(-75842), (true ? _GLF_FUZZED(-75842) : _GLF_FUZZED(bitfieldInsert(61959, -36792, 17291, 17392)))), _GLF_IDENTITY(_GLF_FUZZED(-75842), 0 ^ (_GLF_FUZZED(-75842))))))))))), ((_GLF_IDENTITY((_GLF_IDENTITY(64, int(ivec3(64, 0, 0)))), _GLF_IDENTITY(max((64), (64)), (true ? max((64), (64)) : _GLF_IDENTITY(_GLF_FUZZED(-75842), clamp(_GLF_FUZZED(-75842), _GLF_IDENTITY(_GLF_FUZZED(-75842), (true ? _GLF_FUZZED(-75842) : _GLF_FUZZED(bitfieldInsert(61959, -36792, _GLF_IDENTITY(17291, max(17291, 17291)), 17392)))), _GLF_IDENTITY(_GLF_FUZZED(-75842), 0 ^ (_GLF_FUZZED(-75842)))))))))) / 1))))) : _GLF_FUZZED(-94775)))), min(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), ((64) | (_GLF_IDENTITY(64, int(ivec4(_GLF_IDENTITY(64, (64) << 0), 0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) - 0), 1))))) | ((64) | (64))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), (64) | _GLF_IDENTITY((64), (_GLF_IDENTITY(false ? _GLF_FUZZED(73418) : _GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (_GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), 1 * (int(ivec2(7, 0)))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), 1 * (int(ivec2(7, 0))))), (_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), _GLF_IDENTITY(1, ~ (~ (1))) * (int(ivec2(7, 0)))))) - (1 ^ 1)))) | 0))) >> _GLF_IDENTITY(int(7), int(7)))))), (_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-81370) : 1)) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))) >> 0)) * 1), clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(73418, clamp(73418, _GLF_IDENTITY(73418, (false ? _GLF_FUZZED(-54804) : 73418)), 73418))) : _GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(30641) : 64))))) / 1)), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(26037) : 0))) << 0), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))), (_GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), 1 * (_GLF_IDENTITY(int(ivec2(7, 0)), (int(ivec2(7, 0))) << 0))))), (int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), 1 * (int(ivec2(7, 0))))))) | 0))) >> _GLF_IDENTITY(int(7), int(7)))))), (_GLF_IDENTITY((64), int(ivec4((_GLF_IDENTITY(64, 0 ^ (64))), 1, 0, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(7), int(7))), clamp(_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(7), int(7))), int(int(~ (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0)))))), ~ (1 << _GLF_IDENTITY(int(7), int(7))), ~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), max(1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(int(7), int(7)))))))))) >> _GLF_IDENTITY(int(7), int(7))))))) >> 0)) * 1), false ? _GLF_FUZZED(73418) : _GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), 1, 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) - ((0 & -62708) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) >> 0), int(4)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), 1 * (int(ivec2(7, 0)))))), (int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), 1 * (int(ivec2(7, 0))))))) | _GLF_IDENTITY(0, (0 | 0) | (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, int(int(0))))))))))) >> _GLF_IDENTITY(int(7), int(7)))))), (_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))) >> 0)) * 1), _GLF_IDENTITY(false ? _GLF_FUZZED(73418) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) - (0 >> _GLF_IDENTITY(int(6), int(6)))), int(ivec4((64), 1, 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), max((1 << _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(7), int(7)))) << 0))) >> _GLF_IDENTITY(int(7), int(7)))))), (_GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, min(7, 7)), _GLF_IDENTITY(int(ivec2(7, 0)), 1 * (int(ivec2(7, 0)))))), (int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), 1 * (int(ivec2(7, 0))))))) | 0))) >> _GLF_IDENTITY(int(7), int(7)))))), _GLF_IDENTITY((_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ (0 | 0))))))))) >> 0, ((_GLF_IDENTITY((64), int(ivec4((64), 1, 0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))), ((1 << _GLF_IDENTITY(int(7), int(7)))) | ((1 << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), int(7)))), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) ^ (0 | 0))))))))) >> 0) << _GLF_IDENTITY(0, min(0, 0))))) * 1), min(false ? _GLF_FUZZED(73418) : _GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) | 0)), ~ (~ ((64)))), 1, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(7)))))), (_GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), 1 * (int(ivec2(7, 0))))), int(ivec3(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), 1 * _GLF_IDENTITY((int(ivec2(7, 0))), ((int(ivec2(7, 0)))) | ((int(ivec2(7, 0))))))), 0, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))), (int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), 1 * (int(ivec2(7, 0))))))) | 0))) >> _GLF_IDENTITY(int(7), int(7)))))), (_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, (7) | (7))))) << 0)))) >> _GLF_IDENTITY(int(7), int(7))))))) >> 0)) * 1), _GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(73418) : _GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(ivec3(int(7), (0 | 0), (1 & 1)), (ivec3(int(7), (0 | 0), (1 & 1))) << ivec3(0, 0, 0)))), (_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), 0 | (int(7))), int(7)))) + 0), int(7)))))), (_GLF_IDENTITY(_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), _GLF_IDENTITY(1, (1) << 0) * (int(ivec2(_GLF_IDENTITY(7, min(7, 7)), 0)))))), (int(_GLF_IDENTITY(7, _GLF_IDENTITY(int(ivec2(7, 0)), 1 * (int(ivec2(7, 0))))))) | 0))) >> _GLF_IDENTITY(int(7), int(7)))))), (_GLF_IDENTITY((64), int(ivec4((64), 1, 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))))) >> 0)) * 1)))))))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), (_GLF_IDENTITY((64), max((64), (64)))) ^ 0) | _GLF_IDENTITY((64), max((64), (64))), max(_GLF_IDENTITY((64) | _GLF_IDENTITY(_GLF_IDENTITY((64), min(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) - 0)), min((64), (64))), (64))), max((64), (64))), ((64) | _GLF_IDENTITY(_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), min((64), (64))), (64))), max((64), (64)))) + 0), (64) | _GLF_IDENTITY((64), max((64), (64))))))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0)))))) | ((_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), (_GLF_IDENTITY((64), max((64), (64)))) ^ 0) | _GLF_IDENTITY((64), max((64), (64))), max(_GLF_IDENTITY((64) | _GLF_IDENTITY(_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), min((64), (64))), (64))), max((64), (_GLF_IDENTITY(64, (64) >> 0)))), ((64) | _GLF_IDENTITY(_GLF_IDENTITY((64), min(_GLF_IDENTITY((64), min((64), (64))), (64))), max((64), (64)))) + 0), (64) | _GLF_IDENTITY((64), max((64), (64))))))))), min(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), (64))) | (64))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) | (64))), _GLF_IDENTITY((false ? _GLF_FUZZED(-67003) : ~ (_GLF_IDENTITY(64, (64) | (64)))), ((false ? _GLF_FUZZED(-67003) : ~ (_GLF_IDENTITY(64, (64) | (64))))) - (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2))), _GLF_IDENTITY(int(2), (int(2)) | 0))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) | ((64))) | (64)), (_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) | ((64))) | (64))) + (0 & 65077)), ~ (~ (_GLF_IDENTITY(64, (64) | (64)))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) | (64))), (~ (_GLF_IDENTITY(64, (64) | (64)))) >> 0), ~ (_GLF_IDENTITY(64, (64) | (64)))))) - 0)))), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), ((_GLF_IDENTITY(64, clamp(64, 64, 64))) | _GLF_IDENTITY((64), max((64), (64)))) >> 0))), min(~ (_GLF_IDENTITY(64, (64) | (64))), ~ (_GLF_IDENTITY(64, (64) | (64)))))))), ((~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), ((64) | _GLF_IDENTITY((64), max(_GLF_IDENTITY((64), ((64)) - 0), (64)))) >> 0))), min(~ (_GLF_IDENTITY(64, (64) | (64))), ~ (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) | 0))), 64, 64))) | (64))))))))) | ((~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), _GLF_IDENTITY(((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) + 0, (false ? _GLF_FUZZED(2559) : ((64)) + 0)))) >> 0)))), max(_GLF_IDENTITY(((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) + 0, (false ? _GLF_FUZZED(2559) : ((64)) + 0)))) >> 0)))), 1 * (((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) + 0, (false ? _GLF_FUZZED(2559) : ((64)) + 0)))) >> 0)))))), ((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), _GLF_IDENTITY(((64)) + 0, (false ? _GLF_FUZZED(2559) : ((64)) + 0)))) >> 0)))))) >> 0))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY((64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(_GLF_IDENTITY(83766, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(-94631) : 83766))) : (64))), ~ (~ (_GLF_IDENTITY((64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(_GLF_IDENTITY(83766, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(-94631) : 83766))) : (64))), max(_GLF_IDENTITY(_GLF_IDENTITY((64), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) | (64))), 0 + ((64))))) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(_GLF_IDENTITY(83766, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(-94631) : 83766))) : (64))), ((64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(_GLF_IDENTITY(83766, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(-94631) : 83766))) : (64)))) / 1), (64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(_GLF_IDENTITY(83766, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(-94631) : 83766))) : (_GLF_IDENTITY(64, ~ (~ (64))))))))))))), ~ (_GLF_IDENTITY(64, (64) | (64))))))))))))), 0 ^ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), max((64) | _GLF_IDENTITY((64), max((64), (64))), (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-88282)))) | _GLF_IDENTITY((64), max((64), (64))))))), min(~ (_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, int(int(64))), 64))), max((64), (64))) | (64), (false ? _GLF_FUZZED(-22031) : _GLF_IDENTITY((64), max((64), (64))) | _GLF_IDENTITY((64), ((64)) - 0))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) | (64))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, (64) | (64))), min(~ (_GLF_IDENTITY(64, (64) | (64))), ~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | (64), _GLF_IDENTITY(int(int((64) | (64))), min(int(int((64) | (64))), int(int((64) | (64))))))))))) - 0)))), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((_GLF_IDENTITY(64, ~ (~ (64)))), max((64), (64))), ((64) | _GLF_IDENTITY((64), max((64), (64)))) >> 0))), min(~ (_GLF_IDENTITY(64, (64) | (64))), ~ (_GLF_IDENTITY(64, (64) | (64)))))))), ((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), ((64) | _GLF_IDENTITY((64), max((64), (64)))) >> 0))), min(~ (_GLF_IDENTITY(64, (64) | (64))), ~ (_GLF_IDENTITY(64, (64) | (64))))))), (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (_GLF_IDENTITY(64, int(int(64)))))), (_GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), ~ (~ (_GLF_IDENTITY((64) | _GLF_IDENTITY((64), max(_GLF_IDENTITY((64), ((64)) - 0), (64))), ~ (~ (_GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), ((64) | _GLF_IDENTITY((64), max((64), (64)))) | 0)))))))) >> 0))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), (64) | (64))), ~ (_GLF_IDENTITY(64, (64) | (64)))))))) - 0))) | ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), _GLF_IDENTITY(((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + 0)) >> 0)))), min(((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + 0)) >> 0)))), ((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + 0)) >> 0)))))) >> 0))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), ((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + 0)) >> 0)))) >> 0))), clamp(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), ((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + 0)) >> 0)))) >> 0))), ~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), ((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + 0)) >> 0)))) >> 0))), ~ (_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) >> 0)))) | _GLF_IDENTITY((64), max((64), (64))), ((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + 0)) >> 0)))) >> 0))))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(_GLF_IDENTITY(83766, (83766) - 0)) : (64))))), ~ (_GLF_IDENTITY(64, (64) | (64)))))), max(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((64), max((64), (64))), ((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) + 0), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(-52414) : _GLF_IDENTITY(_GLF_IDENTITY((64), ((64)) + 0), clamp(_GLF_IDENTITY((64), _GLF_IDENTITY(((64)), (_GLF_IDENTITY(((64)), min(((64)), ((64))))) | (((64)))) + 0), _GLF_IDENTITY((64), ((64)) + 0), _GLF_IDENTITY((64), ((64)) + 0)))))) >> 0)))) >> 0))), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64))))), ~ (_GLF_IDENTITY(64, (64) | (64)))), (min(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64))))), ~ (_GLF_IDENTITY(64, (64) | (64))))) >> 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), int(ivec2(64, 0)))), max((_GLF_IDENTITY(64, int(ivec2(64, 0)))), (_GLF_IDENTITY(64, int(ivec2(64, 0)))))), max((64), (64))), ((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) + 0)) >> 0)))) >> 0))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY((_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) | (64))))) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64))), clamp((64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64))), _GLF_IDENTITY((64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64))), clamp((64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64))), (64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64))), _GLF_IDENTITY((64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64))), ((64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64)))) | ((64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64))))))), (64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64))))))), ~ (_GLF_IDENTITY(64, (64) | (64)))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64) | _GLF_IDENTITY((_GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) | (64))))))), max((_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) ^ 0), 64, 64))), (64))), ((64) | _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) + 0)), (_GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) + 0)), ((_GLF_IDENTITY((64), ((64)) + 0))) * 1)) << 0) >> 0)))) >> 0))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (64) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(83766) : (64))))), ~ (_GLF_IDENTITY(64, (64) | (64))))))) + 0)))))))))))))), 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (_GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false)))))))), bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), false))), bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(faceforward(injectionSwitch, injectionSwitch, injectionSwitch)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
  }
}
