#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 vec3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_5 {
 float _f0;
 vec3 _f1;
 ivec4 _f2;
 float _f3;
 uint workgroup_base;
 mat3x2 _f4;
 vec3 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_3 {
 int _f0;
 ivec3 _f1;
 mat4 _f2;
 mat4x2 _f3;
 vec4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 ivec2 _f1;
 mat4 _f2;
 uvec4 _f3;
 bvec4 _f4;
 bool _f5;
 mat2 _f6;
} ;

struct _GLF_struct_1 {
 bool _f0;
 vec2 _f1;
 mat2x4 _f2;
 uvec4 _f3;
 bool _f4;
 ivec2 _f5;
 int _f6;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat4 _f1;
 uint _f2;
 vec2 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 int _f1;
 uvec4 _f2;
 _GLF_struct_1 _f3;
 bvec2 _f4;
 _GLF_struct_2 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 uvec2 _f1;
 uint _f2;
 _GLF_struct_7 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), true && (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))) && true))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false), (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (! ((_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))) && true))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))))) || false), false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! ((_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))))), (false || (_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-156.419)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))) && true))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec2(bool(bvec3(false, true, true)), true)))), (injectionSwitch.x > injectionSwitch.y)))) && true)))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))))) || false), false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true))))))))))), ((! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec3(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), false, true)))))))))))) && true))))))))))) || false)))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))) && true))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))) && true))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))) && true))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))), false))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! ((_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))), false || (_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))) && true))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))), (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))), (injectionSwitch.x > injectionSwitch.y))))))), false)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true)))))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))), (_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))))) || false), false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! ((_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bool(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(bool(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))) && true, bool(bvec4((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)))) && true, true, true, false))), false, true, false)))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1052.1443)), bool(false))) > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), false, false)), false, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (injectionSwitch.x > injectionSwitch.y)) || false)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 1.0, 1.0, 1.0, abs(1.0))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), false || (_GLF_IDENTITY(false, ! (! (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), _GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), (bool(bvec4(false || (false), true, true, false))) || false), true, true, false)))), false || (! (_GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), _GLF_IDENTITY((bool(bvec4(false || (false), true, true, false))) || false, false || (_GLF_IDENTITY((bool(bvec4(false || (false), true, true, false))) || false, ! (_GLF_IDENTITY(! ((bool(bvec4(false || (false), true, true, false))) || false), true && (! ((bool(bvec4(false || (false), true, true, false))) || false)))))))), true, true, false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), _GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), (bool(bvec4(false || (false), true, true, false))) || false), true, true, false)))), false || (! (_GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), (bool(bvec4(false || (false), true, true, false))) || false), true, true, false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false || (false), ! (! (false || (false)))), _GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false || (false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true)), false)), (bool(bvec4(false || (false), true, true, false))) || false), true, true, false)))), false || (! (_GLF_IDENTITY(bool(bvec4(false || (false), true, true, _GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false || (false), true, true, false)), (bool(bvec4(false || (false), true, true, false))) || false), (bool(bvec4(false || (false), true, true, false))) || false), true, true, false)))))))))) && true))))), false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (_GLF_IDENTITY(false, false || (false)))), false, false, false))))))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u)), 1u, 1u))), 0u)))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x, min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(1, max(1, 1)), 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(25460, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (25460))), (_GLF_FUZZED(25460)) * 1) : 2)), 1, 0, 1)), _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0, ~ (~ (_GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(25460), (_GLF_FUZZED(25460)) << 0) : 2)), 1, 0, 1))) << 0, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0, ((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0) << 0), int(_GLF_IDENTITY(int(_GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0, ((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0) << 0)), (true ? int(_GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0, ((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0) << 0)) : _GLF_FUZZED(-69867))))))))))))], clamp(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), (false ? _GLF_FUZZED(98968) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(25460, (25460) ^ 0)) : 2)))), 1, 0, 1)), _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ((false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, ~ (~ (2))))) | 0)), (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ((false ? _GLF_FUZZED(25460) : 2)) | 0))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0))) + 0.0), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0))))))))))), 1, 0, 1))), (true ? (int(ivec4(_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ((false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, ~ (~ (2))))) | 0)), (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ((false ? _GLF_FUZZED(25460) : 2)) | 0))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0))) + 0.0), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0))))))))))), 1, 0, 1))) : _GLF_FUZZED(910))) << 0))], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ~ (~ ((false ? _GLF_FUZZED(25460) : 2))))) + (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(0), 0 | (int(0)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(0), 0 | (int(0)))), min(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(0), 0 | (int(0)))), _GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(0), 0 | (int(0)))), clamp(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(0), 0 | (int(0)))), 0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(0), 0 | (int(0)))), 0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(0), 0 | (int(0))))))))) | (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(0), 0 | (int(0))))))))), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, int(ivec3(2, (0 << _GLF_IDENTITY(int(5), int(5))), 0))))), 1, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1))) << 0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(25460) : 2, (false ? _GLF_FUZZED(25460) : 2) >> 0))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(25460) : 2, (false ? _GLF_FUZZED(25460) : 2) << 0)), (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ~ (~ ((false ? _GLF_FUZZED(25460) : 2))))) + (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))))))), _GLF_IDENTITY(int(0), 0 | (int(0))))))), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, int(ivec3(2, (0 << _GLF_IDENTITY(int(5), int(5))), 0))), max(false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, int(ivec3(2, (0 << _GLF_IDENTITY(int(5), int(5))), 0))), false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, int(ivec3(2, (0 << _GLF_IDENTITY(int(5), int(5))), 0))))))), 1, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, 1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), ~ (~ (ivec4(5, 1, 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))))), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1))) << 0))))], uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(false ? _GLF_FUZZED(25460) : 2, clamp(false ? _GLF_FUZZED(25460) : 2, _GLF_IDENTITY(false ? _GLF_FUZZED(25460) : 2, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(32832) : false ? _GLF_FUZZED(25460) : 2)), false ? _GLF_FUZZED(25460) : 2)))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, _GLF_IDENTITY(0, (0) + 0), 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, _GLF_IDENTITY(0, (0) + 0), 1))) - 0), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u), max(_GLF_IDENTITY(uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1), (ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)) | ivec4(0, 0, 0, 0))), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u), (uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << _GLF_IDENTITY(0, (0) | 0)))], 0u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u)), uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u))))), gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), max(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), clamp(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY(2, (2) / 1)))))) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), (true ? (2) : _GLF_FUZZED(-48776))), (2), (2))) / 1))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((ivec4(-85451, 80682, 73952, 34592) % ivec4(-81361, -43100, -55054, 24635))) : ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(99667))), 0, 1))))), ((int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (false ? _GLF_FUZZED(25460) : 2)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 1)))) | _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, int(ivec4(0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), (1 | 1), int(_GLF_ZERO(0.0, injectionSwitch.x)))))) << 0))]))) >> 0u)), uvec3(1u, 1u, 1u) * (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | uvec3(0u, 0u, 0u))[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_IDENTITY(_GLF_FUZZED(25460), (false ? _GLF_FUZZED(-76844) : _GLF_FUZZED(25460))) : 2)), _GLF_IDENTITY(1, max(1, 1)), 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_IDENTITY(_GLF_FUZZED(25460), _GLF_IDENTITY(int(ivec2(_GLF_FUZZED(25460), 1)), 0 | (int(ivec2(_GLF_FUZZED(25460), 1))))) : 2)), 1, 0, 1))) << 0))], (_GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2))) << int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(25460, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (25460))), (_GLF_FUZZED(25460)) * 1) : 2)), 1, 0, 1)), _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0, ~ (~ (_GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0, 0 ^ (_GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0, ((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0) << 0))))))))], clamp(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), (false ? _GLF_FUZZED(98968) : _GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(25460, (25460) ^ 0)) : 2)))), 1, 0, 1)), _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | 0)) >> 0)) | (2)), _GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ((false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, ~ (~ (2))))) | 0)), (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ((false ? _GLF_FUZZED(25460) : 2)) | 0))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0))) + 0.0), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0))))))))), (true ? ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ((false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, ~ (~ (2))))) | 0)), (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ((_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(25460) : 2)) | 0))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0))) + 0.0), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3938.8865) : 0.0)), 0.0)))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), sqrt(1.0), 1.0, 1.0, 0.0, 0.0))))))))) : _GLF_FUZZED(11185))))), 1, 0, 1))), (true ? (int(ivec4(_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ((false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, ~ (~ (2))))) | 0)), (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ((false ? _GLF_FUZZED(25460) : 2)) | 0))) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0))) + 0.0), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 0.0, 0.0))))))))))), 1, 0, 1))) : _GLF_FUZZED(910))) << 0))], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), ~ (~ ((false ? _GLF_FUZZED(25460) : 2))))) + (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(int(0), 0 | (int(0))))))), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, int(ivec3(2, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5))))), 0, 1)))), 0))))), 1, _GLF_IDENTITY(0, (0) / (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(5), int(5))), 0 ^ (~ (1 << _GLF_IDENTITY(int(5), int(5)))))))) >> (0 >> _GLF_IDENTITY(int(6), int(6))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(5), int(5))), 0 ^ (~ (1 << _GLF_IDENTITY(int(5), int(5)))))))) >> (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(5), int(5))), 0 ^ (~ (1 << _GLF_IDENTITY(int(5), int(5)))))))) >> (0 >> _GLF_IDENTITY(int(6), int(6))))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(5), int(5))), 0 ^ (~ (1 << _GLF_IDENTITY(int(5), int(5)))))))) >> (0 >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(5), int(5))), 0 ^ (~ (1 << _GLF_IDENTITY(int(5), int(5)))))))) >> (0 >> _GLF_IDENTITY(int(6), int(6))))), (false ? _GLF_FUZZED(-80856) : (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(5), int(5))), 0 ^ (~ (1 << _GLF_IDENTITY(int(5), int(5)))))))) >> (0 >> _GLF_IDENTITY(int(6), int(6))))))))) >> _GLF_IDENTITY(int(5), int(5)))), 1))) << 0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, _GLF_IDENTITY((false ? _GLF_FUZZED(25460) : 2), (_GLF_IDENTITY((false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, (2) >> (0 >> _GLF_IDENTITY(int(4), int(4))))), ~ (~ ((false ? _GLF_FUZZED(25460) : 2))))) + (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), (ivec4(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) + ivec4(0, 0, 0, 0))))), _GLF_IDENTITY(int(0), 0 | (int(0))))))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(73036) : _GLF_IDENTITY(1, 0 + (1)))), 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : _GLF_IDENTITY(2, int(ivec3(2, (0 << _GLF_IDENTITY(int(5), int(5))), 0))))), 1, _GLF_IDENTITY(0, (0) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), 1))) << 0))))], uint(_GLF_IDENTITY(uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u), (uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u), (uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u), (uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u), (uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u), (uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))) << 0))], 0u, 0u, 1u)) << uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u)))), uvec4(gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), _GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))), (_GLF_IDENTITY((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1))), (false ? _GLF_FUZZED(-71661) : (int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)))))) ^ 0) << 0))], 0u, 0u, 1u))))), gl_WorkGroupSize[_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(25460) : _GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), (_GLF_IDENTITY(2, (2) / 1)) | (_GLF_IDENTITY(2, (2) / 1))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1)), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((ivec4(-85451, 80682, 73952, 34592) % ivec4(-81361, -43100, -55054, 24635))) : ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(99667))), 0, 1))))), ((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 1)))) | 0) << 0, (_GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, 0, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((ivec4(-85451, 80682, 73952, 34592) % ivec4(-81361, -43100, -55054, 24635))) : ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(99667))), 0, 1))))), ((int(ivec4(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(25460) : 2)), 1, _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) << 0))), 1)))) | 0) << 0) << 0)))]))) >> 0u))))).x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(_GLF_IDENTITY(uint(gl_WorkGroupID.x), max(uint(gl_WorkGroupID.x), uint(gl_WorkGroupID.x)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_4(_GLF_struct_0(bvec3(true), mat4(1.0), _GLF_IDENTITY(1u, (1u) - 0u), vec2(1.0)), 1, uvec4(1u), _GLF_struct_1(true, vec2(1.0), mat2x4(1.0), uvec4(1u), true, ivec2(1), 1), bvec2(true), _GLF_struct_2(mat3x2(1.0), ivec2(1), mat4(1.0), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(true, true && (true)) ? uvec4(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec4(88364u, 31664u, 75149u, 35293u), (_GLF_IDENTITY(uvec4(88364u, 31664u, 75149u, 35293u), (uvec4(88364u, 31664u, 75149u, 35293u)) + uvec4(0u, 0u, 0u, 0u))) / _GLF_IDENTITY(uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sqrt(1857.5483)) : _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) / uvec4(1u, 1u, 1u, 1u)))))), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (true)))))), true, mat2(1.0)), _GLF_struct_3(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (_GLF_IDENTITY(1, int(int(1)))))) << 0), (1) << 0), ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1))), mat4(1.0), mat4x2(1.0), vec4(1.0), ivec3(1))), uvec2(1u), 1u, _GLF_struct_7(_GLF_struct_5(1.0, vec3(1.0), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(1), ivec4(1, 1, 1, 1) * (ivec4(1)))))) << ivec4(0, 0, 0, 0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(vec4(-63.40, 799.988, 4.2, 11.16).z), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(vec4(-63.40, 799.988, 4.2, 11.16).z), clamp(_GLF_FUZZED(vec4(-63.40, 799.988, 4.2, 11.16).z), _GLF_FUZZED(vec4(-63.40, 799.988, 4.2, 11.16).z), _GLF_FUZZED(vec4(-63.40, 799.988, 4.2, 11.16).z))), sqrt(1.0), 1.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec3(tan(0.0), 1.0, 0.0)), dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec3(tan(0.0), 1.0, 0.0))), cos(0.0), 0.0, sqrt(0.0), 0.0))))), workgroup_size * workgroup_id, mat3x2(1.0), vec3(1.0), uvec2(1u)), _GLF_struct_6(vec3(1.0), mat3x4(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (vec2(vec2(injectionSwitch))) + vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, sqrt(0.0), cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sin(0.0), 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(sin(0.0), sin(0.0), 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0), transpose(transpose(mat4x3(0.0, sqrt(0.0), cos(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(sin(0.0), sin(0.0), 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0)), dot(vec4(sin(0.0), sin(0.0), 1.0, 0.0), vec4(1.0, 1.0, 0.0, 1.0))), 0.0, 0.0))))))))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 1u, (1u ^ 1u), 0u), uvec4(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u, 0u) + _GLF_IDENTITY((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 1u, (1u ^ 1u), 0u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 1u, (1u ^ 1u), 0u), (uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 1u, (1u ^ 1u), 0u)) | uvec4(0u, 0u, 0u, 0u))))), uvec4(0u, 0u, 0u, 0u) ^ ((_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 1u, (1u ^ 1u), 0u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 1u, (1u ^ 1u), 0u), (uvec4(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 1u, (1u ^ 1u), 0u)) | uvec4(0u, 0u, 0u, 0u)))))))))) * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(num_workgroup))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) | 0u), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (false ? _GLF_FUZZED(uvec2(140562u, 136294u)) : _GLF_IDENTITY(uvec2(subgroup_size, 1u), uvec2(uvec3(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, 1u)) | uvec2(0u, 0u)), _GLF_IDENTITY(1u, max(1u, 1u))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(139417u, 91211u), uvec2(1u, 1u) * (uvec2(139417u, 91211u)))) : uvec2(subgroup_size, 1u)))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))));
 uint virtual_gid = _GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)) << 0u)) / 1u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base, (false ? _GLF_FUZZED(virtual_gid) : _GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (_GLF_struct_replacement_8._f3._f0.workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) % subgroup_size)) << 0u)) / 1u)) << 0u)) / 1u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(2.3)), bool(false))), 0.0, 1.0, 1.0))))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(2.3)), bool(false))), 0.0, 1.0, 1.0))))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(bvec2(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(2.3)), bool(false))), 0.0, 1.0, 1.0))))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) + 0, (_GLF_IDENTITY((2), (_GLF_IDENTITY((2), int(ivec4(_GLF_IDENTITY((2), int(ivec2((2), 1))), 1, 0, (1 ^ 1))))) ^ 0) + 0) | ((2) + 0))), min(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), (false ? _GLF_FUZZED(-90052) : (2))) + 0, ((2) + 0) | ((2) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) + 0, ((2) + 0) | ((2) + 0))), (_GLF_IDENTITY(2, _GLF_IDENTITY((2) + 0, ((2) + 0) | ((2) + 0)))) | (_GLF_IDENTITY(2, _GLF_IDENTITY((2) + 0, ((2) + 0) | ((2) + 0)))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}
