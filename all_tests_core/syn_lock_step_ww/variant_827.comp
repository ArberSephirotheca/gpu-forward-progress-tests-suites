#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true))))))), (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true))))))), false || (bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true)))))))))) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true))))))), (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true))))))), false || (bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true)))))))))) && true)) || false, bool(bvec4((_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true))))))), (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true))))))), false || (bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true)))))))))) && true)) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true))), bool(bvec3(false, true, false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), sqrt(vec2(0.0, 0.0)) + (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)) && true), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(84.26, 86.67)))), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), sqrt(vec2(0.0, 0.0)) + (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), sqrt(vec2(0.0, 0.0)) + (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), mix(vec2((_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), sqrt(vec2(0.0, 0.0)) + (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))[0], (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), sqrt(vec2(0.0, 0.0)) + (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))[1]), vec2(_GLF_FUZZED(-3.0), _GLF_FUZZED(8.3)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), sqrt(vec2(0.0, 0.0)) + (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), sqrt(vec2(0.0, 0.0)) + (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), sqrt(vec2(0.0, 0.0)) + (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))))), true && (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), sqrt(vec2(0.0, 0.0)) + (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), sqrt(vec2(0.0, 0.0)) + (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y))))))))) && true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, false, false, true))), false, true, true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))).x, (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec4(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x) * 1u, 0u | ((gl_NumWorkGroups.x) * 1u))), 1u, 1u, 0u)))) | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x)), (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))) / 1u), gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_id)))) + 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x))), (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)))) / ((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ~ (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u + (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (false ? _GLF_FUZZED(subgroup_id) : ~ ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), 0u | (uint(2u)))) | (_GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u))), uint(2u)))))))))) & 1u)), _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u), (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u)) >> 0u)) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u), (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u)) >> 0u)) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u), (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u)) >> 0u)) | (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u))), 0u)) ^ uvec2(0u, 0u))))) | (gl_NumWorkGroups.x), (_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), 0u ^ ((_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))) | 0u)) | (gl_NumWorkGroups.x), 0u | ((_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) ^ 0u)) | 0u)) | (gl_NumWorkGroups.x)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_id) : (gl_NumWorkGroups.x))) / 1u), (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u)) | (gl_NumWorkGroups.x)))), gl_NumWorkGroups.x))), _GLF_IDENTITY((1u ^ _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(197611u)))))), 0u | ((1u ^ 1u))) ^ _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), min((gl_NumWorkGroups.x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)))) + (uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)))).x), (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u)) ^ uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))), 0u))).x)))), gl_NumWorkGroups.x)))), 0u + (((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)).x), min((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))).x), (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)).x), min((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))).x), (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x)))), (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) | (0u)), 0u)), 0u, 0u)).x), min((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))).x), (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x))))) - (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) | 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x), ((gl_NumWorkGroups.x)) << _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, ~ (~ (0u))) : _GLF_IDENTITY(_GLF_FUZZED(59314u), 0u | (_GLF_IDENTITY(_GLF_FUZZED(59314u), (_GLF_FUZZED(59314u)) | (_GLF_FUZZED(59314u))))))) : _GLF_FUZZED(subgroup_id)))) | _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(subgroup_local_id) : (gl_NumWorkGroups.x)))), gl_NumWorkGroups.x))), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups.x)), (~ ((gl_NumWorkGroups.x))) / 1u)), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups.x)), max(~ ((gl_NumWorkGroups.x)), _GLF_IDENTITY(~ ((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), gl_NumWorkGroups)).x)), (~ ((gl_NumWorkGroups.x))) >> 0u)))), ~ _GLF_IDENTITY((~ (~ (~ _GLF_IDENTITY((_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), 1u, 0u)), clamp(uint(uvec3((_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), 1u, 0u)), uint(uvec3((_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), 1u, 0u)), uint(uvec3((_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x)))), 1u, 0u)))))))), (false ? _GLF_FUZZED(72712u) : (~ (~ (~ (_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | _GLF_IDENTITY(((gl_NumWorkGroups.x)), 0u | (((gl_NumWorkGroups.x))))))))))))))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | _GLF_IDENTITY((gl_NumWorkGroups.x), ~ (~ ((gl_NumWorkGroups.x)))))))), gl_NumWorkGroups.x)))))))) / 1u), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))) ^ (gl_NumWorkGroups)).x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(387.910)))), float(_GLF_FUZZED((-76.49 / -0.7))), bool(false))) + (1.0)), 1.0))).x < injectionSwitch.y)))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), uint(uvec2(_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id)), 0u))), 0u))), 1u)));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), _GLF_IDENTITY(0u + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), subgroup_id * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u | 0u)) * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(60701, (60701) >> 0), 40489)) : subgroup_id * subgroup_size)))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size), max((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))))))))), clamp(_GLF_IDENTITY(((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) * 1u)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | 0u)))))))), (false ? _GLF_FUZZED(subgroup_size) : ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size)))) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | 0u)))))))))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(60701, 0 ^ (_GLF_IDENTITY(60701, (60701) / 1))), 40489)) : _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | 0u)))))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | _GLF_IDENTITY(0u, min(0u, 0u))))))))), (false ? _GLF_FUZZED(subgroup_id) : (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | _GLF_IDENTITY(0u, min(0u, 0u)))))))))))))) << 0u))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), _GLF_IDENTITY(((subgroup_id * subgroup_size)), (((subgroup_id * subgroup_size))) - 0u) << 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(60701, (60701) >> 0), 40489)) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))))) << 0u))))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(60701, _GLF_IDENTITY((60701) >> 0, clamp((60701) >> 0, (60701) >> 0, (60701) >> 0))), 40489)) : subgroup_id * subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : subgroup_id * subgroup_size))))) << 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(60701, (60701) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(60701, (60701) >> 0), (_GLF_IDENTITY(60701, (60701) >> 0)) | 0)) | (_GLF_IDENTITY(60701, (60701) >> 0))), 40489)) : subgroup_id * subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : subgroup_id * subgroup_size))))) << 0u)))))))), max(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(60701, _GLF_IDENTITY((60701) >> 0, clamp((60701) >> 0, (60701) >> 0, (60701) >> 0))), 40489)) : subgroup_id * subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : subgroup_id * subgroup_size))))) << 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(60701, (60701) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(60701, (60701) >> 0), (_GLF_IDENTITY(60701, (60701) >> 0)) | 0)) | (_GLF_IDENTITY(60701, (60701) >> 0))), 40489)) : subgroup_id * subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : subgroup_id * subgroup_size))))) << 0u)))))))), max((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(60701, _GLF_IDENTITY((60701) >> 0, clamp((60701) >> 0, (60701) >> 0, (60701) >> 0))), 40489)) : subgroup_id * subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : subgroup_id * subgroup_size))))) << 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(60701, (60701) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(60701, (60701) >> 0), (_GLF_IDENTITY(60701, (60701) >> 0)) | 0)) | (_GLF_IDENTITY(60701, (60701) >> 0))), 40489)) : subgroup_id * subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : subgroup_id * subgroup_size))))) << 0u)))))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(60701, _GLF_IDENTITY((60701) >> 0, clamp((60701) >> 0, (60701) >> 0, (60701) >> 0))), 40489)) : subgroup_id * subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : subgroup_id * subgroup_size))))) << 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(60701, (60701) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(60701, (60701) >> 0), (_GLF_IDENTITY(60701, (60701) >> 0)) | 0)) | (_GLF_IDENTITY(60701, (60701) >> 0))), 40489)) : subgroup_id * subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : subgroup_id * subgroup_size))))) << 0u)))))))))), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(60701, _GLF_IDENTITY((60701) >> 0, clamp((60701) >> 0, (60701) >> 0, (60701) >> 0))), 40489)) : subgroup_id * subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : subgroup_id * subgroup_size))))) << 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u + _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))) << 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(60701, (60701) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(60701, (60701) >> 0), (_GLF_IDENTITY(60701, (60701) >> 0)) | 0)) | (_GLF_IDENTITY(60701, (60701) >> 0))), 40489)) : subgroup_id * subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_id, 60701, 40489)) : subgroup_id * subgroup_size))))) << 0u)))))))))))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) && true), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (true) && true), true, true), true))), true)))))) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), (bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true)))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y)), false, true)))), (bool(bvec4(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))) && true)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)) | (0u | 0u))) | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u))))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u), (uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (~ (0u))))))) | (uvec2(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), max((0u), (0u)))))))))), clamp(uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), max(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (true ? clamp(subgroup_size, subgroup_size, subgroup_size) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), ~ (~ (clamp(subgroup_size, subgroup_size, subgroup_size)))), (clamp(subgroup_size, subgroup_size, subgroup_size)) - 0u)) / (1u | 0u)))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u), (uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.6)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x))))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)), injectionSwitch)).x)))) | 0u), (true ? workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), uint(uint(_GLF_IDENTITY(0u, 0u | (0u))))))), _GLF_IDENTITY(0u, 0u | (0u)))))) | (_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u), min(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 0u)))))), ~ (_GLF_IDENTITY(~ (uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), 0u)), _GLF_IDENTITY((~ (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))) | uvec2(0u, 0u), _GLF_IDENTITY(uvec2(uvec3(_GLF_IDENTITY((~ (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))) | uvec2(0u, 0u), ((~ (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))) | uvec2(0u, 0u)) | ((~ (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))) | uvec2(0u, 0u))), (1u | 1u))), (uvec2(uvec3(_GLF_IDENTITY((~ (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))) | uvec2(0u, 0u), ((~ (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))) | uvec2(0u, 0u)) | ((~ (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))) | uvec2(0u, 0u))), (1u | 1u)))) >> (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(0u), uvec2(0u)))))))), _GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u), uvec2(0u, 0u) | (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) * 1u)))) | 0u), ~ (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_size))) | 0u)))))), 0u), (uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u, 0u | (0u)))) | (uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? (subgroup_size) : _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(uint(true ? (subgroup_size) : _GLF_FUZZED(subgroup_local_id))), (uint(uint(true ? (subgroup_size) : _GLF_FUZZED(subgroup_local_id)))) >> 0u))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) | 0u)), min(~ (_GLF_IDENTITY(0u, (0u) | 0u)), ~ (_GLF_IDENTITY(0u, (0u) | 0u))))))))), 0u), (uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), subgroup_size)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u, 0u | (0u)))) | (_GLF_IDENTITY(uvec2(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) * subgroup_size, 0u), (uvec2(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))) * subgroup_size, 0u)) - (uvec2(0u, 0u) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (true ? uint(_GLF_IDENTITY(uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | _GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup))))))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u), (uvec2(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u) : _GLF_FUZZED(mix((num_workgroup ^ virtual_gid), workgroup_id, (workgroup_size != workgroup_size)))))))) | (uvec2(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, 0u)))) : _GLF_FUZZED(workgroup_size))))))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, false))))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((false) || false, ((false) || _GLF_IDENTITY(false, false || (false))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))) && true)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
}
