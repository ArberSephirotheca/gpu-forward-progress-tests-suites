#version 460
struct _GLF_struct_21 {
 mat2 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
 mat3 _f1;
 bool _f2;
 mat2x4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_18 {
 mat2 _f0;
 vec4 _f1;
 ivec4 _f2;
 uint _f3;
 float _f4;
 mat4x2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_20 {
 _GLF_struct_18 _f0;
 mat4x3 _f1;
 vec4 _f2;
 _GLF_struct_19 _f3;
} ;

struct _GLF_struct_16 {
 uvec4 _f0;
 float _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_15 {
 ivec2 _f0;
 float _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_17 {
 _GLF_struct_15 _f0;
 ivec4 _f1;
 _GLF_struct_16 _f2;
 uint _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 vec3 _f1;
 vec2 _f2;
 bvec2 _f3;
 uint _f4;
} ;

struct _GLF_struct_14 {
 uint _f0;
 uvec3 _f1;
 int _f2;
 ivec2 _f3;
 mat2x4 _f4;
 mat3 _f5;
 _GLF_struct_13 _f6;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_22 {
 int _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_20 _f4;
 uint subgroup_local_id;
 _GLF_struct_21 _f5;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 mat2x4 _f2;
 mat4x3 _f3;
 _GLF_struct_8 _f4;
 vec4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_4 {
 int _f0;
 float _f1;
 mat2x4 _f2;
 mat3x2 _f3;
 uint workgroup_id;
 vec4 _f4;
 ivec3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
} ;

struct _GLF_struct_1 {
 int _f0;
 mat4x2 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 bvec2 _f1;
 mat3x2 _f2;
 ivec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 float _f1;
 _GLF_struct_1 _f2;
 mat2 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 mat4x3 _f1;
 bool _f2;
 mat2 _f3;
 mat2x4 _f4;
 _GLF_struct_9 _f5;
 bool _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(1, _GLF_struct_12(ivec2(1), _GLF_struct_11(uvec3(1u))), _GLF_struct_14(1u, uvec3(1u), 1, ivec2(1), mat2x4(1.0), mat3(1.0), _GLF_struct_13(ivec2(1), vec3(1.0), vec2(1.0), bvec2(true), 1u)), _GLF_struct_17(_GLF_struct_15(ivec2(1), 1.0, ivec2(1)), ivec4(1), _GLF_struct_16(uvec4(1u), 1.0, mat3x4(1.0)), 1u, mat4x3(1.0)), _GLF_struct_20(_GLF_struct_18(mat2(1.0), vec4(1.0), ivec4(1), 1u, 1.0, mat4x2(1.0), vec2(1.0)), mat4x3(1.0), vec4(1.0), _GLF_struct_19(mat2x3(1.0), mat3(1.0), true, mat2x4(1.0), mat2x4(1.0))), gl_SubgroupInvocationID, _GLF_struct_21(mat2(1.0), vec3(1.0)));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_5(_GLF_struct_0(mat2x3(1.0), bvec2(true), mat3x2(1.0), ivec4(1), mat4x2(1.0)), 1.0, _GLF_struct_1(1, mat4x2(1.0), vec2(1.0)), mat2(1.0), _GLF_struct_2(uvec2(1u)), _GLF_struct_3(ivec2(1)), _GLF_struct_4(1, 1.0, mat2x4(1.0), mat3x2(1.0), gl_WorkGroupID.x, vec4(1.0), ivec3(1), bvec4(true))), mat4x3(1.0), true, mat2(1.0), mat2x4(1.0), _GLF_struct_9(_GLF_struct_6(mat4x3(1.0)), _GLF_struct_7(ivec2(1)), mat2x4(1.0), mat4x3(1.0), _GLF_struct_8(ivec3(1), bvec3(true)), vec4(1.0), ivec3(1)), true);
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_10._f0._f6.workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_struct_replacement_22.subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_struct_replacement_22.subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}
