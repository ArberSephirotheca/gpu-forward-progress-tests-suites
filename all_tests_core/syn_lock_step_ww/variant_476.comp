#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_18 {
 bvec4 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_15 {
 uvec4 _f0;
 mat4x2 _f1;
 int _f2;
 bvec3 _f3;
 ivec2 _f4;
 uvec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
} ;

struct _GLF_struct_13 {
 uint _f0;
 mat4x2 _f1;
 vec2 _f2;
 mat4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_11 {
 ivec3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 mat4 _f1;
 uint _f2;
 bool _f3;
 mat2x4 _f4;
 uvec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 bvec3 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 float _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 uint _f1;
 ivec4 _f2;
 vec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 bvec2 _f1;
 uint _f2;
 mat2x3 _f3;
 uint _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 vec3 _f1;
 uvec3 _f2;
 uvec4 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 mat3x2 _f3;
 bvec3 _f4;
 vec2 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 uvec2 _f1;
 vec4 _f2;
 vec3 _f3;
 int _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_2 _f0;
 _GLF_struct_5 _f1;
 uint num_workgroup;
 _GLF_struct_8 _f2;
 ivec3 _f3;
 _GLF_struct_14 _f4;
 _GLF_struct_16 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), true && (bool(bvec3(true, true, true))))), false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), true))) ? _GLF_FUZZED((- 66.29)) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_17 _GLF_struct_replacement_17 = _GLF_struct_17(_GLF_struct_2(_GLF_struct_0(bvec2(true), uvec2(1u), vec4(1.0), vec3(1.0), 1), _GLF_struct_1(mat3x2(1.0), mat3x4(_GLF_IDENTITY(1.0, (1.0) + 0.0)), mat4x2(1.0), mat3x2(1.0), bvec3(true), vec2(1.0), mat4x2(1.0))), _GLF_struct_5(_GLF_struct_3(mat3x2(1.0), bvec2(true), 1u, mat2x3(1.0), 1u, mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(_GLF_IDENTITY(1.0, float(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 1.0), (max(_GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 1.0)) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), cross(vec3(-5115.0647, 4053.3699, -4.0), vec3(-5115.0647, 4053.3699, _GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), clamp(_GLF_IDENTITY(-4.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)), clamp(mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)), mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)), min(mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)), mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))))))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(71.17)), (float(_GLF_FUZZED(71.17))) - 0.0), float(-4.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), (_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)))) - 0.0), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))))))))) + (vec3(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), cross(vec3(-5115.0647, 4053.3699, -4.0), vec3(-5115.0647, 4053.3699, _GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, max(-4.0, -4.0)), mix(float(_GLF_FUZZED(71.17)), _GLF_IDENTITY(float(-4.0), (false ? _GLF_FUZZED(59.00) : _GLF_IDENTITY(float(-4.0), (float(-4.0)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), bool(true))), clamp(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true))))))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(71.17), clamp(_GLF_FUZZED(71.17), _GLF_FUZZED(71.17), _GLF_FUZZED(71.17)))), float(-4.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), (_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)))) - 0.0), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, false, true)))))))))))))))) + (vec3(1.0))), mix(vec3((_GLF_IDENTITY(vec3(1.0), cross(vec3(-5115.0647, 4053.3699, -4.0), vec3(-5115.0647, 4053.3699, _GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, max(-4.0, -4.0)), mix(float(_GLF_FUZZED(71.17)), _GLF_IDENTITY(float(-4.0), (false ? _GLF_FUZZED(59.00) : _GLF_IDENTITY(float(-4.0), (float(-4.0)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), bool(true))), clamp(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)), clamp(mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)), mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)), mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))))), (_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)))) - 0.0), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, false, true)))))))))))))))) + (vec3(1.0))))[0], _GLF_FUZZED(vec4(-9600.2998, -77.11, -1.3, 4.7).z), (_GLF_IDENTITY(vec3(1.0), cross(vec3(-5115.0647, 4053.3699, -4.0), vec3(-5115.0647, 4053.3699, _GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, max(-4.0, -4.0)), mix(float(_GLF_FUZZED(71.17)), _GLF_IDENTITY(float(-4.0), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(59.00) : _GLF_IDENTITY(float(-4.0), (float(-4.0)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.1) : 0.0)), 1.0)))))), bool(true))), clamp(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), (_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - 0.0), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, false, true)))))))))))))))) + (vec3(1.0))))[2]), vec3(_GLF_FUZZED(92.37), (_GLF_IDENTITY(vec3(1.0), cross(vec3(-5115.0647, 4053.3699, -4.0), vec3(-5115.0647, 4053.3699, _GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, max(-4.0, -4.0)), mix(float(_GLF_FUZZED(71.17)), _GLF_IDENTITY(float(-4.0), (false ? _GLF_FUZZED(59.00) : _GLF_IDENTITY(float(-4.0), (float(-4.0)) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), bool(true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)))), (clamp(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true))), (_GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(true)))) - 0.0), _GLF_IDENTITY(-4.0, mix(float(_GLF_FUZZED(71.17)), float(-4.0), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, false, true)))))))))))))))) + (vec3(1.0))))[1], _GLF_FUZZED(-2.6)), bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) + vec3(0.0, 0.0, 0.0)), clamp(vec3(1.0), _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (false)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (false))))))))) || false))) ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(vec4(78.04, 73.17, -839.918, 79.28), mix(vec4((vec4(78.04, 73.17, -839.918, 79.28))[0], (vec4(78.04, 73.17, -839.918, 79.28))[1], (vec4(78.04, 73.17, -839.918, 79.28))[2], (vec4(78.04, 73.17, -839.918, 79.28))[3]), vec4(_GLF_FUZZED(-80.08), _GLF_FUZZED(-4035.2210), _GLF_FUZZED(vec2(2076.8430, -7.2).r), _GLF_FUZZED(7039.8502)), bvec4(false, false, false, false))), clamp(vec4(78.04, 73.17, -839.918, 79.28), vec4(78.04, 73.17, -839.918, 79.28), vec4(78.04, 73.17, -839.918, 79.28))) * mat3x4(2.6, 6.5, -28.91, 8.3, 4597.5882, _GLF_IDENTITY(-2913.6727, float(mat3x2(-2913.6727, 1.0, 1.0, 1.0, 1.0, 0.0))), -2.7, -9083.8726, -6574.9554, -1.8, -70.38, -8.8))), clamp(_GLF_FUZZED((_GLF_IDENTITY(vec4(78.04, 73.17, -839.918, 79.28) * mat3x4(2.6, 6.5, -28.91, 8.3, _GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0))), -2913.6727, -2.7, -9083.8726, -6574.9554, -1.8, -70.38, -8.8), mix(vec3(_GLF_FUZZED(4509.7925), _GLF_FUZZED(9995.0894), (vec4(78.04, 73.17, -839.918, 79.28) * mat3x4(2.6, 6.5, -28.91, 8.3, _GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0))), -2913.6727, -2.7, -9083.8726, -6574.9554, -1.8, -70.38, -8.8))[2]), vec3((vec4(78.04, 73.17, -839.918, 79.28) * mat3x4(_GLF_IDENTITY(2.6, (false ? _GLF_FUZZED(8.5) : 2.6)), 6.5, -28.91, 8.3, _GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0))), -2913.6727, -2.7, -9083.8726, -6574.9554, -1.8, -70.38, -8.8))[0], (vec4(78.04, 73.17, -839.918, 79.28) * mat3x4(2.6, 6.5, -28.91, 8.3, _GLF_IDENTITY(4597.5882, _GLF_IDENTITY(clamp(4597.5882, 4597.5882, _GLF_IDENTITY(_GLF_IDENTITY(4597.5882, max(4597.5882, 4597.5882)), (4597.5882) * 1.0)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0)), clamp(_GLF_IDENTITY(clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0)), mix(float(_GLF_FUZZED(36.96)), float(clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0))), _GLF_IDENTITY(bool(true), ! (! (bool(true)))))), clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0)), clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0)))), 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-178.687) : float(mat3x4(_GLF_IDENTITY(clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0)), clamp(_GLF_IDENTITY(clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0)), mix(float(_GLF_FUZZED(36.96)), float(clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0))), bool(true))), clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0)), clamp(4597.5882, 4597.5882, _GLF_IDENTITY(4597.5882, (4597.5882) * 1.0)))), 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), -2913.6727, -2.7, -9083.8726, -6574.9554, -1.8, -70.38, -8.8))[1], _GLF_FUZZED(1.6)), bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_FUZZED((vec4(_GLF_IDENTITY(78.04, (_GLF_IDENTITY(78.04, (true ? 78.04 : _GLF_FUZZED(faceforward(50.80, -2937.1299, -2.0))))) - 0.0), 73.17, -839.918, 79.28) * mat3x4(_GLF_IDENTITY(2.6, _GLF_IDENTITY((_GLF_IDENTITY(2.6, (true ? 2.6 : _GLF_FUZZED(4.9)))) + 0.0, max((_GLF_IDENTITY(2.6, (true ? 2.6 : _GLF_FUZZED(4.9)))) + 0.0, (_GLF_IDENTITY(2.6, (true ? 2.6 : _GLF_FUZZED(4.9)))) + 0.0))), 6.5, -28.91, 8.3, _GLF_IDENTITY(_GLF_IDENTITY(4597.5882, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, _GLF_IDENTITY(4597.5882, max(4597.5882, _GLF_IDENTITY(4597.5882, (true ? 4597.5882 : _GLF_FUZZED(-148.675))))), 4597.5882)), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, 4597.5882)), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, 4597.5882)), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), sqrt(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, 4597.5882)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-282.939)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0)), (float(mat2x4(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0))) + 0.0)), 0.0, 0.0))))), (_GLF_IDENTITY(4597.5882, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, _GLF_IDENTITY(4597.5882, max(4597.5882, _GLF_IDENTITY(4597.5882, (true ? 4597.5882 : _GLF_FUZZED(-148.675))))), 4597.5882)), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, 4597.5882)), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, 4597.5882)), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), sqrt(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, 4597.5882)), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-282.939)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (mix(float(_GLF_FUZZED(-282.939)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) / 1.0)), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(float(mat2x4(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0)), (float(mat2x4(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0))) + 0.0)), 0.0, 0.0)))))) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))))), -2913.6727, -2.7, -9083.8726, -6574.9554, -1.8, -70.38, -8.8))), (_GLF_FUZZED((vec4(_GLF_IDENTITY(78.04, (78.04) - 0.0), 73.17, -839.918, 79.28) * mat3x4(_GLF_IDENTITY(2.6, (_GLF_IDENTITY(2.6, (true ? 2.6 : _GLF_FUZZED(4.9)))) + 0.0), 6.5, -28.91, 8.3, _GLF_IDENTITY(4597.5882, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, _GLF_IDENTITY(_GLF_IDENTITY(4597.5882, (4597.5882) * 1.0), max(4597.5882, _GLF_IDENTITY(_GLF_IDENTITY(4597.5882, (true ? 4597.5882 : _GLF_FUZZED(-148.675))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(4597.5882, (true ? 4597.5882 : _GLF_FUZZED(-148.675))), clamp(_GLF_IDENTITY(4597.5882, (true ? 4597.5882 : _GLF_FUZZED(-148.675))), _GLF_IDENTITY(_GLF_IDENTITY(4597.5882, (true ? 4597.5882 : _GLF_FUZZED(-148.675))), max(_GLF_IDENTITY(_GLF_IDENTITY(4597.5882, (true ? 4597.5882 : _GLF_FUZZED(-148.675))), (_GLF_IDENTITY(4597.5882, (true ? 4597.5882 : _GLF_FUZZED(-148.675)))) + 0.0), _GLF_IDENTITY(4597.5882, (true ? 4597.5882 : _GLF_FUZZED(-148.675))))), _GLF_IDENTITY(4597.5882, (true ? 4597.5882 : _GLF_FUZZED(-148.675)))))), float(_GLF_FUZZED(0.0)), bool(false))))), 4597.5882)), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0)), clamp(float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, 4597.5882)), 0.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, 4597.5882)), 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), sqrt(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(4597.5882, clamp(4597.5882, 4597.5882, 4597.5882)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-282.939)), _GLF_IDENTITY(float(1.0), float(mat4x3(float(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-7476.9873))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), abs(0.0), length(vec2(0.0, 0.0)), 0.0, sqrt(0.0), 0.0, 0.0)))), max(float(mat3x4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-7476.9873))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), abs(0.0), length(vec2(0.0, 0.0)), 0.0, sqrt(0.0), 0.0, 0.0)))), float(mat3x4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-7476.9873))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat3(determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, sqrt(0.0), abs(0.0), length(vec2(0.0, 0.0)), 0.0, sqrt(0.0), 0.0, 0.0)))))))), 0.0, 0.0, 1.0, sqrt(1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, sqrt(1.0), 0.0)), (float(mat2x4(1.0, sin(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0))) + 0.0)), 0.0, 0.0))))), -2913.6727, -2.7, -9083.8726, -6574.9554, -1.8, -70.38, -8.8)))) * vec3(1.0, 1.0, 1.0)), _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(vec4(78.04, 73.17, _GLF_IDENTITY(-839.918, (true ? _GLF_IDENTITY(-839.918, max(-839.918, -839.918)) : _GLF_FUZZED(4753.9861))), 79.28) * mat3x4(2.6, 6.5, -28.91, 8.3, 4597.5882, _GLF_IDENTITY(-2913.6727, max(-2913.6727, -2913.6727)), -2.7, -9083.8726, -6574.9554, -1.8, -70.38, -8.8), (false ? _GLF_FUZZED(mat4x3(mat2x3(78.54, -82.49, -1.7, -5257.7799, -49.32, -0.4))[2]) : vec4(78.04, 73.17, -839.918, 79.28) * mat3x4(2.6, 6.5, -28.91, 8.3, 4597.5882, -2913.6727, -2.7, -9083.8726, _GLF_IDENTITY(-6574.9554, (-6574.9554) * 1.0), -1.8, -70.38, -8.8))), (true ? _GLF_IDENTITY(vec4(78.04, 73.17, _GLF_IDENTITY(-839.918, (true ? -839.918 : _GLF_FUZZED(4753.9861))), 79.28) * mat3x4(2.6, 6.5, -28.91, 8.3, 4597.5882, -2913.6727, -2.7, -9083.8726, -6574.9554, -1.8, -70.38, -8.8), (false ? _GLF_FUZZED(mat4x3(mat2x3(78.54, -82.49, -1.7, -5257.7799, -49.32, -0.4))[2]) : vec4(78.04, 73.17, -839.918, 79.28) * mat3x4(2.6, 6.5, -28.91, 8.3, 4597.5882, -2913.6727, -2.7, -9083.8726, -6574.9554, -1.8, -70.38, -8.8))) : _GLF_FUZZED(vec3(938.022, -22.20, -90.49)))))))) : _GLF_IDENTITY(vec3(1.0), max(_GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0))), vec3(1.0))))), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) + vec3(0.0, 0.0, 0.0)))), uvec3(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) << 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))), (_GLF_IDENTITY(~ (1u), ~ (~ _GLF_IDENTITY((~ (1u)), (false ? _GLF_FUZZED(subgroup_local_id) : (~ (1u))))))) | (_GLF_IDENTITY(~ (1u), ~ (~ (_GLF_IDENTITY(~ (1u), (true ? _GLF_IDENTITY(~ (1u), (~ (1u)) / 1u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))), uint(uvec4(_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))), 0u, 1u, 1u))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), ~ (~ _GLF_IDENTITY((~ (1u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((~ (1u)), uint(uvec4((~ (1u)), 1u, 1u, 1u))), 1u, 1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (uvec4(_GLF_IDENTITY((~ (1u)), uint(uvec4((~ (1u)), 1u, 1u, 1u))), 1u, 1u, (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | uvec4(0u, 0u, 0u, 0u))))))), 1u * (~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))))))))), 1u))), uvec4(1u), _GLF_struct_4(mat4x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 1.0, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), mat2x3(mat3x4(mat2x3(1.0, 1.0, 1.0, 1.0, 1.0, exp(0.0)))))))), 1u, ivec4(1), vec3(1.0), bvec2(true))), gl_NumWorkGroups.x, _GLF_struct_8(_GLF_struct_6(ivec4(1), uvec3(1u)), _GLF_struct_7(mat3x4(1.0), 1.0)), _GLF_IDENTITY(ivec3(1), clamp(_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(0), ivec3(0))) >> _GLF_IDENTITY(ivec3(0), ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED((33159 & -89977)) : 0)))))), ivec3(_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))))), _GLF_struct_14(_GLF_struct_9(mat3x4(1.0), mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), 1u, true, mat2x4(1.0), uvec2(_GLF_IDENTITY(1u, min(1u, 1u))), bvec4(true)), _GLF_struct_10(mat4x3(_GLF_IDENTITY(1.0, (1.0) + 0.0))), bvec3(true), _GLF_struct_11(ivec3(1), _GLF_IDENTITY(vec3(1.0), vec3(vec4(vec3(1.0), 1.0)))), _GLF_struct_12(mat2x4(1.0), ivec2(1)), _GLF_struct_13(1u, mat4x2(1.0), _GLF_IDENTITY(vec2(1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-1.2, 0.4), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(9.1), _GLF_FUZZED((4.4 - -8.6))), vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, true)))) && true))), true))) * (vec2(_GLF_IDENTITY(-1.2, max(-1.2, -1.2)), 0.4)), (true ? _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(0.6)))), float(_GLF_FUZZED(-3632.8631)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) * (vec2(_GLF_IDENTITY(-1.2, max(-1.2, -1.2)), 0.4)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(float(139462u)), _GLF_FUZZED(-8.9)), vec2((vec2(1.0, 1.0))[0], _GLF_IDENTITY((vec2(1.0, 1.0)), vec2(1.0, 1.0) * ((vec2(1.0, 1.0))))[1]), bvec2(true, true))) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(-1.2, max(-1.2, -1.2)), 0.4), clamp(vec2(_GLF_IDENTITY(-1.2, _GLF_IDENTITY(max(-1.2, -1.2), min(max(-1.2, -1.2), max(-1.2, -1.2)))), 0.4), vec2(_GLF_IDENTITY(-1.2, max(-1.2, -1.2)), 0.4), vec2(_GLF_IDENTITY(-1.2, max(-1.2, -1.2)), 0.4)))))) : _GLF_FUZZED(injectionSwitch)))), mix(vec2((vec2(-1.2, 0.4))[0], _GLF_FUZZED(float(187568u))), vec2(_GLF_FUZZED(-8.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(-1.2, 0.4))[1], max((vec2(-1.2, _GLF_IDENTITY(0.4, (0.4) / 1.0)))[1], (vec2(-1.2, _GLF_IDENTITY(0.4, (true ? 0.4 : _GLF_FUZZED(-1.8)))))[1])), (_GLF_IDENTITY((vec2(-1.2, 0.4))[1], max((vec2(-1.2, 0.4))[1], (vec2(-1.2, 0.4))[1]))) / 1.0)), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))))) : vec2(1.0))), mat4(1.0), mat2x4(1.0)), mat4x2(1.0)), _GLF_struct_16(_GLF_struct_15(uvec4(1u), mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1, bvec3(true), ivec2(1), uvec2(1u), mat2(1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(-7157.4177, 0.4)), max(true ? injectionSwitch : _GLF_FUZZED(vec2(-7157.4177, 0.4)), true ? injectionSwitch : _GLF_FUZZED(vec2(-7157.4177, 0.4)))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(4.2, -49.09).x)), float(injectionSwitch.y), bool(true)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y))))), (! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y)))))) && true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) + 0.0)) * exp(0.0)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, true))) && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))), false, true)), ! (! (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true, false)), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) || false))))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), false, true, false)), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) || false)))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y))) || false)), true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) || false)))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true)), ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false)))) || false))))))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))) || false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true)), ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))))))))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))) || false) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true)), ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(false, ! (! (false)))))), (! (((_GLF_IDENTITY(false, ! (! (false))))))) && true))) && true))) || false) || false)))))))))), bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-7127.3181)), vec2(_GLF_FUZZED(vec2(0.9, 5.0).g), (vec2(1.0, 1.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) * (injectionSwitch)), injectionSwitch)).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)), (false ? _GLF_FUZZED(vec2(-0.0, -0.2)) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch))))) - vec2(0.0, 0.0)).y)), false))))), (bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), false, true, false)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true) && (bool(false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(bvec4(true), gl_WorkGroupID.x);
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), 0u | (uint(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size)))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), 0u | (uint(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_struct_replacement_18.workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))))), 1u), min(uvec2(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))))), 1u))))), max(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))))), 1u), min(uvec2(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))))), 1u))))), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))))), 1u), min(uvec2(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))))), 1u), uvec2(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 1u))))), 1u))))))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(bvec2(true, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bvec4(bool(bool(injectionSwitch.x > injectionSwitch.y)), true, false, true))))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), (~ (4)) >> 0)), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), (~ (4)) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (4), (~ (4)) >> 0)), _GLF_IDENTITY(0 | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), ~ (~ ((4)))), (~ (4)) >> 0))), (0 | (~ (_GLF_IDENTITY(~ (4), (~ (4)) >> 0)))) ^ 0))) ^ 0), 0, 1))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec2((4), 0), ivec2(0, 0) | (_GLF_IDENTITY(ivec2((4), 0), clamp(ivec2((4), 0), ivec2((4), 0), ivec2((4), 0))))))) | 0), 0, 1), clamp(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, min((4) | 0, _GLF_IDENTITY((4) | 0, ((4) | 0) >> 0)))), 0, 1), ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, clamp((4) | 0, (4) | 0, (4) | 0))), 0, 1), ivec3(_GLF_IDENTITY(4, (4) | 0), 0, 1))), (false ? _GLF_FUZZED(ivec3(-6188, 45913, 61276)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) << 0), int(_GLF_IDENTITY(ivec2((4), 0), ivec2(0, 0) | (_GLF_IDENTITY(ivec2((4), 0), clamp(ivec2((4), 0), ivec2((4), 0), ivec2((4), 0))))))) | 0), 0, 1), clamp(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-42080)))) | 0, min((4) | 0, _GLF_IDENTITY(_GLF_IDENTITY((4) | 0, (_GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) - 0) | 0) >> 0), (_GLF_IDENTITY((4) | 0, (_GLF_IDENTITY((4), (_GLF_IDENTITY(_GLF_IDENTITY((4), ~ (~ ((4)))), 0 | (_GLF_IDENTITY((4), ~ (~ ((4))))))) - 0) | 0) >> 0)) - 0)))), 0, 1), ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, clamp((4) | 0, _GLF_IDENTITY((4) | 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-80281) : (4) | 0)), (4) | 0))), 0, 1), ivec3(_GLF_IDENTITY(4, (4) | 0), 0, 1))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec2((4), 0), ivec2(0, 0) | (_GLF_IDENTITY(ivec2((4), 0), clamp(ivec2((4), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(89477)))), ivec2((4), 0), ivec2((4), 0))))))) | 0), 0, 1), clamp(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, min((4) | 0, _GLF_IDENTITY(_GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) + 0), (4))) | 0, ((4) | 0) >> 0)))), 0, 1), ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, clamp((4) | 0, (4) | 0, (4) | 0))), 0, 1), ivec3(_GLF_IDENTITY(4, (4) | 0), 0, 1)))) | ivec3(0, 0, 0)))))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true)), true && (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true)))), true)))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (! (_GLF_IDENTITY(false, bool(bool(false))))))))))
      barrier();
     barrier();
    }
  }
}
