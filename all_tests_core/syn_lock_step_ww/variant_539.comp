#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(1303.3553)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))) || false), false, false)))) || false) || false) || false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! _GLF_IDENTITY(((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.7), _GLF_FUZZED(-472.147)), bvec2(false, false))).x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED((vec2(289.257, -796.805) * (vec2(1856.8466, -1.8) + -371.096))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(52.37)))) / 1.0)))) || false)))), true, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y)))))))), ! (! (! ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))).x > injectionSwitch.y))))) && true)))))))))), ! (! (! ((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, abs(0.0), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(_GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(173712u, 140376u, 40565u)))), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(18758u, 184325u, 39979u)) : _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(clamp(subgroup_local_id, 167271u, subgroup_size)) : 0u)), max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(clamp(subgroup_local_id, 167271u, subgroup_size)) : 0u)), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(clamp(subgroup_local_id, 167271u, subgroup_size)) : 0u)))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(clamp(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), 167271u, subgroup_size)) : 0u)), 0u)) ^ uvec3(0u, 0u, 0u)))) | (gl_NumWorkGroups))) | (gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, false)))))))))), bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-1.8, -317.713)) : injectionSwitch)).y))))))))), false), bvec2(bvec3(bvec2(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false))))), true && (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))))), false), true))))) && true)) || false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))) || false))))) && _GLF_IDENTITY(true, (true) || false)), false, false, false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true), false, false, false))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true), false, false, _GLF_IDENTITY(false, true && (false)))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))) || false))))) && _GLF_IDENTITY(true, (true) || false)), false, false, false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true), false, false, false))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true), false, false, _GLF_IDENTITY(false, true && (false))))))))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))) && _GLF_IDENTITY(true, (true) || false)), false, false, false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true), false, false, false))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true))), false, false, false)))))) && true)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))) && _GLF_IDENTITY(true, (true) || false)), false, false, false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true), false, false, false))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true))), false, false, false)))))) && true)))))))), ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))) && _GLF_IDENTITY(true, (true) || false)), false, false, false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! (false)) && true), false, false, false))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))) && true), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true))), false, false, false)))))) && true))))))))) || false))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, sqrt(0.0), 0.0))))), true && (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, sqrt(0.0), 0.0)))), false || (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, sqrt(0.0), 0.0)))))))))))) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))) + (injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))))))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y) || false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((31051u ^ workgroup_id)) : workgroup_size)) * workgroup_id, _GLF_IDENTITY((true ? workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, (0u | (0u | 0u)), 1u, 0u))), (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, (0u | (0u | 0u)), 1u, 0u)))) << 0u) : _GLF_FUZZED(num_workgroup)), _GLF_IDENTITY(0u | (_GLF_IDENTITY((true ? workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, (0u | (0u | 0u)), 1u, 0u))) : _GLF_FUZZED(num_workgroup)), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ((true)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))) ? workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, (0u | (0u | 0u)), 1u, 0u))) : _GLF_FUZZED(num_workgroup))) >> 0u)), (0u | (_GLF_IDENTITY((true ? workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, (0u | (0u | 0u)), 1u, 0u))) : _GLF_FUZZED(num_workgroup)), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), (! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), ((true)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))) ? workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, (0u | (0u | 0u)), 1u, 0u))) : _GLF_FUZZED(num_workgroup))) >> 0u))) ^ 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1)))) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 1)))) << 0)) << 0) < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 1)))) << 0)) << 0) < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 1)))) << 0)) << 0) < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true), bool(bvec3((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false)))))), (bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false))))))) || false)))))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false))))))))), (((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) + 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false)))))))))) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.46), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((7.2 / -9.6))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.46), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((7.2 / -9.6))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(41.46), (injectionSwitch)[1]), (_GLF_IDENTITY(vec2(_GLF_FUZZED(41.46), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(41.46), (injectionSwitch)[1]), vec2(_GLF_FUZZED(41.46), (injectionSwitch)[1])))) - vec2(0.0, 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED((7.2 / -9.6))), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-1.1)), float((injectionSwitch)[0]), bool(true))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-23.76), _GLF_FUZZED(-54.98)), bvec2(false, false))).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))))), (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, true && (_injected_loop_counter < 1)))) || false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), true, true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(abs(vec2(-7.0, -108.235))))).x > injectionSwitch.y)))))))), bool(bvec3((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, true, true))), true, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3((_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))), _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true))), true))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))))) || false))))))))), (((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), true && (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), false)))))))))) || false)))))))))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (! (_injected_loop_counter < 1)))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false))), true, true)))))))))))), (((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))) < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false)))))))))) || false), true && (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false))))))))), (((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))) || false))) || false)))))))))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.46), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((7.2 / -9.6))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))) || false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))) || false))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))) || false)))))), false, false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.2)), bool(false))) > injectionSwitch.y))))).y)))) && true)); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), max(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), clamp((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), (_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size))))), ~ (~ ((_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))))))) ^ 0u, _GLF_IDENTITY((((subgroup_size)) ^ 0u) - 0u, ((((subgroup_size)) ^ 0u) - 0u) | ((((subgroup_size)) ^ 0u) - 0u)))), (subgroup_size))) << 0u, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), max(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u)) ^ 0u, (((subgroup_size)) ^ 0u) - 0u)), (subgroup_size))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), max((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), max(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) ^ 0u, _GLF_IDENTITY((((subgroup_size)) ^ 0u), min(_GLF_IDENTITY((((subgroup_size)) ^ 0u), min((((subgroup_size)) ^ 0u), (((subgroup_size)) ^ 0u))), (((subgroup_size)) ^ 0u))) - 0u)), (subgroup_size))) << 0u) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), max(_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)) ^ 0u, (((subgroup_size)) ^ 0u) - 0u)), _GLF_IDENTITY((subgroup_size), 0u | (_GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))))))) << 0u))), min(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) << 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), (subgroup_id * subgroup_size) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(min(subgroup_id, subgroup_id), clamp(_GLF_IDENTITY(min(subgroup_id, subgroup_id), ~ (~ (min(subgroup_id, subgroup_id)))), min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id)))) * subgroup_size, (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)), (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true))) || false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), (subgroup_id * subgroup_size) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(52464u, 141604u, 112636u) , atomicAdd(subgroup_local_id, workgroup_id))) : true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(min(subgroup_id, subgroup_id), clamp(_GLF_IDENTITY(min(subgroup_id, subgroup_id), ~ (~ (min(subgroup_id, subgroup_id)))), min(subgroup_id, subgroup_id), min(subgroup_id, subgroup_id)))) * subgroup_size, (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)), (bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true))) || false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), (subgroup_id * subgroup_size) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u)))))), ((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)), (subgroup_id * subgroup_size) ^ 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u))))) << 0u)))), subgroup_id * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), 1u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))) ^ 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), 0u ^ ((workgroup_base))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))) ^ 0u))) << 0u)))))) ^ 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))), (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)))) ^ 0u))) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1982.5821), _GLF_FUZZED(-98.08)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1982.5821), _GLF_FUZZED(_GLF_IDENTITY(-98.08, (false ? _GLF_FUZZED(-70.08) : -98.08)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, (true) || false)))).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1982.5821), _GLF_FUZZED(-98.08)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))) - vec2(0.0, 0.0)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(_GLF_IDENTITY(true, false || (true)), true))).y)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0, ((1) | _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0))))) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, ((1) | _GLF_IDENTITY(0, clamp(0, 0, 0))) - 0)))), (_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, ((1) | _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0))))) - 0))))) + 0)) | 0)), _GLF_IDENTITY(4, (4) - 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-90534) : 0)) >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, _GLF_IDENTITY((_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, (3) * 1), 3))), max((3), (3))) / 1)) >> 0)))) | (2))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}
