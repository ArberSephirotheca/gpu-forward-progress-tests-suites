#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 mat4 _f0;
 int _f1;
 uvec2 _f2;
 uint _f3;
 mat3 _f4;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 mat3 _f1;
 vec3 _f2;
 mat3 _f3;
 int _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 uint _f2;
 uint subgroup_base;
 mat4x3 _f3;
 mat4x2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_9 {
 bool _f0;
 bvec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 ivec3 _f1;
 _GLF_struct_11 _f2;
 mat2 _f3;
 bvec3 _f4;
 _GLF_struct_14 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
 mat3 _f1;
 bvec2 _f2;
 mat2x4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 int _f1;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 mat3x2 _f1;
 ivec4 _f2;
 mat4x3 _f3;
 ivec4 _f4;
 mat4x2 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_3 {
 mat4x2 _f0;
 mat2x4 _f1;
 bvec2 _f2;
 bvec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 bvec2 _f1;
 mat4 _f2;
 mat3x4 _f3;
 mat2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_1 {
 mat4 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_0 {
 bool _f0;
 bvec3 _f1;
 mat4x2 _f2;
 uvec3 _f3;
 bvec2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 bvec2 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 mat3x4 _f1;
 _GLF_struct_5 _f2;
 uvec4 _f3;
 _GLF_struct_7 _f4;
 uint subgroup_id;
 vec3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(uvec3(1u), mat3x4(1.0), _GLF_struct_5(bvec3(_GLF_IDENTITY(true, ! (! (true)))), _GLF_struct_0(true, _GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), false))), mat4x2(1.0), _GLF_IDENTITY(uvec3(1u), max(uvec3(1u), uvec3(1u))), bvec2(true), ivec4(1)), _GLF_struct_1(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat2x3(1.0)), _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, _GLF_IDENTITY(true, ! (! (true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true), true, true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)))), false))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true), true, true))), false))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true), true, true))), false))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true), true, true))), false))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true), true, true))), false))))), true))), false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true), true, true))), false))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true), true, true))), false))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(true), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), true))), bvec2(bvec3(bvec2(bvec2(bvec4(bvec2(true), true, true))), false))))), true))), false)))), true))))))), true))))), bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-1844.2018, -9137.3856, 2.2, 6783.1485, -583.763, 1.2, 3235.0907, 187.199, 5776.6712, 8.6, 39.71, 51.99, -2.1, 1.7, -0.6, -0.3)) : mat4(1.0))), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-1844.2018, -9137.3856, 2.2, 6783.1485, -583.763, 1.2, 3235.0907, 187.199, 5776.6712, 8.6, 39.71, 51.99, -2.1, 1.7, -0.6, -0.3)) : mat4(1.0)))))), mat3x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-87.27, (_GLF_IDENTITY(false ? _GLF_FUZZED(distance(vec4(9870.4103, -9.3, -5031.8663, -4.6), vec4(-626.056, 6.3, 95.19, -7.1))) : -87.27, float(vec3(false ? _GLF_FUZZED(distance(vec4(9870.4103, -9.3, -5031.8663, -4.6), vec4(-626.056, 6.3, 95.19, -7.1))) : -87.27, 0.0, 0.0)))))) : _GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((1.0) - 0.0), bool(true))))))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) ? mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-87.27, (false ? _GLF_FUZZED(distance(vec4(9870.4103, -9.3, -5031.8663, -4.6), vec4(-626.056, 6.3, 95.19, -7.1))) : -87.27))) : _GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((1.0) - _GLF_IDENTITY(0.0, (0.0) * cos(0.0))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), min((1.0), (1.0)))))) - 0.0), _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.8) : (1.0)))), float(_GLF_FUZZED(-92.57)), bool(false))), (1.0))) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((1.0) - 0.0), bool(true)))) / 1.0))))))) : _GLF_FUZZED(mat2(2.7, 513.118, 62.39, -3.4)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, 0.0 + (_GLF_IDENTITY((1.0) - 0.0, float(mat4x2((1.0) - 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), abs(0.0), round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-87.27, (_GLF_IDENTITY(false ? _GLF_FUZZED(distance(vec4(9870.4103, _GLF_IDENTITY(-9.3, _GLF_IDENTITY(float(mat3(-9.3, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0)))), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), clamp(float(mat3(-9.3, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0)))), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), _GLF_IDENTITY(float(mat3(-9.3, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0)))), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), min(float(mat3(-9.3, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0)))), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), float(mat3(-9.3, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0)))), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), float(mat3(-9.3, sin(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(tan(0.0), 1.0, 0.0, sqrt(1.0)))), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))))), -5031.8663, -4.6), vec4(-626.056, 6.3, 95.19, -7.1))) : -87.27, float(vec3(false ? _GLF_FUZZED(distance(vec4(9870.4103, -9.3, -5031.8663, _GLF_IDENTITY(-4.6, (_GLF_IDENTITY(-4.6, max(-4.6, -4.6))) / 1.0)), vec4(-626.056, 6.3, 95.19, -7.1))) : -87.27, 0.0, 0.0)))))) : _GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((1.0) - 0.0), bool(true))))))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) ? mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-87.27, (false ? _GLF_FUZZED(distance(vec4(9870.4103, -9.3, -5031.8663, -4.6), vec4(-626.056, 6.3, 95.19, -7.1))) : -87.27))) : _GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((1.0) - _GLF_IDENTITY(0.0, (0.0) * cos(0.0))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), min((1.0), (1.0)))))) - 0.0), _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.8) : (1.0)))), float(_GLF_FUZZED(-92.57)), bool(false))), (1.0))) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((1.0) - 0.0), bool(true)))) / 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-87.27, (false ? _GLF_FUZZED(distance(vec4(9870.4103, -9.3, -5031.8663, -4.6), vec4(-626.056, 6.3, 95.19, -7.1))) : -87.27))) : _GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((1.0) - _GLF_IDENTITY(0.0, (0.0) * cos(0.0))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), min((1.0), (1.0)))))) - 0.0), _GLF_IDENTITY((1.0), mix(float(_GLF_IDENTITY((1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.8) : (1.0)))), float(_GLF_FUZZED(-92.57)), bool(false))), (1.0))) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((1.0) - 0.0), bool(true)))) / 1.0)))), (false ? _GLF_FUZZED(-7137.3675) : _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-87.27, (false ? _GLF_FUZZED(distance(vec4(9870.4103, -9.3, -5031.8663, -4.6), vec4(-626.056, 6.3, 95.19, -7.1))) : -87.27))) : _GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((1.0) - _GLF_IDENTITY(0.0, (0.0) * cos(0.0))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), min((1.0), (1.0)))))) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), mix(float(_GLF_IDENTITY((1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.8) : (1.0)))), float(_GLF_FUZZED(-92.57)), bool(false))), (1.0))) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6985.2727)), bool(false))), 1.0))) - 0.0), bool(true)))) / 1.0), min(false ? _GLF_FUZZED(_GLF_IDENTITY(-87.27, (false ? _GLF_FUZZED(distance(vec4(9870.4103, -9.3, -5031.8663, -4.6), vec4(-626.056, 6.3, 95.19, -7.1))) : -87.27))) : _GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((1.0) - _GLF_IDENTITY(0.0, (0.0) * cos(0.0))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), min((1.0), (1.0)))))) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), mix(float(_GLF_IDENTITY((1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.8) : (1.0)))), float(_GLF_FUZZED(-92.57)), bool(false))), (1.0))) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6985.2727)), bool(false))), 1.0))) - 0.0), bool(true)))) / 1.0), false ? _GLF_FUZZED(_GLF_IDENTITY(-87.27, (false ? _GLF_FUZZED(distance(vec4(9870.4103, -9.3, -5031.8663, -4.6), vec4(-626.056, 6.3, 95.19, -7.1))) : -87.27))) : _GLF_IDENTITY(_GLF_IDENTITY((1.0) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((1.0) - _GLF_IDENTITY(0.0, (0.0) * cos(0.0))), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY((1.0), clamp(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), clamp((1.0), (1.0), _GLF_IDENTITY((1.0), min((1.0), (1.0)))))) - 0.0), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), mix(float(_GLF_IDENTITY((1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.8) : (1.0)))), float(_GLF_FUZZED(-92.57)), bool(false))), (1.0))) - 0.0, mix(float(_GLF_FUZZED((-3.2 + -9.6))), float((_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6985.2727)), bool(false))), 1.0))) - 0.0), bool(true)))) / 1.0))))))))) - 0.0)))) : _GLF_FUZZED(mat2(2.7, 513.118, 62.39, -3.4))))) + mat2(0.0, 0.0, 0.0, 0.0)), mat3x4(1.0)), _GLF_struct_3(mat4x2(1.0), mat2x4(1.0), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec4(bvec2(bvec2(true)), false, false))))), bvec4(true), bvec2(true)), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(true), false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec3(bvec3(bvec3(bvec2(true), false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec3(bvec3(bvec3(bvec2(true), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), false)), bvec3(bvec3(bvec3(bvec3(bvec2(true), false))))))))))))), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), false), bvec3(bvec4(bvec3(bvec2(true), false), false)))), true, false))), true)))), _GLF_struct_4(bvec4(true), mat3x2(1.0), ivec4(1), mat4x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(length(vec3(378.416, -7355.5080, -2.1))) : 0.0)) + _GLF_IDENTITY((_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2)))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2))), float(vec3(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2))), clamp(true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2))), true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2))), true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2))))), 0.0, 1.0)))), clamp((true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, _GLF_IDENTITY(-44.20, clamp(-44.20, -44.20, -44.20)), -3.2)))), (true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2)))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, _GLF_IDENTITY(-3.2, mix(float(_GLF_FUZZED(1786.9297)), float(-3.2), bool(true))))))), (false ? _GLF_FUZZED(30.72) : (true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2))))))))) * 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0)))), _GLF_IDENTITY(float(mat2x3((_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2)))), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2)))), clamp((true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2))), float(mat2x4(_GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2))), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, log(1.0), 1.0)), 0.0, 1.0, 0.0, 1.0, abs(1.0), determinant(mat2(0.0, sqrt(0.0), 1.0, 0.0)))))), (true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2)))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2)))), (false ? _GLF_FUZZED(30.72) : (true ? _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2))))))))) * _GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)))))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0)))), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), mix(float(_GLF_FUZZED(3506.4152)), float(float(mat2x3((_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, _GLF_IDENTITY(7.7, clamp(7.7, _GLF_IDENTITY(7.7, max(7.7, 7.7)), _GLF_IDENTITY(7.7, (true ? 7.7 : _GLF_FUZZED(max(0.8, -11.56)))))), 3.1), vec3(-4721.8410, -44.20, -3.2)))), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, _GLF_IDENTITY(_GLF_IDENTITY(7.7, (_GLF_IDENTITY(7.7, max(7.7, 7.7))) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(vec3(9.1, 2.8, 0.5).y)), float(_GLF_IDENTITY(7.7, (_GLF_IDENTITY(7.7, max(7.7, 7.7))) / determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), bool(true))), 3.1), vec3(-4721.8410, -44.20, -3.2)))), clamp((true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, _GLF_IDENTITY(-44.20, float(float(-44.20))), -3.2)))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(dot(_GLF_IDENTITY(vec3(356.029, 7.7, 3.1), mix(_GLF_IDENTITY(vec3(_GLF_FUZZED(vec3(-2025.3723, -8.5, 89.67).z), _GLF_FUZZED(-44.16), _GLF_FUZZED((false ? -4125.4255 : (-968.740 + -0.5)))), min(vec3(_GLF_FUZZED(vec3(-2025.3723, -8.5, 89.67).z), _GLF_FUZZED(-44.16), _GLF_FUZZED((false ? -4125.4255 : (-968.740 + -0.5)))), _GLF_IDENTITY(vec3(_GLF_FUZZED(vec3(-2025.3723, -8.5, 89.67).z), _GLF_FUZZED(-44.16), _GLF_FUZZED((false ? -4125.4255 : (-968.740 + -0.5)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(_GLF_FUZZED(vec3(-2025.3723, -8.5, 89.67).z), _GLF_FUZZED(-44.16), _GLF_FUZZED((false ? -4125.4255 : (-968.740 + -0.5)))) : _GLF_FUZZED(vec3(-86.35, -26.47, 3.9)))))), _GLF_IDENTITY(vec3((vec3(356.029, 7.7, 3.1))[0], (vec3(356.029, 7.7, 3.1))[1], (vec3(356.029, 7.7, 3.1))[2]), vec3(_GLF_IDENTITY(mat4x2(vec3((vec3(356.029, 7.7, 3.1))[0], (vec3(356.029, 7.7, 3.1))[1], (vec3(356.029, 7.7, 3.1))[2]), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x2(-2.3, -18.04, 8432.5674, -7.6, 611.475, 8449.8413, -6187.4345, -98.35)) : mat4x2(vec3((vec3(356.029, 7.7, 3.1))[0], (vec3(356.029, 7.7, 3.1))[1], (vec3(356.029, 7.7, 3.1))[2]), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0))))), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))))), vec3(-4721.8410, -44.20, -3.2)))), float(mat2x4((true ? 1.0 : _GLF_FUZZED(dot(_GLF_IDENTITY(vec3(356.029, _GLF_IDENTITY(7.7, max(_GLF_IDENTITY(7.7, clamp(7.7, 7.7, 7.7)), 7.7)), 3.1), mix(vec3(_GLF_FUZZED(vec3(-2025.3723, -8.5, 89.67).z), _GLF_FUZZED(-44.16), _GLF_FUZZED((false ? -4125.4255 : (-968.740 + -0.5)))), vec3((vec3(356.029, 7.7, 3.1))[0], (vec3(356.029, 7.7, 3.1))[1], (vec3(356.029, 7.7, 3.1))[2]), _GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true)))), true))))), _GLF_IDENTITY(vec3(-4721.8410, -44.20, -3.2), _GLF_IDENTITY(vec3(vec4(vec3(-4721.8410, -44.20, -3.2), 0.0)), min(vec3(vec4(vec3(-4721.8410, -44.20, -3.2), 0.0)), _GLF_IDENTITY(vec3(vec4(vec3(-4721.8410, -44.20, -3.2), 0.0)), mix(vec3((vec3(vec4(vec3(-4721.8410, -44.20, -3.2), 0.0)))[0], _GLF_FUZZED(40.01), _GLF_FUZZED(4870.6939)), vec3(_GLF_FUZZED(-9.4), (vec3(vec4(vec3(-4721.8410, -44.20, -3.2), 0.0)))[1], (vec3(vec4(vec3(-4721.8410, -44.20, -3.2), 0.0)))[2]), bvec3(false, true, true))))))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2)))), (false ? _GLF_FUZZED(30.72) : (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2)), (dot(vec3(356.029, 7.7, 3.1), vec3(-4721.8410, -44.20, -3.2))) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))))) * 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), bool(true)))))), ivec4(1), mat4x2(1.0), mat4x2(1.0))), uvec4(1u), _GLF_struct_7(_GLF_struct_6(vec2(1.0), mat3(1.0), bvec2(true), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))), 1.0 * (float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))))), 0.0, 0.0, 0.0)), clamp(float(mat2(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))), 1.0 * (float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))))), 0.0, 0.0, 0.0)), float(mat2(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))), 1.0 * (float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))))), 0.0, 0.0, 0.0)), float(mat2(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))), 1.0 * (float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))))), 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))), 1.0 * (float(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7353.5633)), float(0.0), bool(true))), 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))))), 0.0, 0.0, 0.0)), min(float(mat2(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))), 1.0 * (float(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7353.5633)), float(0.0), bool(true))), 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))))), 0.0, 0.0, 0.0)), float(mat2(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))), 1.0 * (float(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7353.5633)), float(0.0), bool(true))), 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))))), 0.0, 0.0, 0.0)))), clamp(float(mat2(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), _GLF_IDENTITY(vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0), mat3(1.0) * (vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))))), 1.0 * (float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, abs(1.0)), (vec3(0.0, 0.0, abs(1.0))) + vec3(0.0, 0.0, 0.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)) / 1.0), tan(0.0), 1.0))))))), 0.0, 0.0, 0.0)), float(mat2(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))), 1.0 * (float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4x3(0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), float(mat4(float(_GLF_IDENTITY(mat4x3(0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0), (mat4x3(0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), 0.0)), injectionSwitch.x), tan(0.0), 1.0))))))), 0.0, 0.0, 0.0)), float(mat2(_GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.6)), float(1.0), bool(true))))))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) / 1.0)), 1.0, cos(0.0), 1.0, abs(0.0), 0.0, 0.0)), float(mat2x3(float(mat3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) / 1.0)), 1.0, cos(0.0), 1.0, abs(0.0), 0.0, 0.0)), length(vec2(0.0, 0.0)), abs(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))), 1.0))))), 1.0 * (float(mat4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0)), dot(vec3(0.0, 0.0, abs(1.0)), vec3(_GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), 1.0))))))), 0.0, 0.0, 0.0)))))) / 1.0))), vec2(1.0)), 1), gl_SubgroupID, vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), bool(bvec3(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), bool(bvec3(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), true, true, true))), (! (bool(bvec4(_GLF_DEAD(false), true, true, true)))) && true)), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, true))), (! (bool(bvec4(_GLF_DEAD(false), true, true, true)))) && true))), ! (! (bool(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), true, true, true))), (! (bool(bvec4(_GLF_DEAD(false), true, true, true)))) && true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))))))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))), bool(bvec4(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))), false, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))), bool(bvec4(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))), false, true, false))), true), false, false)))))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))))))))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))))))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))), bool(bvec4(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))), false, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))), bool(bvec4(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))), false, true, false))), true), false, false)))))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))))) || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))))))))))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(bool(injectionSwitch.x > injectionSwitch.y), false, true, true))))))))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))), true, true, false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x), (true ? ~ (gl_WorkGroupSize.x) : _GLF_FUZZED(64950u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x))), 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))))) * 1u)))) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(uvec3(1u), ivec3(1), _GLF_struct_11(_GLF_struct_9(true, bvec4(true), uvec2(1u)), _GLF_struct_10(vec3(1.0), bvec4(true))), mat2(1.0), bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_struct_14(_GLF_struct_12(ivec2(1), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)))), (false ? _GLF_FUZZED(4.8) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), clamp(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0), clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0))))))) / 1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))) - sin(0.0))), min(vec3(1.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), clamp(vec3(1.0), vec3(1.0), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0))))))), mat3(1.0), 1, mat2x4(1.0)), _GLF_struct_13(mat4(1.0), 1, uvec2(1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))), min(_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))), _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(1u, 1u, 1u))), (~ (uint(uvec3(1u, 1u, 1u)))) * 1u)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), (uint(uvec3(1u, 1u, 1u))) | (uint(uvec3(1u, 1u, 1u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(1u, 0u))), _GLF_IDENTITY(uint(uvec3(1u, 1u, 1u)), (uint(uvec3(1u, 1u, 1u))) | (uint(uvec3(1u, 1u, 1u))))))) | 0u))) / (_GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u))))), 1u, 1u)), mat3(1.0)), 1u, _GLF_struct_replacement_8.subgroup_id * subgroup_size, mat4x3(1.0), mat4x2(1.0), uvec2(1u)), mat2x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (true ? min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) : _GLF_FUZZED(-1633.0663)))) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_15._f5.subgroup_base, (_GLF_struct_replacement_15._f5.subgroup_base) | (0u | 0u)) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_15._f5.subgroup_base, (_GLF_struct_replacement_15._f5.subgroup_base) ^ 0u) + (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), uint(uint(subgroup_local_id))), subgroup_local_id, subgroup_local_id), 1u * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), min(uint(subgroup_local_id), uint(subgroup_local_id))))), subgroup_local_id, subgroup_local_id), max(clamp(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), subgroup_local_id, subgroup_local_id), clamp(_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))), subgroup_local_id, subgroup_local_id)))))) + 1), clamp((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, 1))), max((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))))) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, min(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), min(_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, 64), 0 | (clamp(64, 64, 64)))), _GLF_IDENTITY(64, clamp(64, 64, 64)))), int(ivec3(64, 0, 0))))), clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(68903, clamp(68903, _GLF_IDENTITY(68903, clamp(68903, 68903, 68903)), 68903))) : 64))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(68903) : 64))))), (true ? _GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(68903) : 64))), ((_GLF_IDENTITY(64, (false ? _GLF_FUZZED(68903) : 64)))) ^ 0))) : _GLF_FUZZED(98604))) : _GLF_FUZZED(int(-1907.5989)))), _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(64, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-40183))), 64)))))), (64) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) * 1)) << 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY((64) * 1, (_GLF_IDENTITY((64) * 1, ~ (~ (_GLF_IDENTITY((64) * 1, 1 * ((64) * 1)))))) | 0))) << 0)) - 0))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false, false)), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false, false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(461.382) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(461.382) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)))) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(4, 4)))), 4), (min(_GLF_IDENTITY(4, min(4, 4)), 4)) + 0)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float((76666u * 170744u))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.4)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true))), false, false, true))))), false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8626.4933), _GLF_FUZZED(_GLF_IDENTITY(-159.258, (_GLF_IDENTITY(-159.258, float(float(_GLF_IDENTITY(-159.258, max(-159.258, -159.258)))))) - 0.0))), vec2(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true && (true), bool(bvec3(true && (true), true, false)))), true))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))])), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-863.770) : injectionSwitch[0])), injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), min(0, 0))], injectionSwitch[1])))).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), max(min(0, 0), _GLF_IDENTITY(min(0, 0), int(ivec3(min(0, 0), 0, 0))))))], injectionSwitch[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])))).y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-447.249), _GLF_FUZZED(-74.48)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-447.249), _GLF_FUZZED(-74.48)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-447.249), _GLF_FUZZED(-74.48)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])))).y))))), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
}
