#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(6.4), _GLF_FUZZED(vec3(-408.149, -6325.1860, _GLF_IDENTITY(-229.591, (-229.591) / _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))))), float(_GLF_FUZZED(-1012.6578)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y))).r)), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))[0], _GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[1], mix(float(_GLF_FUZZED((-0.8 + -16.31))), float((mat2(1.0) * (injectionSwitch))[1]), bool(true)))), bvec2(true, true)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))).y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(vec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), mat2(1.0) * (((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))[0], _GLF_IDENTITY(_GLF_FUZZED(float(-31182)), mix(float(_GLF_FUZZED(float(-31182))), float(_GLF_FUZZED(5.3)), bool(false)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(-5.3, -4.5, -2.8, 258.516), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec4(-5.3, -4.5, -2.8, 258.516) : _GLF_FUZZED(asinh(vec4(-83.63, 3.3, -7.4, -767.332))))).w), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))[1]), bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) - 0.0) > injectionSwitch.y)), true))) - vec2(0.0, 0.0)).y, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, float(mat3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y) + 0.0), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), float(mat3(_GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat2(1.0, 1.0, 0.0, 0.0)), max(float(mat2(1.0, 1.0, 0.0, 0.0)), float(mat2(1.0, 1.0, 0.0, 0.0))))) - 0.0), 0.0, 0.0, 0.0, 1.0, sin(0.0), log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), abs(1.0), 0.0)))))))))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(float(-71842))), bool(false))), length(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x4(vec2(0.0, 0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), length(vec2(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)))), 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(cos(vec2(-65.85, 8.2)))))))).y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))) * vec2(1.0, 1.0))), (false ? _GLF_FUZZED((vec2(-764.641, -812.384) / vec2(-70.80, -5826.2664))) : (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch))))))) - vec2(0.0, 0.0)).y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, length(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x4(vec2(0.0, 0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-378.165) : 0.0))) : _GLF_FUZZED(cos(vec2(-65.85, 8.2)))))))).y)), (false ? _GLF_FUZZED(-4361.6998) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).y, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y), bool(true))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8.6))), 1.0, 1.0)))), 0.0, 0.0, length(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), vec2(mat3x4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), 1.0, exp(0.0), 1.0, log(1.0), exp(0.0), 1.0, 0.0, log(1.0), 1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x4(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), min(determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(cos(vec2(-65.85, 8.2)))))))).y))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, length(0.0), 0.0))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3x4(vec2(0.0, 0.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)), 1.0, 0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(cos(vec2(-65.85, 8.2)))))))).y)))) && true)) || false))) && true)), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, tan(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, sin(0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.9)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0), tan(0.0), 0.0, 1.0, 1.0), (mat3x4(injectionSwitch, 1.0, tan(0.0), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), ! (! (! ((true)))))))) ? 0.0 : _GLF_FUZZED(-37.03))), injectionSwitch.x), 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 1.0, 1.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), float(_GLF_FUZZED(7.5)), bool(false))), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 0.0, 0.0, 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)))))), (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(-7.5), _GLF_FUZZED(-5.1)), vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0), min(((injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), (float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))) - 0.0)))), mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(false, false || (false))))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((- -9088.7320))), (float(_GLF_FUZZED((- -9088.7320)))) / 1.0), bool(false)))), bool(true)))))) * mat2(1.0), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0)))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))) && true)) && true, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - tan(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(unpackUnorm2x16(_GLF_IDENTITY(44257u, clamp(44257u, 44257u, 44257u)))))), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0), min(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0.0, (0.0) + 0.0)), mix(vec2((vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0.0, (0.0) + 0.0)))[0], _GLF_FUZZED((true ? 7196.4668 : -82.70))), vec2(_GLF_FUZZED(((5.0 / 46.27) * 19.28)), (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0.0, (0.0) + 0.0)))[1]), bvec2(false, true)))).y))))) && true)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true)))), true)))))))))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))), false, false)))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, true, false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(-7.5), _GLF_FUZZED(-5.1)), vec2(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[1]), bvec2(true, true)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0), min(((injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), max(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0)), (float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))) - 0.0)))), mix(float(_GLF_FUZZED(float(_GLF_IDENTITY(false, false || (false))))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED((- -9088.7320))), (float(_GLF_FUZZED((- -9088.7320)))) / 1.0), bool(false)))), bool(true)))))) * mat2(1.0), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / cos(0.0)), 0.0)))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))))) && true)) && true, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - tan(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(unpackUnorm2x16(_GLF_IDENTITY(44257u, clamp(44257u, 44257u, 44257u)))))), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0), min(((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0.0, (0.0) + 0.0)), mix(vec2((vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0.0, (0.0) + 0.0)))[0], _GLF_FUZZED((true ? 7196.4668 : -82.70))), vec2(_GLF_FUZZED(((5.0 / 46.27) * 19.28)), (vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0.0, (0.0) + 0.0)))[1]), bvec2(false, true)))).y))))) && true)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(true), true, true), bvec3(bvec3(bvec3(bool(true), true, true)))), true)))))))))))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y))), false, false)))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, sin(0.0), 0.0))), injectionSwitch)).x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))))))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0)]), min(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0)]), mix(vec2(_GLF_IDENTITY((vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0)]))[0], max((vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0)]))[0], (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0)]))[0])), (vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0)]))[1]), vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(-7.9)), bvec2(false, false))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec4(1, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) ^ 0)]))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-42.40), 1.0 * (_GLF_FUZZED(-42.40))), _GLF_FUZZED(3.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))).x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6725.6731)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.1) : injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-1842.4304), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-3454.6236)), bvec2(true, false))), (injectionSwitch) * mat2(1.0)))).y, (false ? _GLF_FUZZED(7.1) : injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.1) : injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))), (true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) / 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8387.9763)), bool(false)))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) && true, (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(bool(bvec2(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false)), false || (bool(bvec2(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false))))) && true, (((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false) && true) && true)) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-13.44))))) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool(_GLF_IDENTITY((false), false || ((false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))), ~ (~ (gl_NumWorkGroups))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), true, true, false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) ? _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), clamp((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), (gl_NumWorkGroups) - uvec3(0u, 0u, 0u), (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(189867u, 141057u, 165441u))))))), ~ _GLF_IDENTITY((~ (gl_NumWorkGroups)), _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups)), (true ? _GLF_IDENTITY((~ (gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(65479u, 185159u, 45761u)) : (~ (gl_NumWorkGroups)))) : _GLF_FUZZED(uvec3(75971u, _GLF_IDENTITY(41831u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(41831u, 1u, 1u), (_GLF_IDENTITY(uvec3(41831u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(41831u, 1u, 1u)))) | (uvec3(41831u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(41831u, 1u, 1u), (_GLF_IDENTITY(uvec3(41831u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(41831u, 1u, 1u)))) | (uvec3(41831u, 1u, 1u))))) << 0u)), 195486u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY((~ (gl_NumWorkGroups)), (true ? _GLF_IDENTITY((~ (gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(65479u, 185159u, 45761u)) : (~ (gl_NumWorkGroups)))) : _GLF_FUZZED(uvec3(75971u, _GLF_IDENTITY(41831u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(41831u, 1u, 1u), (_GLF_IDENTITY(uvec3(41831u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(41831u, 1u, 1u)))) | (uvec3(41831u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(41831u, 1u, 1u), (_GLF_IDENTITY(uvec3(41831u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(41831u, 1u, 1u)))) | (uvec3(41831u, 1u, 1u))))) << 0u)), 195486u))))), clamp((_GLF_IDENTITY((~ (gl_NumWorkGroups)), (true ? _GLF_IDENTITY((~ (gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(65479u, 185159u, 45761u)) : (~ (gl_NumWorkGroups)))) : _GLF_FUZZED(uvec3(75971u, _GLF_IDENTITY(41831u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(41831u, 1u, 1u), (_GLF_IDENTITY(uvec3(41831u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(41831u, 1u, 1u)))) | (uvec3(41831u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(41831u, 1u, 1u), (_GLF_IDENTITY(uvec3(41831u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(41831u, 1u, 1u)))) | (uvec3(41831u, 1u, 1u))))) << 0u)), 195486u))))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (true ? _GLF_IDENTITY((~ (gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(65479u, 185159u, 45761u)) : (~ (gl_NumWorkGroups)))) : _GLF_FUZZED(uvec3(75971u, _GLF_IDENTITY(41831u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(41831u, 1u, 1u), (_GLF_IDENTITY(uvec3(41831u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(41831u, 1u, 1u)))) | (uvec3(41831u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(41831u, 1u, 1u), (_GLF_IDENTITY(uvec3(41831u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(41831u, 1u, 1u)))) | (uvec3(41831u, 1u, 1u))))) << 0u)), 195486u))))), (_GLF_IDENTITY((~ (gl_NumWorkGroups)), (true ? _GLF_IDENTITY((~ (gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(65479u, 185159u, 45761u)) : (~ (gl_NumWorkGroups)))) : _GLF_FUZZED(uvec3(75971u, _GLF_IDENTITY(41831u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(41831u, 1u, 1u), (_GLF_IDENTITY(uvec3(41831u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(41831u, 1u, 1u)))) | (uvec3(41831u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec3(41831u, 1u, 1u), (_GLF_IDENTITY(uvec3(41831u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(41831u, 1u, 1u)))) | (uvec3(41831u, 1u, 1u))))) << 0u)), 195486u))))))) : _GLF_FUZZED(clamp(uvec3(174870u, 5369u, 123311u), uvec3(89944u, 4198u, 141640u), uvec3(13788u, 86966u, 121160u))))) ^ uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(132353u, 24618u, 87632u)))).x, (gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(4u, uint(uvec3(_GLF_IDENTITY(4u, ~ (~ (4u))), 0u, 0u)))), _GLF_IDENTITY(uvec3(4u), uvec3(0u, 0u, 0u) + (uvec3(4u)))))).x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2179.5971))), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) - 0.0)))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-7532.2173))), 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))), transpose(transpose(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-7532.2173))), 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))))))))).y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), max(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(2499.8563, 6893.3131, -9.1, -80.06)[1]) : 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), max(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(2499.8563, 6893.3131, -9.1, -80.06)[1]) : 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0), vec3(0.0, abs(0.0), 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0), mat4x3(mat4(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), max(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(2499.8563, 6893.3131, -9.1, -80.06)[1]) : 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0), vec3(0.0, abs(0.0), 1.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0), vec3(0.0, abs(0.0), 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(83.90)), bool(false))) > injectionSwitch.y))))))) || false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 1.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0))))), (mat2(injectionSwitch.x, 1.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))))) / mat2(_GLF_IDENTITY(1.0, (1.0) + sqrt(0.0)), 1.0, 1.0, 1.0)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), false, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y))), false, false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) + vec2(0.0, 0.0)) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), bool(bool(true && (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, true && (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) && true))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), true, false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-187.170))) > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (true)))), false || (bool(bvec2(false, true)))))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true))))))))) && true)) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.53), _GLF_FUZZED(9439.1028)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y) && true)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))) && true), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true, ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-54.53), _GLF_FUZZED(9439.1028)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y) && true)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))) && true), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true, ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y)))))) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-54.53, 1.0 * (-54.53))), _GLF_FUZZED(9439.1028)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y) && true)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))) && true), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))) && true), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))) && true), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))), true && ((! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))))) && true), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))), false || (_GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))))) && true)) && true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.3, 86.41))))) + sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(448.534) : injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))))))))))) && true))) || false)) || false)), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true)))))) && true), (injectionSwitch.x > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true, ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))) || (bool(bvec2(false, true)))))) && true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))) && true))))), (bool(bool(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(12.99)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))), (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))) && true, ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y)))))) && true)))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) | (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u)), uint(uvec2(~ (~ (workgroup_base)), 0u))))), uint(uvec4(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base)) : _GLF_FUZZED(virtual_gid)))), max((workgroup_base), (workgroup_base)))), (~ (~ (workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u)))), max(_GLF_IDENTITY(0u | (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (workgroup_base)), clamp(_GLF_IDENTITY((~ (workgroup_base)), (_GLF_IDENTITY((~ (workgroup_base)), max((~ (workgroup_base)), (~ (workgroup_base))))) - 0u), (~ (workgroup_base)), (~ (workgroup_base)))), _GLF_IDENTITY(uint(uvec2(~ (~ _GLF_IDENTITY((workgroup_base), 1u * (_GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 1u, 1u)))))), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)))), 0u | (uint(uvec2(~ (~ _GLF_IDENTITY((workgroup_base), 1u * (_GLF_IDENTITY((workgroup_base), uint(uvec3((workgroup_base), 1u, 1u)))))), 0u)))))), max(_GLF_IDENTITY(0u | (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u)))), (0u | (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size)))), ((_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(subgroup_size))))) >> 0u)) - 0u)), uint(uvec2(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) / 1u), 0u))))) + 0u), 0u | (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ _GLF_IDENTITY((~ (workgroup_base)), max((~ (workgroup_base)), (~ (workgroup_base)))), 0u)))))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u))), (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u)))) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), _GLF_IDENTITY(uint(uvec2(~ (~ (workgroup_base)), 0u)), min(_GLF_IDENTITY(uint(uvec2(~ (~ (workgroup_base)), 0u)), clamp(uint(uvec2(~ (~ (workgroup_base)), 0u)), uint(uvec2(~ (~ (workgroup_base)), 0u)), uint(uvec2(~ (~ (workgroup_base)), 0u)))), uint(uvec2(~ (~ (workgroup_base)), 0u))))), (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u)))) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u))), (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u))), (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u)))) << 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u))), (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u))), (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u)))) << 0u))))))) << 0u)))))), _GLF_IDENTITY(1u, uint(uint(1u))), 1u, (0u | 0u)))))) - 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(subgroup_size, 0u, 0u, 0u), (uvec4(subgroup_size, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u))))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, 0u)))) | (subgroup_size))) >> 0u)) / 1u) + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) / 1u)) * 1u)) << 0u) % subgroup_size), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) | (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) | (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(_GLF_IDENTITY(1u, uint(uvec4(1u, 0u, 1u, 0u)))))))), 1u, (0u | 0u)), max(uvec4(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) | (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u))))), _GLF_IDENTITY(1u, uint(uint(1u))), 1u, (0u | 0u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) | (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u))))), _GLF_IDENTITY(1u, uint(uint(1u))), 1u, (0u | _GLF_IDENTITY(0u, (0u) >> (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) | (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u))))), _GLF_IDENTITY(1u, uint(uint(1u))), 1u, (0u | 0u)), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY(~ (~ (workgroup_base)), (~ (~ (workgroup_base))) | (_GLF_IDENTITY(~ (~ (workgroup_base)), uint(uvec2(~ (~ (workgroup_base)), 0u))))), _GLF_IDENTITY(1u, uint(uint(1u))), 1u, (0u | 0u))))) + uvec4(0u, 0u, 0u, 0u)))))))) - 0u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id))))))) + 1)), min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id))))))) + 1)), _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), subgroup_local_id))))))) + 1))))) % subgroup_size)) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)) * (injectionSwitch)).y)))))) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) / vec2(1.0, 1.0)))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7310.1563)), bool(false))), float(mat2x4(0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)), log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 1.0, 1.0))))), 0.0, sqrt(1.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(3.4) : 0.0), ((false ? _GLF_FUZZED(3.4) : 0.0)) + 0.0), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(3.4) : 0.0), ((false ? _GLF_FUZZED(3.4) : 0.0)) + 0.0), max(_GLF_IDENTITY((false ? _GLF_FUZZED(3.4) : 0.0), ((false ? _GLF_FUZZED(3.4) : 0.0)) + 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(3.4) : 0.0), ((false ? _GLF_FUZZED(3.4) : 0.0)) + 0.0))), tan(0.0))))))), 0.0, sqrt(1.0), 0.0, 0.0)))))).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) / vec2(1.0, 1.0)))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)))) - 0.0), 1.0, 0.0))), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0))), abs(0.0), sin(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), (_GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0))), abs(0.0), sin(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), (vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0)), dot(vec2(abs(0.0), 1.0), vec2(0.0, 1.0))), abs(0.0), sin(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))) * vec2(1.0, 1.0))) / vec2(1.0, 1.0))).x), determinant(mat2(1.0, 0.0, 1.0, 1.0))))), 0.0, sqrt(1.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(627.690)), float(1.0), bool(true))), 1.0)), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(3.4) : 0.0), ((false ? _GLF_FUZZED(3.4) : 0.0)) + 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0)))))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) / vec2(1.0, 1.0)))), min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) / vec2(1.0, 1.0)))))), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, log(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(266.884) : 1.0))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), (mat2(1.0, 0.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), 0.0, sqrt(1.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(tanh(473.109))))))))), 0.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-6786.1229) : float(mat4x3(_GLF_IDENTITY(0.0, (0.0) - 0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))), 0.0, 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(3.4) : 0.0), (_GLF_IDENTITY((false ? _GLF_FUZZED(3.4) : 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(94.19) : _GLF_IDENTITY((false ? _GLF_FUZZED(3.4) : 0.0), clamp((false ? _GLF_FUZZED(3.4) : 0.0), (false ? _GLF_FUZZED(3.4) : 0.0), (false ? _GLF_FUZZED(3.4) : 0.0)))))) + 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0)))))).y))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.8))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (true ? mat4x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.8))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x2(72.85, 688.006, 899.520, -8.6, 21.15, 4.9, -469.985, -846.282))))), mix(float(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.8))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (true ? mat4x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.8))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x2(72.85, 688.006, 899.520, -8.6, 21.15, 4.9, -469.985, -846.282)))))), float(_GLF_FUZZED(2.1)), bool(false))))) + 0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 1.0, 1.0))))), 0.0, sqrt(1.0), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.8)), bool(false))), 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-3.9, (false ? _GLF_FUZZED(23.52) : -3.9))) : _GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_FUZZED(3.4) : 0.0), ((false ? _GLF_FUZZED(3.4) : 0.0)) / 1.0)))), 0.0, sqrt(1.0), 0.0, 0.0)))))).y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(30.55))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(fract(6.5)))), 0.0, 1.0, 1.0))))), determinant(mat3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(asin(float(62912))) : 1.0))))))))), 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.5))))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.4) : 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0)))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-53.47)), bvec2(true, false))), injectionSwitch)).x), determinant(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(fract(6.5)))), 0.0, 1.0, 1.0))))), determinant(mat3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(0.0, 1.0, 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(asin(float(62912))) : 1.0, clamp(false ? _GLF_FUZZED(asin(float(62912))) : 1.0, _GLF_IDENTITY(false ? _GLF_FUZZED(asin(float(62912))) : 1.0, min(false ? _GLF_FUZZED(asin(float(62912))) : 1.0, false ? _GLF_FUZZED(asin(float(62912))) : 1.0)), false ? _GLF_FUZZED(asin(float(62912))) : 1.0)))))))), (float(mat2x4(0.0, 1.0, 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(asin(float(62912))) : 1.0))))))) - sqrt(0.0))))), 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), _GLF_IDENTITY(transpose(transpose(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.5))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.4) : 0.0)))), 0.0, sqrt(1.0), 0.0, 0.0))), (transpose(transpose(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.5))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.4) : 0.0)), (true ? false ? _GLF_FUZZED(-3.9) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.4) : 0.0)) : _GLF_FUZZED(-6.6))))), 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))) * mat4(1.0))))).y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), false || (bool(bvec4(true, true, true, true))))))), false || _GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, true, false))))))) && true)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)), mix(vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)))[0], (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(81883) : 1))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(0.0)))), float(mat4x3(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(0.0)))), 1.0, abs(0.0), 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))), _GLF_FUZZED(8.4)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)), mix(vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)))[0], (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(81883) : 1))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(0.0)))), float(mat4x3(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(0.0)))), 1.0, abs(0.0), 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))), _GLF_FUZZED(8.4)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)), mix(vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)))[0], (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(81883) : 1))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(0.0)))), float(mat4x3(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(0.0)))), 1.0, abs(0.0), 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))), _GLF_FUZZED(8.4)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))).x > injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)), mix(vec2((mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)))[0], (mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) - 0)], (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)))[_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1)), (false ? _GLF_FUZZED(81883) : 1))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(0.0)))), float(mat4x3(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(0.0)))), 1.0, abs(0.0), 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, cos(0.0))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))), _GLF_FUZZED(8.4)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))).x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), false || ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)), mix(vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(_GLF_IDENTITY(false, (false) || false), false)))[0], (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], float(vec2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0)))), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(81883) : 1))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(0.0)))), float(mat4x3(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(0.0)))), 1.0, abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(exp(-8.7)) : 0.0))), 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))), _GLF_FUZZED(8.4)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)), mix(vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(_GLF_IDENTITY(false, (false) || false), false)))[0], (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], float(vec2((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))], 1.0)))), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(81883) : 1))]), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), vec2(1.0, 1.0) * (normalize(vec2(1.0, 1.0)))))), 1.0, sqrt(0.0)))), float(mat4x3(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, sqrt(0.0)))), 1.0, _GLF_IDENTITY(abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(exp(-8.7)) : 0.0))), 1.0 * (abs(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(exp(-8.7)) : 0.0))))), 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0))), 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))), _GLF_FUZZED(8.4)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (false || (_GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false)))).x > injectionSwitch.y))))))) || false)) || false))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_IDENTITY(_GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g), float(mat2(_GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g), 0.0, 1.0, 0.0)))), bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), mix(vec2((mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(cosh(1.7)) : _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, 0.0)), clamp(float(mat2x3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, 0.0)), float(mat2x3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, 0.0)))))))), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, _GLF_IDENTITY(-162.988, clamp(-162.988, _GLF_IDENTITY(-162.988, (true ? -162.988 : _GLF_FUZZED(float(next_virtual_gid)))), -162.988))).g)), bvec2(false, false)))[0], (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(float(true)), max(_GLF_IDENTITY(_GLF_FUZZED(float(true)), max(_GLF_FUZZED(float(true)), _GLF_FUZZED(float(true)))), _GLF_FUZZED(float(true)))), _GLF_FUZZED(vec3(7853.4460, _GLF_IDENTITY(-399.951, min(-399.951, -399.951)), -162.988).g)), bvec2(false, false)), mix(vec2(_GLF_FUZZED(9702.2861), _GLF_FUZZED(-2204.4070)), vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), clamp(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)))), bvec2(false, false)))[0], (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec3(7853.4460, -399.951, -162.988).g)), bvec2(false, false)))[1]), bvec2(true, true))))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY((- -4.6), float(vec4((- -4.6), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), sqrt(0.0))))))), _GLF_IDENTITY(_GLF_FUZZED(8.4), min(_GLF_IDENTITY(_GLF_FUZZED(8.4), min(_GLF_FUZZED(8.4), _GLF_FUZZED(8.4))), _GLF_FUZZED(8.4)))), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))).x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch[0]), bool(true))), injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((! (injectionSwitch.x > injectionSwitch.y)), true)))))))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))), _GLF_IDENTITY(max((virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), clamp(max((virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max((virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(max((virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max(max((virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), max((virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))), (virtual_gid) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bool(bvec2((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))), true, true)))), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true, true))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), false || (_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, bool(bool((! (false)) && true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(79.51) : _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, 1 * (64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
}
