#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 uint _f0;
 mat2x3 _f1;
 bvec4 _f2;
 bvec2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 ivec2 _f1;
 mat2 _f2;
 int _f3;
 vec2 _f4;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 mat4x3 _f1;
 int _f2;
 bool _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_8 {
 uint next_virtual_gid;
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 vec3 _f2;
 _GLF_struct_7 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 bool _f1;
 mat4x3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 bool _f1;
 mat2 _f2;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
 uvec3 _f2;
 uint _f3;
 _GLF_struct_8 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, true, true)), (bool(bvec4(! (false), false, true, true))) && true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-45.34), _GLF_IDENTITY(_GLF_FUZZED(424.462), 1.0 * (_GLF_FUZZED(424.462)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), false || (false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))) || false)) || _GLF_IDENTITY(false, (false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, 0.0, 1.0)), (vec2(mat3x4(injectionSwitch, abs(1.0), 1.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0, 1.0, 0.0, 1.0))) * vec2(1.0, 1.0))), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) + vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, sqrt(1.0), 1.0, 1.0), (vec4(injectionSwitch.y, sqrt(1.0), 1.0, 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, log(1.0), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 1.0))))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-157.205)))) * 1.0) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-97.76), _GLF_FUZZED(-682.683)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) * vec2(1.0, 1.0)))).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false)), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false))))))), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false)), false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false))))))), false))))), false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.1)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) || false)))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)) * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (((injectionSwitch) * mat2(1.0)) * mat2(1.0)) - vec2(0.0, 0.0))), (injectionSwitch) * mat2(1.0)), vec2(mat3x2(min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (((injectionSwitch) * mat2(1.0)) * mat2(1.0)) - vec2(0.0, 0.0))), (injectionSwitch) * mat2(1.0)), 1.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))) : _GLF_FUZZED(vec2(85.57, -80.04))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_2(vec4(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0, 1.0, 0.0, sin(0.0), abs(abs(0.0)), 0.0, 1.0, 1.0, 0.0)))), _GLF_struct_0(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0))), _GLF_struct_1(mat3(1.0))), _GLF_struct_4(_GLF_struct_3(uvec2(1u), true, mat4x3(1.0), uvec4(1u)), true, mat2(1.0)), uvec3(_GLF_IDENTITY(1u, (1u) >> 0u)), 1u, _GLF_struct_8(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) << 0u) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) >> (88848 & 0))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55806) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), 0u + (subgroup_local_id + 1)))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) >> 0)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(55806, (55806) << ((0 & 9377) >> _GLF_IDENTITY(int(2), int(2))))) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))), 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) >> (88848 & 0))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55806) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), 0u + (subgroup_local_id + 1)))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) >> 0)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(55806, (55806) << ((0 & 9377) >> _GLF_IDENTITY(int(2), int(2))))) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) >> (88848 & 0))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55806) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), 0u + (subgroup_local_id + 1)))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) >> 0)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(55806, (55806) << ((0 & 9377) >> _GLF_IDENTITY(int(2), int(2))))) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) >> (88848 & 0))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55806) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), 0u + (subgroup_local_id + 1)))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) >> 0)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(55806, (55806) << ((0 & 9377) >> _GLF_IDENTITY(int(2), int(2))))) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))), 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) >> (88848 & 0))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55806) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), 0u + (subgroup_local_id + 1)))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) >> 0)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(55806, (55806) << ((0 & 9377) >> _GLF_IDENTITY(int(2), int(2))))) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))), 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) >> (88848 & 0))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55806) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), 0u + (subgroup_local_id + 1)))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) >> 0)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(55806, (55806) << ((0 & 9377) >> _GLF_IDENTITY(int(2), int(2))))) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))), 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, (1) >> (88848 & 0))) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55806) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), 0u + (subgroup_local_id + 1)))), uint(uvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1), (max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)) >> 0)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(55806, (55806) << ((0 & 9377) >> _GLF_IDENTITY(int(2), int(2))))) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1)))), 0u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)))), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55806) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (1u ^ 1u), 1u)), max(uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (1u ^ 1u), 1u)), uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (1u ^ 1u), 1u))))) + (subgroup_local_id + 1)))))) << 0u) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(~ ((subgroup_size)), (~ ((subgroup_size))) | (~ ((subgroup_size)))))), uint(uvec2((subgroup_size), 0u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ _GLF_IDENTITY((subgroup_size), max(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u), (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ _GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)))) | (~ (subgroup_size)))))))), clamp(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size)))))))), _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (_GLF_IDENTITY(~ (subgroup_size), clamp(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size))), ~ (subgroup_size), ~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(0u, (0u) >> 0u))))))))) | (~ (subgroup_size)))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) >> 0u), max(~ (subgroup_size), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (0u | 0u) ^ (subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) | (~ (subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - 0u)), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), 1u * ((subgroup_size))), (~ (subgroup_size)) | (~ (subgroup_size)))))))), clamp(_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) * 1u), (~ (subgroup_size)) | (_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : ~ (subgroup_size)))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))), _GLF_IDENTITY((~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size))))))), ((~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size)))))))) + 0u)), _GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), 0u | (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u))), max(~ (subgroup_size), _GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) | ((~ (subgroup_size)))) | (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))))))))))) - 0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec2((subgroup_size), 0u)), (uint(uvec2((subgroup_size), 0u))) ^ 0u)), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))), ~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec2((subgroup_size), 0u)), (uint(uvec2((subgroup_size), 0u))) ^ 0u)), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> ((0u & 177975u) ^ 0u))))), min((_GLF_IDENTITY(~ (~ (subgroup_size)), clamp(~ (~ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_size)), 0u | (~ (~ (subgroup_size)))), ~ (~ (subgroup_size))))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec2((subgroup_size), _GLF_IDENTITY(0u, (0u) ^ 0u))), (uint(uvec2((subgroup_size), 0u))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) / 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))))))))), (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))), ~ (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))))))))))))) / 1u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) / 1u))))))), (0u ^ 1u) * (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) / 1u))))))), clamp((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) / 1u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) / 1u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) / 1u))))))))))))))), min(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec2((subgroup_size), 0u)), (uint(_GLF_IDENTITY(uvec2((subgroup_size), 0u), (uvec2((subgroup_size), 0u)) - uvec2(0u, 0u)))) ^ 0u)), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ _GLF_IDENTITY((~ (subgroup_size)), max((~ (subgroup_size)), (~ (subgroup_size))))), min((~ (~ (subgroup_size))), (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_size), 0u ^ (~ (subgroup_size))), max(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (subgroup_size)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (_GLF_IDENTITY(uint(subgroup_size), 0u | (_GLF_IDENTITY(uint(subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : uint(subgroup_size))))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ (~ ((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 1u, 1u)), ~ (~ (uint(uvec3((_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 1u, 1u)))))), (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))))))), _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec2((subgroup_size), 0u)), (uint(uvec2((subgroup_size), 0u))) ^ 0u)), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), max((~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))))))), _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec2((subgroup_size), 0u)), (uint(uvec2((subgroup_size), 0u))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(workgroup_id) : (0u))) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), _GLF_IDENTITY(0u, (0u) | 0u)))))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))))), ~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) >> 0u)))))))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec2((subgroup_size), 0u)), (uint(uvec2((subgroup_size), 0u))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(workgroup_id) : (0u))) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), _GLF_IDENTITY(0u, (0u) | 0u)))))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), max(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))))), ~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) >> 0u))))))))))))))) / 1u)), uint(uvec4((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) << 0u), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(55806) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + 1, 0u + (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2(_GLF_IDENTITY((subgroup_size), 0u ^ _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))), min(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2(_GLF_IDENTITY((subgroup_size), 0u ^ _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2(_GLF_IDENTITY((subgroup_size), 0u ^ _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))), min(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2(_GLF_IDENTITY((subgroup_size), 0u ^ _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))), _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2(_GLF_IDENTITY((subgroup_size), 0u ^ _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u)), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), uint(uint(uint(subgroup_size))))))), min((_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), uint(uint(uint(subgroup_size))))))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), uint(uint(uint(subgroup_size)))))))))))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u)))), ((_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))))) >> (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (subgroup_size)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (~ (~ (subgroup_size)))), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ _GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), (true ? ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) : _GLF_FUZZED(virtual_gid)))))))) / 1u), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) | 0u, max((subgroup_local_id + 1) | 0u, (subgroup_local_id + 1) | 0u))), subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(55806) : 1))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))))) + 1, 0u + (subgroup_local_id + 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec2((subgroup_size), 0u)), (uint(uvec2((subgroup_size), 0u))) / 1u)), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), (_GLF_IDENTITY((~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), ((~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))) >> 0u)) | 0u)))))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(uint(uvec2((subgroup_size), 0u)), (uint(uvec2((subgroup_size), 0u))) / 1u)), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), min(~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), ~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))))) / 1u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(uint((bvec3(true, true, false) != bvec3(false, false, true))))))), ~ (subgroup_size))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(uint((bvec3(true, true, false) != bvec3(false, false, true))))))), ~ (subgroup_size))))), min((~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(uint((bvec3(true, true, false) != bvec3(false, false, true))))))), ~ (subgroup_size))))), (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(uint((bvec3(true, true, false) != bvec3(false, false, true))))))), ~ (subgroup_size)))))))) ^ 0u)))))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))))) / 1u, clamp((_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))))), min(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size))) / 1u))))))))))) / 1u, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), subgroup_size)))))))))))) / 1u, (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) >> 0u)), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))), 0u | ((~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))))) / 1u)), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), max(~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size))))))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (~ (subgroup_size))))) | (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))))) / 1u)))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) ^ 0))), 1, 1)), 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) ^ 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(_GLF_IDENTITY(55806, min(55806, 55806))) : 1))) >> 0), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)), 0u + _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u), max(~ (subgroup_size), ~ (subgroup_size)))))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), uint(uvec3(_GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), ~ (_GLF_IDENTITY(~ (~ (subgroup_size)), (~ (~ (subgroup_size))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u), max(~ (subgroup_size), ~ (subgroup_size)))))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_size), uint(uvec2((subgroup_size), _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_id)))))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u)), _GLF_IDENTITY((~ (~ (subgroup_size))), min((~ (~ (subgroup_size))), (~ (_GLF_IDENTITY(~ (subgroup_size), uint(uvec3(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) * 1u), 1u, 0u))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))), 1u * (~ (_GLF_IDENTITY(~ (subgroup_size), max(~ (subgroup_size), ~ (subgroup_size)))))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))))))))) / 1u))) | 0u)))), 0u, 1u, 0u))), _GLF_struct_5(uvec4(1u), mat4x3(1.0), 1, true, bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_struct_6(mat4(1.0), ivec2(1), mat2(1.0), 1, vec2(1.0)), vec3(1.0), _GLF_struct_7(1u, mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bvec4(true), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! (! (true))))))) || false)), uvec3(1u)), mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), false)))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec2(0.0, 0.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4989.7846)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-1501.5224, 2.4, -19.51, 6928.0196).y)), vec2(_GLF_IDENTITY(_GLF_FUZZED(7.8), max(_GLF_FUZZED(7.8), _GLF_FUZZED(7.8))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_9._f4.next_virtual_gid], uint(_GLF_IDENTITY(2, 1 * (2))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 0 + (64)), 64))) | (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-14315)))))) | 0), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4802.1358)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))))), bool(true))) > injectionSwitch.y))) && true)))
  barrier();
}
