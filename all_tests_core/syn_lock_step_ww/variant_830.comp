#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), cos(abs(0.0)), 0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-28.10)), bool(false))), float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7729.7449), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1], ((injectionSwitch)[1]) - 0.0)), bool(true)))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(41.32)), vec2(mat2(vec2((injectionSwitch)[0], _GLF_FUZZED(41.32)), 0.0, length(tan(vec3(0.0, 0.0, 0.0)))))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(1.3)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0]), bool(true))), injectionSwitch[1])).y)) ? _GLF_IDENTITY(_GLF_FUZZED(sin(injectionSwitch)), mix(vec2((_GLF_FUZZED(sin(injectionSwitch)))[0], _GLF_FUZZED((-231.201 / -663.712))), vec2(_GLF_FUZZED((false ? (false ? -70.62 : 2.1) : 3.2)), (_GLF_FUZZED(sin(injectionSwitch)))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))), (injectionSwitch) / sqrt(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.1)), bool(false))), 1.0))))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(7.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.5))) > injectionSwitch.y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))).x, (true ? injectionSwitch.x : _GLF_FUZZED(-7.5))) > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))), bool(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (workgroup_size * workgroup_id)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) || false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + abs(vec2(0.0, 0.0)))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))) || false), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false)))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec4(! ((false)), false, true, false))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), bool(bvec3(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((230.391 * -6.7))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y, true, true))))), true))), false, true), bvec3(bvec4(bvec3((false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), bool(bvec3(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))), true))), false, true), true))))), false, true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), 0u ^ (_GLF_IDENTITY(1u, (1u) + 0u)))), 0u ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), 0u ^ (_GLF_IDENTITY(1u, (1u) + 0u)))))))), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u)))) - 0u))), 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u)))) - 0u))), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))) | 0u)))) - 0u)))) - 0u))), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u)))) - 0u)), 1u * (max(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u)))) - 0u))))), 1u, 1u)))), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u)))) - 0u))), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u)))) - 0u))), 1u, 1u)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size)), _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (true ? max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)) : _GLF_FUZZED((subgroup_local_id % workgroup_base))))), 1u, 1u)), 0u ^ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) >> 0u), subgroup_id)) * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(144073u) : subgroup_id)) * subgroup_size)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), min(~ (min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)), ~ (min(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id))))))) * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u))), 1u)), 1u, 1u)) << uvec4(0u, 0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_size, 9292, int(true))) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size), clamp(_GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(subgroup_id, 0u), (uvec2(subgroup_id, 0u)) - uvec2(0u, 0u)))) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), subgroup_id * subgroup_size), max(clamp(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (false ? _GLF_FUZZED(atomicAnd(workgroup_size, 163612u)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), subgroup_id * subgroup_size, subgroup_id * subgroup_size), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) / 1u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id)))), ~ (~ (_GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id)))))))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))), (subgroup_id) >> 0u), subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), clamp(uint(uint((subgroup_id))), uint(uint((subgroup_id))), uint(uint((subgroup_id))))))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))), (subgroup_id) >> 0u), subgroup_id)) * subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 1u, 1u)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_size, 9292, int(true))), min(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(workgroup_size, 9292, int(true))), (_GLF_FUZZED(bitfieldExtract(workgroup_size, 9292, int(true)))) | 0u), _GLF_FUZZED(bitfieldExtract(workgroup_size, 9292, int(true))))) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), subgroup_id * subgroup_size), max(clamp(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (false ? _GLF_FUZZED(atomicAnd(workgroup_size, 163612u)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), subgroup_id * subgroup_size, subgroup_id * subgroup_size), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) / 1u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))), (subgroup_id) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))), (subgroup_id) >> 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))), (subgroup_id) >> 0u), 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))), (subgroup_id) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))), (subgroup_id) >> 0u)) | 0u))), subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), clamp(uint(uint((subgroup_id))), uint(uint((subgroup_id))), uint(uint((subgroup_id))))))), ~ (~ (subgroup_id)))), ~ _GLF_IDENTITY((~ (subgroup_id)), max(_GLF_IDENTITY((~ (subgroup_id)), min((~ (subgroup_id)), (~ (subgroup_id)))), (~ (subgroup_id))))))), (subgroup_id) >> 0u), subgroup_id)) * subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 1u, 1u)))))), (((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_size, 9292, int(true))) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))), ~ (~ (_GLF_IDENTITY(clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size), max(clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(bitfieldExtract(workgroup_size, 9292, int(true))) : subgroup_id)) * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), subgroup_id * subgroup_size), max(clamp(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (false ? _GLF_FUZZED(atomicAnd(workgroup_size, 163612u)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), subgroup_id * subgroup_size, subgroup_id * subgroup_size), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) / 1u)), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))))))), 1u, 1u)), 0u ^ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))), (subgroup_id) >> 0u), subgroup_id)) * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id)), subgroup_id)), _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), clamp(uint(uint((subgroup_id))), uint(uint((subgroup_id))), uint(uint((subgroup_id))))))), ~ (~ (subgroup_id)))), ~ (~ _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec3((subgroup_id), ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) | 0u), 1u), (uvec3((subgroup_id), ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) | 0u), 1u)) + uvec3(0u, 0u, 0u)))))))), (subgroup_id) >> 0u), subgroup_id)) * subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 1u, 1u)), min(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))), (subgroup_id) >> 0u), subgroup_id)) * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id)), subgroup_id)), _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), clamp(uint(uint((subgroup_id))), uint(uint((subgroup_id))), uint(uint((subgroup_id))))))), ~ (~ (subgroup_id)))), ~ (~ _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec3((subgroup_id), ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) | 0u), 1u), (uvec3((subgroup_id), ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) | 0u), 1u)) + uvec3(0u, 0u, 0u)))))))), (subgroup_id) >> 0u), subgroup_id)) * subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 1u, 1u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), uint(uint((subgroup_id))))), ~ (~ (subgroup_id)))), ~ (~ (subgroup_id))))), (subgroup_id) >> 0u), subgroup_id)) * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_FUZZED(subgroup_id))) : _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), subgroup_id)), subgroup_id)), _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), uint(uint(~ (subgroup_id))))), max(~ (~ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(uint((subgroup_id))), clamp(uint(uint((subgroup_id))), uint(uint((subgroup_id))), uint(uint((subgroup_id))))))), ~ (~ (subgroup_id)))), ~ (~ _GLF_IDENTITY((subgroup_id), uint(_GLF_IDENTITY(uvec3((subgroup_id), ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) | 0u), 1u), (uvec3((subgroup_id), ((0u << _GLF_IDENTITY(uint(7u), uint(7u))) | 0u), 1u)) + uvec3(0u, 0u, 0u)))))))), (subgroup_id) >> 0u), subgroup_id)) * subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 1u, 1u))))))))) << 0u)) - 0u), (((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(1u, 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 0u)), (uint(uvec2(1u, 0u))) >> 0u)), 1u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / _GLF_IDENTITY(1u, 1u * (1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u)) >> 0u), subgroup_id)) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), max(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), (uvec3(subgroup_size, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(subgroup_size, 1u, 1u), clamp(uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u), uvec3(subgroup_size, 1u, 1u))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) * mat2(1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) * mat2(1.0))))).y)) ? _GLF_FUZZED(uvec3(181578u, 35769u, 71465u)[1]) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)))), (subgroup_id) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(atomicMin(subgroup_local_id, subgroup_size)))), ~ (~ (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(atomicMin(subgroup_local_id, subgroup_size))))))))) * subgroup_size, clamp(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))))))) | (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, (0u) + 0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))))), _GLF_IDENTITY(uint(2u), (uint(2u)) >> 0u)))) ^ 0u)))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 1u, 1u, 1u))) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec3(1, 1, 0))), 1))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec3(1, _GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(3), int(3)))), 0))), 1))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec3(1, 1, 0))), 1))) % subgroup_size) << 0u)) ^ 0u)), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))) - 0u) - 0u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (0u | 0u), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (0u | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (0u | 0u), max((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (0u | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (0u | 0u)))))) + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), (workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) * 1u), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))), ~ (~ ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))))) * 1u)) / 1u))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, abs(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0)))))), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((0.4)), _GLF_FUZZED(-9283.9650)), bvec2(false, false))).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x)))) - 0.0)))) * 1.0)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)), true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))), bvec3(bvec4(bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), true))))))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)), false), bvec2(bvec3(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(64.46), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.6)), bvec2(true, false))).x > injectionSwitch.y))) || false), true)), false), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) >> 0u))), 0u, 0u)) | _GLF_IDENTITY(0u, (0u) - 0u)) | (_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), ~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(subgroup_size)))))))), virtual_gid))))], uint(1), 4, 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -362.967))), vec2(_GLF_FUZZED(1.5), (injectionSwitch)[1]), bvec2(false, true))), 1.0, 1.0, 0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch / vec2(-5600.8639, -0.1))))) : _GLF_FUZZED(vec2(50.37, -3.5)))).x)) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))), _GLF_IDENTITY(true, (true) || false))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), true, false, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
