#version 460
struct _GLF_struct_2 {
 ivec4 _f0;
} ;

struct _GLF_struct_1 {
 uint workgroup_id;
 mat3x2 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 ivec3 _f2;
 uint _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 uint subgroup_base;
 mat2x3 _f1;
 mat4x2 _f2;
 uvec3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_1(gl_WorkGroupID.x, mat3x2(1.0)), _GLF_struct_2(ivec4(1)), ivec3(1), 1u), mat2(1.0));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_4._f0._f0.workgroup_id;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(ivec4(1), subgroup_id * subgroup_size, mat2x3(1.0), mat4x2(1.0), uvec3(1u));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_0.subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_0.subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
}
