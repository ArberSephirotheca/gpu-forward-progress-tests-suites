#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-449.185)), bool(false))) : _GLF_FUZZED(379.067))), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(faceforward(-3.1, -62.94, -7.0)) : injectionSwitch.x)) > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(faceforward(-3.1, -62.94, -7.0)) : injectionSwitch.x)) > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(faceforward(-3.1, -62.94, -7.0)) : injectionSwitch.x)) > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))) && true, bool(bool((bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))) && true)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, false)))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-600.701)), bool(false))))), mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY((float(injectionSwitch.y)), float(mat2x4(_GLF_IDENTITY((float(injectionSwitch.y)), 0.0 + ((float(injectionSwitch.y)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))) + 0.0), bool(true)))))))))))) && true))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true)))))))))))))) && true))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) && true)), true && (bool(_GLF_IDENTITY(bool((false)), (bool((false))) && true)))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true)))))))))))) && true))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 1 * (1))])).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0))), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) + 0.0), bool(true)))))))))))) && true))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))) && true, true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, _GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 1 * (1))])).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), clamp(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0))), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), (float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) + 0.0), bool(true)))))))))))) && true))), _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(((false)) && true, bool(bvec3(((false)) && true, false, true)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(((false)) && true, bool(bvec3(((false)) && true, false, true)))))))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(((false)) && true, bool(bvec3(((false)) && true, false, true))))))))))))))) && true)))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), true))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, false)))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), ! (! (bool(bvec3(! (false), false, false))))))))) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) * 1)]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r), _GLF_FUZZED((- 6.0))), bvec2(false, false)))) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(vec3(1.0, 96.20, -244.139)[0])))))), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), ! (! (bool(bvec3(! (false), false, false))))))))) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) * 1)]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r), _GLF_FUZZED((- 6.0))), bvec2(false, false)))) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(vec3(1.0, 96.20, -244.139)[0])))))), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), ! (! (bool(bvec3(! (false), false, false))))))))) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) * 1)]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r), _GLF_FUZZED((- 6.0))), bvec2(false, false)))) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(vec3(1.0, 96.20, -244.139)[0])))))), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(true, (true) && true), true))))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(((false)) && true, bool(bvec3(((false)) && true, false, true)))))))))), true && (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY(((false)) && true, (((false)) && true) || false), bool(bvec3(((false)) && true, false, true))))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), false || (bool(bool((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))))))) && true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), ! (! (bool(bvec3(! (false), false, false))))))))) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, (1) * 1)]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r), (_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r)) - 0.0), _GLF_FUZZED((- 6.0))), bvec2(false, false)))) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2.7))), injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4.7))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))), ! (! ((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false)))))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(vec3(1.0, 96.20, -244.139)[0])))))), (vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], clamp(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[_GLF_IDENTITY(0, min(0, 0))]))) + 0.0), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], 0.0 + (injectionSwitch[_GLF_IDENTITY(0, min(0, 0))])), injectionSwitch[_GLF_IDENTITY(0, min(0, 0))])), injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)))))))), _GLF_IDENTITY(true, (true) && true), true))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), ! (! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), false, false))), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(((false)) && true, bool(bvec3(((false)) && true, false, true))))))))))))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), ! (! (bool(bvec3(! (false), false, false))))))))) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, false || (false))))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(82.57) : injectionSwitch[0])) : _GLF_FUZZED(-92.43))), injectionSwitch[_GLF_IDENTITY(1, (1) * 1)]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r), _GLF_FUZZED((- 6.0))), bvec2(false, false)))) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), float(mat3(float(injectionSwitch.y), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(76.49)), bool(false))), bool(true)))))))))) && true)), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, true)))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(vec3(1.0, 96.20, -244.139)[0])))))), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)))))))), _GLF_IDENTITY(true, (true) && true), true))))))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(((false)) && true, bool(bvec3(((false)) && true, false, true)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(((false)) && true, bool(bvec3(((false)) && true, false, true)))))))))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), ! (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(((false)) && true, bool(bvec3(((false)) && true, false, true))))))))))))))) && true)))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), true))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), true, false, false)))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), ! (! (bool(bvec3(! (false), false, false))))))))) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) * 1)]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r), _GLF_FUZZED((- 6.0))), bvec2(false, false)))) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(vec3(1.0, 96.20, -244.139)[0])))))), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), ! (! (bool(bvec3(! (false), false, false))))))))) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) * 1)]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r), _GLF_FUZZED((- 6.0))), bvec2(false, false)))) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(vec3(1.0, 96.20, -244.139)[0])))))), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), ! (! (bool(bvec3(! (false), false, false))))))))) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) * 1)]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r), _GLF_FUZZED((- 6.0))), bvec2(false, false)))) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(vec3(1.0, 96.20, -244.139)[0])))))), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), _GLF_IDENTITY(true, (true) && true), true))))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true)), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(((false)) && true, bool(bvec3(((false)) && true, false, true)))))))))), true && (! (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY(((false)) && true, (((false)) && true) || false), bool(bvec3(((false)) && true, false, true))))))))))))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), false || (bool(bool((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))))))) && true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), ! (! (bool(bvec3(! (false), false, false))))))))) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, (1) * 1)]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r), (_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r)) - 0.0), _GLF_FUZZED((- 6.0))), bvec2(false, false)))) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2.7))), injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4.7))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))), ! (! ((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false)))))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(vec3(1.0, 96.20, -244.139)[0])))))), (vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], clamp(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[_GLF_IDENTITY(0, min(0, 0))]))) + 0.0), _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, min(0, 0))], 0.0 + (injectionSwitch[_GLF_IDENTITY(0, min(0, 0))])), injectionSwitch[_GLF_IDENTITY(0, min(0, 0))])), injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)))))))), _GLF_IDENTITY(true, (true) && true), true))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), ! (! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), false, false))), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(((false)) && true, false || (_GLF_IDENTITY(((false)) && true, bool(bvec3(((false)) && true, false, true))))))))))))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), ! (! (bool(bvec3(! (false), false, false))))))))) && true, true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, false || (false))))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (false)))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? _GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(82.57) : injectionSwitch[0])) : _GLF_FUZZED(-92.43))), injectionSwitch[_GLF_IDENTITY(1, (1) * 1)]), (_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2(_GLF_FUZZED(vec4(-686.633, 639.018, 9.2, -7.1).r), _GLF_FUZZED((- 6.0))), bvec2(false, false)))) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-29.79)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), float(mat3(float(injectionSwitch.y), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_FUZZED(76.49)), bool(false))), bool(true)))))))))) && true)), true && (! ((_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), false || (bool(bool((false))))))))), bool(bvec4((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (false)))), false, true)))))), false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(vec3(1.0, 96.20, -244.139)[0])))))), (vec2(injectionSwitch[0], injectionSwitch[1])) * vec2(1.0, 1.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), mix(float(_GLF_FUZZED(-29.79)), float(injectionSwitch.y), bool(true)))))))))) && true)))))))), _GLF_IDENTITY(true, (true) && true), true))))))))))), true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       for(int _injected_loop_counter = (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)); _injected_loop_counter --)
        {
         do
          {
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true)))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))) || false)));
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       do
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))))))));
        }
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), true)))), true && (bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), true)))), true && (bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), true)))), true && (bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), bool(bvec2(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), true)))), true && (bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))) && true)))))))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-993.776, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-993.776, mix(float(-993.776), float(_GLF_FUZZED(973.363)), bool(false))) : _GLF_FUZZED(-8917.9169))))), bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false, true))))), ! (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))))))
    return;
  }
 else
  {
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))));
   return;
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), clamp(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), int(0))) << (0 >> _GLF_IDENTITY(int(3), int(3))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (int(0)) << 0)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (ivec2(_GLF_IDENTITY(int(0), int(0)), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) << ivec2(0, 0))) >> ivec2(0, 0)))))); _injected_loop_counter ++)
      {
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_id, (1u & 1u), 0u)), (uint(uvec3(workgroup_id, (1u & 1u), 0u))) ^ 0u), (_GLF_IDENTITY(uint(uvec3(workgroup_id, (1u & 1u), 0u)), (uint(uvec3(workgroup_id, (1u & 1u), 0u))) ^ 0u)) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(mix(subgroup_size, workgroup_id, false)) : 1u)))), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_id, (1u & 1u), 0u)), (uint(uvec3(workgroup_id, (1u & 1u), 0u))) ^ 0u), (_GLF_IDENTITY(uint(uvec3(workgroup_id, (1u & 1u), 0u)), (uint(uvec3(workgroup_id, (1u & 1u), 0u))) ^ 0u)) / 1u)), (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(workgroup_id, (1u & 1u), 0u)), (uint(uvec3(workgroup_id, (1u & 1u), 0u))) ^ 0u), (_GLF_IDENTITY(uint(uvec3(workgroup_id, (1u & 1u), 0u)), (uint(uvec3(workgroup_id, (1u & 1u), 0u))) ^ 0u)) / 1u))) | 0u)) - 0u), ~ (~ (workgroup_size * workgroup_id)))) ^ 0u);
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(_GLF_IDENTITY(0u, (0u) / 1u), 0u)) | uvec2(0u, 0u)))))), (false ? _GLF_FUZZED(84907u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u)))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), _GLF_IDENTITY((subgroup_size) << 0u, uint(_GLF_IDENTITY(uvec2((subgroup_size) << 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uvec2((subgroup_size) << 0u, 0u)) - uvec2(0u, 0u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) - 0u)) >> 0u))), 0u), 0u, 1u))))), (subgroup_size) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))) | _GLF_IDENTITY(0u, ~ (~ (0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))))))) - 0u))), 0u))), (subgroup_size) << 0u)))) >> 0u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))) << 0u)))) >> 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size))) << 0u, ((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size))) << 0u) | 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size))) << 0u, ((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size))) << 0u) | 0u))))) ^ 0u)) >> _GLF_IDENTITY(0u, uint(uint(0u))), 1u, _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u ^ (uint(uvec3((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) << 0u)))) >> 0u, 1u, 0u))), (0u ^ (uint(uvec3((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size)))) | (~ (subgroup_size))), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u)))))) << 0u)))) >> 0u, 1u, 0u)))) / 1u))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u), max(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(0u, (0u) | (0u))), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))))), (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(clamp(subgroup_id, subgroup_local_id, workgroup_base))))) << 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)), _GLF_IDENTITY(((subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))))), (_GLF_IDENTITY(((subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))))), min(((subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))))), ((subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)))))))) / _GLF_IDENTITY(1u, 0u + (1u))) | ((subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))))))), ~ (_GLF_IDENTITY(~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(180962u))), (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u))), _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (subgroup_size))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u, min(0u, 0u))), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u, min(0u, 0u))) : _GLF_FUZZED(subgroup_id))))) / 1u))))))), (~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(180962u))), (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u))), _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, sqrt(1.0), 1.0, abs(1.0), abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)))))) ? _GLF_FUZZED(workgroup_size) : (subgroup_size))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u, min(0u, 0u))), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u, min(0u, 0u))) : _GLF_FUZZED(subgroup_id))))) / 1u)))))))) + 0u)))))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(_GLF_IDENTITY(0u, (0u) / 1u), 0u)) | uvec2(0u, 0u)))))), (false ? _GLF_FUZZED(84907u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u)))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | uvec2(0u, 0u)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), _GLF_IDENTITY((subgroup_size) << 0u, uint(_GLF_IDENTITY(uvec2((subgroup_size) << 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (uvec2((subgroup_size) << 0u, 0u)) - uvec2(0u, 0u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), 0u), uvec2(uvec4(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size, subgroup_size))) - 0u)) >> 0u))), 0u), 0u, 1u))))), (subgroup_size) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u))))))) | _GLF_IDENTITY(0u, ~ (~ (0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 1u))))))) - 0u))), 0u))), (subgroup_size) << 0u)))) >> 0u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))) << 0u)))) >> 0u, 1u, 0u)), (_GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size))) << 0u, ((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size))) << 0u) | 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), min(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size))) << 0u, ((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), subgroup_size))) << 0u) | 0u))))) ^ 0u)) >> _GLF_IDENTITY(0u, uint(uint(0u))), 1u, _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(0u ^ (uint(uvec3((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) << 0u)))) >> 0u, 1u, 0u))), (0u ^ (uint(uvec3((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), max(_GLF_IDENTITY(~ (subgroup_size), (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | (~ (subgroup_size)))) | (~ (subgroup_size))), _GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) << 0u)))))) << 0u)))) >> 0u, 1u, 0u)))) / 1u))) >> 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u), max(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(0u, (0u) | (0u))), uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))))), (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(clamp(subgroup_id, subgroup_local_id, workgroup_base))))) << 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)), _GLF_IDENTITY(((subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))))), (_GLF_IDENTITY(((subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))))), min(((subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))))), ((subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u)))))))) / _GLF_IDENTITY(1u, 0u + (1u))) | ((subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), 0u))), (subgroup_size) << 0u))))))), ~ (_GLF_IDENTITY(~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(180962u))), (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u))), _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (subgroup_size))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u, min(0u, 0u))), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u, min(0u, 0u))) : _GLF_FUZZED(subgroup_id))))) / 1u))))))), (~ (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(180962u))), (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), uint(uint(clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))))), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u))), _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((subgroup_size), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, sqrt(1.0), 1.0, abs(1.0), abs(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0)))))) ? _GLF_FUZZED(workgroup_size) : (subgroup_size))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u, min(0u, 0u))), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(workgroup_size)))) : _GLF_IDENTITY(0u, min(0u, 0u))) : _GLF_FUZZED(subgroup_id))))) / 1u)))))))) + 0u))))))))) >> 0u);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atanh(injectionSwitch)) : injectionSwitch)).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atanh(injectionSwitch)) : injectionSwitch)).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) && true), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), true, false, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), true, false, true))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))), true, false, true)))))) || false))) && true)))))
            return;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_ONE(1.0, injectionSwitch.y))))), true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED(-507.105)), bool(false)))) - 0.0) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_IDENTITY(_GLF_FUZZED(49.25), 1.0 * (_GLF_FUZZED(49.25)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, ((0 | 0) ^ 1) * (1)))) | 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), min(_GLF_IDENTITY(uint(1), (uint(1)) | 0u), _GLF_IDENTITY(uint(1), (uint(1)) | 0u)))), clamp((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (1u | 1u) * (uint(1)))) | 0u)), (_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, 0u | (0u)))), (_GLF_IDENTITY(uint(1), (uint(1)) | 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))) * 1u), (uint(_GLF_IDENTITY(1, (1) ^ 0))) | 0u)), ((_GLF_IDENTITY(uint(1), (uint(1)) | 0u))) ^ 0u))))), 4, 64, 4);
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.3), _GLF_FUZZED(-3759.8470)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << (0 >> _GLF_IDENTITY(int(6), int(6))))); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, false, _GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false, false, false))))), _GLF_IDENTITY(false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-498.662 - -3.5))), vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)), false, false, false)))))), ! (! (_GLF_IDENTITY(false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-498.662 - -3.5))), vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)), false, false, false)))))), bool(bvec4(false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-498.662 - -3.5))), vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)), false, false, false)))))), false, true, false))))))))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true)))), false))))
              return;
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) | (4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 + (int(4))), int(int(int(4)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 do
                  {
                   return;
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true)))))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), true && (_GLF_IDENTITY((false), ((false)) || false))), true, true, true))), (! _GLF_IDENTITY((false), ((false)) && true)) && true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)) && true))));
                }
               else
                {
                }
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
          return;
        }
      }
    }
  }
 atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | (false ? _GLF_FUZZED(19046) : 4)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | _GLF_IDENTITY((false ? _GLF_FUZZED(19046) : 4), (false ? _GLF_FUZZED(_GLF_IDENTITY(-57927, ~ (~ (_GLF_IDENTITY(-57927, min(-57927, -57927)))))) : (false ? _GLF_FUZZED(19046) : 4)))))), clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | (false ? _GLF_FUZZED(19046) : 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | (_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, 0 ^ (false ? _GLF_FUZZED(19046) : 4)))))), min(_GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | _GLF_IDENTITY((false ? _GLF_FUZZED(19046) : 4), clamp((false ? _GLF_FUZZED(19046) : 4), (false ? _GLF_FUZZED(19046) : 4), (false ? _GLF_FUZZED(19046) : 4)))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | (false ? _GLF_FUZZED(19046) : 4)))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(19046), (_GLF_IDENTITY(_GLF_FUZZED(19046), (_GLF_FUZZED(19046)) * 1)) ^ 0) : 4, (false ? _GLF_IDENTITY(_GLF_FUZZED(19046), (_GLF_IDENTITY(_GLF_FUZZED(19046), (_GLF_FUZZED(19046)) * 1)) ^ 0) : 4) ^ 0), (false ? _GLF_FUZZED(19046) : 4) | (false ? _GLF_FUZZED(19046) : 4)))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | (false ? _GLF_FUZZED(19046) : 4)))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | (false ? _GLF_FUZZED(19046) : 4))), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | (false ? _GLF_FUZZED(19046) : 4))), clamp((_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | (false ? _GLF_FUZZED(19046) : 4))), (_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | (false ? _GLF_FUZZED(19046) : 4))), (_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | (false ? _GLF_FUZZED(19046) : 4))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(19046) : 4, (false ? _GLF_FUZZED(19046) : 4) | (false ? _GLF_FUZZED(19046) : 4)))))))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) < _GLF_IDENTITY((0 | 1), max((0 | 1), (0 | 1))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) < (0 | 1))), bool(bool(bool(bool(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) < (0 | 1)))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (true) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
  }
}
