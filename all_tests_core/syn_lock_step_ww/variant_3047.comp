#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 mat3 _f0;
 bvec3 _f1;
 mat2 _f2;
 ivec3 _f3;
 float _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
 _GLF_struct_3 _f1;
 uint workgroup_base;
} ;

struct _GLF_struct_1 {
 mat2 _f0;
} ;

struct _GLF_struct_0 {
 bool _f0;
 mat3x2 _f1;
 bvec3 _f2;
 mat4x3 _f3;
 mat2x3 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uint _f1;
 float _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 mat4x3 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_4 _f3;
 bvec4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, cos(0.0)))))), vec2(vec4(injectionSwitch, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0))).x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), bool(bool(false))), true)), (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))) || false)), ! (! (_GLF_IDENTITY(false, false || (false)))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))) * (injectionSwitch.y)), injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), 1.0, 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec2(_GLF_DEAD(false), false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))) && true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -6127.3606))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, cos(0.0))))), bool(true))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-398.745)))), max(clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.7))), injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-398.745)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(vec2(-14.30, -0.5)))), mix(vec2(_GLF_FUZZED((- 626.480)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(vec2(-14.30, -0.5)))))[1], max((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(vec2(-14.30, -0.5)))))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(vec2(-14.30, -0.5)))))[1], ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(vec2(-14.30, -0.5)))))[1]) / 1.0)))), vec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(vec2(-14.30, -0.5)))))[0], _GLF_FUZZED((+ -3573.4971))), bvec2(true, false))), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-398.745))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), 1u), min(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(1u, 1u, 1u) ^ (uvec3(1u, 1u, 1u) | uvec3(1u, 1u, 1u)))), max(gl_WorkGroupID, gl_WorkGroupID)), 1u), uvec4(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), gl_WorkGroupID)), 1u)))))) >> uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), 0u, 0u)), gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) / 1u) >> 0u)))))) | (gl_WorkGroupID)))).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)), (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(36216u, 113749u, 148163u)))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))) + uvec3(0u, 0u, 0u)).x), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)), (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(36216u, 113749u, 148163u)))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))) + uvec3(0u, 0u, 0u)).x), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)), (true ? _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)) : _GLF_FUZZED(uvec3(36216u, 113749u, 148163u)))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))) + uvec3(0u, 0u, 0u)).x))), 0u))) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) * sqrt(1.0)))), mat4x3(1.0), _GLF_struct_2(_GLF_struct_0(true, mat3x2(1.0), bvec3(true), mat4x3(1.0), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bvec2(true)), 1u, 1.0, _GLF_struct_1(mat2(1.0))), _GLF_struct_4(mat4(1.0), _GLF_struct_3(mat3(1.0), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec3(true, true, false)))), mat2(1.0), _GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))), 1.0, mat2x3(1.0)), workgroup_size * workgroup_id), bvec4(true));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), bool(bvec4(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))), true && (false)), true))))), true, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false)), false)))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, false))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), false)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), false, _GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false))), (bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, true && (false))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))), false)), true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))), false)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))), false)), true)))), false))), false))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2551.3861)), bvec2(true, false))), injectionSwitch)).x < injectionSwitch.y)))), ! (! (bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec3(true && (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true && (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true, true, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && (false), true && (true && (false)))))), true, true, true))), ((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true && (false), true && (true && (false)))))), true, true, true)))) || false) || false)))), (bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))), false)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), false)), (bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), false))) || false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, true && (false))))) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9542.4949) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))), false)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), false)), (bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), false))) || false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, true && (false))))) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9542.4949) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))), true), false), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))), false)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), false)), (bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), false))) || false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, true && (false))))) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9542.4949) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))))), true), false), false)))))), false || (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), false))))), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))), false)), true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, true && (false)))), false)), (bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true)))), false))) || false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))), (bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, true && (false)))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) && (false))))))))))))), _GLF_IDENTITY(! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), false, false, false)))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), false, false, false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), false, false, false)))), true)), false)))))))))))))))), (! (! ((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false), false, false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)), (_GLF_IDENTITY(false, true && (false))) || false), false, false, false)))), _GLF_IDENTITY(true, ! (! (true))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))) || _GLF_IDENTITY(false, true && (false))), false, false, false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, true && (false))) || false), false, false, false)))), true)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))) || _GLF_IDENTITY(false, true && (false))), false, false, false)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(false, true && (false))) || false), false, false, false)))), true)), false)))), false)))))))))))))))) || false)))))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))), true, true))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (! (! (_GLF_IDENTITY(false, true && (false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)) : _GLF_FUZZED(9.8)))), float(_GLF_FUZZED(3071.6375)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x))))), float(_GLF_FUZZED(-88.95)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(19.78) : injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(0.0 + (injectionSwitch.y), (false ? _GLF_FUZZED(24.75) : 0.0 + (injectionSwitch.y))))) - 0.0)), ! _GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)), true, true)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)))) > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 0.0 + (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)), true, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), false)), true && (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + log(1.0)), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) + log(1.0), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((789.032 - -0.8))), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))))) + log(1.0)))), _GLF_IDENTITY(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-16.51, -3892.3131)) : injectionSwitch)).x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x))))) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, log(1.0)))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, log(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, log(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, log(1.0)))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x)) > injectionSwitch.y)))), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), true && (bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))))), _GLF_IDENTITY(true, (true) || false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_5._f3.workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8.6) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), float(mat4(float(mat2x4(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), clamp(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-741.997)), bool(false))))), injectionSwitch.x)))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-4377.3276, -809.517)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))))).y))), mix(vec2(_GLF_FUZZED(vec2(-1.0, 35.99).s), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[1]), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(2.0)), bvec2(true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).y))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f3.workgroup_base, (_GLF_struct_replacement_5._f3.workgroup_base) >> 0u), uint(uvec3(_GLF_struct_replacement_5._f3.workgroup_base, 0u, 0u))), (_GLF_IDENTITY(_GLF_struct_replacement_5._f3.workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f3.workgroup_base, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-956.612))))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f3.workgroup_base, ~ (~ (_GLF_struct_replacement_5._f3.workgroup_base))), max(_GLF_struct_replacement_5._f3.workgroup_base, _GLF_struct_replacement_5._f3.workgroup_base)))), clamp(_GLF_struct_replacement_5._f3.workgroup_base, _GLF_struct_replacement_5._f3.workgroup_base, _GLF_struct_replacement_5._f3.workgroup_base)), _GLF_struct_replacement_5._f3.workgroup_base))) >> (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))), (_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u)))) / 1u))), (uint(1u)) / 1u)))) + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) / 1), subgroup_local_id + 1), clamp(_GLF_IDENTITY(min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) / 1), subgroup_local_id + 1), (min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) / 1), subgroup_local_id + 1)) | (min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) / 1), subgroup_local_id + 1))), _GLF_IDENTITY(min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) / 1), subgroup_local_id + 1), uint(uvec4(min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) / 1), subgroup_local_id + 1), (1u & 1u), 1u, 0u))), min(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))) / 1), subgroup_local_id + 1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) ^ 0u, ((uint(1)) ^ 0u) << 0u)), _GLF_IDENTITY((uint(1)), ((uint(1))) - 0u) ^ 0u)) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | 0u)) ^ 0u)) >> 0u, uint(uvec3((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) >> 0u, 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(num_workgroup) : uint(4u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), uint(4u))), (_GLF_IDENTITY(uint(4u), max(_GLF_IDENTITY(uint(4u), clamp(uint(4u), uint(4u), uint(4u))), uint(4u)))) | 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) ^ (0 | 0)))), 1))), (uint(1)) ^ 0u)) >> 0u)), max(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) >> _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) >> 0u, max((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) >> 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) >> 0u, ((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) >> 0u) >> 0u), (_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) >> 0u, (_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) >> 0u)))), uint(uvec3((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)) >> 0u, 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(num_workgroup) : uint(4u))), uint(4u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (false ? _GLF_FUZZED(29621) : _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1)), _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), (true ? (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))) : _GLF_FUZZED(10203)))))) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))), (uint(1)) ^ 0u)) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)), (0u) << 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u ^ (uint(uvec4((_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))), 1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) * 1u)) << 0u), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), clamp((uint(1)), (uint(1)), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), ~ (~ ((uint(1))))), clamp((uint(1)), (uint(1)), (uint(1)))))) ^ 0u)) - 0u)) >> 0u, uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)))), (_GLF_IDENTITY(uint(1), (uint(1)) ^ 0u)))) >> 0u, 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (false ? _GLF_FUZZED(num_workgroup) : uint(4u))), uint(4u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))), max(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (0 << _GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) / 1)))), 1))), uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))))), (uint(1)) ^ 0u)) >> 0u))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(71667))), vec2(_GLF_FUZZED(8.1), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[_GLF_IDENTITY(1, (1) | (1))]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))).y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) + 0, min((4) + 0, (4) + 0))), _GLF_IDENTITY(4, (4) - 0), 4)));
}
