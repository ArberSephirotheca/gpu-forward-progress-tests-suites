#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u)))), 0u, 0u) | (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(uvec4(uvec3(gl_WorkGroupSize), 1u))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))), gl_WorkGroupSize)), 1u), clamp(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (1u) | (1u)))) | (uvec4(gl_WorkGroupSize, 1u))), uvec4(gl_WorkGroupSize, 1u), uvec4(gl_WorkGroupSize, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, 90030u)) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | (1u)), (152165u & 0u) ^ (1u)), (1u) ^ 0u)) * _GLF_IDENTITY(1u, (1u) >> 0u)), min(1u, 1u)), 1u, 1u))), uvec4(0u, 0u, 0u, 0u) ^ (false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, 90030u)) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (152165u & 0u) ^ (1u)), (1u) ^ 0u)) * _GLF_IDENTITY(1u, (1u) >> 0u)), min(1u, 1u)), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (152165u & 0u) ^ (1u)), (1u) ^ 0u)) * _GLF_IDENTITY(1u, (1u) >> 0u)), min(1u, 1u)), 1u, 1u))) * 1u)))))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), clamp(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (uvec4(gl_WorkGroupSize, 1u)) | (uvec4(gl_WorkGroupSize, 1u))), uvec4(gl_WorkGroupSize, 1u), uvec4(gl_WorkGroupSize, 1u))), (false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, 90030u)) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((152165u & 0u), ~ (_GLF_IDENTITY(~ ((152165u & 0u)), 0u | (~ ((152165u & 0u)))))) ^ (1u)), (1u) ^ 0u)) * _GLF_IDENTITY(1u, (1u) >> 0u)), min(1u, 1u)), 1u, 1u), max(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (152165u & 0u) ^ (1u)), (1u) ^ 0u)) * _GLF_IDENTITY(1u, (1u) >> 0u)), ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((152165u & 0u) ^ (1u), (_GLF_IDENTITY((152165u & 0u) ^ (1u), clamp((152165u & 0u) ^ (1u), (152165u & 0u) ^ (1u), (152165u & 0u) ^ (1u)))) - 0u)), (1u) ^ 0u)) * _GLF_IDENTITY(1u, (1u) >> 0u))))), min(1u, 1u)), 1u, 1u), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (152165u & 0u) ^ (1u)), (1u) ^ 0u)) * _GLF_IDENTITY(1u, (1u) >> 0u)), min(1u, 1u)), 1u, 1u)) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (152165u & 0u) ^ (1u)), (1u) ^ 0u)) * _GLF_IDENTITY(1u, (1u) >> 0u)), min(1u, 1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (152165u & 0u) ^ (1u)), (1u) ^ 0u)) * _GLF_IDENTITY(1u, (1u) >> 0u)), min(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (152165u & 0u) ^ (1u)), (1u) ^ 0u)) * _GLF_IDENTITY(1u, (1u) >> 0u)), min(1u, 1u)))), 1u, _GLF_IDENTITY(1u, (1u) - 0u))))))))))) >> uvec3(0u, 0u, 0u)).x, min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), max(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), ~ (~ (uvec4(gl_WorkGroupSize, 1u)))), uvec4(gl_WorkGroupSize, 1u))), (false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, _GLF_IDENTITY(_GLF_IDENTITY(90030u, (90030u) | (_GLF_IDENTITY(90030u, 0u ^ (90030u)))), (_GLF_IDENTITY(90030u, (90030u) | (_GLF_IDENTITY(90030u, 0u ^ (90030u))))) * 1u))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (1u))), max((_GLF_IDENTITY(1u, 0u ^ (1u))), (_GLF_IDENTITY(1u, 0u ^ (1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), 0u ^ (1u)), _GLF_IDENTITY(1u, 0u ^ (1u)))))), _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u | (0u)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), 1u))) - 0u))))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, _GLF_IDENTITY(_GLF_IDENTITY(90030u, (_GLF_IDENTITY(90030u, max(90030u, 90030u))) + 0u), (_GLF_IDENTITY(90030u, (false ? _GLF_FUZZED(subgroup_local_id) : 90030u))) | (_GLF_IDENTITY(90030u, 0u ^ _GLF_IDENTITY((90030u), 0u ^ (_GLF_IDENTITY((90030u), max(_GLF_IDENTITY((90030u), ((90030u)) | ((90030u))), (90030u)))))))))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> 0u), 1u))) - 0u))), (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, _GLF_IDENTITY(_GLF_IDENTITY(90030u, (_GLF_IDENTITY(90030u, max(90030u, 90030u))) + 0u), (_GLF_IDENTITY(90030u, (false ? _GLF_FUZZED(subgroup_local_id) : 90030u))) | (_GLF_IDENTITY(90030u, 0u ^ _GLF_IDENTITY((90030u), 0u ^ (_GLF_IDENTITY((90030u), max(_GLF_IDENTITY((90030u), ((90030u)) | ((90030u))), (90030u)))))))))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> 0u), 1u))) - 0u))), uvec4(0u, 0u, 0u, 0u) | ((false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, _GLF_IDENTITY(_GLF_IDENTITY(90030u, (_GLF_IDENTITY(90030u, max(90030u, 90030u))) + 0u), (_GLF_IDENTITY(90030u, (false ? _GLF_FUZZED(subgroup_local_id) : 90030u))) | (_GLF_IDENTITY(90030u, 0u ^ _GLF_IDENTITY((90030u), 0u ^ (_GLF_IDENTITY((90030u), max(_GLF_IDENTITY((90030u), ((90030u)) | ((90030u))), (90030u)))))))))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> 0u), 1u))) - 0u)))))) >> uvec4(0u, 0u, 0u, 0u)))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), ~ (_GLF_IDENTITY(~ (uvec4(gl_WorkGroupSize, 1u)), clamp(~ (_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(gl_WorkGroupSize, 1u)))), ~ (uvec4(gl_WorkGroupSize, 1u)), ~ (uvec4(gl_WorkGroupSize, 1u)))))), (false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, _GLF_IDENTITY(90030u, (90030u) | (_GLF_IDENTITY(90030u, _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (90030u)))))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, (0u) ^ 0u)), 1u))) - 0u)))))) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, _GLF_IDENTITY(90030u, (90030u) | (_GLF_IDENTITY(90030u, 0u ^ (90030u)))))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> 0u), 1u))) - 0u)), max(false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, _GLF_IDENTITY(90030u, (90030u) | (_GLF_IDENTITY(90030u, 0u ^ (90030u)))))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> 0u), 1u))) - 0u)), false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, _GLF_IDENTITY(90030u, (90030u) | (_GLF_IDENTITY(90030u, 0u ^ (90030u)))))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> 0u), 1u))) - 0u))))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, _GLF_IDENTITY(90030u, (90030u) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(90030u, 0u ^ (90030u))), min((_GLF_IDENTITY(90030u, 0u ^ (90030u))), (_GLF_IDENTITY(90030u, 0u ^ (90030u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(90030u, 0u ^ (90030u))), min((_GLF_IDENTITY(90030u, 0u ^ (90030u))), (_GLF_IDENTITY(90030u, 0u ^ (90030u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(90030u, 0u ^ (90030u))), min((_GLF_IDENTITY(90030u, 0u ^ (90030u))), (_GLF_IDENTITY(90030u, 0u ^ (90030u))))), (_GLF_IDENTITY((_GLF_IDENTITY(90030u, 0u ^ (90030u))), min((_GLF_IDENTITY(90030u, 0u ^ (90030u))), (_GLF_IDENTITY(90030u, 0u ^ (90030u)))))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(90030u, 0u ^ (90030u))), min((_GLF_IDENTITY(90030u, 0u ^ (90030u))), (_GLF_IDENTITY(90030u, 0u ^ (90030u)))))))))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> 0u), 1u))) - 0u))))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, _GLF_IDENTITY(90030u, (_GLF_IDENTITY(90030u, (false ? _GLF_FUZZED(subgroup_local_id) : 90030u))) | (_GLF_IDENTITY(90030u, 0u ^ (90030u)))))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) >> 0u), 1u))) - 0u))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), ~ (_GLF_IDENTITY(~ (uvec4(gl_WorkGroupSize, 1u)), clamp(~ (uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), max((~ (gl_WorkGroupSize)), (~ (gl_WorkGroupSize))))), 1u)), _GLF_IDENTITY(~ (uvec4(gl_WorkGroupSize, 1u)), (~ (uvec4(gl_WorkGroupSize, 1u))) >> uvec4(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u)), 0u, 0u, 0u)), ~ (uvec4(gl_WorkGroupSize, 1u)))))), (false ? _GLF_FUZZED(uvec4(9994u, 138991u, _GLF_IDENTITY(12616u, max(12616u, 12616u)), _GLF_IDENTITY(90030u, (90030u) | (_GLF_IDENTITY(90030u, 0u ^ (90030u)))))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(uvec3((1u), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u), 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(uvec3((1u), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u), 1u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(uvec3((1u), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u), 1u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(uvec3((1u), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(uvec3((1u), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) | 0u) : _GLF_FUZZED(subgroup_local_id))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(uvec3((1u), 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) >> 0u), 1u)))))) | 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)))))) / uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, _GLF_IDENTITY(90030u, (90030u) | (_GLF_IDENTITY(90030u, 0u ^ (90030u)))))) : uvec4(gl_WorkGroupSize, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u)) / 1u)) >> 0u), 1u))) - 0u)))))))) | uvec3(0u, 0u, 0u))).x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), (false ? _GLF_FUZZED(uvec4(9994u, 138991u, 12616u, 90030u)) : uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(87604u, 194811u, 49357u)))), 1u))))).x)), max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))) ^ (_GLF_IDENTITY(93555u, (93555u) - 0u) & 0u));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), max(float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), float(mat2x4(float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))) - 0.0), min(injectionSwitch.y, injectionSwitch.y)))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8153.2209)), float(injectionSwitch.y), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false)) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9.4)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), min(injectionSwitch.y, injectionSwitch.y)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3x2(-9.1, 5549.8324, -87.19, 3.9, 8.2, -326.324)) : mat3x2(0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8153.2209)), float(injectionSwitch.y), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8153.2209)), float(injectionSwitch.y), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))), min(injectionSwitch.y, injectionSwitch.y))))))), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8153.2209)), float(injectionSwitch.y), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8153.2209)), float(injectionSwitch.y), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false)) && true)) && true)) || false)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(injectionSwitch.y, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0)))))), _GLF_IDENTITY((injectionSwitch.y), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch.y) : _GLF_FUZZED(399.182))) - 0.0), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, length(0.0), 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0)), (mat3x4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, length(0.0), 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, log(1.0))) * mat3(1.0)))))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (injectionSwitch.y))) - 0.0), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8153.2209)), float(injectionSwitch.y), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || false), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))), (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(-8153.2209)), float(injectionSwitch.y), bool(true))), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, injectionSwitch.y)))))))) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true))) || false))))))))), _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), min(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y)))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(74.36, 5.8)))).y, injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec2(0.0, 0.0))), injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(max(51.42, -48.12)) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8730.3814)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(mat3x4((false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + vec2(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0)), (vec2(mat3x4((false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 0.0)))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) + vec2(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0))) * vec2(1.0, 1.0))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, cos(0.0), 1.0))))), injectionSwitch.y)))))), ! (! (! _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, log(1.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, log(1.0), 0.0, 0.0)))) + 0.0), (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, sqrt(1.0)))), min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), float(_GLF_FUZZED(-1359.1087)), bool(false))))))), ! (! ((! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))))))))))))))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6761.5471)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])), injectionSwitch)).y))))), float(_GLF_FUZZED(8.7)), bool(false))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY((false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)))) || false, ((false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true)) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true)) && true, true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) && true)) && true, true))))))))))), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))))) || false) || false), ! (! ((false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(dot(vec3(-769.290, -8.0, -7752.2734), vec3(40.85, 40.46, -21.74))) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(624.074)))), float(_GLF_FUZZED((false ? float(95856) : 818.010))), bool(false))) > injectionSwitch.y)), (! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(45.59)), bool(_GLF_IDENTITY(false, (false) || false)))) > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y))) && true)))) || false)))), ! (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-3.1))), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-7.4)), bool(false)))), vec2(_GLF_FUZZED(-464.846), _GLF_FUZZED(9.5)), bvec2(false, false))).x > injectionSwitch.y)), (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, true))) || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true)))) || false))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -7.8))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-22.51), (injectionSwitch)[1]), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(-22.51), (injectionSwitch)[1]))), bvec2(false, true))).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-642.100)), float(injectionSwitch.y), bool(true))), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.9), _GLF_FUZZED(-7580.0524)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], max(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0])), (injectionSwitch)[_GLF_IDENTITY(1, 0 ^ (1))]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)))), _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, injectionSwitch.y)))))), _GLF_IDENTITY(true, bool(bvec3(true, true, true))) && (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, injectionSwitch.y), (true ? min(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, injectionSwitch.y) : _GLF_FUZZED(-117.699))))))))))), _GLF_IDENTITY(false || (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! (false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) * 1.0), min(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))) * 1.0)) > injectionSwitch.y)), bool(bvec2(! (false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, determinant(mat4(0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)), clamp(vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.9)), float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), bool(true)))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, determinant(mat4(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)), vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, determinant(mat4(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0)), vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, determinant(mat4(0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0))))).y)), true)))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           do
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true && (((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), false, false, true))) || false))))))) || false)), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(false, true && (false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))))) || false) && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(610.022), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(610.022), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y)))))), (bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(610.022), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y))))))) && true)) || false))), (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))) && true, ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))) && true) || false))) || false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))))) || false) && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(610.022), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y)))))), (_GLF_IDENTITY(bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(610.022), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y)))))), (bool(bvec4(true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9.7)), vec2(_GLF_FUZZED(610.022), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y))))))) && true)) || false))), (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))) && true, ((_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), bool(bool((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))) && true) || false))) || false))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))) || false)), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))) || false))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), false, false))), true, true, true)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), false, false))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), false, false))), true, true, true))) || false)))), bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))))), bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))) || false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9709.8399)), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9709.8399)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9709.8399)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec2(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) || false)), false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))), true && (bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (bool(true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) || false))))))), false || ((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) || false))))))))) || false)), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).x < injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-54.71), (max(injectionSwitch, injectionSwitch))[1]), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-7.0)), bvec2(true, false)))).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) * 1.0) < injectionSwitch.y))))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))) / vec2(1.0, 1.0))).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))))) / vec2(1.0, 1.0))).x < injectionSwitch.y) && true)), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x) * 1.0) < injectionSwitch.y))))))))) || false)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true), true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), false)), true && (bool(bvec2(bool(bool(false)), false))))), false || (bool(bool(false))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-34.80)), float(injectionSwitch.y), bool(true)))), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y)))))), ! (! (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec2(bool(bool(false)), false)), true && (bool(bvec2(bool(bool(false)), false))))), false || (bool(bool(false))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-34.80)), float(injectionSwitch.y), bool(true)), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(-34.80)), float(injectionSwitch.y), bool(true)), float(mat2x4(mix(float(_GLF_FUZZED(-34.80)), float(injectionSwitch.y), bool(true)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(-888.033))))), bool(true))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y))))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), cos(vec2(0.0, 0.0)) * (max(injectionSwitch, injectionSwitch))), (max(injectionSwitch, injectionSwitch)) * mat2(1.0))).x < injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))))) && true)) || false)))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))) || false, (_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false, (_GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false, bool(bvec4((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false, true, true, false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))), bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))) && true)) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (bool(true))), bool(bvec4(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))), true && (bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (bool(true))), false, true, false)))))), true, false, false)), bool(bool(bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) || false)), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) || false))) && true)))))) || false)), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-162.968), _GLF_FUZZED((+ -1.6))), bvec2(false, false))).y)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))), true && (! ((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(true, true, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (max(injectionSwitch, injectionSwitch)), max(mat2(1.0) * (max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (max(injectionSwitch, injectionSwitch)), (mat2(1.0) * (max(injectionSwitch, injectionSwitch))) * mat2(1.0)))))).x < injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))))))) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false) && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(42.86)), max(float(_GLF_FUZZED(42.86)), float(_GLF_FUZZED(42.86)))), float(injectionSwitch.y), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(-110.035)), bool(false))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.86)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(4.5))), 0.0, 1.0), (mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)) * mat4(1.0)))), injectionSwitch.y)))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))), false, false)))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))), bool(bvec3(bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x < injectionSwitch.y)))), false, false)))), true))))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(2.0) : injectionSwitch.y)))) || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))), (bool(bvec4(true, true, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))) && true))), bool(bool((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))) && true)) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), false, false)))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false))))) || false))))), bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false, bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false), bool(bvec2(bool((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), _GLF_IDENTITY(true, false || (true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))) || false))))) || false))))), bool(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2(_GLF_FUZZED(-1590.5447), _GLF_FUZZED((+ -693.396))), bvec2(false, false))).x < injectionSwitch.y))))))))))))) || false, bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), bool(bvec2(bool((! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))))) || false), true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) && true)), bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y)))), true && (bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (bool(true)))))), true, false, false)))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))));
                }
               else
                {
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
      }
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))))) | (subgroup_local_id)), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) / 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(6u))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u) / workgroup_size, ~ (~ (virtual_gid / workgroup_size))))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id)))))), 1u, 0u, 1u))), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) | (1u ^ 1u)))))))) + 1) % subgroup_size);
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0)))[0], injectionSwitch[0])), injectionSwitch[1])).y)) ? 0.0 : _GLF_FUZZED(-6.9)))))) / 1.0), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))) + 0), _GLF_IDENTITY(clamp(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) | (0))))))) ^ (0)), min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) << 0))))) ^ (0)), _GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) << 0))))) ^ (0)))))), 0), ~ (~ (clamp(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) | (0))))), int(ivec2(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) | (0))))), 0))))) ^ (0)), min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) << 0))))) ^ (0)), _GLF_IDENTITY(0, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) << 0))))) ^ (0)))))), 0))))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), (true ? (_injected_loop_counter) : _GLF_FUZZED(_injected_loop_counter))) | _GLF_IDENTITY(0, min(0, 0)))) >> (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))))) < 1), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY(0, 0 | (0))) < _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0))), (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-585)))) ^ (0 << _GLF_IDENTITY(int(1), int(1)))), 0, 0)), 0 | (0))) < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) ^ 0)) && _GLF_IDENTITY(true, false || (true))))), ! (_GLF_IDENTITY(! ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) < _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), min((_GLF_IDENTITY(1, (1) ^ 0)), (_GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), min((_GLF_IDENTITY(1, (1) ^ 0)), (_GLF_IDENTITY(1, (1) ^ _GLF_IDENTITY(0, (0) + 0)))))) * _GLF_IDENTITY(1, (1) >> 0)) ^ 0)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), _GLF_IDENTITY(((_injected_loop_counter)) | _GLF_IDENTITY(((_injected_loop_counter)), (true ? ((_injected_loop_counter)) : _GLF_FUZZED(_injected_loop_counter))), min(((_injected_loop_counter)) | _GLF_IDENTITY(((_injected_loop_counter)), int(ivec2(((_injected_loop_counter)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(0), int(0)), 0 ^ (0 >> _GLF_IDENTITY(int(0), int(0)))))))), ((_injected_loop_counter)) | ((_injected_loop_counter))))) | 0) < _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter)) ^ 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter)) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter)) ^ 0))), max(_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter)) ^ 0))), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)), (_GLF_IDENTITY(true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter)) ^ 0))))))) ^ 0, (_GLF_IDENTITY((1), (_GLF_IDENTITY(true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter)) ^ 0))) ^ 0) | 0))) ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 1 * ((1)))) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 1 * ((1)))) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 1 * ((1)))) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0))) - 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0)), (true ? ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)), _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 1 * ((1)))) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)) ^ 0)) : _GLF_FUZZED((+ _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))))))))))), ((_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) | ((_injected_loop_counter))) | 0) < _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)) ^ 0), ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0, 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(((1)), ~ (~ (_GLF_IDENTITY(((1)), int(ivec3((_GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), int(int((1)))), (1), (1)))), 0, 0)))))) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(((1)), min(((1)), _GLF_IDENTITY(((1)), (((1))) / 1))) >> 0), ((1)) << 0), _GLF_IDENTITY((1), ((1)) << 0))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0, 0 + (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(((1)), ~ (~ (_GLF_IDENTITY(((1)), int(ivec3((_GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), int(int((1)))), (1), (1)))), 0, 0)))))) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(((1)), min(((1)), _GLF_IDENTITY(((1)), (((1))) / 1))) >> 0), ((1)) << 0), _GLF_IDENTITY((1), ((1)) << 0))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0))))) - 0) ^ 0)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))), ((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) ^ 0)) | ((_injected_loop_counter))) | _GLF_IDENTITY(0, min(0, 0))) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)) ^ 0), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0, 0 + (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), 0 + (_GLF_IDENTITY((1), ((1)) << 0))), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY((1), ((1)) << 0))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)))) ^ 0))), (~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0, 0 + (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), 0 + (_GLF_IDENTITY((1), ((1)) << 0))), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), (_GLF_IDENTITY((1), ((1)) << 0)) * 1))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)))) ^ 0)))) / 1)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)) ^ 0), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter)))) | (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))))) ^ 0, 0 + (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << _GLF_IDENTITY(0, (0) ^ 0)), 0 + (_GLF_IDENTITY((1), ((1)) << 0))), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY((1), ((1)) << 0))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)))) ^ 0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)) ^ 0), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter)))) | (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))))) ^ 0, 0 + (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << _GLF_IDENTITY(0, (0) ^ 0)), 0 + (_GLF_IDENTITY((1), ((1)) << 0))), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY((1), ((1)) << 0))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)))) ^ 0))))) >> 0)))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) | ((_injected_loop_counter))) | 0) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)) ^ 0), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))))) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0, 0 + (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY((1), ((1)) << 0))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)))) ^ 0)), 0 + ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0))))) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0, 0 + (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY((1), ((1)) << 0))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)))) ^ 0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)) ^ 0), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0, 0 + (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY((1), _GLF_IDENTITY(_GLF_IDENTITY(((1)) << 0, clamp(((1)) << 0, ((1)) << 0, ((1)) << 0)), (((1)) << 0) ^ (0 | 0))))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)))) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), _GLF_IDENTITY(((1)) << 0, min(_GLF_IDENTITY(((1)) << 0, max(((1)) << 0, ((1)) << 0)), ((1)) << 0))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)) ^ 0), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0, 0 + (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY((1), ((1)) << 0))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)))) ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)) ^ 0), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0, 0 + (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), ((1)) - 0))), ((1)) << 0), max(_GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY((1), ((1)) << 0), _GLF_IDENTITY((1), ((1)) << 0))), _GLF_IDENTITY((1), _GLF_IDENTITY((_GLF_IDENTITY((1), ((1)) >> 0)) << 0, (((1)) << 0) | 0)))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)))) ^ 0))))))), bool(bvec2(! (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter), ((_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) | ((_injected_loop_counter))) | 0) < _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)), int(ivec4((_GLF_IDENTITY(1, _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)), 0, 0, 0))), 1, 1, 1))) ^ 0), ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))), min(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) << 0) : _GLF_FUZZED(_injected_loop_counter)))) * int(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0, 0 + (_GLF_IDENTITY((1), (true ? _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) << 0), max(_GLF_IDENTITY((1), _GLF_IDENTITY(((1)) << 0, int(ivec4(((1)) << 0, 0, 1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))), _GLF_IDENTITY((1), ((1)) << 0))) : _GLF_FUZZED(_injected_loop_counter))) ^ 0)))) ^ 0))))), false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) && true)), false, false, false))))) && _GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), false || (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))))), true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)))))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), false, false, false)), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bool(false)), false, false, false)), (bool(bvec4(bool(bool(false)), false, false, false))) && true))))))), ! (! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, bool(bool(true))) && (bool(bool(false))))))), true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)))))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (bool(bool(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (bool(bool(false)))), ! (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))) && true)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), false)))))))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, false || (true)) && (bool(bool(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))))))), true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true))))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (bool(bool(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (bool(bool(false)))), ! (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))) && true)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), false)))))))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, false || (true)) && (bool(bool(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))))))), true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true))))))))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (bool(bool(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (bool(bool(false)))), ! (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))) && true)), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))), false)))))))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true, false || (true)) && (bool(bool(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))))))), true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true))))))))))))), true, false)))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true && (bool(bool(false))), ! (_GLF_IDENTITY(! (true && (bool(bool(false)))), false || (! _GLF_IDENTITY((true && (bool(bool(false)))), ! (! ((true && (bool(bool(false)))))))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), (_GLF_IDENTITY(((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))), ! (! (((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))))))) || false) || false), bool(bvec4((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), true, false, true)))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (true)), ((! (true))) || false), true)), false || (bool(bvec2(_GLF_IDENTITY((! (true)), ((! (true))) || false), true)))))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false))))), true)))))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), true && (bool(bool(false)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))))))))), true && (bool(bool(false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), true, true))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), true, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true && (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), false))))))))), true && (bool(bool(false)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), true && (bool(bool(false)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))), bool(bvec4(! (! (false)), true, true, false))))))))), true && (bool(bool(false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))), (! (bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))))))) && true)))) && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), true, true))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), true, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (! (bool(bool(false))))))), true && (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), false)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), false)))))), ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), false))))))) || false))))))), true && (bool(bool(false))))))))))))), true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false)))))), bool(bvec3(! (_GLF_IDENTITY(! (bool(false)), bool(bool(! (bool(false)))))), false, _GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))))))))))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true && (bool(bool(false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (bool(bool(false)))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))) && (bool(bool(false))))))), true && (! (_GLF_IDENTITY(! (true && (bool(bool(false)))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))) && (bool(bool(false))))))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), ((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))) || false)), true)))), ((_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), ((_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))) || false)), true))))) && true) || false))), bool(bvec4((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), true, false, true)))), _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true && (_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), (_GLF_IDENTITY((! (bool(bool(false)))), _GLF_IDENTITY(bool(bool((! (bool(bool(false)))))), ! (! (bool(bool((! (bool(bool(false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bool(false)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))))))))), true && (bool(bool(false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec2(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))), (bool(bool(_GLF_IDENTITY(bvec2(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))) && true))))), bool(bvec3(! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))), true, _GLF_IDENTITY(true, (true) || false)))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), true, true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true && (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))), true && (bool(bool(false)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))))))))), true && (bool(bool(false)))))))))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))))))) && true))), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)))))))))))))))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true && (bool(bool(false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (true && (bool(bool(false)))), false || (! (true && (bool(bool(false))))))), true && (! (_GLF_IDENTITY(! (true && (bool(bool(false)))), false || (! (true && (bool(bool(false))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec4((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), true, false, true)))), _GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)))))))), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), true && ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), ! (! (bool(bool(false))))))), true && (bool(bool(false)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))))))))), true && (bool(bool(false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec2(false || (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! _GLF_IDENTITY((! (! (false))), false || ((! (! (false))))), bool(bvec3(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_IDENTITY(false, ! (! (false))))), true, true))))))))), bool(bvec4(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), _GLF_IDENTITY(true, true && (true)), true))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), true && (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), bool(bvec2(bool(bool(! (false))), false))))))))))))), true && (bool(bool(_GLF_IDENTITY(false, false || (false)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))))))))), true && (bool(bool(false)))))))))), true, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true))))))))), true)))))))))))))))))))))), true, false, false)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(true && (bool(bool(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true && (bool(bool(false)))), (! (true && (bool(bool(false))))) && true), false || (! (true && (bool(bool(false))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bvec4((! (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), true, false, true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)))))))), _GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, true))), ! (! (bool(bool(false))))))) && true)), true && (bool(bool(false)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, true))), true && (true)), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(bvec4(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))), (bool(false)) && true)), ! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) && true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), true, true))))))), ! (! (bool(bool(false)))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), true, true))))))), ! (! (bool(bool(false)))))), true, false, true)))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))), ! (! (bool(bool(false))))))))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), (bool(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), true, true))))))), ! (! (bool(bool(false))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, bool(_GLF_IDENTITY(bvec2((bool(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((bool(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))))), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(bool(false)))))))))))))))))), _GLF_IDENTITY(true, (true) && true))))))))))))))), (bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(bvec4(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_IDENTITY(false, bool(bool(false))), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))), (bool(false)) && true)), ! _GLF_IDENTITY((! (bool(bool(false)))), ((! (bool(bool(false))))) && true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), true, true))))))), ! (! (bool(bool(false)))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), true, true))))))), ! (! (bool(bool(false)))))), true, false, true)))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))), ! (! (bool(bool(false))))))))))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), (bool(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), (! (true)) && true), true, true))))))), ! (! (bool(bool(false))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) && true, bool(_GLF_IDENTITY(bvec2((bool(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((bool(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true))))))), ! (! (bool(bool(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (bool(bool(false)))))))))))))))))), _GLF_IDENTITY(true, (true) && true)))))))))))))))) && true)))))))))))))))) || (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), false || (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))), (_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) && true))))))) || false))))) || false)) || false) || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))) || false)); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), false, false)), ! (! (bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), true, false, false)))))))))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-624.002), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1], float(mat4x3((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(938.614)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-624.002), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1], float(mat4x3((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(938.614)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-624.002), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1], float(mat4x3((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(938.614)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-624.002), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1], float(mat4x3((injectionSwitch)[1], 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(938.614)), bvec2(true, false))).x))), (_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(1521.2845)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-173.393, 5337.7988)))).x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-173.393, 5337.7988)))).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-173.393, 5337.7988)))).x))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9614.0321) : 0.0)), injectionSwitch.x), mix(float(_GLF_FUZZED(-95.37)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6.8)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-6.8)), min(float(_GLF_FUZZED(-6.8)), float(_GLF_FUZZED(-6.8)))), _GLF_IDENTITY(float(_GLF_FUZZED(-6.8)), (float(_GLF_FUZZED(-6.8))) - sqrt(0.0)))), float(_GLF_IDENTITY(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9614.0321) : 0.0)), injectionSwitch.x), mix(float(_GLF_FUZZED(-95.37)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))).x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9614.0321) : 0.0)), injectionSwitch.x), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-95.37)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)), (false ? _GLF_FUZZED(-3.6) : mix(float(_GLF_FUZZED(-95.37)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9614.0321) : 0.0)), injectionSwitch.x), mix(float(_GLF_FUZZED(-95.37)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9614.0321) : 0.0)), injectionSwitch.x), mix(float(_GLF_FUZZED(-95.37)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9614.0321) : 0.0)), injectionSwitch.x), mix(float(_GLF_FUZZED(-95.37)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9614.0321) : 0.0)), mix(float(_GLF_FUZZED(-5.9)), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9614.0321) : 0.0))), bool(true))), injectionSwitch.x), mix(float(_GLF_FUZZED(-95.37)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), bool(true))))) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(62.73)), bool(false))), min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(float(mat2x3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), max(float(mat2x3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat2x3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), float(mat2x3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0)), float(mat2x3(1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), clamp(1.0, 1.0, 1.0)))))) * mat2(1.0))))), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) - determinant(mat4(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), sqrt(0.0), 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(-5274.7784))), mix(float(_GLF_FUZZED(7.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(-5274.7784))), mix(float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (true ? dot(vec2(0.0, 1.0), vec2(0.0, 1.0)) : _GLF_FUZZED(-5274.7784)))), float(_GLF_FUZZED(-6.5)), bool(false)))), bool(true))))))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch + injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(518.022))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
           else
            {
            }
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY((- _GLF_IDENTITY(ivec4(-51211, 6450, 90708, _GLF_IDENTITY(-57807, int(int(_GLF_IDENTITY(-57807, int(ivec2(-57807, 1))))))), min(ivec4(-51211, 6450, 90708, -57807), ivec4(-51211, 6450, 90708, -57807)))).p & 0, ~ (~ (_GLF_IDENTITY((- _GLF_IDENTITY(ivec4(-51211, 6450, 90708, -57807), min(ivec4(-51211, 6450, 90708, -57807), _GLF_IDENTITY(ivec4(-51211, 6450, 90708, -57807), (ivec4(-51211, 6450, 90708, -57807)) | (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(4), ivec4(4))))))), ((- ivec4(-51211, 6450, 90708, -57807))) - (ivec4(0, 0, 0, 0) | ivec4(0, _GLF_IDENTITY(0, max(0, 0)), 0, 0))).p & 0))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((- ivec4(-51211, 6450, 90708, -57807)).p, _GLF_IDENTITY(clamp((- ivec4(-51211, 6450, 90708, -57807)).p, (- ivec4(-51211, 6450, 90708, -57807)).p, (- ivec4(-51211, 6450, 90708, -57807)).p), (true ? _GLF_IDENTITY(clamp((- ivec4(-51211, 6450, 90708, -57807)).p, (- ivec4(-51211, 6450, 90708, -57807)).p, (- ivec4(-51211, 6450, 90708, -57807)).p), (clamp((- ivec4(-51211, 6450, 90708, -57807)).p, (- ivec4(-51211, 6450, 90708, -57807)).p, (- ivec4(-51211, 6450, 90708, -57807)).p)) >> 0) : _GLF_FUZZED(-34110)))) & 0, (_GLF_IDENTITY((- ivec4(-51211, 6450, 90708, -57807)).p & 0, 0 + (_GLF_IDENTITY((- ivec4(-51211, 6450, 90708, -57807)).p & 0, min((- ivec4(-51211, 6450, 90708, -57807)).p & 0, (- ivec4(-51211, 6450, 90708, -57807)).p & 0))))) - 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               return;
                              }
                             else
                              {
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false))))) && true));
                      }
                     else
                      {
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, true)))))));
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(ivec4(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_injected_loop_counter --)))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(77187 & 0, ~ (~ (_GLF_IDENTITY(77187 & 0, max(77187 & 0, _GLF_IDENTITY(77187 & 0, (77187 & 0) >> 0))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | 0))))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter))) + 0) != _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((1) >> 0, ((1) >> 0) | (_GLF_IDENTITY((1) >> 0, clamp((1) >> 0, (1) >> 0, (1) >> 0))))))), 1, 1)))))))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)) && true)))))
                {
                 do
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((0), (true ? _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), _GLF_IDENTITY((_GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0)))) << 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY((0), (false ? _GLF_FUZZED(_injected_loop_counter) : (0)))) << 0))), (0), _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (true ? ~ (0) : _GLF_FUZZED(_injected_loop_counter)))))), ~ (~ ((0)))))) : _GLF_FUZZED(_injected_loop_counter))) + _GLF_IDENTITY(0, ~ (~ (0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 ^ (1))); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                      {
                      }
                     else
                      {
                       do
                        {
                         do
                          {
                           do
                            {
                             do
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 do
                                  {
                                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                              {
                                               do
                                                {
                                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                                  {
                                                  }
                                                 else
                                                  {
                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                    {
                                                     do
                                                      {
                                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                                        {
                                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                                          {
                                                          }
                                                         else
                                                          {
                                                           if(_GLF_DEAD(false))
                                                            {
                                                             do
                                                              {
                                                               for(int _injected_loop_counter = (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(26.00) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(103.159)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(true))), injectionSwitch.y)))), 1.0 * ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(26.00) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(103.159)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(true))), injectionSwitch.y)))))))) & (1 ^ 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) > _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) - 0)))); _injected_loop_counter --)
                                                                {
                                                                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (_GLF_IDENTITY(int(6), int(_GLF_IDENTITY(ivec3(int(6), 1, 1), (ivec3(int(6), 1, 1)) << ivec3(0, 0, 0)))))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))))) != 0); _injected_loop_counter --)
                                                                  {
                                                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                                                    {
                                                                     return;
                                                                    }
                                                                   else
                                                                    {
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                                            }
                                                          }
                                                        }
                                                       else
                                                        {
                                                        }
                                                      }
                                                     while(_GLF_WRAPPED_LOOP(false));
                                                    }
                                                   else
                                                    {
                                                    }
                                                  }
                                                }
                                               while(_GLF_WRAPPED_LOOP(false));
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) || false), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))));
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                  }
                 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), false || ((_GLF_WRAPPED_LOOP(false))))));
                }
               else
                {
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(int(uvec3(33738u, 93154u, 87145u)[1])) : _injected_loop_counter ++)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 + (_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))))))) != (92856 & 0)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (92856 & 0), false || (_injected_loop_counter != (92856 & 0))))) || false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((92856 & 0), clamp(_GLF_IDENTITY((92856 & 0), 0 ^ ((92856 & 0))), (92856 & 0), (92856 & 0))), ! (! (_GLF_IDENTITY(_injected_loop_counter != (92856 & 0), (_injected_loop_counter != (92856 & 0)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (92856 & 0), ! (! (_injected_loop_counter != (92856 & 0))))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (92856 & 0), ! (! (_injected_loop_counter != (92856 & 0))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (92856 & _GLF_IDENTITY(0, (0) << (0 | 0)))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), max(~ (_injected_loop_counter), ~ (_injected_loop_counter))))) != (92856 & _GLF_IDENTITY(0, (0) << (0 | 0))))))), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter != (92856 & 0))), ! (! ((_GLF_WRAPPED_LOOP(_injected_loop_counter != (92856 & 0))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) << 0)), int(7)))); _injected_loop_counter --)
              {
               atomicStore(buf[next_virtual_gid], uint(2), 4, 64, _GLF_IDENTITY(4, (4) - 0));
              }
            }
          }
        }
      }
     else
      {
      }
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), vec2(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), 0.0))).x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8937.8246))), 1.0)), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(-44.61, _GLF_IDENTITY(float(mat2(-44.61, 1.0, 1.0, 0.0)), (float(mat2(-44.61, 1.0, 1.0, 0.0))) / 1.0))), clamp(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8937.8246))), 1.0)), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(-44.61, _GLF_IDENTITY(float(mat2(-44.61, 1.0, 1.0, 0.0)), (float(mat2(-44.61, 1.0, 1.0, 0.0))) / 1.0))), true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8937.8246))), 1.0)), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(-44.61, _GLF_IDENTITY(float(mat2(-44.61, 1.0, 1.0, 0.0)), (float(mat2(-44.61, 1.0, 1.0, 0.0))) / 1.0))), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8937.8246))), 1.0)), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(-44.61, _GLF_IDENTITY(float(mat2(-44.61, 1.0, 1.0, 0.0)), (float(mat2(-44.61, 1.0, 1.0, 0.0))) / 1.0))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8937.8246))), 1.0)), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(-44.61, _GLF_IDENTITY(float(mat2(-44.61, 1.0, 1.0, 0.0)), (float(mat2(-44.61, 1.0, 1.0, 0.0))) / 1.0))), 0.0 + (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8937.8246))), 1.0)), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(-44.61, _GLF_IDENTITY(float(mat2(-44.61, 1.0, 1.0, 0.0)), (float(mat2(-44.61, 1.0, 1.0, 0.0))) / 1.0))))), 0.0, 1.0, 1.0, 0.0, sqrt(1.0))), 1.0 * (float(mat2x3(_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8937.8246))), 1.0)), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(-44.61, _GLF_IDENTITY(float(mat2(-44.61, 1.0, 1.0, 0.0)), (float(mat2(-44.61, 1.0, 1.0, 0.0))) / 1.0))), 0.0 + (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(8937.8246))), 1.0)), injectionSwitch)).x : _GLF_FUZZED(_GLF_IDENTITY(-44.61, _GLF_IDENTITY(float(mat2(-44.61, 1.0, 1.0, 0.0)), (float(mat2(-44.61, 1.0, 1.0, 0.0))) / 1.0))))), 0.0, 1.0, 1.0, 0.0, sqrt(1.0)))))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, bool(bvec2(true, false))) ? injectionSwitch : _GLF_FUZZED(vec2(-558.922, 8.6)))), (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, determinant(mat3(1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)) * (0.0)), 0.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(floor(injectionSwitch)) : injectionSwitch)))), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-8.9) : _GLF_ONE(1.0, injectionSwitch.y)))), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-21.59))))) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))), 0.0, log(abs(1.0)), 1.0, 0.0)), min(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-21.59)))), transpose(transpose((mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-21.59)))))))) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))), 0.0, log(abs(1.0)), 1.0, 0.0)), min(vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-21.59))))) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))), 0.0, log(abs(1.0)), 1.0, 0.0)), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) + 0.0))), 1.0)), injectionSwitch)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-21.59))))) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED((injectionSwitch * mat2(-538.570, 2496.0001, 66.53, 4846.9188))) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)))), injectionSwitch)))), 0.0, log(abs(1.0)), 1.0, 0.0)))), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-21.59)))), (mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-21.59))))) * mat2(1.0))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))))))), 0.0, log(abs(1.0)), 1.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) + vec2(0.0, 0.0)).y, (false ? _GLF_FUZZED(-325.619) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) + vec2(0.0, 0.0)).y)))))) && true)))))))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter ++ : _GLF_FUZZED(54479)))))))
            {
             do
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), true), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(false), true), false, false))))));
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
