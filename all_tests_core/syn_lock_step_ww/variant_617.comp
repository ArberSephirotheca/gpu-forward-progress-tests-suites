#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-6583.7623, min(_GLF_IDENTITY(-6583.7623, (-6583.7623) / cos(0.0)), _GLF_IDENTITY(-6583.7623, min(-6583.7623, -6583.7623)))), float(vec2(-6583.7623, 1.0)))) : injectionSwitch.y, float(mat2x3(false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, float(mat3x4(false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0))))), false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, (false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y) * cos(0.0)), min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-6583.7623, min(_GLF_IDENTITY(-6583.7623, (-6583.7623) / cos(0.0)), _GLF_IDENTITY(-6583.7623, min(-6583.7623, -6583.7623)))), float(vec2(-6583.7623, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)), transpose(_GLF_IDENTITY(transpose(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (transpose(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * mat4(1.0)))))))))) : injectionSwitch.y, float(mat2x3(false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, float(mat3x4(false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(-7.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0))))), false ? _GLF_FUZZED(-6583.7623) : injectionSwitch.y, false ? _GLF_IDENTITY(_GLF_FUZZED(-6583.7623), tan(0.0) + (_GLF_FUZZED(-6583.7623))) : injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, exp(0.0), 1.0, 0.0))).x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) && true)))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false, _GLF_IDENTITY(false || ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false, ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))) || false), false || _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), (((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))) || false)) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true)), _GLF_IDENTITY(! (! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), (_GLF_IDENTITY(! (! (! ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), (! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), false), true))))))))))) || false)) || false)))) && _GLF_IDENTITY(true, false || (true))), (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec3((false), true, true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.3)), bool(false))) > injectionSwitch.y))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))) && true, ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))) && true) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, true && (false))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(false, true && (false))), false))), bvec2(bvec4(bvec2(false, false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), true))), bvec2(bvec2(bvec2(false, false)))))) || (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.2))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) - 0.0), cos(0.0), determinant(mat4(0.0, 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.9) : 1.0)))), injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(_GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), mix(float(_GLF_FUZZED(-9627.0980)), float(_GLF_IDENTITY(tan(0.0), 0.0 + (tan(0.0)))), bool(true)))) - _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((8.2 * -20.14))), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1597.8824)), bool(false))) < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), mix(float(_GLF_FUZZED(-1085.9485)), float((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))))) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3354.2556)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true && _GLF_IDENTITY((false), true && ((false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), false, true, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u))))))) * (uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u)) >> 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) + 0u)) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false, true)))))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! _GLF_IDENTITY((! (bool(bvec3(false, false, true)))), ((! (bool(bvec3(false, false, true))))) || false))), true))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false))))))), false, true))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))), bool(bvec3(false, false, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) && true), false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true))))))))))), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), clamp((mat2(1.0) * (injectionSwitch)) * mat2(1.0), (mat2(1.0) * (injectionSwitch)) * mat2(1.0), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec4(false, false, true, _GLF_IDENTITY(true, ! (! (true)))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-331.399)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, true, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(-86.08), clamp(true ? injectionSwitch.x : _GLF_FUZZED(-86.08), true ? injectionSwitch.x : _GLF_FUZZED(-86.08), true ? injectionSwitch.x : _GLF_FUZZED(-86.08))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-28.90))))) && true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(22.19))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asinh(injectionSwitch)))).y))))) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) + 0u) * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(true, false || (true)), false, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_FUZZED(5.6)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), vec2(vec4(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[1]), bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true))), true)))), min(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)), float(mat4x3(min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)), 1.0, 0.0, 1.0, 0.0, cos(length(0.0)), 1.0, 1.0, 1.0, cos(0.0), 0.0, abs(1.0)))))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), vec2(vec2(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8)))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), mat2(1.0) * (vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))))), vec2(vec4(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), min(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)))), bvec2(false, false)), clamp(_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)))), bvec2(false, false)), vec2(mat4x3(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)))), bvec2(false, false)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)))), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)))), bvec2(false, false))))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), vec2(vec4(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), vec2(vec4(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))) + vec2(0.0, 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((_GLF_IDENTITY(3.2 / 0.8, (true ? _GLF_IDENTITY(3.2 / 0.8, min(_GLF_IDENTITY(3.2 / 0.8, clamp(3.2 / 0.8, 3.2 / 0.8, 3.2 / 0.8)), 3.2 / 0.8)) : _GLF_FUZZED(distance(vec4(-717.595, 7724.9779, -5806.6299, 4.9), vec4(-4733.4215, -4.5, -789.109, 3.4)))))))), vec2(vec4(_GLF_IDENTITY(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), mix(vec2((vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))))[0], _GLF_FUZZED(-57.01)), vec2(_GLF_FUZZED(7.8), (vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))))[1]), bvec2(false, true))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))))).y) && true)))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 1.0, round(length(normalize(1.0))), 0.0, tan(0.0), 1.0)), min(_GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 1.0, round(length(normalize(1.0))), 0.0, tan(0.0), 1.0)), mix(vec2(_GLF_FUZZED(3040.6363), _GLF_FUZZED(-8885.4663)), vec2((vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 1.0, round(length(normalize(1.0))), 0.0, tan(0.0), 1.0)))[0], (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 1.0, round(length(normalize(1.0))), 0.0, tan(0.0), 1.0)))[1]), bvec2(true, true))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 1.0, round(length(normalize(1.0))), 0.0, tan(0.0), 1.0))))))[1]), vec2(_GLF_FUZZED(9.6), _GLF_FUZZED(5.6)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(_GLF_IDENTITY(5.6, clamp(5.6, 5.6, 5.6))))), _GLF_FUZZED(5.6)))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), max(vec2(vec4(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(vec2(vec4(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), max(vec2(vec4(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), vec2(vec4(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true)))))), min(min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_IDENTITY(_GLF_FUZZED(5.6), float(vec3(_GLF_FUZZED(5.6), 1.0, 0.0))), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), vec2(vec4(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(true, true)))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), min(_GLF_IDENTITY(_GLF_FUZZED(5.6), max(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6))), _GLF_FUZZED(5.6)))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-497.388), _GLF_FUZZED((3.2 / 0.8))), vec2(vec4(vec2(_GLF_FUZZED(_GLF_IDENTITY(-497.388, (false ? _GLF_FUZZED(step(-3162.9881, -5.2)) : -497.388))), _GLF_FUZZED((3.2 / 0.8))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), true))))))))).y) && true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6830.9121))), cos(0.0), cos(tan(0.0)), 0.0, 0.0, 0.0), mat2x4(mat3x4(mat2x4(injectionSwitch, 1.0, cos(0.0), cos(tan(0.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 0.0, 0.0)))))).x), float(_GLF_FUZZED(895.689)), bool(false))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(9.4, 270.021)), vec2(vec4(_GLF_FUZZED(vec2(9.4, 270.021)), 1.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))).x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(895.689), mix(float(_GLF_IDENTITY(_GLF_FUZZED(895.689), min(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689)))), float(_GLF_FUZZED(1325.4756)), bool(false))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(sqrt(1.0), 0.0)), dot(vec2(1.0, 0.0), vec2(sqrt(1.0), 0.0))), 0.0, 1.0, length(0.0), 0.0)))), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(895.689), clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0)))))), bool(_GLF_IDENTITY(false, ! (! (false)))))), injectionSwitch.x, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.9) : clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(895.689), clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0))))), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(895.689), clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, determinant(mat3(exp(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(abs(1.0), mix(float(_GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0)))), float(_GLF_FUZZED(-5.3)), bool(false))), 0.0)))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.7)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(895.689), clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0))), min(_GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0)))))))), bool(_GLF_IDENTITY(false, ! (! (false)))))), injectionSwitch.x, injectionSwitch.x), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(-4.9) : clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(895.689), clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0))))), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(895.689), clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0))))), 1.0, 0.0, 0.0, determinant(mat3(exp(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(abs(1.0), mix(float(_GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, (1.0) + 0.0)), max(abs(1.0), abs(1.0)))), float(_GLF_FUZZED(-5.3)), bool(false))), 0.0)))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.7)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_IDENTITY(_GLF_FUZZED(895.689), 1.0 * (_GLF_FUZZED(895.689)))) / 1.0)) - 0.0)), bool(false))), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7261.7490)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-47.51)), bool(false)))), float(_GLF_FUZZED(895.689)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) && true))))))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, true, false)))))))))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))).x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(895.689), mix(float(_GLF_IDENTITY(_GLF_FUZZED(895.689), min(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689)))), float(_GLF_FUZZED(1325.4756)), bool(false))), mix(float(_GLF_FUZZED(39.25)), float(_GLF_IDENTITY(_GLF_FUZZED(895.689), mix(float(_GLF_IDENTITY(_GLF_FUZZED(895.689), min(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689)))), float(_GLF_FUZZED(1325.4756)), bool(false)))), bool(true))), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(sqrt(1.0), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(length(572.012)) : sqrt(1.0))), sqrt(1.0), sqrt(1.0))), 0.0))), 0.0, 1.0, length(0.0), 0.0)))), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(895.689), clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689), _GLF_IDENTITY(_GLF_FUZZED(895.689), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(_GLF_IDENTITY(895.689, clamp(895.689, 895.689, 895.689)))) + 0.0), 0.0, 0.0, 1.0)), max(float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(_GLF_IDENTITY(895.689, clamp(895.689, 895.689, 895.689)))) + 0.0), 0.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(_GLF_IDENTITY(895.689, clamp(895.689, 895.689, 895.689)))) + 0.0), 0.0, 0.0, 1.0)))))))), bool(_GLF_IDENTITY(false, ! (! (false)))))), injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.9) : clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(895.689), clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat3x2(_GLF_FUZZED(895.689), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, tan(0.0), 0.0, 1.0)), 0.0)))) + _GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, 1.0))))), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(895.689), _GLF_IDENTITY(clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0)))), (true ? clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(_GLF_IDENTITY(895.689, clamp(895.689, _GLF_IDENTITY(895.689, (895.689) + 0.0), _GLF_IDENTITY(895.689, clamp(895.689, 895.689, 895.689))))), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0)))) : _GLF_FUZZED(max(5.4, asin(-5.2)))))), 1.0, 0.0, 0.0, determinant(mat3(exp(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(abs(1.0), mix(float(_GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.17) : 1.0)), 1.0)))))), float(_GLF_FUZZED(-5.3)), bool(false))), 0.0)))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.7), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(2.7), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x4(float(mat2x4(_GLF_FUZZED(2.7), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), float(injectionSwitch.x), bool(true))), injectionSwitch.x), mix(float(_GLF_FUZZED((-101.915 - 196.938))), float(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.9) : clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(895.689), clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat3x2(_GLF_FUZZED(895.689), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, tan(0.0), 0.0, 1.0)), 0.0)))) + _GLF_IDENTITY(0.0, (0.0) * 1.0)), 0.0, 0.0, 1.0))))), float(mat3(_GLF_IDENTITY(_GLF_FUZZED(895.689), _GLF_IDENTITY(clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(895.689), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0)))), (true ? clamp(_GLF_FUZZED(895.689), _GLF_FUZZED(_GLF_IDENTITY(895.689, clamp(895.689, _GLF_IDENTITY(895.689, (895.689) + 0.0), _GLF_IDENTITY(895.689, clamp(895.689, 895.689, 895.689))))), _GLF_IDENTITY(_GLF_FUZZED(895.689), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(895.689), (_GLF_FUZZED(895.689)) + 0.0), 0.0, 0.0, 1.0)))) : _GLF_FUZZED(max(5.4, asin(-5.2)))))), 1.0, 0.0, 0.0, determinant(mat3(exp(0.0), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(abs(1.0), mix(float(_GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(73.17) : 1.0)), 1.0)))))), float(_GLF_FUZZED(-5.3)), bool(false))), 0.0)))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.7), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(2.7), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat2x4(float(mat2x4(_GLF_FUZZED(2.7), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), bool(true)))))) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-4.4)), bvec2(true, false))) : _GLF_FUZZED(vec2(-571.238, -2225.2933)))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(895.689)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(157938u))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))))) > injectionSwitch.y, true, false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(895.689)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(157938u))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(895.689)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))))) > injectionSwitch.y, true, false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))), false))))), true && (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-47.51)), bool(false)))), float(_GLF_FUZZED(895.689)), bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, true, false))))))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))))), true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true)))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) && true)) || false))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))))), false, true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))))), false, true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))))), false, true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))))), false, true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))))), false, true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), true && (bool(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))))), false, true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bool((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false), false, true))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)), true)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))), true && ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))) || false)))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) || false))))))))), false, true))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false || (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), false)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false, true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false || (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), false)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false, true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), false || (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), false)))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false, true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))), true, false)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) || false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(false, ! (! (false))), false)), false, true, true))))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (true))) && ((false)))), false || (_GLF_IDENTITY(false, false || (false))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true, false)))))), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))))), false))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), ! (! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ((_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), ! (! (! _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((bool(bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! _GLF_IDENTITY((! (false)), true && ((! (false)))))))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 1u * (subgroup_base)), (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(1u * (subgroup_base), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)) * (subgroup_base), 0u + (1u * (subgroup_base)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)) * (subgroup_base), 0u + (1u * (subgroup_base)))) : _GLF_FUZZED(subgroup_base))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-46.78), _GLF_IDENTITY(_GLF_FUZZED(33.00), (true ? _GLF_FUZZED(33.00) : _GLF_FUZZED(vec3(2.0, 9.0, 7946.1526).x)))), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-9436.8756)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2907.1725), _GLF_FUZZED((-0.9 + 7.9))), bvec2(false, false)), mix(vec2(_GLF_FUZZED(4858.8995), _GLF_FUZZED(-7.5)), vec2((mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-9436.8756)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2907.1725), _GLF_FUZZED((-0.9 + 7.9))), bvec2(false, false)))[0], (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-9436.8756)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2907.1725), _GLF_FUZZED((-0.9 + 7.9))), bvec2(false, false)))[1]), bvec2(true, true)))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), false))))))))))))[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((9.5 / -1872.9854)) : _GLF_IDENTITY(1.0, 1.0 * (1.0)))))), 1.0, tan(0.0), 0.0)), 1.0), (true ? _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0))), 0.0, 1.0, 1.0), max(vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0))), 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0))), 0.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0), transpose(transpose(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0))), 0.0, 1.0, 1.0), max(vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0))), 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0))), 0.0, 1.0, 1.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0))))), 1.0), max(vec4(injectionSwitch.x, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 1.0), vec4(injectionSwitch.x, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 1.0))) : _GLF_FUZZED(vec4(_GLF_IDENTITY(-6.5, mix(float(-6.5), float(_GLF_FUZZED(263.117)), bool(_GLF_IDENTITY(false, ! (! (false)))))), -9.7, -48.97, -55.17))))), (float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 1.0), (true ? _GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(tan(0.0), (tan(0.0)) - sin(0.0)), 0.0)), 1.0), max(vec4(injectionSwitch.x, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 1.0), vec4(injectionSwitch.x, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 0.0)), 1.0))) : _GLF_FUZZED(vec4(-6.5, -9.7, -48.97, -55.17)))))) + 0.0)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | 0u, clamp(_GLF_IDENTITY((subgroup_base) | 0u, ~ (~ (_GLF_IDENTITY((subgroup_base) | 0u, clamp((subgroup_base) | 0u, (subgroup_base) | 0u, (subgroup_base) | 0u))))), (subgroup_base) | 0u, _GLF_IDENTITY((subgroup_base) | 0u, 1u * ((subgroup_base) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), 0u | (uint(uvec2(0u, 0u)))))))))))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_local_id)))) ^ 0u)))), ((workgroup_base + subgroup_base)) >> 0u) | 0u), workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), (subgroup_size) >> 0u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), 0u ^ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY((subgroup_base), 0u | ((subgroup_base)))) ^ 0u) | 0u))), min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) ^ 0u))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) << 0u) : _GLF_FUZZED(workgroup_id))), 0u, 0u))))), max(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), ~ _GLF_IDENTITY((~ ((subgroup_base))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((~ ((subgroup_base)))))) | 0u))))), _GLF_IDENTITY(min(workgroup_base + subgroup_base, workgroup_base + subgroup_base), (min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) | (_GLF_IDENTITY(min(workgroup_base + subgroup_base, workgroup_base + subgroup_base), 0u ^ (min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) / 1u)) : _GLF_FUZZED(workgroup_base)))), (max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), max(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), ~ (~ ((subgroup_base)))) | 0u))))), min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true))) ? ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), max(~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))), ~ (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))))) + 1) % subgroup_size) : _GLF_FUZZED(workgroup_base))))) | (max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), ~ (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)))))), min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), min(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), max(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), 0u ^ (min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))), workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY(~ (~ ((subgroup_base))), _GLF_IDENTITY(uint(uint(~ (~ ((subgroup_base))))), min(uint(uint(~ (~ ((subgroup_base))))), uint(uint(~ (~ ((subgroup_base))))))))) | 0u))))), min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(workgroup_base)))))), min(max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | 0u, ((subgroup_base) | 0u) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec3(uvec3(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec3(uvec3(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), clamp(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec3(uvec3(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), (~ (uint(_GLF_IDENTITY(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec3(uvec3(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))) ^ 0u), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec3(uvec3(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), ~ (~ (~ (uint(_GLF_IDENTITY(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec3(uvec3(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))), ~ (uint(_GLF_IDENTITY(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uvec3(uvec3(uvec3(workgroup_base, 0u, (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))))) + subgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 1u, 0u, 0u))))), workgroup_base)) + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY(0u, (0u) | 0u)))), min(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)), (min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))) | (min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))), min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((true ? _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (false ? _GLF_FUZZED(workgroup_size) : ((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)), (true ? (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (false ? _GLF_FUZZED(workgroup_size) : ((subgroup_local_id + 1) % subgroup_size))) : _GLF_FUZZED(workgroup_base)) : _GLF_FUZZED(((workgroup_size) % subgroup_size)))))), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), (_GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u)) ^ 0u))), min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base)) + _GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), min(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), min(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), _GLF_IDENTITY(workgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(workgroup_size), 0u, (154112u & 0u), 1u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(_GLF_FUZZED(workgroup_size), 0u, (154112u & 0u), 1u), clamp(uvec4(_GLF_FUZZED(workgroup_size), 0u, (154112u & 0u), 1u), uvec4(_GLF_FUZZED(workgroup_size), 0u, (154112u & 0u), 1u), uvec4(_GLF_FUZZED(workgroup_size), 0u, (154112u & 0u), 1u))))))) : workgroup_base)) + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))))))))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(max(subgroup_base, subgroup_base), (max(subgroup_base, subgroup_base)) ^ 0u)), subgroup_base)))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / 1u), min(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u) % subgroup_size))) : _GLF_FUZZED(workgroup_base))))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), _GLF_IDENTITY((subgroup_base), 0u | ((subgroup_base))))) << 0u), _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u))), min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(max((subgroup_local_id + 1), (subgroup_local_id + 1)), (max((subgroup_local_id + 1), (subgroup_local_id + 1))) | 0u)) % subgroup_size)));
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))], uint(1), _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-24066))))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) * 1), (2) - 0)), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((64), 1 * ((64))), (0 >> _GLF_IDENTITY(int(6), int(6))) | (_GLF_IDENTITY((64), 1 * ((64))))) << 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((true ? vec2(_GLF_IDENTITY(74.10, (false ? _GLF_FUZZED(69.25) : 74.10)), _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))) : injectionSwitch)))), vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((true ? vec2(74.10, _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))) : injectionSwitch)))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED((true ? vec2(74.10, _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))) : injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED((true ? vec2(74.10, _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))) : injectionSwitch)), (_GLF_FUZZED((true ? vec2(74.10, _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))) : injectionSwitch))) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-407.825 - 5.4))), bool(false))), 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((true ? vec2(74.10, _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))) : injectionSwitch)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0)), min(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((true ? vec2(74.10, _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))) : injectionSwitch)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((true ? vec2(74.10, _GLF_IDENTITY(6.9, clamp(6.9, 6.9, 6.9))) : injectionSwitch)))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0)))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(bool(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true)), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true)), false, false)), false, true)))))))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
}
