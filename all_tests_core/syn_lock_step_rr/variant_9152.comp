#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))).y))))), false, true, false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- -8530.9080))), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x))) + 0.0) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(706.154)))), float(_GLF_FUZZED(2.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && true))))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(bool(true && (false))))) && true)), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, true && (false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))) && true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), true)))))))))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-65.44)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, true, true))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), max(vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) % subgroup_size), 0u + (((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1) % subgroup_size))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (true)), bool(bvec3(! (! (true)), true, true)))))) ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) % subgroup_size))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) / 1u), max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) ^ 0), 1))) / 1)) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))))), 0u ^ (uint(uint((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(uint(max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))), clamp(uint(uint(max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size, uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), (false ? _GLF_FUZZED(uaddCarry(40352u, workgroup_size, subgroup_size)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + 1) % subgroup_size), ~ (~ (uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) : _GLF_FUZZED(subgroup_id))), (subgroup_local_id) ^ _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u)))) + 1) % subgroup_size)))))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u ^ ((subgroup_local_id + 1) % subgroup_size))))), (subgroup_local_id + 1) % subgroup_size))), uint(uint(max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))), uint(uint(max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size, ~ (~ ((subgroup_local_id + 1) % subgroup_size))), (subgroup_local_id + 1) % subgroup_size))))))))))))), 0u + ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1, subgroup_local_id + 1))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec2(~ (1), 0))))), min(subgroup_local_id + 1, subgroup_local_id + 1))), clamp((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))), 0u))) % subgroup_size))) : _GLF_FUZZED(workgroup_base)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 1u, 0u))))), virtual_gid, virtual_gid)), _GLF_IDENTITY((virtual_gid), min((virtual_gid), (virtual_gid))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), (false ? _GLF_FUZZED(workgroup_id) : 1u << _GLF_IDENTITY(uint(5u), uint(5u))))) | (0u & 88828u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), uint(5u)), 1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), uint(uvec4(_GLF_IDENTITY(uint(5u), 0u + (uint(5u))), 0u, 1u, 1u)))) * 1u), uint(5u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), uint(uvec4(_GLF_IDENTITY(uint(5u), 0u + (uint(5u))), 0u, 1u, 1u)))) * 1u), uint(5u)) : _GLF_FUZZED(subgroup_id)))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), _GLF_IDENTITY(uint(uvec4((virtual_gid), 1u, (0u & 197280u), 0u)), (uint(uvec4((virtual_gid), 1u, (0u & 197280u), 0u))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)), (virtual_gid) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) * 1u))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), 1u)) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))) / 1u)) - 0u), _GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), min(1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, 0u | (5u))), ~ (~ (uint(_GLF_IDENTITY(5u, 0u | (5u))))))), 1u << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> ((0u ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> ((0u ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))))))) / 1u)), max((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> ((0u ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> ((0u ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) >> ((0u ^ 0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(5u), clamp(uint(5u), uint(5u), uint(5u)))))))))) ^ 0u)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))))))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))) | (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))))))))))), uint(uvec2((_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(uint(5u), _GLF_IDENTITY(uint(5u), 0u ^ (uint(5u))))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), max(~ (uint(5u)), ~ (uint(5u)))))), (uint(5u)) | (uint(5u))))))))), 1u))), ~ _GLF_IDENTITY((~ (~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(5u), (uint(5u)) + 0u), (1u | 1u))), max(uint(uvec2(_GLF_IDENTITY(uint(5u), (uint(5u)) + 0u), (1u | 1u))), uint(uvec2(_GLF_IDENTITY(uint(5u), (uint(5u)) + 0u), (1u | 1u)))))), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))) ? _GLF_FUZZED(atomicCompSwap(workgroup_base, subgroup_size, subgroup_id)) : _GLF_IDENTITY(_GLF_IDENTITY((~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), (((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) | 0u))))))), ((~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), (((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) | 0u)))))))) << 0u), ((~ (~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(5u), uint(5u))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec2(uint(5u), 1u))))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(5u), uint(5u))), (uint(_GLF_IDENTITY(uint(5u), uint(5u)))) | (uint(_GLF_IDENTITY(uint(5u), uint(5u)))))))), uint(_GLF_IDENTITY(uint(5u), uint(5u))))))))), ~ (~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid))) + 0u)) / ((1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, (5u) | 0u)))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY((uint(5u)) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))) / 1u, _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))) / 1u, 0u)), (_GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))) / 1u, 0u)), (uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))) / 1u, 0u))) | (uint(uvec2((_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))) / 1u, 0u))))) - 0u)))), uint(0u))))), ((uint(5u)) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))) / 1u)), uint(0u)))))) | ((uint(5u)) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uint(0u)))))) / 1u)), uint(0u)))))))))))))))))))) + 0u)))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))), clamp((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))), (1u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (1u ^ 1u) ^ (_GLF_IDENTITY(5u, min(5u, 5u))))))), (1u << _GLF_IDENTITY(uint(5u), uint(5u))))) << 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u))), uint(5u)))))), _GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uvec3(5u, 0u, _GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(1u, 1u, 1u) * (uvec3(5u, 0u, _GLF_IDENTITY(1u, (1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((_GLF_IDENTITY(5u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(5u, (5u) | 0u), 1u)), (uint(uvec2(_GLF_IDENTITY(5u, (5u) | 0u), 1u))) - 0u))) | (5u), uint(uvec2((_GLF_IDENTITY(5u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(5u, (5u) | 0u), 1u)), (uint(uvec2(_GLF_IDENTITY(5u, (5u) | 0u), 1u))) - 0u))) | (5u), 1u)))))), (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((_GLF_IDENTITY(5u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) | 0u, uint(uvec4((5u) | 0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 0u)))), 1u)), (uint(uvec2(_GLF_IDENTITY(5u, (5u) | 0u), 1u))) - 0u))) | (5u), uint(uvec2((_GLF_IDENTITY(5u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(5u, (5u) | 0u), 1u)), (uint(uvec2(_GLF_IDENTITY(5u, (5u) | 0u), 1u))) - 0u))) | (5u), 1u))))))) | 0u))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))), ((_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid)))) * 1u) | (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), _GLF_IDENTITY(uint(uint(virtual_gid)), (uint(uint(virtual_gid))) + 0u)), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((virtual_gid) << _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u))))) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(5u), uint(5u)))))) >> _GLF_IDENTITY(uint(5u), uint(5u)), (false ? _GLF_FUZZED(subgroup_local_id) : (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), min(~ (uint(5u)), ~ (uint(5u)))))), uint(5u))))) >> 0u))))), max(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), max((virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), min(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_base))), ~ (~ ((~ (_GLF_FUZZED(workgroup_base)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(atomicExchange(virtual_gid, workgroup_id)), (_GLF_IDENTITY(_GLF_FUZZED(atomicExchange(virtual_gid, workgroup_id)), (false ? _GLF_FUZZED((~ subgroup_size)) : _GLF_IDENTITY(_GLF_FUZZED(atomicExchange(virtual_gid, workgroup_id)), 0u | (_GLF_FUZZED(atomicExchange(virtual_gid, workgroup_id))))))) / 1u) : _GLF_IDENTITY((~ (_GLF_FUZZED(workgroup_base))), max((~ _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)), (true ? (_GLF_FUZZED(workgroup_base)) : _GLF_FUZZED(num_workgroup)))), (~ (_GLF_FUZZED(workgroup_base)))))))))) : virtual_gid)), (virtual_gid) | _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), min(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))) * 1u), uint(5u)))), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * sqrt(1.0))))), uvec3(_GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0, float(_GLF_IDENTITY(mat4x2((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat4x2((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)) * mat4(1.0))))))))), uvec3(1u, 1u, 1u) * (uvec3(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) >> uvec3(0u, 0u, 0u))), _GLF_IDENTITY(max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 0u ^ (5u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u)) >> 0u))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))), (true ? max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), ~ (~ (~ (uint(5u)))))))), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u)), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (uint(_GLF_ONE(1.0, injectionSwitch.y))))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u)) >> _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 1u, 1u, 0u), (false ? _GLF_FUZZED(uvec4(176409u, 32365u, 59945u, _GLF_IDENTITY(175581u, ~ (~ (175581u))))) : _GLF_IDENTITY(uvec4(0u, 1u, 1u, 0u), (uvec4(0u, 1u, 1u, 0u)) | (uvec4(0u, 1u, 1u, 0u)))))))))) >> uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))) : _GLF_FUZZED(virtual_gid))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) ^ 0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (true ? _GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_local_id) : 5u)) : _GLF_FUZZED(subgroup_local_id)))))), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))), uint(5u)), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u)) >> 0u))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED(uvec3(74185u, 84140u, 123931u)) : uvec3(0u, 0u, 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) * 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(_GLF_IDENTITY(uint(5u), (uint(_GLF_IDENTITY(5u, clamp(5u, 5u, 5u)))) ^ 0u))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(0u, 0u, 0u)))))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup)))))) / 1u) ^ (_GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(0u, uint(uvec3(0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0), mat3x2(mat4x3(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0)))))).y)), (0u & 140592u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), max(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), uint(uvec3(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), 0u, 0u)))))))) >> 0u))) >> uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) >> uvec3(0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 0u | (5u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) | 0u))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(floor(1764.1448)) : injectionSwitch.y)))))))) >> uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0)), dot(vec2(0.0, abs(1.0)), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(uvec4(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)), ~ (~ (uint(uvec4(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 1u)))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), clamp(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : uint(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(_GLF_ONE(1.0, injectionSwitch.y))) * 1u) : _GLF_FUZZED(workgroup_base))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))) ^ 0u)) >> 0u))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))) | (uvec3(0u, 0u, 0u))))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (uint(_GLF_ONE(1.0, injectionSwitch.y)))))), ((uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) / uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(workgroup_size)))), uint(5u)), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(5598.5676)), bool(false))))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y)))) >> uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(196002u, 123863u, 135343u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, uint(uint(5u)))) + 0u)), _GLF_IDENTITY(uint(5u), clamp(uint(5u), _GLF_IDENTITY(uint(5u), uint(uvec3(uint(5u), 0u, _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY(0u, 0u + (0u)))))), uint(5u)))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u))))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(0u, 0u, 0u)))))))))), ~ (~ (((_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec3(128039u, 92895u, 71493u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) / uvec3(1u, 1u, 1u))))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), max((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec3(128039u, 92895u, 71493u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) / uvec3(1u, 1u, 1u))))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec3(128039u, 92895u, 71493u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) / uvec3(1u, 1u, 1u))))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec3(128039u, 92895u, 71493u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) / uvec3(1u, 1u, 1u))))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec3(128039u, 92895u, 71493u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) / uvec3(1u, 1u, 1u))))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u), ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec3(128039u, 92895u, 71493u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) / uvec3(1u, 1u, 1u))))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | ((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(uvec3(128039u, 92895u, 71493u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))) / uvec3(1u, 1u, 1u))))) >> uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec4(_GLF_IDENTITY(uint(5u), uint(5u)), 0u, 1u, 1u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> uvec3(0u, 0u, 0u)))) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y))), (uvec3(_GLF_IDENTITY(uint(5u), uint(5u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))))))))))))) * 1u)))) : _GLF_FUZZED(virtual_gid)))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), true && (! (false)))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))) || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false)))) || false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0])), _GLF_FUZZED(8.5)), vec2(_GLF_FUZZED(5918.5433), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), bool(bool(! (false))))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
            barrier();
           barrier();
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), bool(true))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), true)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (_GLF_IDENTITY(injectionSwitch.y, length(0.0) + (injectionSwitch.y))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - 0.0)) + (injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, true, true)))))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, max(4, 4)), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y), true, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)], uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1541.9237, -215.554)))), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(80.20), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, false || (false)))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true), false, false, false))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), false, false, false)))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), true)), false)))))))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false, false))))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), false, false)))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), true && (! (_GLF_IDENTITY(false, false || (false))))))), false)), (bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) && true))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))), false, true, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
