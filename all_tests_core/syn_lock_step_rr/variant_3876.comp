#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec4 GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid;
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 0), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) << 0) != 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.xyz = GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec2 GLF_merged2_0_1_6_1_1_11read_1virtual_gid;
 GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy = GLF_merged2_0_1_6_1_1_11read_1virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.z = subgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, exp(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, log(1.0)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-96.72)), vec2(_GLF_FUZZED(4323.2705), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), true), true)))))))).y), false, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED((318.147 + 1.6)), _GLF_FUZZED(-96.17)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
      {
       return;
      }
     else
      {
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 & 1), ((1 & 1)) | 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), ((! _GLF_IDENTITY((false), false || ((false))))) || false))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x = subgroup_size;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
      break;
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(bvec3(bvec2(false, false), false))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((1 & 1) ^ 1)); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  break;
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     continue;
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                          break;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false, true)))))
                          return;
                         continue;
                        }
                       break;
                       if(_GLF_DEAD(false))
                        break;
                      }
                     break;
                    }
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))) << uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_size) : gl_WorkGroupSize)).x), (0u ^ (gl_WorkGroupSize.x)) | (0u ^ (gl_WorkGroupSize.x)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (0u ^ (gl_WorkGroupSize.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), (0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (0u ^ (gl_WorkGroupSize.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), 0u | (_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), ~ (~ (0u ^ (gl_WorkGroupSize.x)))))), (0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))) | (0u ^ (gl_WorkGroupSize.x)))))))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) >> 0u)) | (gl_WorkGroupSize.x))), (0u ^ (gl_WorkGroupSize.x)) | (_GLF_IDENTITY(0u ^ (gl_WorkGroupSize.x), 0u ^ (0u ^ (gl_WorkGroupSize.x))))))) | 0u))));
 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y = workgroup_size;
 GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.xyz.z = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.y;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.xyz.z * workgroup_id;
 GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.xyz.y = workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(8), (int(8)) | (int(8))) : _GLF_FUZZED(-99013)))))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.xyz.y + GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.z * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_size) : GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.xyz.y + _GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.z, min(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.z, GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.z)) * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x + subgroup_local_id));
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _injected_loop_counter)) > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --))) / 1))
      {
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) * 1)); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)) & 1, (_GLF_IDENTITY(1, clamp(1, 1, 1)) & 1) | (_GLF_IDENTITY(1, clamp(1, 1, 1)) & 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 & 32482, (0 << _GLF_IDENTITY(int(0), int(0))) ^ (0 & 32482)))); _injected_loop_counter --)
            {
             GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.w = virtual_gid;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, max(3, 3)))))), int(3))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), bool(_GLF_IDENTITY(bool(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))), ! (! (bool(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))))))); _injected_loop_counter ++)
    {
     GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.xyz.x = _GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, max(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid)).w;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ! (! ((false)))))))))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), true && (false || (false)))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) << 0), 1))]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false))).x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false)), mix(vec2(_GLF_FUZZED((8.1 / -58.83)), (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false)))[1]), vec2(_GLF_IDENTITY((mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false)))[0], max((mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false)))[0], (mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false)))[0])), _GLF_FUZZED(0.4)), bvec2(true, false)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), min(_GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), max(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), max(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))))), float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)))), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false))).x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (injectionSwitch)))[1], exp(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (injectionSwitch)))[1], (true ? _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (injectionSwitch)))[1] : _GLF_FUZZED(3.3))))), mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_IDENTITY(_GLF_FUZZED(859.033), max(_GLF_FUZZED(859.033), _GLF_FUZZED(859.033))), _GLF_FUZZED(64.58)), bvec2(false, false))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(4488.2477, float(vec4(_GLF_IDENTITY(4488.2477, clamp(4488.2477, 4488.2477, _GLF_IDENTITY(4488.2477, (4488.2477) + 0.0))), 1.0, 0.0, 0.0))))), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false))).x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]), float(mat2x3(((injectionSwitch)[1]), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0))) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false)), clamp(mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false))))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), float(_GLF_FUZZED(4488.2477)), bool(false)))), vec2(_GLF_FUZZED(859.033), _GLF_FUZZED(64.58)), bvec2(false, false))).x > injectionSwitch.y)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec3(bool(bvec3(false, false, true)), true, false))))))))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.y = GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.xyz.x;
  }
 else
  {
  }
 uint next_virtual_gid = GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, min(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, _GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, (GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid) - uvec4(0u, 0u, 0u, 0u)))).z * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.z * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.z, min(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.z, GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.z)) * GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 1u * (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(185552u) : _GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))), _GLF_IDENTITY(0u ^ (subgroup_local_id + 1), (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))) ^ (subgroup_local_id + 1)) | _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (subgroup_local_id + 1), clamp(0u ^ (subgroup_local_id + 1), 0u ^ (subgroup_local_id + 1), _GLF_IDENTITY(0u ^ (subgroup_local_id + 1), (true ? 0u ^ (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_base)))))), ((_GLF_IDENTITY(0u, (0u) - 0u) ^ (subgroup_local_id + 1))) / 1u)))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), (_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1, 0u ^ _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), clamp(_GLF_IDENTITY(((subgroup_local_id + 1)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), (((subgroup_local_id + 1)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) | (((subgroup_local_id + 1)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(((subgroup_local_id + 1)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), (((subgroup_local_id + 1)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) | (((subgroup_local_id + 1)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), ((subgroup_local_id + 1)) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), uint(_GLF_IDENTITY(uvec4(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), 1u))), 0u ^ (subgroup_local_id + 1))) % GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x)), 1u, 1u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uint(53725))))), uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, (1u ^ 0u), 0u)), clamp(uint(uvec4(_GLF_IDENTITY(0u, (0u) ^ 0u), 1u, (1u ^ 0u), 0u)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, (0u) ^ 0u)), (true ? _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, (0u) ^ 0u))) ^ 0u, max((_GLF_IDENTITY(0u, (0u) - 0u)) ^ 0u, (_GLF_IDENTITY(0u, (0u) - 0u)) ^ 0u))) : _GLF_FUZZED(workgroup_base))), 1u, (1u ^ 0u), 0u)), uint(uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), uint(uvec4((0u), 0u, 1u, 0u))) ^ 0u), 1u, (1u ^ 0u), 0u))))), 0u) + (uvec4(uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), 0u ^ (subgroup_local_id + 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))), 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))), _GLF_IDENTITY(0u, min(0u, 0u)) ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) * 1u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))), 0u ^ (subgroup_local_id + 1))) << 0u)) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), min(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) * 1u))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))))))) / _GLF_IDENTITY(1u, (1u) * 1u), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), uint(uint((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) + (0 << _GLF_IDENTITY(int(5), int(5)))), 0u ^ (subgroup_local_id + 1))))))) / _GLF_IDENTITY(1u, (1u) * 1u)) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)))), uint(uint((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, uint(uint(subgroup_local_id + 1)))))))))) / _GLF_IDENTITY(1u, (1u) * 1u)))) << 0u)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) * 1) : _GLF_FUZZED(69867)))))))))) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x, (GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size.x) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u, 1u, 0u)))))) | 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, max(1, 1))), 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) | (64)))))), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, true))), true, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false, false))), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec2(bool(_GLF_WRAPPED_IF_FALSE(false)), true)), ! (! (bool(bvec2(bool(_GLF_WRAPPED_IF_FALSE(false)), true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, clamp(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, _GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, uvec4(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid[0], GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid[1], GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid[2], GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid[3]))) | (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, (GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid) >> uvec4(0u, 0u, 0u, 0u))) + uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, (GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid) | (GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid))) + uvec4(0u, 0u, 0u, 0u)))).xy.y], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w = read_1;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1, max(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1, _GLF_IDENTITY((GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1) / uvec4(1u, 1u, 1u, 1u), (_GLF_IDENTITY((GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1) / uvec4(1u, 1u, 1u, 1u), (false ? _GLF_FUZZED(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1) : (GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1) / uvec4(1u, 1u, 1u, 1u)))) - uvec4(0u, 0u, 0u, 0u))), GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1)).w, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w, min(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w, GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1, max(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1, (GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1) / uvec4(1u, 1u, 1u, 1u)), GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1)).w, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w, min(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w, GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w))))), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1, max(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1, (GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1) / uvec4(1u, 1u, 1u, 1u)), GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1)).w, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w, min(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w, GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1, max(_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1, (GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1) / uvec4(1u, 1u, 1u, 1u)), GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1)).w, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w, min(GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w, GLF_merged2_0_3_71_3_1_6GLF_merged3_0_1_11_1_1_14_2_1_14virtual_gidworkgroup_baseworkgroup_sizeread_1.w))))))))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     continue;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, ~ (~ (GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid))).xy.y], max(buf[_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy, min(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy, GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy)).y], buf[GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.y])), _GLF_IDENTITY(4, _GLF_IDENTITY((4) | _GLF_IDENTITY((1 ^ 1), max((1 ^ 1), (1 ^ 1))), 0 | (_GLF_IDENTITY((4) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, 1 * (1)) ^ 1), (1 ^ 1)), (_GLF_IDENTITY(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), max(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, clamp(1 ^ 1, _GLF_IDENTITY(1 ^ 1, 0 | (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) << 0))), 1 ^ 1))), ((1 ^ 1)) | ((1 ^ 1))), _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))) >> 0)))), (_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), _GLF_IDENTITY(min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), _GLF_IDENTITY((1 ^ 1), 0 ^ (_GLF_IDENTITY((1 ^ 1), max((1 ^ 1), (1 ^ 1))))))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1))))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), (true ? _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0) : _GLF_FUZZED(40315))), _GLF_IDENTITY(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1)))), int(ivec2(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1)))), 1)))), min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ _GLF_IDENTITY(1, (1) ^ 0)))))))))) - (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ _GLF_IDENTITY((~ (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-6.5))), injectionSwitch.x)))), int(_GLF_IDENTITY(ivec2((~ (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-6.5))), injectionSwitch.x)))), 1), ivec2(0, 0) | (ivec2((~ (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-6.5))), injectionSwitch.x)))), 1)))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0))) / (1 ^ 0))), (_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1))), _GLF_IDENTITY(_GLF_IDENTITY(max((_GLF_IDENTITY(1, 1 * (1)) ^ 1), (1 ^ 1)), (_GLF_IDENTITY(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), max(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1))), _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))) >> 0)))), (_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), _GLF_IDENTITY(min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1))))), max(min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1))))), min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1))))))))) - (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0))) / (1 ^ 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(max((_GLF_IDENTITY(1, 1 * (1)) ^ 1), (1 ^ 1)), (_GLF_IDENTITY(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), max(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1))), _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))) >> 0)))), (_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), _GLF_IDENTITY(min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1))))), max(min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1))))), min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1))))))))) - (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0))) / (1 ^ 0)), int(ivec4(_GLF_IDENTITY(max((_GLF_IDENTITY(1, 1 * (1)) ^ 1), (1 ^ 1)), (_GLF_IDENTITY(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), max(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1))), _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))) >> 0)))), (_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), _GLF_IDENTITY(min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1))))), max(min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1))))), min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1))))))))) - (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0))) / (1 ^ 0)), 1, 0, 0)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1 ^ 1, (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) ^ 0)) | 0), max(1 ^ 1, 1 ^ 1))), _GLF_IDENTITY(max((_GLF_IDENTITY(1, 1 * (1)) ^ 1), _GLF_IDENTITY((1 ^ _GLF_IDENTITY(1, min(1, 1))), ((1 ^ _GLF_IDENTITY(1, min(1, 1)))) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), min(_GLF_IDENTITY(max((_GLF_IDENTITY(1, (1) | 0) ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), max(_GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1))), _GLF_IDENTITY((1 ^ 1), (_GLF_IDENTITY((1 ^ 1), ~ (~ ((1 ^ 1))))) >> 0)))), (_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), _GLF_IDENTITY(min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (_GLF_IDENTITY(1, ~ (~ (1))) ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) | ((1 ^ 1))))) | (max((1 ^ _GLF_IDENTITY(1, (1) | (1))), (1 ^ 1))))), max(min(_GLF_IDENTITY(max((1 ^ _GLF_IDENTITY(1, (1) | (1))), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) | (max((1 ^ 1), (1 ^ 1))))), min(_GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), (1 ^ 1))) + 0), _GLF_IDENTITY(max((1 ^ 1), (1 ^ 1)), (max((1 ^ 1), _GLF_IDENTITY((1 ^ 1), clamp(_GLF_IDENTITY((1 ^ 1), (false ? _GLF_FUZZED(12182) : (1 ^ 1))), (1 ^ 1), (1 ^ 1))))) | (max((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-88629))) ^ 1), (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) - (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(96.98)))) / 1.0))))) | 0))) / (1 ^ 0))))), ((4) | _GLF_IDENTITY((1 ^ 1), max(_GLF_IDENTITY((1 ^ 1), ~ (_GLF_IDENTITY(~ ((1 ^ _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) | (1)), 0 | (1)))), _GLF_IDENTITY(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), _GLF_IDENTITY(min(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), _GLF_IDENTITY(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), int(ivec4(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), 0, 0, 1)))), (min(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), _GLF_IDENTITY(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), int(ivec4(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), 0, 0, 1))))) | (_GLF_IDENTITY(min(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), _GLF_IDENTITY(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), int(ivec4(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), 0, 0, 1)))), 0 | (min(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), _GLF_IDENTITY(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), int(ivec4(clamp(~ ((1 ^ 1)), ~ _GLF_IDENTITY(((1 ^ 1)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-36780) : ((1 ^ 1)))), ~ ((1 ^ 1))), 0, 0, 1)))))))))))), (1 ^ 1)))) / 1)))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), ! (! (false)))))
    break;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.3, -0.0)))), injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.3, -0.0)))), injectionSwitch), max(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.3, -0.0)))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.3, -0.0)))), injectionSwitch)))).x > injectionSwitch.y)))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.3, -0.0)))), injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.3, -0.0)))), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.3, -0.0)))), injectionSwitch)).x > injectionSwitch.y))) && true)) && true))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.3, -0.0)))), injectionSwitch)).x > injectionSwitch.y)))), false, false, false)))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true))), false))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance((read_1 , vec2(-78.96, 30.66)), injectionSwitch)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x == read_2) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x == read_2, bool(bool(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x == read_2, bool(bool(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x == read_2, bool(bvec4(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x == read_2, false, false, false))))))))), ! (! (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x == read_2, bool(bool(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x == read_2, bool(bool(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x == read_2, bool(bvec4(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x == read_2, false, false, false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x, (GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x) | 0u) == read_2, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid, (GLF_merged3_0_2_41_2_1_11_3_1_11GLF_merged2_0_1_6_1_1_11read_1virtual_gidsubgroup_idvirtual_gid) ^ uvec4(0u, 0u, 0u, 0u)).xy.x) | 0u) == read_2) || false)) || false)) + 1) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, 4);
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) || false)))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}
