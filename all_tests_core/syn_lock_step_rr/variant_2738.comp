#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups)), gl_NumWorkGroups))) + uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(1u, uint(uint(1u))), 1u, 1u) * (gl_NumWorkGroups)), gl_NumWorkGroups)).x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x))) << 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(inversesqrt(asin(3.4))), (_GLF_FUZZED(inversesqrt(asin(3.4)))) * 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(inversesqrt(asin(3.4))), (_GLF_FUZZED(inversesqrt(asin(3.4)))) * 1.0)))), float(_GLF_FUZZED(5.9)), bool(false)))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base), max(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | (_GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(subgroup_size))))), (~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | 0u), 1u)) * ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 0u)), _GLF_IDENTITY(max(uint(uvec3(workgroup_base, 0u, 0u)), _GLF_IDENTITY(uint(uvec3(workgroup_base, 0u, 0u)), uint(uvec2(uint(uvec3(workgroup_base, 0u, 0u)), 1u)))), (_GLF_IDENTITY(max(uint(uvec3(workgroup_base, 0u, 0u)), uint(uvec3(workgroup_base, 0u, 0u))), min(max(uint(uvec3(workgroup_base, 0u, 0u)), uint(uvec3(workgroup_base, 0u, 0u))), max(uint(uvec3(workgroup_base, 0u, 0u)), uint(uvec3(workgroup_base, 0u, 0u)))))) | (max(uint(uvec3(workgroup_base, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 0u)), uint(uvec3(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), clamp(~ (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), ~ (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))), ~ (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))))))))), 0u, 0u))))))))))) * 1u), ~ (workgroup_base))), _GLF_IDENTITY((~ (workgroup_base)) - 0u, max(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u)) - 0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((~ (workgroup_base)) - 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))))) ? 0u : _GLF_FUZZED(packSnorm2x16(vec2(-45.86, -7961.0999))))), 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY((~ (workgroup_base)) - 0u, (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base)) - 0u, 0u + ((~ (workgroup_base)) - 0u)), ((~ (workgroup_base)) - 0u) / 1u))), 0u, 1u, 1u))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((~ (workgroup_base)) - 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true))))))))) ? 0u : _GLF_FUZZED(packSnorm2x16(vec2(-45.86, -7961.0999))))), 1u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(_GLF_IDENTITY((~ (workgroup_base)) - 0u, (0u | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base)) - 0u, 0u + ((~ (workgroup_base)) - 0u)), ((~ (workgroup_base)) - 0u) / 1u))), 0u, 1u, 1u))))))), _GLF_IDENTITY((~ (workgroup_base)) - 0u, clamp((~ (workgroup_base)) - 0u, (~ (workgroup_base)) - 0u, _GLF_IDENTITY((~ (workgroup_base)) - 0u, min((~ (workgroup_base)) - 0u, (~ (workgroup_base)) - 0u))))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (0u ^ 1u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_IDENTITY(uvec4(uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (0u ^ 1u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (0u ^ 1u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 1u))))))), min(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (0u ^ 1u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_IDENTITY(uvec4(uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (0u ^ 1u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(uint(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), (0u ^ 1u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 1u))))))), min(_GLF_FUZZED(workgroup_base), _GLF_FUZZED(workgroup_base)))) ^ 0u), 0u, _GLF_IDENTITY(0u, 0u | (0u))))) : subgroup_size)), (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) ^ 0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / 1u) : _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), (subgroup_id * subgroup_size) ^ 0u)) | (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base))) : subgroup_size)), min(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 1u)))))))), (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u))))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 1u)))))))), (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_id)))) | (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u))))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) << 0u) ^ 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(~ (~ (_GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), 0u + (_GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), ((~ (_GLF_FUZZED(num_workgroup)))) | ((~ (_GLF_FUZZED(num_workgroup)))))))))), max(~ _GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), 0u + (_GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), ((~ (_GLF_FUZZED(num_workgroup)))) | ((~ (_GLF_FUZZED(num_workgroup)))))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), 0u + (_GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), ((~ (_GLF_FUZZED(num_workgroup)))) | ((~ (_GLF_FUZZED(num_workgroup)))))))))), (true ? ~ _GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), 0u + (_GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), ((~ (_GLF_FUZZED(num_workgroup)))) | ((~ (_GLF_FUZZED(num_workgroup)))))))))) : _GLF_FUZZED(workgroup_base)))))) >> 0u)) : _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, min(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size) >> 0u), _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, ~ (~ (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))))), ((false ? _GLF_FUZZED(workgroup_base) : subgroup_size)) | ((false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))), (subgroup_id * subgroup_size) ^ 0u), max(false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_FUZZED(num_workgroup))), (~ _GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), ((~ (_GLF_FUZZED(num_workgroup)))) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) >> 0u), clamp(_GLF_IDENTITY(~ (~ (_GLF_FUZZED(num_workgroup))), (~ (~ (_GLF_FUZZED(num_workgroup)))) >> 0u), _GLF_IDENTITY(~ (~ (_GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((~ (~ (_GLF_FUZZED(num_workgroup)))) >> 0u, uint(uvec3(_GLF_IDENTITY((~ (~ (_GLF_FUZZED(num_workgroup)))) >> 0u, (false ? _GLF_FUZZED(153393u) : (~ (~ (_GLF_FUZZED(num_workgroup)))) >> 0u)), 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_FUZZED(num_workgroup))), (~ _GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), uint(uvec2(_GLF_IDENTITY((~ (_GLF_FUZZED(num_workgroup))), ~ (_GLF_IDENTITY(~ ((~ (_GLF_FUZZED(num_workgroup)))), (~ ((~ (_GLF_FUZZED(num_workgroup))))) - 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) ^ 0u) : _GLF_FUZZED(subgroup_size)))), (_GLF_IDENTITY(~ (~ (_GLF_FUZZED(num_workgroup))), (~ (~ (_GLF_FUZZED(num_workgroup)))) >> 0u)) / 1u)))) : _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, min(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size) >> 0u), _GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(false))))) ? _GLF_FUZZED(workgroup_base) : subgroup_size, 0u ^ (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))))))), ((false ? _GLF_FUZZED(workgroup_base) : subgroup_size)) | ((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size) >> 0u))))), (subgroup_id * subgroup_size) ^ _GLF_IDENTITY(0u, (0u) | (0u))), false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), _GLF_IDENTITY(~ (~ (_GLF_FUZZED(num_workgroup))), (~ (~ (_GLF_FUZZED(num_workgroup)))) >> 0u)) : _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_base) : subgroup_size, min(_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true), true)))))))) ? _GLF_FUZZED(workgroup_base) : subgroup_size, ~ (~ (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))))), ((false ? _GLF_FUZZED(workgroup_base) : subgroup_size)) | ((false ? _GLF_FUZZED(workgroup_base) : subgroup_size)))), (subgroup_id * subgroup_size) ^ 0u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_base) : subgroup_size)), (subgroup_id * subgroup_size) ^ 0u)) | (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) | 0u) | (subgroup_size))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id))))), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) | (subgroup_size))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(182202u) : (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) | (subgroup_size))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_id)))) ^ 0u))))) ^ (0u | 0u))) + subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base)), clamp((~ (workgroup_base)), (~ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), _GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u))))), (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base)) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u)), max((~ (workgroup_base)) - 0u, _GLF_IDENTITY((~ (workgroup_base)) - 0u, ((~ (workgroup_base)) - 0u) * 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base)))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), (_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u)) / 1u)) | (_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u))), 1u)))), max((~ (workgroup_base)) - 0u, _GLF_IDENTITY((~ (workgroup_base)) - 0u, ((~ (workgroup_base)) - 0u) * 1u))) : _GLF_FUZZED(num_workgroup)))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u))))), (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base)) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u)), max((~ (workgroup_base)) - 0u, _GLF_IDENTITY((~ (workgroup_base)) - 0u, ((~ (workgroup_base)) - 0u) * 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base)))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), (_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u)) / 1u)) | (_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u))), 1u)))), max((~ (workgroup_base)) - 0u, _GLF_IDENTITY((~ (workgroup_base)) - 0u, ((~ (workgroup_base)) - 0u) * 1u))) : _GLF_FUZZED(num_workgroup))))) | (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u))))), (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base)) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u)), max((~ (workgroup_base)) - 0u, _GLF_IDENTITY((~ (workgroup_base)) - 0u, ((~ (workgroup_base)) - 0u) * 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base)))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), (_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u)) / 1u)) | (_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u))), 1u)))), max((~ (workgroup_base)) - 0u, _GLF_IDENTITY((~ (workgroup_base)) - 0u, ((~ (workgroup_base)) - 0u) * 1u))) : _GLF_FUZZED(num_workgroup)))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u))))), (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base)) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u)), max((~ (workgroup_base)) - 0u, _GLF_IDENTITY((~ (workgroup_base)) - 0u, ((~ (workgroup_base)) - 0u) * 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base)))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), (_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u)) / 1u)) | (_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u))), 1u)))), max((~ (workgroup_base)) - 0u, _GLF_IDENTITY((~ (workgroup_base)) - 0u, ((~ (workgroup_base)) - 0u) * 1u))) : _GLF_FUZZED(num_workgroup)))), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u))), ((~ _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / (1u & 1u)))) << (0u ^ 0u)) - _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (0u)), uint(uvec4((~ (workgroup_base)) - 0u, 0u, 0u, 1u))))), (~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) - 0u, _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_base)) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u)), max((~ (workgroup_base)) - 0u, _GLF_IDENTITY((~ (workgroup_base)) - 0u, ((~ (workgroup_base)) - 0u) * 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), max(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) | (~ (workgroup_base)))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u), (_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u)) / 1u)) | (_GLF_IDENTITY(uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (uint(uvec3(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) | 0u))), 1u)))), max((~ (workgroup_base)) - 0u, _GLF_IDENTITY((~ (workgroup_base)) - 0u, ((~ (workgroup_base)) - 0u) * 1u))) : _GLF_FUZZED(num_workgroup)))))))) >> 0u))))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), max(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup))) : _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ 0u))) + subgroup_local_id));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false, true), false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true))))) || _GLF_IDENTITY(false, ! (! (false))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) || false, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))) || false, bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))) || false, bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 1u))) * subgroup_size, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u))))), 1u))) * subgroup_size), ((workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u))))), 1u))) * subgroup_size)) | ((workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u))))), 1u))) * subgroup_size))) << 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (1u) - 0u) * (subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), 0u | (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) + 0u))), (~ (next_virtual_gid)) | (_GLF_IDENTITY(~ (next_virtual_gid), clamp(~ (next_virtual_gid), ~ (next_virtual_gid), ~ (next_virtual_gid)))))))], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ 0), _GLF_IDENTITY(1, max(1, 1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) >> 0u, min((uint(1)) >> 0u, _GLF_IDENTITY((uint(1)) >> 0u, (_GLF_IDENTITY((uint(1)) >> 0u, ((uint(1)) >> 0u) / 1u)) ^ 0u)))), uint(1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 1u * (uint(1))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1)), max((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1)), ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1))) ^ 0u)))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), uint(_GLF_IDENTITY(1, ~ (~ (1))))), max(min(uint(1), uint(1)), min(uint(1), uint(1)))))) >> _GLF_IDENTITY(0u, 0u + (0u)))), max((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 1u * (uint(1))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1)), max((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1)), ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1))) ^ 0u)))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), uint(_GLF_IDENTITY(1, ~ (~ (1))))), max(min(uint(1), uint(1)), min(uint(1), uint(1)))))) >> _GLF_IDENTITY(0u, 0u + (0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 1u * (uint(1))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1)), max((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1)), ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (uint(1))) ^ 0u)))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(uint(1), uint(_GLF_IDENTITY(1, ~ (~ (1))))), max(min(uint(1), uint(1)), min(uint(1), uint(1)))))) >> _GLF_IDENTITY(0u, 0u + (0u)))))) >> 0u), uint(1)))) | (uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) / int(_GLF_ONE(1.0, injectionSwitch.y)), (0 << _GLF_IDENTITY(int(4), int(4))) ^ ((0) / int(_GLF_ONE(1.0, injectionSwitch.y))))))))), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), min((4), (4))) ^ 0));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) ^ 0))), 0);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1, (read_1) + 0u) == read_2) + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), min(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0)), ((_GLF_IDENTITY(1, (1) ^ 0))) + 0), (_GLF_IDENTITY(1, (1) ^ 0)), (_GLF_IDENTITY(1, (1) ^ 0)))), (_GLF_IDENTITY(1, (1) ^ 0)))) | (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 1)))) ^ 0), 1))) - 0), 1))), 0 ^ _GLF_IDENTITY(((_GLF_IDENTITY(1, (1) ^ 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (((_GLF_IDENTITY(1, (1) ^ 0)) | (_GLF_IDENTITY(1, clamp(1, 1, 1))))) | 0)))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(154530u) : read_1))) | 0u) == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)), max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) * (1 & 1)))), _GLF_IDENTITY(uint(read_1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 == read_2) + 1, clamp(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u ^ (uint(read_1 == read_2) + 1))))) / 1u))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(uvec4(uint(read_1 == read_2) + 1, 0u, 0u, (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)))))), (uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (true ? uvec3(_GLF_IDENTITY(read_2, (read_2) + 0u), 0u, 1u) : _GLF_FUZZED(uvec3(118354u, 17718u, 45809u))))) / uvec3(1u, 1u, 1u))))))) + 1) / 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u)))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(uvec2(uvec2(read_1, 0u)))))), (_GLF_IDENTITY(uvec2(read_1, _GLF_IDENTITY(0u, ~ (~ (0u)))), uvec2(0u, 0u) + (uvec2(read_1, 0u)))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(1u, (1u) | 0u))))))))) == read_2) + 1, max(_GLF_IDENTITY(uint(read_1 == read_2) + 1, clamp(uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1, uint(read_1 == read_2) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))) + _GLF_IDENTITY(1, ~ (~ (1))), (uint(read_1 == read_2) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) / 1)) / int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) + 0)))))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))) - uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-722.330)), float(0.0), bool(true))))), injectionSwitch.x)))))), (max(_GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + _GLF_IDENTITY(1, int(ivec2(1, 0))), _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) + 1, (uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (_GLF_IDENTITY(true ? uvec3(read_2, 0u, 1u) : _GLF_FUZZED(uvec3(118354u, 17718u, 45809u)), (_GLF_IDENTITY(true ? uvec3(read_2, 0u, 1u) : _GLF_FUZZED(uvec3(118354u, 17718u, 45809u)), (true ? uvec3(read_2, 0u, 1u) : _GLF_FUZZED(uvec3(118354u, 17718u, 45809u))) - uvec3(0u, 0u, 0u))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))))) / uvec3(1u, 1u, 1u))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (true ? uvec3(read_2, 0u, 1u) : _GLF_FUZZED(uvec3(118354u, 17718u, 45809u))))) / uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (true ? uvec3(read_2, 0u, 1u) : _GLF_FUZZED(uvec3(118354u, 17718u, 45809u))))) / uvec3(1u, 1u, 1u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (true ? uvec3(read_2, 0u, 1u) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(118354u, 17718u, 45809u)), min(_GLF_FUZZED(uvec3(118354u, 17718u, 45809u)), _GLF_FUZZED(uvec3(118354u, 17718u, 45809u))))))) / uvec3(1u, 1u, 1u))), 0u ^ (uint(_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (true ? uvec3(read_2, 0u, 1u) : _GLF_FUZZED(uvec3(118354u, 17718u, 45809u))))) / uvec3(1u, 1u, 1u))))))), uint(_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (_GLF_IDENTITY(uvec3(read_2, 0u, 1u), (true ? uvec3(read_2, _GLF_IDENTITY(0u, min(0u, 0u)), 1u) : _GLF_FUZZED(uvec3(118354u, 17718u, 45809u))))) / uvec3(1u, 1u, 1u))))))))) + 1) / 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(read_1, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(uvec3(read_1, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec3(read_1, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u)) ^ 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(read_1, 0u), _GLF_IDENTITY(uvec2(0u, 0u) + (uvec2(read_1, 0u)), (uvec2(0u, 0u) + (uvec2(read_1, 0u))) | (uvec2(0u, 0u) + (uvec2(read_1, 0u)))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u)))), ((_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))))) << uvec2(0u, 0u)) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec2(18644u, 44534u), ~ (~ (_GLF_IDENTITY(uvec2(18644u, 44534u), (uvec2(18644u, 44534u)) >> uvec2(0u, 0u)))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), clamp(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), (_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u)))) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u)))))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))), (false ? _GLF_FUZZED(uvec2(174314u, 35575u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), clamp(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), (_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u)))) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u)))))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), uvec2(1u)))), uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), _GLF_IDENTITY(uvec2(0u, 0u) + (uvec2(read_1, 0u)), uvec2(uvec3(_GLF_IDENTITY(uvec2(0u, 0u) + (uvec2(read_1, 0u)), uvec2(uvec4(uvec2(0u, 0u) + (uvec2(read_1, 0u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u))), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), clamp(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), (_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u)))) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), clamp(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), (_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u)))) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), clamp(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u))), (_GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u)))) | uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(read_1, 0u), uvec2(0u, 0u) + (uvec2(read_1, 0u)))))))) ^ (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(uvec2(1u), ~ (~ (uvec2(1u))))))))))))))))) == read_2) + 1, max(uint(read_1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY((uint(read_1 == read_2) + 1) / 1u, max((uint(read_1 == read_2) + 1) / 1u, (uint(read_1 == read_2) + 1) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))) + _GLF_IDENTITY(1, ~ (~ (1))), (uint(read_1 == read_2) + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1))))) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) / 1u), _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((5.2 * 8.0))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(_GLF_IDENTITY(true, (true) && true)))), injectionSwitch.y)), max(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((5.2 * 8.0))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))), injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((5.2 * 8.0))), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(true))), injectionSwitch.y)), (true ? int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((5.2 * 8.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (1.0) / 1.0)), bool(true))), injectionSwitch.y)) : _GLF_FUZZED(81047))))), _GLF_IDENTITY(0, (0) | (0)), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0))))), (_GLF_IDENTITY(ivec4(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(-39.01)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1])).y)), _GLF_IDENTITY(0, (0) | (0)), int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(ivec4(0, 0, _GLF_IDENTITY(0, ~ (~ (0))), 0), _GLF_IDENTITY((ivec4(0, 0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) * ivec4(1, 1, 1, 1), ((ivec4(0, 0, _GLF_IDENTITY(0, ~ (~ (0))), 0)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0))) ^ _GLF_IDENTITY((ivec4(4, int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) ^ 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((ivec4(4, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)), min(float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)), (float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))) / 1.0))), (float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))) * 1.0)))), _GLF_IDENTITY(0, (0) | (0)), int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> ivec4(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> _GLF_IDENTITY(0, ~ (~ (0))))))), 0, 0)))), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), false, true))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ! (! ((_GLF_IDENTITY(true, false || (true)))))))) && (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))), true, true, true))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && (false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), false || (! (_GLF_IDENTITY(true, false || (true)))))) && true))) && (false))))))))) || false))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
