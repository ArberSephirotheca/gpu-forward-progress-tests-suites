#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uvec2 _f0;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 mat2 _f1;
 _GLF_struct_0 _f2;
 mat4x3 _f3;
 uint virtual_gid;
 uvec2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0))), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), clamp(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)), float(float(injectionSwitch.y))))) : _GLF_FUZZED(uintBitsToFloat(21148u)))), (injectionSwitch.y) / exp(0.0))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + log(1.0))) / exp(0.0))))) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-4.7) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, false)))))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, true))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), vec2(0.0, 0.0) + (max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * mat2(1.0)), injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch))), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) * exp(0.0)))) * (injectionSwitch)))), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)))), tan(0.0), 1.0, sin(0.0), 0.0)), _GLF_IDENTITY(vec2(mat4(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), (true ? mat2x4(_GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), max(1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)) : _GLF_FUZZED(mat2x4(-6446.3340, -6.4, -6.5, 16.78, 2.7, 9.6, 994.598, 698.063)))))))) * (injectionSwitch)))), tan(0.0), 1.0, sin(0.0), 0.0)), 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) * exp(0.0)), 1.0, abs(1.0), 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.1)), bool(false)))))), float(_GLF_FUZZED(-8.1)), bool(false)))), 0.0, 0.0, 0.0, 1.0, 0.0)), (true ? vec2(mat4(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)))), tan(0.0), 1.0, sin(0.0), 0.0)), 0.0, 0.0, tan(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), abs(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2775.2241) : 1.0))))), cos(0.0), round(length(normalize(1.0))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.1)), float(0.0), bool(true))), 0.0, abs(0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(1177.7585)), bool(false))), 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_1 _GLF_struct_replacement_1 = _GLF_struct_1(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))), 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 0u), (false ? _GLF_FUZZED(uvec2(163609u, 14296u)) : _GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) + uvec2(0u, 0u))))))))), mat2(1.0), _GLF_struct_0(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) >> 0u))), mat4x3(1.0), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id, uvec2(_GLF_IDENTITY(1u, max(1u, 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(6.1)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch))) - vec2(0.0, 0.0)).y))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), ! (! ((false)))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), ! (! ((false)))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), ! (! ((false)))))))))), ! (! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), ! (! ((false)))))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     return;
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0, ((_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) - 0.0) - 0.0)), injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mat2(1.0) * (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sqrt(0.0)) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-99.79)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.9, -2.9)) : injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.9, -2.9)) : injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.9, -2.9)) : injectionSwitch)))).y))))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), (true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5645.1540)), float(injectionSwitch.y), bool(true)))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * vec3(1.0, 1.0, 1.0)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), min(int(3), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 0 ^ (_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) - (0 & 42467)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) / 1), min(int(3), int(3)))), (true ? 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3)))) : _GLF_FUZZED((-61433 + -9281)))))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), ~ (~ (int(3))))) + 0))) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), (uint(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), 1 * (int(3))), int(3)))), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (2))) >> 0)), int(2)), 0 ^ ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), 1 * (int(3))), int(3)))), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (2))) >> 0)), int(2)))))))) * 1u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), min(int(3), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, 1 * (3))), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), max(int(2), int(2)))) << 0))))), (uint(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))), min(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))), 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))) - 0)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) * 1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1)))), (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), (_GLF_IDENTITY(int(3), min(int(3), int(3)))) * 1)), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), (uint(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(_GLF_IDENTITY(3, max(3, 3))))), 0, int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x)))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3))), (_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))) | (_GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), _GLF_IDENTITY(1, 0 | (1)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) * 1u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), min(int(3), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(3) : _GLF_FUZZED(92816)))))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), 0 | (_GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), (uint(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-39154) : 1)))))))))), int(3)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), _GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), (int(3)) - 0), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) | (int(3)))) >> 0))), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))) * 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), min(int(3), int(3)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, (3) / 1)) - 0))))), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 * (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), clamp(_GLF_IDENTITY(1, (1) / ((_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2)), (((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) << (0 >> _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), int(ivec4(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 0, 0, 0))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), 0 ^ (_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))), _GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1)))))))), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))) * 1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), _GLF_IDENTITY(int(3), min(int(3), int(3)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, (-55259 & 0), 1), ~ (~ (ivec3(1, (-55259 & _GLF_IDENTITY(0, (0) ^ 0)), 1)))))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 1))), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(95236) : int(3))), int(3)))), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) ^ 0)), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), (uint(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(3))), 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(distance(6.0, -35.66)) : injectionSwitch.x)))))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 1 * (3))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(_GLF_IDENTITY(3, int(ivec2(3, 1))), (false ? _GLF_FUZZED((+ -94404)) : _GLF_IDENTITY(_GLF_IDENTITY(3, int(ivec2(3, 1))), min(_GLF_IDENTITY(3, int(ivec2(3, 1))), _GLF_IDENTITY(3, int(ivec2(3, 1)))))))))))), int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3)))))), max(_GLF_IDENTITY(1, (1) << 0) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (int(3)))), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (false ? _GLF_FUZZED(-48307) : 2))))), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, 0 | (2)))))))) * 1u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ _GLF_IDENTITY((~ (int(3))), max(_GLF_IDENTITY((~ (int(3))), _GLF_IDENTITY(int(ivec3((~ (int(3))), 0, 0)), clamp(int(ivec3((~ (int(3))), 0, 0)), int(ivec3((~ (int(3))), 0, 0)), int(ivec3((~ (int(3))), 0, 0))))), (~ (int(3)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) - 0)), min(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(6), int(6))))) / ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec3(_GLF_IDENTITY(int(3), 0 ^ (int(_GLF_IDENTITY(3, int(ivec3(3, 0, 1)))))), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(int(3), min(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(_GLF_IDENTITY(3, (3) << (0 << _GLF_IDENTITY(int(4), int(4)))), 1))))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1))))))), 0, 1, 1)), (int(ivec4(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1))))))), 0, 1, 1))) | (int(ivec4(_GLF_IDENTITY(3, clamp(3, 3, _GLF_IDENTITY(3, min(3, _GLF_IDENTITY(3, int(ivec2(3, 1))))))), 0, 1, 1)))))), int(3)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))))), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, min(_GLF_IDENTITY(3, max(3, 3)), 3))), _GLF_IDENTITY(int(3), min(int(3), int(3)))), _GLF_IDENTITY(max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))), clamp(max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))), max(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3)))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))))))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, (_GLF_IDENTITY(3, int(int(3)))) * 1)))))))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (~ _GLF_IDENTITY((int(3)), (_GLF_IDENTITY(_GLF_IDENTITY((int(3)), ((int(3))) << 0), (_GLF_IDENTITY((int(3)), ((int(3))) << 0)) | 0)) | ((int(3)))))), min(int(3), _GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), clamp(int(3), int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(51296) : int(3))))), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))))))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ _GLF_IDENTITY((3), (_GLF_IDENTITY((3), (_GLF_IDENTITY((3), clamp((3), (3), (3)))) | ((3)))) << 0)))), int(3))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2, _GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-64327))))))))))) * 1u))))))), _GLF_IDENTITY(4, (4) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), ~ (~ (int(5))))) / 1)))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * sqrt(vec2(1.0, 1.0))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_1.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_1.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, false || ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))) || false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true), false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(read_1 == read_2, false), bvec2(bvec2(bvec2(read_1 == read_2, false))))), (bool(bvec2(read_1 == read_2, false))) || false))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) | (int(5)), (0 | (_GLF_IDENTITY(int(5), (int(5)) + 0))) | (0 | (int(5)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, clamp(_GLF_IDENTITY(5, 0 ^ (5)), 5, 5))), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) | (int(5)), (0 | (_GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, 0 | (5)))) + 0))) | (0 | (int(5))))))) >> 0)) | (_GLF_IDENTITY(1, 0 ^ (1)))), clamp(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) | (int(5)), (0 | (_GLF_IDENTITY(int(5), (int(5)) + 0))) | (0 | (int(5)))))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) | (int(5)), (0 | (_GLF_IDENTITY(int(5), (int(5)) + 0))) | (0 | (int(5))))))) >> 0)) | (_GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) | (int(5)), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) | (int(5)), clamp(_GLF_IDENTITY(0, (0) | 0) | (int(5)), _GLF_IDENTITY(0, (0) | 0) | (int(5)), _GLF_IDENTITY(0, (0) | 0) | (int(5)))), _GLF_IDENTITY(0, (0) | 0) | (int(5)))), (0 | (_GLF_IDENTITY(int(5), (int(5)) + 0))) | (0 | (int(5)))))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) | (int(5)), (0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) + 0), (_GLF_IDENTITY(int(5), (int(5)) + 0)) | (_GLF_IDENTITY(int(5), (int(5)) + 0))))) | (0 | (int(5))))))) >> 0)) | (_GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(1, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) | (int(5)), (0 | (_GLF_IDENTITY(int(5), (int(5)) + 0))) | _GLF_IDENTITY((0 | (int(5))), _GLF_IDENTITY(int(ivec3((0 | (int(5))), 0, (0 & -33371))), max(int(ivec3((0 | (int(5))), 0, (0 & -33371))), int(ivec3((0 | (int(5))), 0, (0 & -33371))))))))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-97205) : int(5))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0) | (int(5)), (0 | (_GLF_IDENTITY(int(5), (int(5)) + 0))) | (0 | (int(5))))))) >> 0)) | (_GLF_IDENTITY(1, 0 ^ (1)))))), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, length(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)))))))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.3))) > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, abs(1.0)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
