#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && ((false)))))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! _GLF_IDENTITY((! ((! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))))), bool(bool((! ((! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))) || false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), false, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-28.70)), bool(false))), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((! ((injectionSwitch.x > injectionSwitch.y))), false, true)))) && true)))))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))))) && true)) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (0u | (0u ^ 0u)) ^ (gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), mat2(1.0) * (vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(1483.8285))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) + determinant(mat4(0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))), mix(float(_GLF_FUZZED(-1012.3528)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) + 0.0)) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), 1.0))))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) + 0.0)) - 0.0)) + 0.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) - 0.0)))) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), max(min(injectionSwitch.x, injectionSwitch.x), min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(mod(146.701, -306.807)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.y) - 0.0)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(mod(146.701, -306.807)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.y) - 0.0)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) || false)), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((false ? _GLF_FUZZED(mod(146.701, -306.807)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0 + ((false ? _GLF_FUZZED(mod(146.701, -306.807)) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, (injectionSwitch.y) - 0.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, ((injectionSwitch.y) - 0.0) - 0.0))))) || false))) || false)), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))), injectionSwitch)).y) - 0.0))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))) || false) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false || ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - 0.0)))) || false)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat2x4(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0, 0.0, sqrt(1.0), 1.0, sqrt(0.0), 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), mix(float(_GLF_FUZZED((+ 2757.1998))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)))))) || false))), true, true)), true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))) + 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u), _GLF_IDENTITY(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), ~ (~ ((~ (workgroup_id))))))), uint(uvec2(_GLF_IDENTITY(clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (workgroup_id)), ((~ (workgroup_id))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ ((~ (workgroup_id))))))), (clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), ~ (~ ((~ (workgroup_id)))))))) >> 0u), 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(false)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), ((false)) || false)))))))), ! (! (! (bool(bool(false))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(bvec2(! (_GLF_IDENTITY(false, true && (false))), true)))))) || false)))))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))), bool(bvec4((false), false, false, true))))), ! (! (! (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), true, true))))), false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), true, true))))), false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), true, true))))), false || (false))), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), true, true))))), false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), true, true))))), false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), true, true))))), false || (false))), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), true, true))))), false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), true, true))))), false || (false))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))), true, true))))), false || (false))), false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (false))), false))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true, bool(bool(true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), (_GLF_IDENTITY((false), true && ((false)))) || false))), ! (! (_GLF_IDENTITY((false), true && ((false)))))))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), true && (_GLF_IDENTITY(true, bool(bool(true))))), false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) < injectionSwitch.y)) && (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false))))), false, _GLF_IDENTITY(true, bool(bool(true))), false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), min(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))) - 0u)) | (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_size), 0u + (uint(subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(86604u, 0u | (86604u))))), uint(uint(subgroup_size)))) << _GLF_IDENTITY((0u ^ 0u), _GLF_IDENTITY(((0u ^ 0u)) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (((0u ^ 0u)) ^ _GLF_IDENTITY(0u, 0u | (0u)))))), (subgroup_size) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, 1u)))), min(1u, 1u)), 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base)), max(workgroup_base, workgroup_base))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)) : _GLF_FUZZED(atomicMax(subgroup_local_id, 134381u))))) | 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (((false)) || false), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (((false)) || false), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (((false)) || false)), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (((false)) || false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)) || _GLF_IDENTITY((((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) ? _GLF_FUZZED(2.3) : injectionSwitch.y, 0.0 + (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)) ? _GLF_FUZZED(2.3) : injectionSwitch.y))))))), true && ((((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.3) : injectionSwitch.y)))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY((false || (false)), true && ((false || (false)))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))), false), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))), false), false, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec2(false, true))) || ((false))))), true && (! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(false, bool(bvec2(false, true))) || _GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), false || (! (((false)))))))))))))) && _GLF_IDENTITY(true, (true) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), _GLF_IDENTITY((uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), ((uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))) << uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))), 0u ^ ((uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(59395) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 + (0)) | (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))))))), (uint(1)), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((uint(1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((uint(1))))))) / 1u)))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), _GLF_IDENTITY((uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), ((uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))) << uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))), 0u ^ ((uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(59395) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 + (0)) | (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))))))), (uint(1)), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((uint(1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((uint(1))))))) / 1u)))) / 1u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), _GLF_IDENTITY((uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), ((uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))) << uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))), 0u ^ ((uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(59395) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 + (0)) | (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))))))), (uint(1)), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((uint(1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((uint(1))))))) / 1u)))) / 1u))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u), _GLF_IDENTITY((uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), ((uvec4(uint(1), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))) << uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), min(uint(1), uint(1)))), 0u ^ ((uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(59395) : _GLF_IDENTITY(1, _GLF_IDENTITY(0, 0 + (0)) | (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, ~ (~ (1))))))))))))), (uint(1)), (_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), ~ (~ _GLF_IDENTITY((uint(1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((uint(1))))))) / 1u)))) / 1u))), _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.4)), float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))), bool(true))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)) : _GLF_FUZZED(tan(-2768.1479)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-5779.8308, (false ? _GLF_FUZZED(91.07) : -5779.8308))) : injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-1.4)), float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))), bool(true)), (true ? mix(float(_GLF_FUZZED(-1.4)), float(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))), bool(true)) : _GLF_FUZZED(6.4)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-5779.8308, (false ? _GLF_FUZZED(91.07) : -5779.8308))) : injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))), ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.4)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, float(vec2(injectionSwitch.y, 0.0)))), bool(true))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-5779.8308, (false ? _GLF_FUZZED(91.07) : -5779.8308))) : injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))))))))), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x))))))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.0, max(5.0, _GLF_IDENTITY(5.0, clamp(5.0, 5.0, 5.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), bool(true))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.0, max(5.0, _GLF_IDENTITY(5.0, clamp(5.0, 5.0, 5.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), bool(true)))))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) + vec2(0.0, 0.0))).y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(5.0, max(5.0, _GLF_IDENTITY(_GLF_IDENTITY(5.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(5.0, (false ? _GLF_FUZZED(-59.40) : 5.0))), (float(_GLF_IDENTITY(5.0, (false ? _GLF_FUZZED(-59.40) : 5.0)))) + 0.0))), clamp(5.0, 5.0, 5.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-184.637, 5209.1658))))) - vec2(0.0, 0.0)))).y))), _GLF_IDENTITY(bool(true), false || (bool(true)))))))))))))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) ? _GLF_IDENTITY(_GLF_FUZZED(-5779.8308), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-5779.8308), max(_GLF_IDENTITY(_GLF_FUZZED(-5779.8308), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2.7), (_GLF_FUZZED(-2.7)) - _GLF_ZERO(0.0, injectionSwitch.x))), float(_GLF_FUZZED(-5779.8308)), bool(true))), _GLF_FUZZED(-5779.8308))))) : injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-5779.8308, (false ? _GLF_FUZZED(91.07) : -5779.8308))) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)))), (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0))))) * mat2(1.0))).y) / 1.0), injectionSwitch.y)), injectionSwitch.y))) - _GLF_ZERO(0.0, injectionSwitch.x))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-5779.8308, max(-5779.8308, _GLF_IDENTITY(-5779.8308, _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(6493.6161), (_GLF_IDENTITY(_GLF_FUZZED(6493.6161), float(mat4x2(_GLF_FUZZED(6493.6161), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0)))) / 1.0) : -5779.8308), (false ? _GLF_FUZZED(-4727.6919) : (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(6493.6161), (_GLF_IDENTITY(_GLF_FUZZED(6493.6161), float(mat4x2(_GLF_FUZZED(6493.6161), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 0.0)))) / 1.0) : -5779.8308))))))) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(distance(vec2(-974.270, -1.7), injectionSwitch)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-5779.8308, (false ? _GLF_FUZZED(91.07) : -5779.8308))) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)), injectionSwitch.y), mix(float(_GLF_FUZZED(-12.39)), float(min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0), injectionSwitch.y)), injectionSwitch.y)), bool(true))))) - _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec4(1.0, abs(1.0), 1.0, 0.0)), dot(vec4(0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec4(1.0, abs(1.0), 1.0, 0.0)))), (false ? _GLF_FUZZED(mat2(-9486.4683, 2.6, 8461.4176, -3.6)) : mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, _GLF_IDENTITY(dot(vec4(0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec4(1.0, abs(1.0), 1.0, 0.0)), dot(vec4(0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec4(1.0, abs(1.0), 1.0, 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((true ? -77.55 : 1541.7033))), float(injectionSwitch.x), bool(true)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-959.808)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-959.808)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-959.808)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat4(1.0) * (transpose(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-959.808)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-959.808)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))).y, (false ? _GLF_FUZZED(46.55) : _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.9) : 0.0)), 0.0)), dot(vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.3)), float(1.0), bool(true))), 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))).y)))), mix(float(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y), float(_GLF_FUZZED(-6676.4670)), _GLF_IDENTITY(bool(false), true && (bool(false))))), _GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, min(_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, clamp(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y)), false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y)), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-5779.8308), (_GLF_FUZZED(-5779.8308)) - 0.0), max(_GLF_IDENTITY(_GLF_FUZZED(-5779.8308), (_GLF_FUZZED(-5779.8308)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(-5779.8308), (_GLF_FUZZED(-5779.8308)) - 0.0))) : injectionSwitch.y))) - _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, determinant(mat4(1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), ((1.0)) / 1.0) * 1.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(log2(-79.83)))), float(mat3x4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(log2(-79.83)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))) ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, mix(float(_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, max(false ? _GLF_FUZZED(_GLF_IDENTITY(-5779.8308, clamp(-5779.8308, -5779.8308, -5779.8308))) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, max(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y))))), float(_GLF_FUZZED(-6676.4670)), _GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))), _GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, min(_GLF_IDENTITY(false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(-5779.8308), max(_GLF_FUZZED(-5779.8308), _GLF_FUZZED(-5779.8308))) : injectionSwitch.y, false ? _GLF_IDENTITY(_GLF_FUZZED(-5779.8308), max(_GLF_FUZZED(-5779.8308), _GLF_FUZZED(-5779.8308))) : injectionSwitch.y, false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y)), false ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, false))) ? _GLF_FUZZED(-5779.8308) : injectionSwitch.y))) - _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, determinant(mat4(1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), min(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, determinant(mat4(1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, determinant(mat4(1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0))))))))))))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(vec2(1.0, 1.0), sqrt(1.0), 0.0))), vec2(1.0, 1.0), vec2(1.0, 1.0)))).y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5829.9833, -68.59)))), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(11.45), mix(float(_GLF_FUZZED(11.45)), float(_GLF_FUZZED(52.29)), bool(false))), _GLF_FUZZED(float(-78551))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16817) : 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))]), bvec2(true, true))).y))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (_GLF_IDENTITY(buf[virtual_gid], 0u | _GLF_IDENTITY((buf[virtual_gid]), min((buf[virtual_gid]), _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 + (4))) - 0), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.2))), (injectionSwitch.y) - log(1.0))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) ^ 0u) == _GLF_IDENTITY(read_2, (read_2) / 1u)) || false, ! (! ((_GLF_IDENTITY(read_1, (read_1) ^ 0u) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, 1u * (read_2)), uint(uvec3(read_2, 0u, 1u)))) | 0u), (read_2) / 1u)) || false))))))) + 1, 4, _GLF_IDENTITY(64, (64) / _GLF_IDENTITY(1, clamp(1, 1, 1))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((3.5 / -2.2))), vec2(_GLF_FUZZED(1.8), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y))))))
  barrier();
}
