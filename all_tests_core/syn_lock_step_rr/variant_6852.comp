#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID))) ^ uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(workgroup_id), 1u, 0u, 1u), (uvec4(_GLF_FUZZED(workgroup_id), 1u, 0u, 1u)) | uvec4(0u, 0u, 0u, 0u)))), _GLF_FUZZED(workgroup_id))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))) : _GLF_FUZZED(subgroup_size))), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(0u, 0u)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u), (clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u))))), 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMin(workgroup_id, num_workgroup)) : 0u)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), clamp(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))))), injectionSwitch.y))))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))) : _GLF_FUZZED(subgroup_size))), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(0u, 0u)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u), (clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u))))), 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMin(workgroup_id, num_workgroup)) : 0u)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), clamp(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))))), injectionSwitch.y))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))) : _GLF_FUZZED(subgroup_size))), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(0u, 0u)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) ^ 0u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u), (clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u))))), 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMin(workgroup_id, num_workgroup)) : 0u)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), clamp(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))))), injectionSwitch.y))))))))))) + subgroup_id * subgroup_size + subgroup_local_id, ~ (~ (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) + 0u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((workgroup_base) + 0u, (true ? (workgroup_base) + 0u : _GLF_FUZZED(workgroup_id))), 0u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec2(109927u, 45022u)) : uvec2(_GLF_IDENTITY((workgroup_base) + 0u, (true ? (workgroup_base) + 0u : _GLF_FUZZED(workgroup_id))), 0u)))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, false, false), true)))))), false || (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, false, false), true))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, false, false), true)))))), false || (bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x < injectionSwitch.y, false, false), true)))))))))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((subgroup_size)))), (workgroup_base) + _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))) : _GLF_FUZZED(subgroup_size))), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), max(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), 0u, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(min(0u, 0u), min(_GLF_IDENTITY(min(0u, 0u), (true ? min(0u, 0u) : _GLF_FUZZED(workgroup_size))), min(0u, 0u)))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((-2800.3680 - injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y)) || (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec4((false) || _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, true)), bool(bvec4(bool(bvec4((false) || false, true, _GLF_IDENTITY(false, true && (false)), true)), true, true, true))))))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))) ^ 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))) ^ 0u) : _GLF_FUZZED(workgroup_base))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u), (clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u))))), 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMin(workgroup_id, num_workgroup)) : 0u)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-21.76), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(23.97)), bvec2(true, false)), vec2(mat4x3(mix(vec2(_GLF_FUZZED(-21.76), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(23.97)), bvec2(true, false)), length(0.0), 0.0, 1.0, log(1.0), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(0.0), 0.0, 0.0, 0.0, 0.0))))) / abs(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), clamp(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), _GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), min(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))), mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))))), (_GLF_IDENTITY((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), clamp(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), min(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))), mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))))) - vec2(0.0, 0.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)) / abs(vec2(1.0, 1.0))))))), injectionSwitch.y))), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u), (clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u))))), 0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(atomicMin(workgroup_id, num_workgroup)) : 0u)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-21.76), (vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((step(4.0, -68.49))))), 1.0))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(85617) : 1)), _GLF_IDENTITY(1, int(ivec4(1, 0, (0 >> _GLF_IDENTITY(int(3), int(3))), 0))), 1))]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(23.97)), bvec2(true, false)))) / abs(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(float(mat4x2(float(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-21.76), (vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((step(4.0, -68.49))))), 1.0))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(85617) : 1)), _GLF_IDENTITY(1, int(ivec4(1, 0, (0 >> _GLF_IDENTITY(int(3), int(3))), 0))), 1))]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(23.97)), bvec2(true, false)))) / abs(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0)), clamp(float(mat4x2(float(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-21.76), (vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((step(4.0, -68.49))))), 1.0))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(85617) : 1)), _GLF_IDENTITY(1, int(ivec4(1, 0, (0 >> _GLF_IDENTITY(int(3), int(3))), 0))), 1))]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(23.97)), bvec2(true, false)))) / abs(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(float(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-21.76), (vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((step(4.0, -68.49))))), 1.0))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(85617) : 1)), _GLF_IDENTITY(1, int(ivec4(1, 0, (0 >> _GLF_IDENTITY(int(3), int(3))), 0))), 1))]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(23.97)), bvec2(true, false)))) / abs(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0)), (float(mat4x2(float(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-21.76), (vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((step(4.0, -68.49))))), 1.0))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(85617) : 1)), _GLF_IDENTITY(1, int(ivec4(1, 0, (0 >> _GLF_IDENTITY(int(3), int(3))), 0))), 1))]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(23.97)), bvec2(true, false)))) / abs(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))) - 0.0), float(mat4x2(float(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-21.76), (vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((step(4.0, -68.49))))), 1.0))[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(85617) : 1)), _GLF_IDENTITY(1, int(ivec4(1, 0, (0 >> _GLF_IDENTITY(int(3), int(3))), 0))), 1))]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(23.97)), bvec2(true, false)))) / abs(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 0.0, 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0))))), clamp(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), clamp(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), min(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), min(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), 1.0))))), mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))))), mat2(1.0) * ((vec2(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))))) / abs(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), max(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), vec2(mat2x3(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0))))))))))))), (float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), clamp(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), min(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), min(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))), 1.0))))), mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))))), mat2(1.0) * ((vec2(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, cos(0.0)))))) / abs(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), max(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), vec2(mat2x3(vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0)))))))))))))) - 0.0), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))))), injectionSwitch.y))), (uvec4(_GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (0u) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) / 1u), uint(3u)))), 0u, 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(_GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u, (0u) << 0u), 0u))))), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicMin(workgroup_id, num_workgroup)) : 0u)), (_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? _GLF_FUZZED(atomicMin(workgroup_id, num_workgroup)) : 0u))) + (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-21.76), (_GLF_IDENTITY(_GLF_FUZZED(-21.76), mix(float(_GLF_FUZZED(-21.76)), float(_GLF_FUZZED(-29.82)), bool(false)))) - abs(0.0)), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(23.97)), bvec2(true, false)))) / abs(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), clamp(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), clamp(_GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), min(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), _GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), max(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))))), _GLF_IDENTITY(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), min(mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))), mat2(1.0) * ((vec2(1.0, 1.0)) / abs(vec2(1.0, 1.0))))), mat2(1.0) * (_GLF_IDENTITY((vec2(1.0, 1.0)), clamp((vec2(1.0, 1.0)), _GLF_IDENTITY((vec2(1.0, 1.0)), ((vec2(1.0, 1.0))) - sqrt(vec2(0.0, 0.0))), (vec2(1.0, 1.0)))) / abs(vec2(1.0, 1.0)))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) / abs(vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) / abs(vec2(1.0, 1.0)))), (false ? _GLF_FUZZED(144.256) : float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) / abs(vec2(1.0, 1.0)))))), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) / abs(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) / abs(vec2(1.0, 1.0))))))))), injectionSwitch.y)))) / uvec4(1u, 1u, 1u, 1u)) : _GLF_FUZZED(uvec4(15842u, 180667u, 137604u, 82248u)))))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))), subgroup_size)) + subgroup_local_id)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(false))))), true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_DEAD(false)))))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74550) : 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74550) : 1)) : _GLF_FUZZED(3182))), (1) - _GLF_IDENTITY(0, 0 ^ (0))), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) >> 0))), 1))) | _GLF_IDENTITY(0, 0 ^ (0)))) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (1))), (uint(_GLF_IDENTITY(1, 0 | (1)))) | (uint(_GLF_IDENTITY(1, 0 | (1))))), 4, 64, _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-69722) : 4)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED((-729.953 , 1.0)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.3)), bool(false))))), (false ? _GLF_FUZZED(-3.3) : injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.3) : injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.3) : injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((true ? virtual_gid : _GLF_FUZZED(workgroup_id)), ((true ? virtual_gid : _GLF_FUZZED(workgroup_id))) | ((true ? virtual_gid : _GLF_FUZZED(workgroup_id))))), 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))))), (float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))) + 0.0)), 0.0, 0.0)), injectionSwitch.x)))), (uint(uvec3(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(true ? virtual_gid : _GLF_FUZZED(workgroup_id), (true ? virtual_gid : _GLF_FUZZED(workgroup_id)) / 1u))), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) / 1u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u)))))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u)))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id))), 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.7) : 0.0)))), injectionSwitch.x)))), (uint(uvec3(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), max(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id))), 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, sqrt(1.0), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat3x2(5.9, 3.9, 658.404, -6.5, -200.843, 7.3)) : mat3x2(0.0, sqrt(1.0), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))))), 1.0 * (float(_GLF_IDENTITY(mat3x2(0.0, sqrt(1.0), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat3x2(5.9, 3.9, 658.404, -6.5, -200.843, 7.3)) : mat3x2(0.0, sqrt(1.0), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))))), injectionSwitch.x)))), (uint(uvec3(_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u))))) | 0u)], _GLF_IDENTITY(4, (4) << 0), 64, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) >> 0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_FUZZED(-85.69)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false))))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))) && true), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (! (true))), false, false)), false || (bool(bvec4(false, true, false, false)))))))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))) && true), false, true)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), true)))))) && true))) && true), false, true)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true), true)))))) && true))) && true), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true), true)))))) && true))) && true), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true), true)))))) && true))) && true), false, true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true), true)))))) && true))) && true), false, true)), true)), false))))))), true))), false)), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(false, true && (false)), true), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), 4, 64, 4);
}
