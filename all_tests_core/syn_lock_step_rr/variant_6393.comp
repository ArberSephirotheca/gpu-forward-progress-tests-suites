#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false)))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-7.4)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y) || false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-98.46, -2.7)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)), _GLF_IDENTITY(false, true && (false)) || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(vec3(135.956, -4383.4351, -6.2))))).y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || false))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(7230.3838 + 8.2, 1.0 * (_GLF_IDENTITY(7230.3838 + 8.2, max(7230.3838 + 8.2, 7230.3838 + 8.2))))))), bool(false)), float(mat4(mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(7230.3838 + 8.2, 1.0 * (_GLF_IDENTITY(7230.3838 + 8.2, max(7230.3838 + 8.2, _GLF_IDENTITY(7230.3838 + 8.2, mix(float(_GLF_FUZZED(-2.4)), float(7230.3838 + 8.2), bool(true)))))))))), bool(false)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, tan(0.0), 0.0, 0.0)))) > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y, injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 0.0 + (injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(0.0 + (injectionSwitch[0]), float(mat2(_GLF_IDENTITY(0.0 + (injectionSwitch[0]), min(0.0 + (injectionSwitch[0]), 0.0 + (injectionSwitch[0]))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), 1.0, sqrt(log(1.0)))))), injectionSwitch[1])).x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))))), (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))))))))) || false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true)), ! (! (bool(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true)))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)), bool(bvec2(bool(bvec3(false, false, false)), true))), ! (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)), true)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((+ -707.118))), float(0.0), bool(true))), 0.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false, ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, abs(1.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0))).x))), float(mat2x4(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch.x)) > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), false))))))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), false)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-58.73, 1.3)) : injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(sin(vec2(0.0, 0.0)))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(sin(vec2(0.0, 0.0))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(sin(vec2(0.0, 0.0))))))) && true)))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), false, true)), true))))), bool(bvec4(bool(bvec2(false, false)), true, false, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), float(_GLF_FUZZED(9298.6069)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)), uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], min(gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[1])), gl_WorkGroupSize[2])).x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | 0u), gl_WorkGroupSize.x), 0u ^ (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, ~ (~ (1u)))), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)).x, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((0u) * 1u, _GLF_IDENTITY(uint(uvec3((0u) * 1u, 0u, 1u)), ~ (~ (uint(uvec3((0u) * 1u, 0u, 1u)))))) : _GLF_FUZZED(subgroup_local_id)))), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)).x) | (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)), (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)), clamp(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)), _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(2772u, 183559u, 73026u)) : gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) << 0u)) - 0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)).x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) : _GLF_FUZZED(max(uvec3(121539u, 8237u, 138005u), 135804u)))) | (gl_WorkGroupSize)).x))) - 0u))), gl_WorkGroupSize.x), 0u ^ (max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * ((1u))) ^ 0u), 1u) * (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 1u * ((1u))) ^ 0u), 1u) * (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))).x) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), min(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID)))))))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), min(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID)))))))))))).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))))), 1u))), _GLF_IDENTITY(1u, (1u) | (1u)) * ((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) ^ 0u), 1u) * (gl_WorkGroupID)).x) >> 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), min(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID)))))))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), min(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID)))))))))))).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))))), 1u))), _GLF_IDENTITY(1u, (1u) | (1u)) * ((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) ^ 0u), 1u) * (gl_WorkGroupID)).x) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), min(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID)))))))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), min(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID)))))))))))).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))))), 1u))), _GLF_IDENTITY(1u, (1u) | (1u)) * ((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) ^ 0u), 1u) * (gl_WorkGroupID)).x) >> 0u))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), min(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID)))))))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), min(uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID))))), uvec3(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID), ~ (~ (uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, uint(uvec4(_GLF_IDENTITY((1u), _GLF_IDENTITY(1u, 0u ^ (1u)) * ((1u))) ^ 0u, 1u, 0u, 1u)))) ^ 0u)) | 0u)), 1u) * (gl_WorkGroupID)))))))))))).x, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (~ (~ (1u)))))), 1u))), _GLF_IDENTITY(1u, (1u) | (1u)) * ((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))) ^ 0u), 1u) * (gl_WorkGroupID)).x) >> 0u))))), gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.1))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], injectionSwitch[1])) + vec2(0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) && true, ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) && true) || false)), true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), 0u | ((workgroup_base))))) + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))))) << 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), ~ (~ (min(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(157467u) : _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))))))))))) << 0u))) / 1u, max((~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) << 0u))) / 1u, (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))), min(subgroup_id, subgroup_id))))) << 0u))) / 1u))))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(atomicExchange(num_workgroup, 126630u)) : subgroup_size))) | _GLF_IDENTITY(0u, max(0u, 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false)))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), bool(bvec3(! (_GLF_IDENTITY((false), ((false)) && true)), true, false)))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_IDENTITY(false, ! (! (false))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(788.327)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true))) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6401.9413)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! ((! (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))))), (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, _GLF_IDENTITY(false, false || (false)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true))))), true, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9187.6579, 0.9)) : injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(166.653), _GLF_FUZZED(float(false))), bvec2(false, false))))), injectionSwitch)).x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y)))) || false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y)))) || false)))))), (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (injectionSwitch.x > injectionSwitch.y)))) || false))))))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false, false, false))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (false))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, (false ? _GLF_FUZZED(-3109.1915) : (injectionSwitch.x) - 0.0))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, mix(float(_GLF_FUZZED(6916.7471)), float((injectionSwitch.x) - 0.0), bool(true)))) > injectionSwitch.y), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), false, true))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch))), min(injectionSwitch, injectionSwitch)))).y, (false ? _GLF_FUZZED(1.1) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) / 1.0)))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch))), min(injectionSwitch, injectionSwitch)))).y, (false ? _GLF_FUZZED(1.1) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) / 1.0)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.3) : injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false)), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false)), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false)), ((injectionSwitch.x > injectionSwitch.y)) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true)))) || false)), true)), false || (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), true)), ! (! (bool(bvec4(false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), true)))))))), (_GLF_IDENTITY(false, (false) && true)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false)), ((injectionSwitch.x > injectionSwitch.y)) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false)), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false)), ((injectionSwitch.x > injectionSwitch.y)) && true)), ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false)), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3336.7337)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_ZERO(0.0, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, log(1.0), 1.0))), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) || false)), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false), true), false)))))) || false)), true)), false || (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (true))), true, false, true))), (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || ((true)))), bool(bvec4(! (_GLF_IDENTITY((true), false || ((true)))), true, true, true))))))), true, false, true)))) && true), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))), (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)))) || false))), true)), ! (! (bool(bvec4(false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(mat4x2(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0, 0.0, 0.0)))), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))) || false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))) && true))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0))))))), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) / 1));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-448.216), _GLF_FUZZED(-817.486)), bvec2(false, false))).y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec4(! (_GLF_IDENTITY(! (false), false || (! (false)))), true, false, false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_IDENTITY(false, ! (! (false))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (4) / 1), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
