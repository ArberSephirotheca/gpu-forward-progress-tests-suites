#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 uvec2 _f0;
 vec2 _f1;
 uint subgroup_size;
 bvec4 _f2;
} ;

struct _GLF_struct_13 {
 int _f0;
 mat2x4 _f1;
 mat4x3 _f2;
 uvec4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
 uvec2 _f1;
 uint _f2;
 int _f3;
 mat2x3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_11 {
 uvec4 _f0;
 int _f1;
 uvec3 _f2;
 uvec4 _f3;
 mat2x4 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_9 {
 int _f0;
 mat3 _f1;
 vec2 _f2;
 mat2 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_5 {
 int _f0;
 mat2x4 _f1;
 uint _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_7 _f0;
 int _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_12 _f3;
 mat3x4 _f4;
 mat4x3 _f5;
 _GLF_struct_14 _f6;
 uint read_1;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 ivec4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 float _f1;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
} ;

struct _GLF_struct_4 {
 uint num_workgroup;
 _GLF_struct_2 _f0;
 vec3 _f1;
 _GLF_struct_3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(1.1) : 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4583.4792) : injectionSwitch.y))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-91.49)), bool(false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4583.4792) : injectionSwitch.y))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-91.49)), bool(false))))))), true)), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4583.4792) : injectionSwitch.y))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-91.49)), bool(false))))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-4583.4792) : injectionSwitch.y))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-91.49)), bool(false)))))) && true))), true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false))), ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(uvec2(1u), vec2(1.0), gl_SubgroupSize, bvec4(true));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))), false)), false || (bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true)))), false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) + 0.0), injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, 0 | (1))))])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(step(vec2(-7.2, -9.0), injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (false))), false || (bool((! (false)))))), (bool(_GLF_IDENTITY(bool((! (false))), false || (bool((! (false))))))) || false))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false, true, false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(gl_NumWorkGroups.x, _GLF_struct_2(mat3x2(1.0), _GLF_struct_0(ivec4(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) | (_GLF_IDENTITY(~ (1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (1), (~ (1)) * 1) : _GLF_FUZZED(-19312))))), (~ (1)) * 1))), (1) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0), _GLF_struct_1(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), bool(bvec3((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), false, true))), true && ((_GLF_IDENTITY(true, bool(bool(true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), bool(bvec3((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), false, true))), true && ((_GLF_IDENTITY(true, bool(bool(true))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, false))))), bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), false, true))), true && ((_GLF_IDENTITY(true, bool(bool(true))))))), false, false)))))))))))), vec3(1.0), _GLF_struct_3(mat4x3(1.0), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58529) : 1)), (1) - 0)), (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(58529) : 1)), _GLF_IDENTITY((1) - 0, max((1) - _GLF_IDENTITY(0, (0) + 0), (1) - 0))))) | ivec4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((+ -6.1)) : 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), mat2(1.0)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(12.33)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(12.33)), bool(false))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), bool(bool((! (true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), (uvec2(gl_WorkGroupSize.x, 0u)) | (uvec2(gl_WorkGroupSize.x, 0u)))), (true ? (_GLF_IDENTITY(uvec2(gl_WorkGroupSize.x, 0u), (uvec2(gl_WorkGroupSize.x, 0u)) | (uvec2(gl_WorkGroupSize.x, 0u)))) : _GLF_FUZZED((subgroup_id * uvec2(139125u, 193192u))))) | (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)) ^ 0u), 0u))))), clamp(gl_WorkGroupSize.x, gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)))), true, true)), bvec3(bvec4(bvec3(bvec3(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true), false, false)))))))))) && true)))), true, true)), false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(445.247) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_FUZZED(447.664)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(445.247) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) / 1.0)))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(445.247, (true ? _GLF_IDENTITY(445.247, mix(float(445.247), float(_GLF_FUZZED(-4.8)), bool(false))) : _GLF_FUZZED(vec4(-891.264, -430.775, 2.1, 3198.5896)[2])))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x2(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x2(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0, 1.0, 0.0))))) + vec2(0.0, 0.0)).x, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x2(vec2(injectionSwitch[0], injectionSwitch[1]), 0.0, 1.0, 1.0, 0.0)))).x : _GLF_FUZZED(-6.8))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.2) : injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.2) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.2) : injectionSwitch.x))) / 1.0)) + 0.0), injectionSwitch.x)))), 1.0, 0.0)))), bool(true))) > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.8), _GLF_FUZZED(121.666)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(9.2)), float((injectionSwitch)[1]), bool(true)))), bvec2(true, true))).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-72.72), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(8932.8322, 31.65).s)), bvec2(true, false))).x)) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(true, true && (true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, false))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-640.750)), bool(false))) : _GLF_FUZZED(-5.4))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))) && true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))), true, false), bvec3(bvec3(bvec3(false, true, false))))), false || (bool(bvec3(false, true, false))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), false))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(subgroup_id))), workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-828.455), _GLF_FUZZED(-1490.8386)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 0u, 0u)), max(uint(uvec4(workgroup_base, 0u, 0u, 0u)), uint(uvec4(workgroup_base, 0u, 0u, 0u))))), workgroup_base)), 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + (0u | 0u))) >> 0u), 0u, 0u)), max(uint(uvec4(workgroup_base, 0u, 0u, 0u)), uint(uvec4(workgroup_base, 0u, 0u, 0u))))), workgroup_base)), 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 0u, 0u)), max(uint(uvec4(workgroup_base, 0u, 0u, 0u)), uint(uvec4(workgroup_base, 0u, 0u, 0u))))), workgroup_base)), 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), min(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 0u, 0u)), max(uint(uvec4(workgroup_base, 0u, 0u, 0u)), uint(uvec4(workgroup_base, 0u, 0u, 0u))))), workgroup_base)), 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 0u, 0u)), max(uint(uvec4(workgroup_base, 0u, 0u, 0u)), uint(uvec4(workgroup_base, 0u, 0u, 0u))))), workgroup_base)), 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 0u, 0u)), max(uint(uvec4(workgroup_base, 0u, 0u, 0u)), uint(uvec4(workgroup_base, 0u, 0u, 0u))))), workgroup_base)), 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 0u, 0u)), max(uint(uvec4(workgroup_base, 0u, 0u, 0u)), uint(uvec4(workgroup_base, 0u, 0u, 0u))))), workgroup_base)), 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 0u, 0u)), max(uint(uvec4(workgroup_base, 0u, 0u, 0u)), uint(uvec4(workgroup_base, 0u, 0u, 0u))))), workgroup_base)), 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, 0u, 0u)), max(uint(uvec4(workgroup_base, 0u, 0u, 0u)), uint(uvec4(workgroup_base, 0u, 0u, 0u))))), workgroup_base)), 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, uint(uvec2(subgroup_id * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(1u, (1u) | 0u)))), uint(uvec3(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, uint(uvec2(subgroup_id * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(1u, (1u) | 0u)))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), subgroup_id * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, min(subgroup_id * _GLF_struct_replacement_16.subgroup_size, subgroup_id * _GLF_struct_replacement_16.subgroup_size)), subgroup_id * _GLF_struct_replacement_16.subgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, 0u | (subgroup_id * _GLF_struct_replacement_16.subgroup_size)), clamp(subgroup_id * _GLF_struct_replacement_16.subgroup_size, subgroup_id * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u)))), max((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, (_GLF_IDENTITY((subgroup_id) | 0u, min((subgroup_id) | 0u, (subgroup_id) | _GLF_IDENTITY(0u, (0u) - (0u ^ 0u))))) - 0u))) | 0u, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) | 0u))) * _GLF_struct_replacement_16.subgroup_size, min(subgroup_id * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, (subgroup_id * _GLF_struct_replacement_16.subgroup_size) << 0u)))))))) + subgroup_local_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 0u)), 0u ^ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u, 1u, 0u))))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))) | (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_16.subgroup_size, subgroup_id * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_struct_replacement_16.subgroup_size, subgroup_id * _GLF_struct_replacement_16.subgroup_size), 0u | (min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_struct_replacement_16.subgroup_size, subgroup_id * _GLF_struct_replacement_16.subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_16.subgroup_size, subgroup_id * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (subgroup_id) | 0u)) | 0u) * _GLF_struct_replacement_16.subgroup_size, min(subgroup_id * _GLF_struct_replacement_16.subgroup_size, subgroup_id * _GLF_struct_replacement_16.subgroup_size))))))) + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))) | (workgroup_base)))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_16.subgroup_size, subgroup_id * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(subgroup_local_id) : (~ (subgroup_id))))) * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_struct_replacement_16.subgroup_size, subgroup_id * _GLF_struct_replacement_16.subgroup_size), 0u | (min(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * _GLF_struct_replacement_16.subgroup_size, subgroup_id * _GLF_struct_replacement_16.subgroup_size)))))), ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_16.subgroup_size, subgroup_id * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) | 0u) * _GLF_struct_replacement_16.subgroup_size, min(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_16.subgroup_size, _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (subgroup_id * _GLF_struct_replacement_16.subgroup_size)), subgroup_id * _GLF_struct_replacement_16.subgroup_size))))))) + subgroup_local_id) ^ 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), (_GLF_IDENTITY((false), ((false)) && true)) && true), false, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bool(_GLF_IDENTITY((false), ((false)) && true)))), false, true))))), ((false)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (! (false))), true, true, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 0.0)))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))) * _GLF_struct_replacement_16.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_16.subgroup_size, ~ (~ ((subgroup_local_id + 1) % _GLF_struct_replacement_16.subgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((false), ((false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), false || (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) && true))) || false))), ! (! ((! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) && true))) || false))))))))))))))), true && (true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bool(_GLF_IDENTITY((false), false || ((false))))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((false), ((false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), true, true))))))))))))))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (! (true && (false))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((false), ((false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), false || (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) && true))) || false))), ! (! ((! (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) && true))) || false))))))))))))))), true && (true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bool(_GLF_IDENTITY((false), false || ((false))))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), (_GLF_IDENTITY((false), ((false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false), bool(bvec3(_GLF_IDENTITY((false), ((false)) || false), true, true))))))))))))))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (! (true && (false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, 1.0, 1.0), (true ? mat3x2(injectionSwitch.y, sqrt(1.0), 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat3x2(-3788.3643, 1.4, 332.854, -9.2, -2662.1121, -4545.1896)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.7)), bool(false)))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.7)), bool(false))))) - log(1.0)), injectionSwitch.y, injectionSwitch.y))) * _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0))))), float(_GLF_FUZZED((-1723.3958 - 72.97))), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)), mix(vec2(_GLF_FUZZED(958.075), _GLF_FUZZED(-1.2)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0], min((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0], (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0])), (_GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), max(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-7039.5410) : _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), min(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0], min((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(cos(0.0), 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(cos(0.0), 1.0, 0.0), (vec3(cos(0.0), 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)))))), 1.0)))[0], (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2752.9250) : 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0]))) * 1.0), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)), mix(vec2(_GLF_FUZZED(958.075), _GLF_FUZZED(-1.2)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0], min((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0], (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0])), (_GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), max(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-7039.5410) : _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), min(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0], min((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(cos(0.0), 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(cos(0.0), 1.0, 0.0), (vec3(cos(0.0), 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)))))), 1.0)))[0], (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2752.9250) : 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0]))) * 1.0), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)), mix(vec2(_GLF_FUZZED(958.075), _GLF_FUZZED(-1.2)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0], min((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-99.17)), float(0.0), bool(true))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0], (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0])), (_GLF_IDENTITY((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), max(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-7039.5410) : _GLF_IDENTITY(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), min(determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0], min((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec3(cos(0.0), 1.0, 0.0), vec3(1.0, 1.0, 1.0) * (_GLF_IDENTITY(vec3(cos(0.0), 1.0, 0.0), (vec3(cos(0.0), 1.0, 0.0)) - vec3(0.0, 0.0, 0.0)))))), 1.0)))[0], (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2752.9250) : 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[0]))) * 1.0), (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0)), dot(vec3(0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), vec3(cos(0.0), 1.0, 0.0))), 1.0)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).y)))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_7(_GLF_struct_5(1, mat2x4(1.0), 1u, ivec2(1)), _GLF_struct_6(uvec2(1u), ivec2(1))), 1, _GLF_struct_8(uvec3(1u), uvec2(1u)), _GLF_struct_12(_GLF_struct_9(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1)), mat3(1.0), vec2(1.0), _GLF_IDENTITY(mat2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(1.0))), mat2(1.0)), _GLF_struct_10(bvec3(true), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), clamp(max(vec4(1.0), vec4(1.0)), _GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), (max(vec4(1.0), vec4(1.0))) * vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(max(vec4(1.0), vec4(1.0)), vec4(1.0, 1.0, 1.0, 1.0) * (max(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), vec4(1.0))), vec4(1.0)))))))), _GLF_struct_11(uvec4(1u), 1, uvec3(1u), uvec4(1u), mat2x4(1.0), ivec2(1))), mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5916.2248) : _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-0.6)), bool(false))), 1.0))))), mat4x3(1.0), _GLF_struct_14(_GLF_struct_13(1, mat2x4(1.0), mat4x3(1.0), uvec4(1u), vec3(1.0)), uvec2(1u), 1u, 1, mat2x3(1.0), ivec3(1)), atomicLoad(buf[virtual_gid], 4, 64, 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), true, true))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false || (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) || false)))))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), false || _GLF_IDENTITY((! (! (false))), bool(bvec2((! (! (false))), true))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, false)))) && true)))))), true, true))) && true)), ((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) || false), false || (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false))))) && true))))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))))), _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, false)))) && true), (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, false)))) && true)) && true)))))), true, true))) && true))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) - 0), 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) || false)), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))) && true))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, _GLF_IDENTITY(0u, max(0u, 0u)))))], uint(_GLF_struct_replacement_15.read_1 == read_2) + 1, 4, 64, 4);
}
