#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
      {
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(bool((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(bool((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false))))
        {
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(length(vec3(0.0, 0.0, 0.0))))))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            continue;
          }
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
           for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               return;
               if(_GLF_DEAD(false))
                break;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(845.748, 89.34)) : injectionSwitch)).x > injectionSwitch.y))));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) && true), true && (bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) && true)), bool(bvec4(! (! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), _GLF_IDENTITY(true, bool(bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) && true), true && (bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))));
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y))), true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                return;
               return;
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), false, false))))))
              {
              }
             else
              {
               return;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
                return;
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), 1.0), transpose(transpose(mat3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.6)), float(0.0), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), (bool(true)) || false), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), max(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), _GLF_IDENTITY(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), (_GLF_IDENTITY(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), (true ? _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)) : _GLF_FUZZED(vec4(0.7, -1.3, -0.6, -730.265))))) - vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))))), (false ? _GLF_FUZZED(acosh(-9545.9736)) : min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))), mix(vec2(_GLF_FUZZED(-72.33), _GLF_FUZZED(0.9)), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0], clamp((vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0])), (vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[1]), bvec2(true, true)))), max(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))), mix(vec2(_GLF_FUZZED(-72.33), _GLF_FUZZED(0.9)), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0], clamp((vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0])), (vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[1]), bvec2(true, true)))), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))), mix(vec2(_GLF_FUZZED(-72.33), _GLF_FUZZED(0.9)), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0], clamp((vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0], (vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[0])), (vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0))))[1]), bvec2(true, true))))))), 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164))))))))))), log(1.0), 1.0))))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), log(1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))), transpose(transpose(mat3(injectionSwitch.y, abs(1.0), 0.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.6)), float(0.0), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), (bool(true)) || false))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(acosh(-9545.9736)) : min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0), (_GLF_IDENTITY(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), _GLF_IDENTITY(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), vec4(_GLF_IDENTITY(mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(347.090, -162.639, 336.200, 316.723, -923.481, 42.57, -9.6, 1.2, -72.93, -48.27, -8067.1597, 84.22, 9204.4586, 4967.9614, -4.3, -7.2)) : mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), (false ? _GLF_FUZZED(vec4(681.981, -7.2, 25.92, 76.07)) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, _GLF_IDENTITY(7786.7164, min(7786.7164, 7786.7164)))))))))), 1.0 * (false ? _GLF_FUZZED(acosh(-9545.9736)) : min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0), (_GLF_IDENTITY(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), _GLF_IDENTITY(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), vec4(_GLF_IDENTITY(mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(347.090, -162.639, 336.200, 316.723, -923.481, 42.57, -9.6, 1.2, -72.93, -48.27, -8067.1597, 84.22, 9204.4586, 4967.9614, -4.3, -7.2)) : mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), (false ? _GLF_FUZZED(vec4(681.981, -7.2, 25.92, 76.07)) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, _GLF_IDENTITY(7786.7164, min(7786.7164, 7786.7164)))))))))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(acosh(-9545.9736)) : min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0), (_GLF_IDENTITY(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), _GLF_IDENTITY(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), vec4(_GLF_IDENTITY(mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(347.090, -162.639, 336.200, 316.723, -923.481, 42.57, -9.6, 1.2, -72.93, -48.27, -8067.1597, 84.22, 9204.4586, 4967.9614, -4.3, -7.2)) : mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), (false ? _GLF_FUZZED(vec4(681.981, -7.2, 25.92, 76.07)) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, _GLF_IDENTITY(7786.7164, min(7786.7164, 7786.7164)))))))))), 1.0 * (false ? _GLF_FUZZED(acosh(-9545.9736)) : min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0), (_GLF_IDENTITY(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), _GLF_IDENTITY(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), vec4(_GLF_IDENTITY(mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(347.090, -162.639, 336.200, 316.723, -923.481, 42.57, -9.6, 1.2, -72.93, -48.27, -8067.1597, 84.22, 9204.4586, 4967.9614, -4.3, -7.2)) : mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), (false ? _GLF_FUZZED(vec4(681.981, -7.2, 25.92, 76.07)) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, _GLF_IDENTITY(7786.7164, min(7786.7164, 7786.7164)))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(acosh(-9545.9736)) : min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0), (_GLF_IDENTITY(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), _GLF_IDENTITY(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), vec4(_GLF_IDENTITY(mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(347.090, -162.639, 336.200, 316.723, -923.481, 42.57, -9.6, 1.2, -72.93, -48.27, -8067.1597, 84.22, 9204.4586, 4967.9614, -4.3, -7.2)) : mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), (false ? _GLF_FUZZED(vec4(681.981, -7.2, 25.92, 76.07)) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, _GLF_IDENTITY(7786.7164, min(7786.7164, 7786.7164)))))))))), 1.0 * (false ? _GLF_FUZZED(acosh(-9545.9736)) : min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0), (_GLF_IDENTITY(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), _GLF_IDENTITY(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), vec4(_GLF_IDENTITY(mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(347.090, -162.639, 336.200, 316.723, -923.481, 42.57, -9.6, 1.2, -72.93, -48.27, -8067.1597, 84.22, 9204.4586, 4967.9614, -4.3, -7.2)) : mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), (false ? _GLF_FUZZED(vec4(681.981, -7.2, 25.92, 76.07)) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, _GLF_IDENTITY(7786.7164, min(7786.7164, 7786.7164)))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164))))), _GLF_IDENTITY(min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(acosh(-9545.9736)) : min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0), (_GLF_IDENTITY(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), _GLF_IDENTITY(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), vec4(_GLF_IDENTITY(mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(347.090, -162.639, 336.200, 316.723, -923.481, 42.57, -9.6, 1.2, -72.93, -48.27, -8067.1597, 84.22, 9204.4586, 4967.9614, -4.3, -7.2)) : mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), (false ? _GLF_FUZZED(vec4(681.981, -7.2, 25.92, 76.07)) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, _GLF_IDENTITY(7786.7164, min(7786.7164, 7786.7164)))))))))), 1.0 * (false ? _GLF_FUZZED(acosh(-9545.9736)) : min(float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0), 0.0), (_GLF_IDENTITY(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), _GLF_IDENTITY(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), vec4(_GLF_IDENTITY(mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(347.090, -162.639, 336.200, 316.723, -923.481, 42.57, -9.6, 1.2, -72.93, -48.27, -8067.1597, 84.22, 9204.4586, 4967.9614, -4.3, -7.2)) : mat4(vec4(vec4(true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)))), 1.0, log(1.0), tan(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))))), float(_GLF_IDENTITY(vec4(injectionSwitch.y, 1.0, 0.0, 0.0), (true ? vec4(injectionSwitch.y, 1.0, 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, 7786.7164)), (false ? _GLF_FUZZED(vec4(681.981, -7.2, 25.92, 76.07)) : _GLF_FUZZED(vec4(11.14, -8.6, 2009.0821, _GLF_IDENTITY(7786.7164, min(7786.7164, 7786.7164))))))))))))))))))), log(1.0), 1.0))))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
              break;
             return;
            }
           return;
          }
         for(int _injected_loop_counter = _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
      return;
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      break;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 & 1) & 1)); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), 1.0, 0.0, exp(0.0), 0.0, cos(0.0)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) && true))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) && true))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) && true))))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), (((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) - 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 else
  {
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[1], (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(29411u) : gl_NumWorkGroups[1])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), 0u + (_GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY(gl_NumWorkGroups[1], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[1], (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[1]) << 0u)) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(gl_NumWorkGroups[1], (gl_NumWorkGroups[1]) - (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))) - 0u), _GLF_IDENTITY(gl_NumWorkGroups[2], uint(uint(gl_NumWorkGroups[2]))))).x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true && (true))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), false || (! (((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), false || (! (((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), false || (! (((injectionSwitch.x > injectionSwitch.y)))))))))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), false || (! (((injectionSwitch.x > injectionSwitch.y)))))))))), true, false, true))))), true, false, true)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, true, false, false)))) || false))), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), false || (! (((injectionSwitch.x > injectionSwitch.y)))))))))), true, false, true))))))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), true && (! (_GLF_IDENTITY(true, false || (true)))))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))).x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))))))
  {
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ _GLF_IDENTITY(0, 1 * (0)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) + 0))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), false)))))))))))))), false, false, true)))), (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-152.208, 735.713)) : injectionSwitch)))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), abs(1.0), 0.0, 1.0, 1.0, 1.0), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), abs(1.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat3x2(9.8, -0.5, -191.660, -2.8, -96.98, -878.712))))), float(mat2(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), abs(1.0), 0.0, 1.0, 1.0, 1.0), (true ? mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), abs(1.0), 0.0, 1.0, 1.0, 1.0) : _GLF_FUZZED(mat3x2(9.8, -0.5, -191.660, -2.8, -96.98, -878.712))))), 1.0, 0.0, 1.0)))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)), true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), false)))))))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), subgroup_size)) + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1)))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(23209))))), 64, _GLF_IDENTITY(4, (4) / 1));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(6466.0933)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(6466.0933)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x))), float(_GLF_FUZZED(-46.61)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(6466.0933)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)]), bvec2(true, true))).x), (clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(7.5), min(_GLF_FUZZED(_GLF_IDENTITY(7.5, (7.5) / 1.0)), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(7.5, min(7.5, _GLF_IDENTITY(7.5, mix(float(_GLF_FUZZED(6.6)), float(7.5), bool(true)))))), min(_GLF_FUZZED(7.5), _GLF_FUZZED(7.5))))), _GLF_FUZZED(6466.0933)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x)) + 0.0))) * 1.0) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), float(mat3x2(min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-289.510)), float(0.0), bool(true)))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0)), 0.0)))), sqrt(0.0))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), float(mat3x2(min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-289.510)), float(0.0), bool(true)))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0)), 0.0)))), sqrt(0.0))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), float(mat3x2(min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-289.510)), float(0.0), bool(true)))), 0.0, 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0)), 0.0)))), sqrt(0.0))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), false))))), true && (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(909.497, 53.39, -8.1, 5.9)) : mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))))).x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0)))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(909.497, 53.39, -8.1, 5.9)) : mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))))).x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0)))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(909.497, 53.39, -8.1, 5.9)) : mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0))))).x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, tan(0.0) + (0.0)), 0.0)), _GLF_IDENTITY(sqrt(0.0), (true ? sqrt(0.0) : _GLF_FUZZED(6180.3683))))), max(float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), max(0.0, 0.0)))), injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0))), float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))), max(0.0, 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(450.983) : _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-45.90) : 0.0)), 0.0)), 0.0)), sqrt(0.0))), max(float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), min(0.0, 0.0)), sqrt(0.0))), float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) || false))), false, false))))), bvec2(bvec3(bvec2(bvec4(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) / 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))), false, false)), false)))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false, true, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! (! ((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false, true, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false, true, _GLF_IDENTITY(true, false || _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4(-5.4, -2.7, 6049.0213, 8.0, 21.78, -55.81, -2.6, 0.4, 80.63, 8.6, -35.18, -1.9, 2.0, 25.76, 4.4, -967.046)) : mat4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), injectionSwitch.y)))), false, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), ! (! (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat2(vec2(injectionSwitch), 1.0, 0.0))))).x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(-6.7)), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(2154.1635), _GLF_FUZZED((false ? -2.4 : 9421.5138))), vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(6.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.2) : _GLF_FUZZED(6.0))), _GLF_FUZZED(-6.7)))[_GLF_IDENTITY(0, clamp(0, 0, 0))], (vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(4.6, 54.76)))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))), _GLF_IDENTITY(min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch)))), min(min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch)))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch)))))))[1]), bvec2(true, true))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(-6.7)), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(2154.1635), _GLF_FUZZED((false ? -2.4 : 9421.5138))), vec2((vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(-6.7)))[0], (vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(4.6, 54.76)))), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0))))], (injectionSwitch)[1]), bvec2(true, true))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(-6.7)), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(6.0), (_GLF_IDENTITY(_GLF_FUZZED(6.0), (_GLF_FUZZED(6.0)) + 0.0)) / 1.0), _GLF_FUZZED(-6.7)), mix(vec2(_GLF_FUZZED(2154.1635), _GLF_IDENTITY(_GLF_FUZZED((false ? -2.4 : 9421.5138)), clamp(_GLF_FUZZED((false ? -2.4 : 9421.5138)), _GLF_IDENTITY(_GLF_FUZZED((false ? -2.4 : 9421.5138)), (_GLF_FUZZED((false ? -2.4 : 9421.5138))) - 0.0), _GLF_FUZZED((false ? -2.4 : 9421.5138))))), vec2((vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(-6.7)))[0], (vec2(_GLF_FUZZED(6.0), _GLF_FUZZED(-6.7)))[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(4.6, 54.76)))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), min(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, 1.0), mix(vec4((vec4(injectionSwitch, 1.0, 1.0))[0], _GLF_FUZZED(-6.8), (vec4(injectionSwitch, 1.0, 1.0))[2], _GLF_FUZZED(-8.0)), vec4(_GLF_FUZZED(-0.6), (vec4(injectionSwitch, 1.0, 1.0))[1], _GLF_FUZZED(-233.074), (vec4(injectionSwitch, 1.0, 1.0))[3]), bvec4(false, true, false, true))))))))[1]), bvec2(true, true))).x), float(_GLF_FUZZED(40.96)), bool(false))) > injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(false)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), true), true, false)))))))))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))) || false))) || false))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || (false)), true)), (bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true))) && true))) && true)))
                {
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                    {
                     return;
                     if(_GLF_DEAD(false))
                      break;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                return;
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)), _GLF_IDENTITY(! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), clamp(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0, 0.0, 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 1.0, 0.0, 0.0, 0.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), (float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))) / 1.0), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), (float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), (float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))) / 1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))), (float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat3(mat3x4(mat3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))) / 1.0)))))))), true, false)))), (_GLF_IDENTITY(! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, _GLF_IDENTITY(bool(bvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, true)), (bool(bvec2((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)))), (! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))) && true)) && true)))))))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))), ((injectionSwitch.x > injectionSwitch.y)) || false)), (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y), ((injectionSwitch.x > injectionSwitch.y)) || false))) || false)))) || _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))
            {
            }
           else
            {
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)))], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, (true ? 4 : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(17907), (_GLF_FUZZED(17907)) + 0), 0 ^ (_GLF_FUZZED(17907))), 0 + (_GLF_IDENTITY(_GLF_FUZZED(17907), _GLF_IDENTITY(0, (0) ^ (0 ^ 0)) ^ (_GLF_FUZZED(17907))))))), 64, 4);
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), bool(bvec4(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                        continue;
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))));
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = (0 & 27962); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              continue;
            }
          }
         return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              break;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
             do
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat3x4(0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), (float(mat3x4(0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))) / 1.0)) * 1.0)), 0.0, 0.0, 0.0)), (vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))) * vec2(1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y))))))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     return;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))))
    return;
  }
}
