#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), 1.0, 0.0, 0.0, 0.0, 1.0))))), injectionSwitch.y, injectionSwitch.y)), 1.0 * (injectionSwitch.y)), injectionSwitch.y)), bool(_GLF_IDENTITY(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 1.0))))), injectionSwitch.y, injectionSwitch.y)), 1.0 * (injectionSwitch.y)), injectionSwitch.y))), (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 1.0))))), injectionSwitch.y, injectionSwitch.y)), 1.0 * (injectionSwitch.y)), injectionSwitch.y)))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))))))), bool(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) && true))))), true), true, false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true), true, false)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true), true, false)), false), bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true), true, false)), false)))), true))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true), true, false)), false)))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), ! _GLF_IDENTITY((! (! (! (false)))), bool(bvec4((! (! (! (false)))), true, false, true)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && ((false)))), ! (! (! (! (false))))), true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), true), true, false)), false)))))) && true))))))))))), (! (false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), true, false), true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) * 1u), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED(uvec3(76441u, 18533u, 1805u)[0]) : _GLF_IDENTITY((~ (0u)), 0u | ((~ (0u))))))), 0u)))), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) * 1u), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ (0u)), (false ? _GLF_FUZZED(uvec3(76441u, 18533u, 1805u)[0]) : _GLF_IDENTITY((~ (0u)), 0u | ((~ (0u))))))), 0u)))), 0u, 0u) : _GLF_FUZZED(uvec3(150387u, 163528u, 185296u))))).x, _GLF_IDENTITY((gl_NumWorkGroups.x) << 0u, clamp((gl_NumWorkGroups.x) << 0u, (gl_NumWorkGroups.x) << 0u, (gl_NumWorkGroups.x) << 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-68614), 0 ^ (_GLF_FUZZED(-68614))) : 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.2) : injectionSwitch.x)) > injectionSwitch.y))) || false)), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true))) || false))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      break;
     if(_GLF_DEAD(false))
      return;
     continue;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     break;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) / 1u), uint(uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) / 1u), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | 0u), max(subgroup_id, subgroup_id)) * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | 0u), max(subgroup_id, subgroup_id)) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | 0u), max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | 0u), max(subgroup_id, subgroup_id)) * subgroup_size)))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | ((subgroup_id * subgroup_size) | (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), subgroup_id * subgroup_size)) + subgroup_local_id, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) << (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) / 1u), uint(uvec4(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), clamp(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), min(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), min(0u >> _GLF_IDENTITY(uint(8u), uint(8u)), 0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) >> 0u)))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), (0u | (subgroup_id)) / 1u))) | 0u), max(subgroup_id, subgroup_id)) * subgroup_size, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | 0u), max(subgroup_id, subgroup_id)) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | 0u, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | 0u, ((_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | 0u) >> 0u), (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | 0u))), max(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id))) | 0u), max(subgroup_id, subgroup_id)) * subgroup_size)))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | _GLF_IDENTITY((0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 0u | ((subgroup_id * subgroup_size) | (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), subgroup_id * subgroup_size)) + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> (0 | 0)), _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (false ? _GLF_FUZZED(20225) : _GLF_IDENTITY((~ (1)), _GLF_IDENTITY(int(ivec4((~ (1)), 1, 0, 0)), (int(ivec4((~ (1)), 1, 0, 0))) | (int(ivec4((~ (1)), 1, 0, 0))))))))))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, clamp(0 | 0, 0 | 0, _GLF_IDENTITY(0 | 0, int(ivec2(0 | 0, 0)))))), (_GLF_IDENTITY((0 | 0), min((0 | 0), (0 | 0)))) ^ 0), (true ? (0 | 0) : _GLF_FUZZED(35012)))), 1))) % subgroup_size, (true ? (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY((0 | 0), 0 ^ ((0 | 0)))), 1))) % subgroup_size : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) >> (0 | 0)), 1)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 | 0)), (false ? _GLF_FUZZED(-56869) : _GLF_IDENTITY(1, (1) >> (0 | 0)))), _GLF_IDENTITY(1, (1) >> (0 | 0)), _GLF_IDENTITY(1, (1) >> (0 | 0)))), 1))), clamp((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 | 0)), (false ? _GLF_FUZZED(-56869) : _GLF_IDENTITY(1, (1) >> (0 | 0)))), _GLF_IDENTITY(1, (1) >> (0 | 0)), _GLF_IDENTITY(1, (1) >> (0 | 0)))), 1))), (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 | 0)), (false ? _GLF_FUZZED(-56869) : _GLF_IDENTITY(1, (1) >> (0 | 0)))), _GLF_IDENTITY(1, (1) >> (0 | 0)), _GLF_IDENTITY(1, (1) >> (0 | 0)))), 1))), (subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 | 0)), (false ? _GLF_FUZZED(-56869) : _GLF_IDENTITY(1, (1) >> (0 | 0)))), _GLF_IDENTITY(1, (1) >> (0 | 0)), _GLF_IDENTITY(1, (1) >> (0 | 0)))), 1))))), ~ (~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(0, min(0, 0)) | (~ (1)))))) >> (0 | 0)), 1))))))))) % subgroup_size)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, true))), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false))), (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))) || false))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), ! (! (true))), true))), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false))), (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, true))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, true, false))))))), true)))))))) && true)))), true, true, _GLF_IDENTITY(false, (false) || false))))) || false)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(false, true, true))), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true))))))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), false)), false))), false)))))), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), false))), (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(3.4, (3.4) + 0.0)))) < injectionSwitch.y))), false)))) || false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true))), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false))), (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), true)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))))))))), true, true, false)))) || false))))), ((! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (! (true))), true))), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false))), (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)), true)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false)))))))))), true, true, false)))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) << 0), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true))), true && (! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-594.503)), float(injectionSwitch.y), bool(true)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1)))))) << 0u, uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1)))))) << 0u, 1u), uvec2(uvec4(uvec2((_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1)))))) << 0u, 1u), 1u, 0u)))))) == read_2, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(read_2, 0u, 0u)), 0u + (uint(uvec3(read_2, 0u, 0u))))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))) - _GLF_IDENTITY(0u, uint(uint(0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, (read_2) ^ 0u), 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u), 1u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))), clamp((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))), ((_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))))) - 0u))))))) - _GLF_IDENTITY(0u, uint(uint(0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u), 1u, 1u, 0u))) ^ 0u), 0u + (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))), (false ? _GLF_FUZZED(num_workgroup) : (_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))))))))) >> 0u) - _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) << _GLF_IDENTITY(0u, min(0u, 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u), 1u, 1u, 0u))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))) - _GLF_IDENTITY(0u, uint(uint(0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(read_2, 0u, 0u)), ~ (~ (uint(uvec3(read_2, 0u, 0u))))))))) - _GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, (read_2) ^ 0u), 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, (read_2) ^ 0u), 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))))))) ^ 0u) - _GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 1u * (read_2)), _GLF_IDENTITY(uint(uvec3(read_2, 0u, 0u)), (uint(uvec3(read_2, 0u, 0u))) | 0u)), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec3(read_2, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(read_2, 0u, 0u)))))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY(uint(uvec2(uint(uint(0u)), 0u)), uint(uvec2(_GLF_IDENTITY(uint(uvec2(uint(uint(0u)), 0u)), (true ? uint(uvec2(uint(uint(0u)), 0u)) : _GLF_FUZZED(next_virtual_gid))), 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))) - _GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u), 1u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uint(read_2))), uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u), 1u, 1u, 0u))) ^ 0u), 0u + (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) << _GLF_IDENTITY(0u, min(0u, 0u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) << _GLF_IDENTITY(0u, min(0u, 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) << _GLF_IDENTITY(0u, min(0u, 0u))))))) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) << _GLF_IDENTITY(0u, min(0u, 0u)))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) << _GLF_IDENTITY(0u, min(0u, 0u)))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u), 1u, 1u, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(read_2, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(uint(uvec3(read_2, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), (uint(uvec3(read_2, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))) >> 0u)) >> 0u))))) - _GLF_IDENTITY(0u, uint(uint(0u))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, _GLF_IDENTITY(0u, 0u | (0u)), 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | (0u)), uint(uint(0u))), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, (read_2) ^ 0u), 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY(0u, uint(uint(0u)))) | (_GLF_IDENTITY(0u, uint(uint(0u)))))) ^ 0u), 1u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(read_2, 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(read_2, 0u, 0u)), 0u | (uint(uvec3(read_2, 0u, 0u))))) >> 0u))))) - _GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u)))) / 1u)) ^ 0u), 1u, 1u, 0u))) ^ 0u), 0u + (uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) << _GLF_IDENTITY(0u, min(0u, 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) | (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))))) - _GLF_IDENTITY(0u, uint(uint(0u)))) ^ 0u), 1u, 1u, 0u)))))))))), max(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u)))) - 0u), _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(read_2, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(uint(uvec3(read_2, 0u, 0u)), (uint(uvec3(read_2, 0u, 0u))) >> 0u), 0u, 1u, 1u))))))) - _GLF_IDENTITY(0u, min(0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | 0u), (true ? read_2 : _GLF_FUZZED(subgroup_id))))), true)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(read_1 == read_2, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(read_1 == read_2, true), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(read_1 == read_2, true), bvec2(bvec3(bvec2(read_1 == read_2, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ! (! ((true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), false))), true))))))), true))))) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (64) * 1), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) && true, bool(bvec2(((false)) && true, false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-1.3 * -5.0))), bool(false))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(186.397, -0.2, -7.0, 2.8).w), _GLF_FUZZED(-84.65)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-73.88))))))), false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
