#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.5)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(677.990)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), bool(true))), 1.0 * (injectionSwitch.x))))), bool(true))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))) / 1.0) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))) / 1.0) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))) / 1.0) > injectionSwitch.y))), true, false)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(821.964), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(5.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-2.0, -267.219, -4.5, 29.52)))), (_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))) + mat2(0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), (true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), clamp(vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), vec2(mat4x3(injectionSwitch, cos(length(vec3(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)) || false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (! _GLF_IDENTITY((true), ! (! ((true))))))) || false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), bool(bvec2((true), false)))))) || false)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-291.643))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-74.62, 4012.9766)))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true))))) || (bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(vec4(injectionSwitch[1], 1.0, 1.0, 1.0))))).y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))), false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))))), _GLF_IDENTITY((subgroup_id * subgroup_size), min(_GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / 1u), (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))) * subgroup_size))) / 1u) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), ~ (~ (~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1))))) - 0)), int(_GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), ~ (~ (~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1))))) - 0)), 1, 1, 0), (ivec4(~ (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), ~ (~ (~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1))))) - 0)), 1, 1, 0)) << ivec4(0, 0, 0, 0)))))))) % subgroup_size, _GLF_IDENTITY(min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size), (min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)) - 0u))), 0u ^ ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1, ~ (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), ~ (~ (~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1))))) - 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1, ~ (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), ~ (~ (~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1))))) - 0)))), 0 ^ ((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1, ~ (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1), ~ (~ (~ (false ? _GLF_IDENTITY(_GLF_FUZZED(57650), (_GLF_FUZZED(57650)) >> 0) : 1))))) - 0))))))) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))))) % subgroup_size, _GLF_IDENTITY(min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), _GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u), (true ? uvec4(subgroup_local_id, 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), 1u) : _GLF_FUZZED(uvec4(19669u, 146490u, 165648u, 179714u)))))))) + 1) % subgroup_size), (min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)) - 0u))))), 0u | (((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)) | (next_virtual_gid)))), (next_virtual_gid) - 0u)], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.2))), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(4.2))), injectionSwitch.x, injectionSwitch.x)) - 0.0)) > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | ((0))) | (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) - (1 ^ 1)), 0))))))))))) + 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) + 1, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | 0, ((4) | 0) >> 0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), true, false)), true))), true)))))) || (bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false)))), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), true), true, false)), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, false)), true))), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, false)), true))), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, false)), true))), true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, false)), true))), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, false)), true))), true)))))), false))))))))) || (bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false)))), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true), bvec3(bvec3(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))))))) || false), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(9.9)), float(mat3(float(_GLF_FUZZED(9.9)), 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.1) : 0.0)), 0.0)), 0.0, 0.0))), mix(float(_GLF_FUZZED(60.38)), float(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(9.9, (9.9) - 0.0))), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(9.9)), (float(_GLF_FUZZED(9.9))) + 0.0) : _GLF_IDENTITY(_GLF_FUZZED(759.014), clamp(_GLF_FUZZED(759.014), _GLF_IDENTITY(_GLF_FUZZED(759.014), _GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(759.014), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0)))), vec2(0.0, 0.0) + (max(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (vec2(0.0, 0.0))))))), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, _GLF_IDENTITY(round(length(normalize(1.0))), min(round(length(normalize(1.0))), round(length(normalize(1.0))))))), clamp(float(mat2x3(_GLF_FUZZED(759.014), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, cos(0.0), 1.0), mat3(1.0) * (vec3(1.0, cos(0.0), 1.0))))), 1.0))), 1.0, round(length(normalize(1.0))))), _GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(759.014), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0), (false ? _GLF_FUZZED((mat3x4(-2545.5858, 6965.9336, -12.44, -40.71, 6.7, -3.8, -3.9, 32.58, 6894.7609, 0.4, -18.81, -7288.9488))) : _GLF_IDENTITY(mat3x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3x4(21.30, 267.762, 9705.0260, 1.4, 4.6, 7901.1704, 8.5, -7.5, 2.8, 1676.1757, -5.8, 8.7)) : mat3x4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, abs(0.0), sin(0.0), 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0))))))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), sqrt(1.0) * ((1.0))) + 0.0), 1.0))))), 1.0, round(_GLF_IDENTITY(length(normalize(1.0)), _GLF_IDENTITY(float(mat4x3(length(_GLF_IDENTITY(normalize(1.0), (_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(-347.560)), float(_GLF_IDENTITY(normalize(1.0), clamp(normalize(1.0), normalize(1.0), normalize(1.0)))), bool(true)))) - 0.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 1.0, 1.0)), 0.0 + (float(mat4x3(length(normalize(1.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 1.0, 1.0)))))))), min(_GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(759.014), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))), 1.0, round(_GLF_IDENTITY(length(normalize(1.0)), _GLF_IDENTITY(float(mat4x3(length(normalize(1.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(mat4(cos(0.0), 1.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, sqrt(0.0), 1.0, round(length(normalize(abs(vec2(1.0, 1.0))))), 0.0, 0.0, sin(0.0))), mix(float(_GLF_IDENTITY(float(mat4(cos(0.0), 1.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, sqrt(0.0), 1.0, round(length(normalize(abs(vec2(1.0, 1.0))))), 0.0, 0.0, sin(0.0))), min(float(mat4(cos(0.0), 1.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, sqrt(0.0), 1.0, round(length(normalize(abs(vec2(1.0, 1.0))))), 0.0, 0.0, sin(0.0))), float(mat4(cos(0.0), 1.0, 0.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0, sqrt(0.0), 1.0, round(length(normalize(abs(vec2(1.0, 1.0))))), 0.0, 0.0, sin(0.0)))))), float(_GLF_FUZZED(46.73)), bool(false)))), _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 1.0, 1.0, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(0.0 + (float(mat4x3(length(normalize(1.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 + (float(mat4x3(length(normalize(1.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 1.0, 1.0))) : _GLF_FUZZED(trunc(-6474.5836))))))))), (float(mat2x3(_GLF_FUZZED(759.014), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))), 1.0, round(_GLF_IDENTITY(length(normalize(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(length(normalize(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 1.0, 1.0, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 1.0, 1.0)), float(vec3(float(mat4x3(length(normalize(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 1.0, 1.0, 1.0, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 1.0, 1.0)), 1.0, 0.0))), 0.0 + (float(mat4x3(length(normalize(1.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 1.0, 1.0))))))))) / abs(1.0)), float(mat2x3(_GLF_FUZZED(759.014), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))))), 1.0, round(_GLF_IDENTITY(length(normalize(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(33.02) : _GLF_IDENTITY(1.0, (1.0) / 1.0))))), _GLF_IDENTITY(float(mat4x3(length(normalize(1.0)), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), float(_GLF_FUZZED(float(14942u))), bool(false))), cos(0.0), 1.0, 1.0, 1.0, determinant(mat2(0.0, exp(0.0), 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)) + (float(mat4x3(_GLF_IDENTITY(length(normalize(1.0)), clamp(_GLF_IDENTITY(length(normalize(1.0)), (length(normalize(1.0))) / 1.0), length(normalize(1.0)), _GLF_IDENTITY(length(normalize(1.0)), (length(normalize(1.0))) - 0.0))), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 1.0, 1.0, 1.0, determinant(mat2(0.0, exp(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, 1.0)))))))))), _GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(759.014), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, round(length(normalize(1.0))))), clamp(float(mat2x3(_GLF_FUZZED(759.014), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, round(length(normalize(1.0))))), float(mat2x3(_GLF_FUZZED(759.014), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), 1.0 * (dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, round(length(normalize(1.0))))), float(mat2x3(_GLF_FUZZED(759.014), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, round(length(normalize(1.0)))))))))), _GLF_FUZZED(759.014)))))), bool(true))), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))), false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.4 + -1.9))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), bool(true))) < injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))) || false)))))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))) || ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))) || false)), ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false)))), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), false), true))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), false))))), _GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))))))))))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0)))), mix(vec2(_GLF_FUZZED(8.1), (vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0)))))[1]), vec2(_GLF_IDENTITY((vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0)))))[0], clamp((vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0)))))[0], (vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), max(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0))), vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)), 1.0, 1.0)))))[0])), _GLF_FUZZED(-1.8)), bvec2(true, false)))))[0], _GLF_FUZZED(8398.5332)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true)))))).y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(1520.6780, clamp(1520.6780, _GLF_IDENTITY(1520.6780, mix(float(1520.6780), float(_GLF_FUZZED(9173.0148)), bool(false))), _GLF_IDENTITY(1520.6780, float(mat2x4(1520.6780, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(7059.3146), (true ? _GLF_FUZZED(7059.3146) : _GLF_FUZZED(-9207.3027)))), bvec2(true, false))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-9.8)), bool(false))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-9.8)), bool(false))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-9.8)), bool(false))) > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}
