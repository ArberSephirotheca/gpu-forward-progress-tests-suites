#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-0.0) : injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter))), 0 ^ (_GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(_injected_loop_counter)))))) | 0))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     for(int _injected_loop_counter = (0 & _GLF_IDENTITY(54442, (true ? 54442 : _GLF_FUZZED(-59014)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)) || false)); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_13_1_1_6num_workgroupread_1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false)))))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))) || false))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), false, true, false)))))))))
    barrier();
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), true))));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)) && true))));
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = (0 & 69841); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)), 0 | ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), min(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-72.73)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7866.6363) : injectionSwitch.x)), injectionSwitch.x))) / 1.0) > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false))), false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), false))), false)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false), bvec2(bvec2(bvec2(false, false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false)))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true))))))))) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))), false)))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true))))))))) || false))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true)))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true))))))))) || false))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), _GLF_IDENTITY((false) || false, ((false) || false) && true))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))); _injected_loop_counter --)
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                barrier();
              }
             else
              {
              }
            }
          }
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   GLF_merged2_0_1_13_1_1_6num_workgroupread_1.x = num_workgroup;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec3(68.19, -3.1, -162.709).z)), float(injectionSwitch.y), bool(true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))), _GLF_IDENTITY(uvec3(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))), uvec3(_GLF_IDENTITY(uvec4(uvec3(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))), 0u), (uvec4(uvec3(uvec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)), clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))), 0u)) - uvec4(0u, 0u, 0u, 0u))))))).x;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_injected_loop_counter != 1), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_injected_loop_counter != 1), true, false), bvec3(bvec4(bvec3(! (_injected_loop_counter != 1), true, false), false))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_injected_loop_counter != 1), true, false), bvec3(bvec4(bvec3(! (_injected_loop_counter != 1), true, false), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_injected_loop_counter != 1), true, false), bvec3(bvec4(bvec3(! (_injected_loop_counter != 1), true, false), false))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_injected_loop_counter != 1), true, false), bvec3(bvec4(bvec3(! (_injected_loop_counter != 1), true, false), false))))))), true))))))))))) || false); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false))))))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true))))), true && (false))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (int(0)) | (int(0))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))
      barrier();
     barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, false))) || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2(injectionSwitch.y, 1.0, 1.0, 0.0), (mat2(injectionSwitch.y, 1.0, 1.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y) / exp(0.0))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), false, true, true))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (false) && true))) && true) || false)))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) : _GLF_FUZZED(subgroup_size))))) + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, ~ (~ (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))))))) != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(determinant(mat2(1.0, 0.0, 0.0, 1.0))), sqrt(1.0), 0.0, 1.0, 1.0, round(length(normalize(sqrt(vec3(1.0, 1.0, 1.0))))), 1.0, determinant(mat4(0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, round(length(normalize(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), false || (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), false || (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), false || (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(215.126)), bvec2(true, false))), injectionSwitch)), (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-45.23)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y))), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-7.1) : _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, exp(0.0), sin(0.0), 1.0))))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_id * subgroup_size, 0u, 0u, 0u), min(uvec4(subgroup_id * subgroup_size, 0u, 0u, 0u), uvec4(subgroup_id * subgroup_size, 0u, 0u, 0u))))) + (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), 0u)))) << 0u) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))) || false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))))))) || false))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))) || false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, tan(length(vec3(0.0, 0.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))) || false))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))) || false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(bvec2(false, false))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))) || false)), ! (! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4816.6836)), bool(false))), 0.0, 0.0, log(1.0)), transpose(transpose(mat2x3(injectionSwitch, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4816.6836)), bool(false))), 0.0, 0.0, log(1.0))))))).y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, sqrt(0.0), 1.0, abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 1.0, 0.0, determinant(mat4(cos(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mat3(injectionSwitch, sqrt(0.0), 1.0, abs(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 0.0, 1.0, 0.0, determinant(mat4(cos(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) * mat3(1.0)))).y, true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bool(! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, uint(uvec3(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(min(next_virtual_gid, next_virtual_gid), ~ (~ (min(next_virtual_gid, next_virtual_gid))))), 0u, 1u))), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - ((_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), _GLF_IDENTITY(~ (0u), uint(uvec4(~ (0u), 0u, 1u, 0u))))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (_GLF_IDENTITY(5u, (5u) | (5u)))))))), _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))))) && true) && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u)))))) | 0u) : _GLF_FUZZED(uint(_GLF_IDENTITY(_GLF_IDENTITY(-73660, int(int(-73660))), (_GLF_IDENTITY(-73660, int(int(-73660)))) << 0))))), _GLF_IDENTITY(((next_virtual_gid) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))))))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true)))) && true)))), true), true)))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), _GLF_IDENTITY(true, ! (! (true)))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67175)))])).y)), true), true))))) && true)))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u))))) << 0u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u)) ^ uvec2(0u, 0u)), uvec2(0u, 0u))))) << 0u))))) : _GLF_FUZZED(uint(_GLF_IDENTITY(-73660, int(int(-73660)))))))), uint(uvec3(_GLF_IDENTITY(((next_virtual_gid) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))))))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true)))) && true)))), true), true)))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), _GLF_IDENTITY(true, ! (! (true)))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67175)))])).y)), true), true))))) && true)))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u))))) << 0u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u)) ^ uvec2(0u, 0u)), uvec2(0u, 0u))))) << 0u))))) : _GLF_FUZZED(uint(_GLF_IDENTITY(-73660, int(int(-73660)))))))), min(_GLF_IDENTITY(((next_virtual_gid) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))))))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true)))) && true)))), true), true)))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), _GLF_IDENTITY(true, ! (! (true)))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67175)))])).y)), true), true))))) && true)))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u))))) << 0u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u)) ^ uvec2(0u, 0u)), uvec2(0u, 0u))))) << 0u))))) : _GLF_FUZZED(uint(_GLF_IDENTITY(-73660, int(int(-73660)))))))), max(((next_virtual_gid) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))))))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true)))) && true)))), true), true)))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), _GLF_IDENTITY(true, ! (! (true)))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67175)))])).y)), true), true))))) && true)))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u))))) << 0u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u)) ^ uvec2(0u, 0u)), uvec2(0u, 0u))))) << 0u))))) : _GLF_FUZZED(uint(_GLF_IDENTITY(-73660, int(int(-73660)))))))), ((next_virtual_gid) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))))))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true)))) && true)))), true), true)))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), _GLF_IDENTITY(true, ! (! (true)))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67175)))])).y)), true), true))))) && true)))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u))))) << 0u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u)) ^ uvec2(0u, 0u)), uvec2(0u, 0u))))) << 0u))))) : _GLF_FUZZED(uint(_GLF_IDENTITY(-73660, int(int(-73660)))))))))), ((next_virtual_gid) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((true), ! (! ((true)))), true), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false))), false, false))))))))), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(true, (true) && true)))) && true)))), true), true)))), (bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), _GLF_IDENTITY(true, ! (! (true)))), false, true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(67175)))])).y)), true), true))))) && true)))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u))))) << 0u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))) >> 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), uvec2(0u, 0u)))), (uint(_GLF_IDENTITY(uvec2(0u, 0u), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u), (uvec2(_GLF_IDENTITY(0u, (0u) << 0u), 0u)) ^ uvec2(0u, 0u)), uvec2(0u, 0u))))) << 0u))))) : _GLF_FUZZED(uint(_GLF_IDENTITY(-73660, int(int(-73660)))))))))), 1u, 0u))) | ((next_virtual_gid) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED((subgroup_id ++)) : 0u, (true ? false ? _GLF_FUZZED((subgroup_id ++)) : 0u : _GLF_FUZZED(workgroup_size))))), 0u), uvec2(0u, 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(uint(_GLF_IDENTITY(-73660, int(int(-73660)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(-73660, int(int(-73660)))), (uint(_GLF_IDENTITY(-73660, int(int(-73660))))) + 0u)) << _GLF_IDENTITY(0u, (0u) | 0u))))))))) - 0u)))], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), clamp(_GLF_IDENTITY(4, (4) / 1), 4, 4)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) * (1 ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-7645) : 0))))), int(3))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) < 1, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter), 0 | (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))))), _GLF_IDENTITY(0, (0) / 1) | (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_IDENTITY(_GLF_FUZZED((_injected_loop_counter)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED((_injected_loop_counter)) : _GLF_FUZZED(_injected_loop_counter))))))) < 1)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      barrier();
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))) / exp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0)) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), true && (false || (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))), false, false), true)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3))), _GLF_IDENTITY(int(3), (int(3)) | (_GLF_IDENTITY(int(3), ~ (~ (int(3)))))))), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), true))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (false ? _GLF_FUZZED(-98897) : _GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) | (_GLF_IDENTITY(~ (~ (0)), (~ (~ (0))) >> 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & _GLF_IDENTITY(1, (false ? _GLF_FUZZED((-- _injected_loop_counter)) : 1)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(847.730)), bool(false))) : _GLF_FUZZED(1.1)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), ((true)) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), ((true)) || false), true))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((true), ((true)) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((true), ((true)) || false), true))))))))) && (false)), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((false), bool(bvec2((false), true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((false), bool(bvec2((false), true))), (_GLF_IDENTITY(true, true && (true)) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2((false), true))), (bool(bool(bvec2((false), true)))) || false)), (bool(_GLF_IDENTITY(bool(bool(bvec2((false), true))), (bool(bool(bvec2((false), true)))) || false))) || false)))) || false)) || false)), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))) || false, ((_GLF_IDENTITY(true, false || (true))) || false) && true)))))) && (false)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-2.8), max(_GLF_IDENTITY(_GLF_FUZZED(-2.8), float(mat3x4(_GLF_FUZZED(-2.8), 1.0, 1.0, 1.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0))), _GLF_FUZZED(-2.8))))), 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7845.1261)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 1.0)))).y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)))), false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), max(_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 1.0 * (_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(mat3x4(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(3555.8255) : max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (false ? _GLF_FUZZED(15.15) : max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(3.7)), bool(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-5884.6653)), bool(false))))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))) || false)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true, true), bvec3(bvec3(bvec3(false, true, true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec3(bvec3(false, true, true)))))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && true))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (false))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * 1.0), mix(float(_GLF_FUZZED(201.258)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * 1.0)), bool(true)))) - 0.0) > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))))))
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) ^ 0), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) ^ _GLF_IDENTITY(0, ~ (~ (0)))), int(7))) >> _GLF_IDENTITY(int(7), int(7))) << 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(63.31)), bvec2(true, false))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, round(length(normalize(1.0))), 0.0, 1.0)))))))))))) && true))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         else
          {
           barrier();
          }
        }
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(mat4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, sin(0.0), 1.0, sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))) * 1.0), 1.0, 1.0, 0.0, 0.0, tan(0.0), 0.0)), clamp(float(mat4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, sin(0.0), 1.0, sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), determinant(mat4(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(35.35)), bool(false))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(347.237)), bool(false)))), 0.0)), float(mat4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 1.0)), max(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 1.0)))))), 0.0, 0.0, sin(0.0), 1.0, sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, tan(0.0), 0.0)), float(mat4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))), 0.0, 0.0, sin(0.0), 1.0, sqrt(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, tan(0.0), 0.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(67.09) : float(mat3x2(0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))) + (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))), float(_GLF_FUZZED(234.035)), bool(_GLF_IDENTITY(false, true && (false)))))) - 0.0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, _GLF_IDENTITY((2) - 0, (_GLF_IDENTITY(false ? _GLF_FUZZED(ivec2(-14628, _GLF_IDENTITY(-36870, (_GLF_IDENTITY(-36870, 0 + (-36870))) | 0))[0]) : (2) - 0, ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(ivec2(-14628, _GLF_IDENTITY(-36870, (_GLF_IDENTITY(-36870, 0 + (-36870))) | 0))[0]) : (2) - 0), ~ (~ (~ (false ? _GLF_FUZZED(ivec2(-14628, _GLF_IDENTITY(-36870, (_GLF_IDENTITY(-36870, 0 + (-36870))) | 0))[0]) : (2) - 0))))))))) : _GLF_FUZZED(-88122)))))))) | 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3187.1889)), float(injectionSwitch.y), bool(true))))), 1.0), (true ? vec2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3187.1889)), float(injectionSwitch.y), bool(true))))), 1.0) : _GLF_FUZZED(injectionSwitch)))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))), ! (! (bool(bvec3(false, true, false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (bool(false)), _GLF_IDENTITY(bool(bool(true && (bool(false)))), bool(bvec3(bool(bool(true && (bool(false)))), true, false))))), bool(bvec2(bool(_GLF_IDENTITY(true && (bool(false)), bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, false))))) && (bool(false)))))), true))))))), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), true && (bool(false))), true && (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true, ! (! (true))) && (bool(false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), true && (_GLF_IDENTITY(bool(false), true && (bool(false))))))), (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, false || (false))))), true && (_GLF_IDENTITY(bool(false), true && (bool(false)))))))) || false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true && (bool(false))))))), ! (_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true && (bool(false)))))))), ! (! (! (false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec4(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), bool(bvec4(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), false)))))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true && (bool(false)))))))))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (true && (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) && true))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(false)), true && (true && (bool(false)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), true && (bool(false)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), true && (_GLF_IDENTITY(bool(false), true && (bool(false))))))), ! (! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), true && (_GLF_IDENTITY(bool(false), true && (bool(false))))))))))))), true), _GLF_IDENTITY(true, false || (true)), true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), (_GLF_IDENTITY(bool(false), true && (bool(false)))) || false)) && true)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))), ! (! ((! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false))))))))))), bool(bool((! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))))))))) && true))))))), (bool(bool(false))) && true))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (! (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)))))), (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) * 1)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) || false)))
            barrier();
           do
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 1.0, 0.0))), min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-482.863)), bool(false))))), injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), (1 & 1), (1 ^ 1))))) >> 0)))) ^ 0)); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_DEAD(false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4((! (_GLF_DEAD(false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false)))))), false || (! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))), (injectionSwitch.x > injectionSwitch.y))))))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, 0)), 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true, false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, bool(bvec2(true, true))), false)), bool(bvec4(bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), true)), (bool(bvec2(true, true))) || false)) || false)), false)), false, true, true)))))))), _GLF_IDENTITY(true, (true) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), true && (_GLF_IDENTITY(bool(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), ! (! (bool(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))))))))))); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0)) << 0))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))) && true))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > injectionSwitch.y), ! (! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, (0) << 0))))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))) && true))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))], min(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)], 0u ^ (buf[virtual_gid])), buf[virtual_gid])), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), _GLF_IDENTITY(~ (~ (0)), ~ (~ (~ (~ (0)))))))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) + 0)) | (_GLF_IDENTITY(0, (0) >> 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), _GLF_IDENTITY(~ (~ (0)), ~ (~ (~ (~ (0)))))))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) + 0)) | (_GLF_IDENTITY(0, (0) >> 0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), _GLF_IDENTITY(~ (~ (0)), ~ (~ (~ (~ (0)))))))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) + 0)) | (_GLF_IDENTITY(0, (0) >> 0))) : _GLF_FUZZED(-83904))), max(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), _GLF_IDENTITY(~ (~ (0)), ~ (~ (~ (~ (0)))))))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) + 0)) | (_GLF_IDENTITY(0, (0) >> 0))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), _GLF_IDENTITY(~ (~ (0)), ~ (~ (~ (~ (0)))))))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) + 0)) | (_GLF_IDENTITY(0, (0) >> 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), min(~ (~ (0)), _GLF_IDENTITY(~ (~ (0)), ~ (~ (~ (~ (0)))))))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) + 0)) | (_GLF_IDENTITY(0, (0) >> 0))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true)))))), (injectionSwitch.x < injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), clamp(min(0.0, 0.0), min(0.0, 0.0), _GLF_IDENTITY(min(0.0, 0.0), (true ? min(0.0, 0.0) : _GLF_FUZZED(-38.98)))))), 0.0, 0.0, sin(0.0)))), injectionSwitch.x)) / sqrt(1.0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)), _injected_loop_counter)), min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1, (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1) / 1u)) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = _GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, 0u + (read_1))))))))), 1u * (~ (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1))))), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = _GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, 0u + (read_1))))))))), _GLF_IDENTITY((~ (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = _GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, 0u + (read_1)))))))))) ^ 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((~ (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = _GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, 0u + (read_1)))))))))) ^ 0u, ((~ (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = _GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, uint(uint(_GLF_IDENTITY(read_1, 0u + (read_1)))))))))) ^ 0u) ^ 0u)))), 1u * _GLF_IDENTITY((~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1))) / 1u))), 0u ^ ((~ (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y = read_1))) / 1u)))))))))))) | 0u);
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))), true && (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), min(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])))), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])))), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))[1]), bvec2(false, true)))).x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), min(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0))))))], clamp(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], max(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), clamp(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, abs(abs(1.0)), 0.0, 0.0, 0.0, 0.0, 1.0)))))[0])), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * mat2(1.0))[0], clamp(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))[0], min(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))[0], ((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))[0])), ((injectionSwitch) * mat2(1.0))[0])), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * mat2(1.0))[0], clamp(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])))), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false))))))))))))), false, false, true))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false))))))))))))), false, false, true))))) && true), ! (! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), (true ? _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), mix(float(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0]))), float(_GLF_FUZZED(-59.33)), bool(false))) : _GLF_FUZZED(-138.624))), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(98.88, 8586.9085, -20.43, 9.6))))), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, int(ivec3(0, 0, 1)))))])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), (_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat4x3((injectionSwitch), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0))), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))))) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), false))))))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0]), (true ? clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0]) : _GLF_FUZZED(4.6)))), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(4.7)), vec2(_GLF_FUZZED(-1.9), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))).x)) > injectionSwitch.y)) || false), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, (0) / 1)])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, (0) / 1)])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, (0) / 1)])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, (0) / 1)])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0]), (clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), ((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])) / 1.0)), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || _GLF_IDENTITY(false, false || (false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (((injectionSwitch) * mat2(1.0))[0]) - 0.0), clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 1.0, 0.0, 1.0))), (injectionSwitch), (injectionSwitch))), (injectionSwitch))) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-2.9), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(3.3)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), max(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0))))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) ^ 0)))) ^ 0)], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), abs(0.0), 1.0))) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], (_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(cos(vec2(7.2, -547.806))))) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-8.2, 6134.2000, -5.8, -42.82)))))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0)))), injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0)) ^ (ivec4(1, 1, 0, 1)))))]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(1.5, 7901.5750)))) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), max(((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : ((injectionSwitch) * mat2(1.0))))))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), clamp(vec2((injectionSwitch) * mat2(1.0)), vec2((injectionSwitch) * mat2(1.0)), vec2((injectionSwitch) * mat2(1.0)))))))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))))))))), true && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), vec2(mat2(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), abs(0.0), 1.0))) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], (_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(cos(vec2(7.2, -547.806))))) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-8.2, 6134.2000, -5.8, -42.82)))))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, 1.0, exp(0.0)))), injectionSwitch.x)), 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 1, 0, 1), (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0)) ^ (ivec4(1, 1, 0, 1)))))]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(1.5, 7901.5750)))) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), false))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), max(((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : ((injectionSwitch) * mat2(1.0))))))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), clamp(vec2((injectionSwitch) * mat2(1.0)), vec2((injectionSwitch) * mat2(1.0)), vec2((injectionSwitch) * mat2(1.0)))))))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), false, false)))))))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED((vec2(-6913.6384, -6950.9399) / injectionSwitch))))) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x), (_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x), clamp(0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x), 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x), 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)))) - 0.0)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), max(vec2((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(vec2((injectionSwitch) * mat2(1.0)), min(vec2((injectionSwitch) * mat2(1.0)), vec2((injectionSwitch) * mat2(1.0)))))))))[0], clamp(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], (_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0]) / 1.0), ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y)) || false), true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), 1.0, 0.0)), clamp(_GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), 1.0, 0.0)), max(vec2(mat2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), 1.0, 0.0)))), vec2(mat2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), 1.0, 0.0)))))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(63520)))], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], tan(0.0) + (((injectionSwitch) * mat2(1.0))[1]))), bvec2(false, true)))).x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-87.24, -4.7)) : injectionSwitch)))).y)) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.9)))))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))[0], clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (((injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))[0], ((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[0])), _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(-6.6), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-7.3))))) || false), true), false, false))))))))))))), false, false, _GLF_IDENTITY(true, (true) && true)))))) && true)))))))))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + sin(sqrt(vec2(0.0, 0.0))), vec2(1.0, 1.0) * ((injectionSwitch) + sin(sqrt(vec2(0.0, 0.0)))))).y)))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), (injectionSwitch.y) / 1.0)))))), ((! (bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) && true))))))) && true))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))), ! (! _GLF_IDENTITY(((bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))), ! (_GLF_IDENTITY(! ((! (bool(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))), (! ((! (bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (((bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! _GLF_IDENTITY((! (bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))), ! (_GLF_IDENTITY(! ((! (bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))), (! ((! (bool(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))))), ! (! (bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || ((bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, log(1.0)))))))))))))))), true)))))))))
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.9, -6533.9222)) : injectionSwitch)).x < injectionSwitch.y))))) && true)))))))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
              barrier();
             barrier();
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2((false), true), false)), false, true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2((false), true), false)), false, true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2((false), true), false)), false, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2((false), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2((false), true), false)), false, true))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (bool(_GLF_IDENTITY(bvec2((false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), bool(bvec4(! (_GLF_IDENTITY((false), ((false)) || false)), true, true, false))))), true), false)), false, true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), false)), false, false)))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), false)), false, false)))))), false, false, true)))));
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
        barrier();
       barrier();
      }
     barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(820.646)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false, false))))))))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) | (read_2))), ~ (~ ((_GLF_IDENTITY(read_2, (read_2) | (read_2))))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, (false) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && (true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((true && (true)), ((true && (true))) && true) || false)), _GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false)))))))), ((_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (read_2) | (read_2)))), false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || _GLF_IDENTITY(false, (false) && true))))))) && true)))) + 1, (uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y)) == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true)))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true)))) || false)), true, true, false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true)))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true)))) || false)), true, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y, clamp(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y, GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y, (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y) >> 0u))) == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) << 0u) | (read_2))) && true))), false, true, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ 0u), (read_2) | (read_2))) && true))), false, true, true))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true)))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1, uvec2(GLF_merged2_0_1_13_1_1_6num_workgroupread_1[0], GLF_merged2_0_1_13_1_1_6num_workgroupread_1[1])).y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1, (GLF_merged2_0_1_13_1_1_6num_workgroupread_1) ^ uvec2(0u, 0u)).y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true))), false, true, true))), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), true && (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true), ! (! (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1.y == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, (read_2) * 1u), read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)))), (read_2) | (read_2)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_6num_workgroupread_1, _GLF_IDENTITY(uvec2(uvec2(GLF_merged2_0_1_13_1_1_6num_workgroupread_1)), (uvec2(uvec2(GLF_merged2_0_1_13_1_1_6num_workgroupread_1))) ^ uvec2(0u, 0u))).y == _GLF_IDENTITY(read_2, (read_2) | (read_2))) && true)))))), false, true, true)))) || false)), true, true, false)))))) && true))))))) + 1) << 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
