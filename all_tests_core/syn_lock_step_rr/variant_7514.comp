#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_31 {
 ivec3 _f0;
 uint _f1;
 uint read_1;
 ivec4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_30 {
 vec2 _f0;
 mat3 _f1;
 ivec4 _f2;
 ivec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_29 {
 vec3 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_32 {
 _GLF_struct_29 _f0;
 _GLF_struct_30 _f1;
 _GLF_struct_31 _f2;
 int _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_27 {
 ivec2 _f0;
 uvec2 _f1;
 uvec3 _f2;
 vec2 _f3;
 uvec3 _f4;
 vec2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_26 {
 bvec4 _f0;
 float _f1;
 mat2x4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_25 {
 uvec3 _f0;
 float _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_24 {
 mat3x4 _f0;
 mat2 _f1;
 uvec2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_28 {
 mat3 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_25 _f2;
 _GLF_struct_26 _f3;
 _GLF_struct_27 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_33 {
 _GLF_struct_28 _f0;
 mat3x2 _f1;
 _GLF_struct_32 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_21 {
 bvec3 _f0;
} ;

struct _GLF_struct_20 {
 ivec4 _f0;
 int _f1;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 mat4x3 _f1;
 uvec3 _f2;
 bvec2 _f3;
 _GLF_struct_21 _f4;
} ;

struct _GLF_struct_18 {
 ivec4 _f0;
 bvec4 _f1;
 bool _f2;
 bool _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_17 {
 mat3x2 _f0;
 uvec4 _f1;
 bvec2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_19 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
} ;

struct _GLF_struct_15 {
 uvec3 _f0;
 mat4x3 _f1;
 int _f2;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 mat3x4 _f1;
 uint workgroup_size;
 _GLF_struct_15 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_12 {
 int _f0;
 mat2x3 _f1;
 mat3 _f2;
 int _f3;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 mat3 _f1;
 ivec4 _f2;
 mat4 _f3;
 uvec3 _f4;
 ivec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat2x3 _f1;
 mat2x4 _f2;
 vec4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
 uvec3 _f1;
 uvec4 _f2;
 vec2 _f3;
 bool _f4;
 float _f5;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 uint _f1;
 _GLF_struct_8 _f2;
} ;

struct _GLF_struct_23 {
 _GLF_struct_9 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_22 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_4 {
 uvec2 _f0;
 uvec2 _f1;
 mat4x3 _f2;
 mat4x2 _f3;
 mat2x4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 mat2 _f1;
 mat3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 bvec2 _f1;
 _GLF_struct_3 _f2;
 mat3x2 _f3;
 mat3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 bool _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat2x3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 uint subgroup_size;
 ivec3 _f1;
 mat2x4 _f2;
 vec2 _f3;
 _GLF_struct_5 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true))), false || (bool(_GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) && true)))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, true && (true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-7.4)), _GLF_FUZZED(542.071)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-7.4)), _GLF_FUZZED(542.071)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))) && true)))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(_GLF_struct_0(mat3x2(1.0)), _GLF_struct_1(mat4x2(1.0), true, mat4x3(1.0)), mat2x3(1.0), mat2(1.0)), gl_SubgroupSize, ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - 0)) * 1)), mat2x4(1.0), vec2(1.0), _GLF_struct_5(vec3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0))), bvec2(true), _GLF_struct_3(_GLF_IDENTITY(mat4(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(-629.227, 38.64, -4.2, -18.36, 8.3, 7.7, 498.170, _GLF_IDENTITY(-42.88, float(float(-42.88))), -3.7, 2.9, 1.8, 0.1, 9.5, 6492.7488, 98.16, -463.985)) : mat4(1.0))), mat2(1.0), mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-2.8)), bool(false)))), bvec4(true)), mat3x2(1.0), mat3(1.0), _GLF_struct_4(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uvec2(1u, 1u) * (uvec2(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u))), uvec2(uvec3(uvec2(1u), 1u))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u))), uvec2(uvec3(uvec2(1u), 1u)))) << uvec2(0u, 0u)), mat4x3(1.0), mat4x2(1.0), mat2x4(1.0), mat3(1.0))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.x), bool(true))), 0.0, log(1.0), 1.0, 0.0, determinant(mat4(0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.x), bool(true))), 0.0, log(1.0), 1.0, 0.0, determinant(mat4(0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0)))), float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.1)), float(injectionSwitch.x), bool(true))), 0.0, log(1.0), 1.0, 0.0, determinant(mat4(0.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(min(-5.6, -2378.7454)) : float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(16.79))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(min(-5.6, -2378.7454)) : float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))))) : _GLF_FUZZED(16.79))) > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(16.79))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(69.80) : injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_9(_GLF_struct_7(mat3x4(1.0), uvec3(1u), uvec4(1u), vec2(1.0), true, 1.0), 1u, _GLF_struct_8(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u)), max(uvec4(1u), uvec4(1u))), mat2x3(1.0), mat2x4(1.0), vec4(1.0), mat4x3(1.0))), _GLF_struct_13(_GLF_struct_10(bvec3(true), mat3(1.0), ivec4(1), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4521.1290)), bool(false)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-2.6)), float((1.0)), bool(true)))), 1.0)), clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-2.6)), float((1.0)), bool(true)))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-2.6)), float((1.0)), bool(true)))), 1.0)), clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-2.6)), float((1.0)), bool(true)))), 1.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-2.6)), float((1.0)), bool(true)))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-2.6)), float((1.0)), bool(true)))), 1.0)), (false ? _GLF_FUZZED(vec2(-4099.7530, -1.2).g) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-2.6)), float((1.0)), bool(true)))), 1.0)), float(mat4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-2.6)), float((1.0)), bool(true)))), 1.0)), 0.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(-2.6)), float((1.0)), bool(_GLF_IDENTITY(true, true && (true)))))), 1.0)))), 1.0))), (mat4(1.0)) * mat4(1.0)))), uvec3(1u), ivec4(1), mat4(1.0)), _GLF_struct_11(mat3x2(1.0)), _GLF_struct_12(1, mat2x3(1.0), mat3(1.0), 1)), _GLF_struct_16(_GLF_struct_14(vec3(_GLF_IDENTITY(1.0, float(vec4(1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))), ivec2(1)), mat3x4(1.0), gl_WorkGroupSize.x, _GLF_struct_15(uvec3(1u), mat4x3(1.0), 1), mat2x4(1.0)), _GLF_struct_19(_GLF_struct_17(mat3x2(1.0), uvec4(1u), bvec2(_GLF_IDENTITY(true, (true) && true)), mat3(1.0)), _GLF_struct_18(ivec4(1), bvec4(true), true, true, bvec4(true))), _GLF_struct_22(_GLF_struct_20(ivec4(1), _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), max(_GLF_IDENTITY(~ (1), (~ (1)) | 0), _GLF_IDENTITY(~ (1), int(ivec4(~ (1), 0, 1, 0)))))) >> 0)))), mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.6)), float(1.0), bool(true)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 0u, (1u ^ 1u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 0u, (1u ^ 1u))), uint(uint(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : uint(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 0u, (1u ^ 1u))), (false ? _GLF_FUZZED(num_workgroup) : uint(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 0u, (1u ^ 1u)))) ^ 0u)))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, 0u | (_GLF_IDENTITY((1u) - 0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)), max(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)), uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)))), (uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u))) | (uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)))))))) - 0u)), (_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)), max(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)), uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)))), (uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u))) | (uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)))))))) - 0u)), (uint(uint((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)), max(uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)), uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)))), (uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u))) | (uint(_GLF_IDENTITY(uint(1u), (uint(1u)) - 0u)))))))) - 0u))) / 1u)) ^ 0u), (uint(uint((1u) - _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) << 0u)))))) ^ 0u)))))), _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) - 0u)), (uvec3(_GLF_IDENTITY(1u, (1u) - 0u))) | uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(0u, 0u, 0u)), 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) - 0u)), (uvec3(_GLF_IDENTITY(1u, (1u) - 0u))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), (_GLF_IDENTITY((0u | 0u), 0u ^ ((0u | 0u))) << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec4(uvec3(0u, 0u, 0u), ((0u | 0u) << _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec4(0u, 0u, 0u, 0u))), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), ((0u | 0u) << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec4(uvec3(0u, 0u, 0u), ((0u | 0u) << _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec4(0u, 0u, 0u, 0u))), min(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), ((0u | 0u) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))))), (uvec4(uvec3(0u, 0u, 0u), ((0u | 0u) << _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u))), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u), ((0u | 0u) << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec4(uvec3(0u, 0u, 0u), ((0u | 0u) << _GLF_IDENTITY(uint(3u), uint(3u))))) << uvec4(0u, 0u, 0u, 0u))))), 1u))))))) ^ (uvec3(0u, 0u, 0u) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u)) - 0u))) | _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))))) * uvec3(1u, 1u, 1u)), bvec2(true), _GLF_struct_21(bvec3(true))), ivec2(1));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))) || false)) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), 1.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(roundEven(247.204)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(81.33) : (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(-55.12), _GLF_FUZZED(1.5)), bvec2(false, false))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0), (mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0)) * mat2(1.0))))))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))[0], gl_WorkGroupID[_GLF_IDENTITY(1, (1) ^ 0)], _GLF_IDENTITY(gl_WorkGroupID[2], ~ (~ (gl_WorkGroupID[2])))))) + uvec3(0u, 0u, 0u)).x;
 uint workgroup_base = _GLF_struct_replacement_23._f2.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6.subgroup_size, clamp(workgroup_base + subgroup_id * _GLF_struct_replacement_6.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_6.subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_6.subgroup_size, (false ? _GLF_FUZZED(176819u) : workgroup_base + subgroup_id * _GLF_struct_replacement_6.subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_FUZZED(-9.4), _GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_IDENTITY(_GLF_FUZZED(-9.4), 1.0 * _GLF_IDENTITY((_GLF_FUZZED(-9.4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_FUZZED(-9.4)) : _GLF_FUZZED(3.6)))))), _GLF_FUZZED(-9.4))) : injectionSwitch.x)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_FUZZED(-9.4), _GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_IDENTITY(_GLF_FUZZED(-9.4), 1.0 * _GLF_IDENTITY((_GLF_FUZZED(-9.4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_FUZZED(-9.4)) : _GLF_FUZZED(3.6)))))), _GLF_FUZZED(-9.4))) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.4), clamp(_GLF_FUZZED(-9.4), _GLF_IDENTITY(_GLF_FUZZED(-9.4), min(_GLF_FUZZED(-9.4), _GLF_IDENTITY(_GLF_FUZZED(-9.4), 1.0 * _GLF_IDENTITY((_GLF_FUZZED(-9.4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_FUZZED(-9.4)) : _GLF_FUZZED(3.6)))))), _GLF_FUZZED(-9.4))) : injectionSwitch.x))) / 1.0) : _GLF_FUZZED(-7222.4521))) > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), injectionSwitch)) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(347.618), (_GLF_FUZZED(injectionSwitch))[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], 1.0 * ((_GLF_FUZZED(injectionSwitch))[0])), _GLF_FUZZED((_GLF_IDENTITY(-5.4, (-5.4) * 1.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY((_GLF_FUZZED(injectionSwitch))[0], 1.0 * ((_GLF_FUZZED(injectionSwitch))[0])), _GLF_FUZZED((_GLF_IDENTITY(-5.4, (-5.4) * 1.0)))))), bvec2(true, false))))), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.6)), vec2(_GLF_FUZZED(-9.4), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-94.46)), bool(false)))))), bvec2(false, true))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))) : subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) * _GLF_struct_replacement_6.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_6.subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2573.3594), _GLF_FUZZED(float((135755u ^ 190043u)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false)), true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), _GLF_IDENTITY((uint(1)), max(_GLF_IDENTITY((uint(1)), clamp((uint(1)), _GLF_IDENTITY((uint(1)), 1u * ((uint(1)))), (uint(1)))), (uint(1)))) | 0u), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-53279))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(5), int(5))))) * 1))), ((0 << _GLF_IDENTITY(int(6), int(6)))) + 0)), max(ivec4(0 | _GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY((4), min((4), (4))), 0, 0, 1))))), (4), (4))), ((4)) * 1), _GLF_IDENTITY(1, (1) | (1)), 1, (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6)))))), ivec4(0 | (4), 1, 1, (_GLF_IDENTITY(_GLF_IDENTITY(0, (1 ^ 0) * (0)) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, ~ (~ (6))))), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6))) - 0)))))), _GLF_IDENTITY(int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0, 0, 0, 0) | (ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))))), max(ivec4(0 | _GLF_IDENTITY((4), ((4)) ^ 0), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0 | (4), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, int(int(1))))), 1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (6) / 1), 6))))), int(ivec4((0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (6) / 1), 6))))), 1, 0, 0))))))), 0, (1 ^ 0), 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-73640), int(int(_GLF_FUZZED(-73640)))) : int(ivec4(int(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6)))), max(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0 | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) | ((4))), _GLF_IDENTITY(1, 1 * (1)), 1, (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)) ^ 0, clamp((int(6)) ^ 0, _GLF_IDENTITY((int(6)) ^ 0, (_GLF_IDENTITY((int(6)) ^ 0, ((int(6)) ^ 0) | ((int(6)) ^ 0))) << 0), (int(6)) ^ 0))))))))), 0, _GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-53279))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(5), int(5))))) * 1))), ((0 << _GLF_IDENTITY(int(6), int(6)))) + 0)), max(ivec4(0 | _GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY((4), min((4), (4))), 0, 0, 1))))), (4), (4))), _GLF_IDENTITY(((4)) * 1, (((4)) * 1) / 1)), _GLF_IDENTITY(1, (1) | (1)), 1, (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6)))))), ivec4(0 | (4), 1, 1, (_GLF_IDENTITY(_GLF_IDENTITY(0, (1 ^ 0) * (0)) << _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6))), 0 + ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6))))) - 0)))))), _GLF_IDENTITY(int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0, 0, 0, 0) | (ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))))), max(ivec4(0 | _GLF_IDENTITY((4), ((4)) ^ 0), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0 | (4), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, int(int(1))))), 1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (6) / 1), 6))))), int(ivec4((0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (6) / 1), 6))), ~ (~ (int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (6) / 1), 6)))))))), 1, 0, 0))))))), 0, (1 ^ 0), 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-73640), int(int(_GLF_FUZZED(-73640)))) : int(ivec4(int(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6)))), max(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0 | (4), _GLF_IDENTITY(1, 1 * (1)), 1, (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) + (0 >> _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY((int(6)) ^ 0, clamp((int(6)) ^ 0, _GLF_IDENTITY((int(6)) ^ 0, (_GLF_IDENTITY((int(6)) ^ 0, ((int(6)) ^ 0) | ((int(6)) ^ 0))) << 0), (int(6)) ^ 0))))))))), 0, _GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-53279))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(5), int(5))))) * 1))), ((0 << _GLF_IDENTITY(int(6), int(6)))) + 0)), max(ivec4(0 | _GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY((4), min((4), (4))), 0, 0, 1))))), (4), (4))), ((4)) * 1), _GLF_IDENTITY(1, (1) | (1)), 1, (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6)))))), ivec4(0 | (4), 1, 1, (_GLF_IDENTITY(_GLF_IDENTITY(0, (1 ^ 0) * (0)) << _GLF_IDENTITY(int(6), int(6)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6))) - 0)))))), _GLF_IDENTITY(int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0, 0, 0, 0) | (ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))))), max(ivec4(0 | _GLF_IDENTITY((4), ((4)) ^ 0), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0 | (4), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1, int(int(1))))), 1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (6) / 1), 6))))), int(ivec4((0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (6) / 1), 6))))), 1, 0, 0))))))), 0, (1 ^ 0), 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-73640), int(int(_GLF_FUZZED(-73640)))) : int(ivec4(int(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6)))), max(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0 | (4), _GLF_IDENTITY(1, 1 * (1)), 1, (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((int(6)) ^ 0, clamp((int(6)) ^ 0, _GLF_IDENTITY((int(6)) ^ 0, (_GLF_IDENTITY((int(6)) ^ 0, ((int(6)) ^ 0) | ((int(6)) ^ 0))) << 0), (int(6)) ^ 0))))))))), 0, _GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0))))), (false ? _GLF_FUZZED(31490) : _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, _GLF_IDENTITY((_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-53279))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | 0)), (_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(5), int(5))))) * 1))), ((0 << _GLF_IDENTITY(int(6), int(6)))) + 0)), max(ivec4(0 | _GLF_IDENTITY(_GLF_IDENTITY((4), clamp(_GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), int(ivec4(_GLF_IDENTITY((4), min((4), (4))), 0, 0, 1))))), (4), (4))), ((4)) * 1), _GLF_IDENTITY(1, (1) | (1)), 1, (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, clamp(6, 6, 6)))))), ivec4(0 | (4), 1, 1, (_GLF_IDENTITY(_GLF_IDENTITY(0, (1 ^ 0) * (0)) << _GLF_IDENTITY(int(6), int(6)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6))) - 0)))))), _GLF_IDENTITY(int(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0, 0, 0, 0) | (ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))))), max(ivec4(0 | _GLF_IDENTITY((4), ((4)) ^ 0), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0 | (4), _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), int(int(1))))), 1, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (6) / 1), 6))))), int(ivec4((0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, min(_GLF_IDENTITY(6, (6) / 1), 6))))), 1, 0, 0))))))), 0, (1 ^ 0), 0)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-73640), int(int(_GLF_FUZZED(-73640)))) : int(ivec4(int(_GLF_IDENTITY(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6)))), max(ivec4(0 | (4), 1, 1, (0 << _GLF_IDENTITY(int(6), int(6)))), ivec4(0 | (4), _GLF_IDENTITY(1, 1 * (1)), 1, (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY((_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(22801) : int(6)))) ^ 0, clamp((int(6)) ^ 0, _GLF_IDENTITY((_GLF_IDENTITY(int(6), min(int(6), int(6)))) ^ 0, (_GLF_IDENTITY((int(6)) ^ 0, ((int(6)) ^ 0) | ((int(6)) ^ 0))) << 0), (int(6)) ^ 0))))))))), 0, _GLF_IDENTITY((1 ^ 0), (_GLF_IDENTITY((1 ^ 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1 ^ 0), max((1 ^ 0), (1 ^ 0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ (_GLF_IDENTITY((1 ^ 0), max((1 ^ 0), (1 ^ 0)))), int(ivec2(~ (_GLF_IDENTITY((1 ^ 0), max((1 ^ 0), (1 ^ 0)))), 0))) : _GLF_FUZZED(-49293)))))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), 0)))))))) | 0)) + (0 ^ 0)))), 4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(_GLF_struct_28(mat3(1.0), _GLF_struct_24(mat3x4(1.0), mat2(1.0), uvec2(1u), mat4x3(1.0)), _GLF_struct_25(uvec3(1u), 1.0, uvec2(1u)), _GLF_struct_26(bvec4(true), 1.0, mat2x4(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0), _GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0))), 1.0, determinant(mat3(1.0, length(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0)))), bvec3(true)), _GLF_struct_27(ivec2(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((1), ((1)) >> 0))), uvec2(1u), uvec3(1u), vec2(1.0), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) >> (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) >> 0u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (1u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (0u | 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u ^ (uint(6u))), uint(6u)) : _GLF_FUZZED(workgroup_base)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (7u))), uint(7u)), clamp(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (7u))), uint(7u)), 1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (7u))), uint(7u)), 1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (7u))), uint(7u)))), max(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, clamp(_GLF_IDENTITY(7u, ~ (~ (7u))), _GLF_IDENTITY(7u, (7u) + 0u), 7u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u) << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, uint(uvec3(4u, 1u, 1u)))) >> 0u)))) ^ (7u))), uint(7u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (_GLF_IDENTITY(7u, (true ? _GLF_IDENTITY(7u, (7u) + 0u) : _GLF_FUZZED(uvec3(138269u, 48145u, 95360u).y)))))), uint(7u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (7u))), uint(7u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (7u))), uint(7u))) >> 0u))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (7u))), uint(7u)), min(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), ((0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + 0u) ^ (7u))), uint(7u)), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ (7u))), uint(7u)) : _GLF_FUZZED(workgroup_base))), 1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u ^ (_GLF_IDENTITY(uint(4u), uint(4u))))) ^ (7u))), uint(7u))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(559.063)), float(0.0), bool(true))), injectionSwitch.x)))), uint(uvec2(uint(uvec4(1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u)), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), uint(_GLF_IDENTITY(uint(1u << _GLF_IDENTITY(uint(7u), uint(7u))), min(uint(1u << _GLF_IDENTITY(uint(7u), uint(7u))), uint(1u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * _GLF_IDENTITY(exp(0.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.2)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(-2.2)), clamp(float(_GLF_FUZZED(-2.2)), float(_GLF_FUZZED(-2.2)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.2)), max(float(_GLF_FUZZED(-2.2)), float(_GLF_FUZZED(-2.2)))))) : _GLF_FUZZED(324.713))), float(exp(0.0)), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * _GLF_IDENTITY(exp(0.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-2.2)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(-2.2)), clamp(float(_GLF_FUZZED(-2.2)), float(_GLF_FUZZED(-2.2)), _GLF_IDENTITY(float(_GLF_FUZZED(-2.2)), max(float(_GLF_FUZZED(-2.2)), float(_GLF_FUZZED(-2.2)))))) : _GLF_FUZZED(324.713))), float(exp(0.0)), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(-763.155)))))), 1u))))), _GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0))), vec3(1.0)), ivec3(1)), mat3x2(1.0), _GLF_struct_32(_GLF_struct_29(vec3(1.0), uvec3(1u), mat4x3(1.0), uvec4(1u)), _GLF_struct_30(vec2(1.0), mat3(1.0), ivec4(_GLF_IDENTITY(1, (1) >> 0)), ivec4(1), bvec2(true)), _GLF_struct_31(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)), clamp((_GLF_IDENTITY(1u, (1u) ^ 0u)), (_GLF_IDENTITY(1u, (1u) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) | ((1u) ^ 0u)))), clamp((_GLF_IDENTITY(1u, (1u) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (1u) ^ 0u)), (_GLF_IDENTITY(1u, (1u) ^ 0u)))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid, uint(_GLF_IDENTITY(uint(false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid), 1u * (uint(false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid)))))), (true ? (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid) : _GLF_FUZZED(workgroup_base)))), min(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid)), _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid)))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid)), min(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid)), _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid))))) * 1u)], 4, 64, 0), ivec4(1), bvec2(true)), 1, _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec4(bvec3(bvec3(bvec3(true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-25.87) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8994.5350), _GLF_FUZZED(6.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x, (injectionSwitch.x) * 1.0))) < injectionSwitch.y))))))), bvec2(true));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_33._f2._f2.read_1 == read_2) + 1, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (_GLF_IDENTITY(true && (false), ! (! (true && (false))))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec3((_GLF_IDENTITY(false, (false) || false)), true, true))), true && ((_GLF_IDENTITY(false, (false) || false)))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bool(false))))), true && (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))), false || (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(true, bool(bool(true))), false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}
