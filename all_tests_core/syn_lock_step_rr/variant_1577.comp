#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), bvec2(bvec4(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && _GLF_IDENTITY(true, ! (! (true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), ! (_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((subgroup_id << workgroup_id)))) * subgroup_size) | (subgroup_id * subgroup_size), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_size, min(false ? _GLF_FUZZED(workgroup_id) : subgroup_size, false ? _GLF_FUZZED(workgroup_id) : subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | (subgroup_id * subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED((subgroup_id << workgroup_id)))) * subgroup_size) | (subgroup_id * subgroup_size), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))), subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_size, min(false ? _GLF_FUZZED(workgroup_id) : subgroup_size, false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size))))), uint(uint((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_size, min(false ? _GLF_FUZZED(workgroup_id) : subgroup_size, false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)))))))))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | (subgroup_id * subgroup_size))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))), min(_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))), _GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ (subgroup_id * subgroup_size)))))))), _GLF_IDENTITY(0u, (0u) | (0u)) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), ~ (~ (~ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) - 0u)))))))) + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), ~ (~ (uint(uint(subgroup_local_id)))))) + 1), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) | 0u))), 1u), uvec3(uvec4(uvec3(subgroup_local_id, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) | 0u))), 1u), 0u))))) + 1), max((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY((32589 & 0), ((32589 & 0)) ^ (0 | _GLF_IDENTITY(0, min(0, 0)))))))), (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54906) : _GLF_IDENTITY(1, (1) | 0)))))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) + 0u)) >> _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) - (0u ^ 0u))), 0u, 0u))) % subgroup_size), max(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-7169.2261))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (false ? _GLF_FUZZED(36654) : _GLF_IDENTITY(int(8), int(8))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(1), 4, 64, 4);
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), injectionSwitch))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))
            barrier();
          }
        }
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)))))))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) | int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)], 4, _GLF_IDENTITY(64, (64) / 1), 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), bool(bvec4((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true, true, true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
  }
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, sin(0.0), abs(0.0), 0.0))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, sin(0.0), abs(0.0), 0.0))) > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, sin(0.0), abs(0.0), 0.0))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, sin(0.0), abs(0.0), 0.0))) > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    break;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (int(_GLF_IDENTITY(1, clamp(1, 1, 1)))) | 0)) | (0 << _GLF_IDENTITY(int(5), int(5)))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))))), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1, 0 | (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 + (int(1))), int(ivec3(int(1), _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1))))))) * 1))))))), ~ (~ ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), int(ivec2(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), 1))) : _GLF_FUZZED((72088 & 95814)))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (int(_GLF_IDENTITY(1, clamp(1, 1, 1)))) | 0)) | (0 << _GLF_IDENTITY(int(5), int(5)))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))))), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1, 0 | (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 + (int(1))), int(ivec3(int(1), _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1))))))) * 1))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), (int(_GLF_IDENTITY(1, clamp(1, 1, 1)))) | 0)) | (0 << _GLF_IDENTITY(int(5), int(5)))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1))))), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1, 0 | (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))))), int(ivec3(int(1), 1, 1)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 + (int(1))), int(ivec3(int(1), _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1)))))), clamp(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 + (int(1))), int(ivec3(int(1), _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1)))))), ~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 + (int(1))), int(ivec3(int(1), _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 + (int(1))), int(ivec3(int(1), _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1)))))), max(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 + (int(1))), int(ivec3(int(1), _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1)))))), ~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 + (int(1))), int(ivec3(int(1), _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), 1))))))))))) * 1)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), int(ivec3(int(1), 1, 1)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), int(ivec3(int(1), 1, 1))))))) | 0), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), 1, 0, 0), (false ? _GLF_FUZZED(ivec4(-84764, 15430, 27776, 65921)) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), 1, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), 1, 0, 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), min(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) << 0)), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), 1, 0, 0), ~ (~ (ivec4(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), 1, 0, 0))))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))), min((~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), _GLF_IDENTITY(int(1), int(ivec3(int(_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))), 1, 1))))))) * 1)))) | 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, max(1, 1))))) | (1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1))) >> 0)), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))) && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1))))))), ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))), clamp(int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))), int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))), int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))))))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))) | 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), int(ivec4(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), 0, 1, 1))))))) * 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-93404))))))) * 1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), int(1))), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1), int(1))), 1, 1))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec3(int(1), 1, 1)), (int(ivec3(int(1), 1, 1))) ^ 0)))))) * 1)))) | 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1))) >> 0)), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))))))) / 1)), max((_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), int(ivec3(int(1), 1, 1)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), int(ivec3(int(1), 1, 1))))))) | 0), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), 1, 0, 0), (false ? _GLF_FUZZED(ivec4(-84764, 15430, 27776, 65921)) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), 1, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), 1, 0, 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), min(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) << 0)), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), 1, 0, 0), ~ (~ (ivec4(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), 1, 0, 0))))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))), min((~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), _GLF_IDENTITY(int(1), int(ivec3(int(_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))), 1, 1))))))) * 1)))) | 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, max(1, 1))))) | (1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1))) >> 0)), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))) && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1))))))), ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))), clamp(int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))), int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))), int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))))))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))) | 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), int(ivec4(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), 0, 1, 1))))))) * 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-93404))))))) * 1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), int(1))), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1), int(1))), 1, 1))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec3(int(1), 1, 1)), (int(ivec3(int(1), 1, 1))) ^ 0)))))) * 1)))) | 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1))) >> 0)), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))))))) / 1)), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), int(ivec3(int(1), 1, 1)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), clamp(int(1), int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), int(ivec3(int(1), 1, 1))))))) | 0), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), 1, 0, 0), (false ? _GLF_FUZZED(ivec4(-84764, 15430, 27776, 65921)) : _GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), 1, 0, 0), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), 1, 0, 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), min(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) | (1))) << 0)), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), 1, 0, 0), ~ (~ (ivec4(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), 1, 0, 0))))))))), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))), ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))), min((~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), _GLF_IDENTITY(int(1), int(ivec3(int(_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))), 1, 1))))))) * 1)))) | 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, max(1, 1))))) | (1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1))) >> 0)), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))) && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1))))))), ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(int(1), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))), clamp(int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))), int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))), int(ivec3(int(1), 1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (1))))))))))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)) - (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))) | 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), int(ivec4(_GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))), 0, 1, 1))))))) * 1)), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-93404))))))) * 1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1))), int(1))), min(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 0 | (int(1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(_GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1), int(1))), 1, 1))))))) * 1)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(ivec3(int(1), 1, 1)), (int(ivec3(int(1), 1, 1))) ^ 0)))))) * 1)))) | 0)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1))) >> 0)), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))))))) / 1)))) | ((0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(mix(_injected_loop_counter, -74220, bvec3(false, false, false)[2])) : clamp(1, 1, 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED((_injected_loop_counter % (_injected_loop_counter >> -39962)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), 0 ^ (int(1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), 0 ^ (int(1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), 0 ^ (int(1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), 0 ^ (int(1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), 0 ^ (int(1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), 0 ^ (int(1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), 0 ^ (int(1))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(_GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1), (false ? _GLF_FUZZED(70694) : _GLF_IDENTITY(~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-58305) : 1))), int(ivec3(int(1), 1, 1)))))), (~ (_GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 1, 1))))))) * 1))))))))) - 0))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0))), _GLF_IDENTITY(bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0))))), (bool(bool(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0)))))) && true))); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)))
              {
               barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false), false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) || false), false))))), true, false)))))))), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, _GLF_IDENTITY(false, (false) && true) || ((true) || false)), ((true) || false) && true)), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true)), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true)), false))))))))))), ((_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false) && true)), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true), ((true)) || false) || false) && true)), false))), ! (! (! (bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ((true) || false) && true)), false)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), true))))))
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-39.06) : injectionSwitch.x)) > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY((int(_GLF_IDENTITY(2, 0 ^ (2)))), 0 | (_GLF_IDENTITY((int(_GLF_IDENTITY(2, 0 ^ (2)))), ~ (~ (_GLF_IDENTITY((int(_GLF_IDENTITY(2, 0 ^ (2)))), int(ivec2((int(_GLF_IDENTITY(2, 0 ^ (2)))), 0)))))))) | (int(2)))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), (true ? _GLF_IDENTITY(0 | (0), (0 | (0)) >> 0) : _GLF_FUZZED(min(-47880, -39887))))), (_GLF_IDENTITY(0, _GLF_IDENTITY(0 | (0), (true ? _GLF_IDENTITY(0 | (0), (0 | (0)) >> 0) : _GLF_FUZZED(min(-47880, -39887)))))) >> 0)); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))), ~ (_GLF_IDENTITY(~ (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))), (~ (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))) ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              break;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, true, true)))));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y) || false), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, false)))))))
      return;
     barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y)))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))).y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y)))) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))) + (injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))) + (injectionSwitch.y)))))) || false))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y)))) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(0.0) + (injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(0.0, 0.0)))) + determinant(mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0))) + (injectionSwitch.y)))) || false, ! (_GLF_IDENTITY(! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(0.0, 0.0)))) + determinant(mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0))) + (injectionSwitch.y)))) || false), (! (((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, min(0.0, 0.0))), (sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(0.0, 0.0)))) + determinant(mat4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, log(1.0), 0.0, 0.0, 0.0))) + (injectionSwitch.y)))) || false)) || false)))))) || false))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), bool(bvec4((true), false, false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), bool(bvec4((true), false, false, false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY((true), ((_GLF_IDENTITY(true, (true) && true))) || false), bool(bvec4((true), false, false, false)))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, exp(log(1.0)), 1.0, 1.0), mat4(1.0) * (mat4(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0, exp(log(1.0)), 1.0, 1.0))))) > injectionSwitch.y))))
        continue;
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)) && true)))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true)))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
      continue;
     break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec2(0, 0))), 0, 0))], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec2(0, 0))), 0, 0))], injectionSwitch[1])))) : _GLF_FUZZED(vec2(440.158, -711.798)))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      continue;
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(221.922, min(221.922, 221.922))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(90.78)), bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (true))))), false))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false)))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(false), true, false)), bvec3(bvec4(bvec3(bvec3(bool(false), true, false)), true)))))))))))), (injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, true))))
    {
     for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(1, max(1, 1)) | int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0), _injected_loop_counter)) > _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), (0), (0))) / 1), _GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, (0) / 1)))) | (_GLF_IDENTITY(0, (0) / 1)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))));
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(mat2x4(1.4, -2214.5833, 247.695, 7.7, 7.8, -3.5, 169.671, 262.481)))) : injectionSwitch.y))))));
            }
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-3.3, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(-3.3, 1.0 * (-3.3)), 0.0, tan(0.0), 0.0, 0.0, 0.0, sqrt(cos(0.0)), 1.0, 0.0), (mat3(_GLF_IDENTITY(-3.3, 1.0 * (-3.3)), 0.0, tan(0.0), 0.0, 0.0, 0.0, sqrt(cos(0.0)), 1.0, 0.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), ! (! ((_GLF_WRAPPED_IF_TRUE(true))))))))
              {
               return;
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(898.016)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))))))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
          barrier();
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           for(int _injected_loop_counter = (_GLF_IDENTITY(1 & 1, (1 & 1) + 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}
