#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_8 {
 vec4 _f0;
 bvec2 _f1;
 ivec3 _f2;
 uvec3 _f3;
 uvec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 vec4 _f1;
 _GLF_struct_8 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_6 {
 int _f0;
 mat4x3 _f1;
 float _f2;
 bvec3 _f3;
 mat2x3 _f4;
 bool _f5;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_4 {
 int _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 bool _f1;
 bvec3 _f2;
 _GLF_struct_5 _f3;
 uint workgroup_size;
 ivec3 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 vec2 _f1;
 float _f2;
 mat3x4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat2x3 _f1;
 vec3 _f2;
 mat4x2 _f3;
 bvec3 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 bvec3 _f1;
 mat2 _f2;
 mat2 _f3;
 ivec4 _f4;
 uvec3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bool _f2;
 ivec3 _f3;
 uvec3 _f4;
 _GLF_struct_2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_7 _f2;
 uvec2 _f3;
 uvec3 _f4;
 _GLF_struct_9 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_61_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_sizeread_1;
 uvec4 GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_74_3_1_12GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id;
 uvec4 GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))), false || (bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_size;
 GLF_merged2_0_3_61_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_sizeread_1.xyz = GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
 do
  {
   GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy = GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec4 GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 do
  {
   GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec4 GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
  }
 uvec4 GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy = GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.zw = GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy = GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.zw;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uvec4 GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uvec4 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(-64725) : int(5))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
  }
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw = GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy = GLF_merged2_0_2_49_2_2_51GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizeGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   else
    {
    }
  }
 _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.zw = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, uvec2(1u, 1u) * (GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.zw = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.xy = GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.zw;
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base;
 GLF_merged2_0_3_74_3_1_12GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.xyz = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | _GLF_IDENTITY((_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-50656) : int(6)))), ((_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-50656) : int(6))))) - 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))
        {
         barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
      }
    }
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 1.0))).x < injectionSwitch.y, bool(bool(injectionSwitch.x < injectionSwitch.y)))) && true)))))
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))
            barrier();
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) * 1)), min((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) * 1)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) * 1)))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz = GLF_merged2_0_3_74_3_1_12GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.xyz;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.4)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
            }
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false))) || false)))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.0, -5.6)) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(773.782)), bool(false))), injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (_GLF_IDENTITY(true, (true) && true)))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((mat4x3(1660.7777, -95.73, -7.6, -3.2, -20.34, 36.33, 5.3, 2368.9846, 7673.9587, 9.8, -82.34, 746.563) * vec4(-0.1, -0.9, -861.430, -7.6)).g)), bool(false))) < injectionSwitch.y)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-64.43)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, cos(0.0), 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), abs(0.0))))), bool(true))))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0))))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(trunc(-9.8)))) < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(trunc(-9.8)))) < injectionSwitch.y)))))))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && true))) && true)))))))), false)), false || (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (_GLF_IDENTITY(true, (true) && true)))), (injectionSwitch.x < injectionSwitch.y))))), ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (_GLF_IDENTITY(true, (true) && true)))), (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-64.43)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1906.0190)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))) - sqrt(tan(0.0)))), bool(true))))) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec3(bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0))))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(59.24)), float(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0)))))), bool(true)))) < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(trunc(-9.8)))) < injectionSwitch.y))))))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) && true)), (bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && true))) && true)))))))), false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-349.456)), vec2(_GLF_FUZZED(8.3), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(true && (injectionSwitch.x < injectionSwitch.y), (true && (injectionSwitch.x < injectionSwitch.y)) || false))))), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (! (_GLF_IDENTITY(true, (true) && true)))), (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), false, false), false))))))))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))), ! (! (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (true)))))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec3(bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(trunc(_GLF_IDENTITY(-9.8, max(-9.8, _GLF_IDENTITY(-9.8, (false ? _GLF_FUZZED(length((-141.053 - 591.441))) : -9.8)))))))) < injectionSwitch.y))))))), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(trunc(_GLF_IDENTITY(-9.8, max(-9.8, _GLF_IDENTITY(-9.8, (false ? _GLF_FUZZED(length((-141.053 - 591.441))) : -9.8)))))))) < injectionSwitch.y))))))), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(trunc(_GLF_IDENTITY(-9.8, max(-9.8, _GLF_IDENTITY(-9.8, (false ? _GLF_FUZZED(length((-141.053 - 591.441))) : -9.8)))))))) < injectionSwitch.y))))))), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(trunc(_GLF_IDENTITY(-9.8, max(-9.8, _GLF_IDENTITY(-9.8, (false ? _GLF_FUZZED(length((-141.053 - 591.441))) : -9.8)))))))) < injectionSwitch.y))))))), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(trunc(_GLF_IDENTITY(-9.8, max(-9.8, _GLF_IDENTITY(-9.8, (false ? _GLF_FUZZED(length((-141.053 - 591.441))) : -9.8)))))))) < injectionSwitch.y))))))), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(trunc(_GLF_IDENTITY(-9.8, max(-9.8, _GLF_IDENTITY(-9.8, (false ? _GLF_FUZZED(length((-141.053 - 591.441))) : -9.8)))))))) < injectionSwitch.y))))))), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(trunc(_GLF_IDENTITY(-9.8, max(-9.8, _GLF_IDENTITY(-9.8, (false ? _GLF_FUZZED(length((-141.053 - 591.441))) : -9.8)))))))) < injectionSwitch.y))))))), _GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true))))), true))))))), false)))) && true)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec3(int(1), 0, 0)))))); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   else
                    {
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 else
                  {
                  }
                 for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) ^ (49032 & 0))); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))), true, true, false)), (bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), true, true, false))) && true))))))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.8), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(1.8)), bvec2(true, false))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.8), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(1.8)), bvec2(true, false))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.8), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(1.8)), bvec2(true, false))).y))), true))))))
              barrier();
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 do
  {
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / round(length(normalize(vec2(1.0, 1.0))))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(578.602) : injectionSwitch.y))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   GLF_merged2_0_3_61_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_sizeread_1.xyz.y = subgroup_id;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.x = GLF_merged2_0_3_61_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_sizeread_1.xyz.y;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(exp(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), exp(0.0)), (mat2x3(injectionSwitch, sqrt(exp(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), exp(0.0))) * mat2(1.0))), min(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(_GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-4.8) : exp(0.0)))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), exp(0.0)), (mat2x3(injectionSwitch, sqrt(exp(0.0)), 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(step(vec3(-314.514, 430.437, -1.6), vec3(85.83, 5.7, 9.2))), min(_GLF_FUZZED(step(vec3(-314.514, 430.437, -1.6), vec3(85.83, 5.7, 9.2))), _GLF_FUZZED(step(vec3(-314.514, 430.437, -1.6), vec3(85.83, 5.7, _GLF_IDENTITY(9.2, (_GLF_IDENTITY(9.2, mix(float(9.2), float(_GLF_FUZZED(96.22)), bool(false)))) - 0.0)))))) : vec3(1.0, 1.0, 1.0)))) - sqrt(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)))))))), exp(0.0))) * mat2(1.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(exp(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), exp(0.0)), (mat2x3(injectionSwitch, sqrt(exp(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), exp(0.0))) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), (true ? mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) : _GLF_FUZZED(mat2(-8.5, 539.201, 645.002, 86.05)))))), _GLF_IDENTITY(vec2(mat3x2(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(exp(0.0)), 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), mix(vec3((normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[0], _GLF_FUZZED(-95.65), _GLF_FUZZED(-9.4)), vec3(_GLF_FUZZED(float(133185u)), (normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[1], _GLF_IDENTITY((normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[2], ((normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))[2]) + 0.0)), bvec3(false, true, true))))), exp(0.0)), (mat2x3(injectionSwitch, sqrt(exp(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), exp(0.0))) * mat2(1.0))), 0.0, 0.0, 1.0, 0.0)), min(vec2(mat3x2(vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sqrt(exp(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), exp(0.0)), (mat2x3(injectionSwitch, sqrt(exp(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), exp(0.0))) * mat2(1.0))), 0.0, 0.0, 1.0, 0.0)), vec2(mat3x2(vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, sqrt(exp(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), exp(0.0)), (mat2x3(injectionSwitch, sqrt(exp(0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), exp(0.0))) * mat2(1.0))), 0.0, 0.0, 1.0, 0.0)))))))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.x;
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(123.183)), vec2(_GLF_FUZZED(7.7), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 1)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w = subgroup_size;
  }
 else
  {
  }
 GLF_merged2_0_3_61_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_sizeread_1.xyz.z = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.w;
 GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.y = GLF_merged2_0_3_61_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_sizeread_1.xyz.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))))))), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = ((-86340 & 0) & -12946); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-823.528)), vec2(_GLF_FUZZED(float(-32592)), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), bvec2(false, true)))) - sin(vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-606.471, 58.69, 89.81, -87.73).t)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0))), (float(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, tan(0.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, log(1.0), 0.0, 1.0, cos(0.0), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, abs(1.0)))) * 1.0))))), bool(true))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.xy.x = GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.x;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), true && (bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-7755.0030)), bool(false))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
  {
   _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.x = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.xy.x, (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.xy.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u * (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.x = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.xy.x, (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.xy.x) | 0u), (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.xy.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))));
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true)))) || false)))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.y = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 do
  {
   GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.y;
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.w = GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.z = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.w, _GLF_IDENTITY((true ? GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.w : _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(5u), uvec4(5u))) | (GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup)).w)), 0u | ((true ? GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.w : _GLF_FUZZED(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.w)))));
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))))) && true)))
    {
    }
   else
    {
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false) || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.4) : injectionSwitch.y))))))))
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.x = GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.z;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(ivec2(1), _GLF_struct_3(_GLF_struct_0(uvec2(1u), bvec3(true), mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), mat2(1.0), ivec4(1), uvec3(1u), mat4x2(1.0)), _GLF_struct_1(mat3(1.0), mat2x3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), vec3(1.0), mat4x2(1.0), bvec3(true), ivec2(1)), true, ivec3(1), _GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), _GLF_struct_2(bvec3(true), vec2(1.0), 1.0, mat3x4(1.0), ivec4(1)), ivec4(1)), _GLF_struct_7(_GLF_struct_4(1, mat4x3(1.0)), true, bvec3(true), _GLF_struct_5(mat3x2(1.0), ivec4(1)), gl_WorkGroupSize.x, ivec3(1), _GLF_struct_6(1, mat4x3(1.0), 1.0, _GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), false)))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(true))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(true)))))), true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(true))))))))))))), mat2x3(1.0), true)), uvec2(1u), uvec3(1u), _GLF_struct_9(ivec2(1), vec4(1.0), _GLF_struct_8(vec4(1.0), bvec2(true), ivec3(1), uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) << 0u)))), uvec2(1u), ivec3(1)), mat3x2(1.0)));
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_3_74_3_1_12GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.y = GLF_merged2_0_3_74_3_1_12GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), bool(bvec2(! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)), false))))); _injected_loop_counter --)
    {
     GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.y = GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.y;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bool(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.w = _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy, uvec2(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy[0], GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy[1])), (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy, uvec2(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy[0], GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy[1]))) | (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy, uvec2(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy[0], GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy[1])))), GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy)).y;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w = _GLF_IDENTITY(GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id, ~ (~ (GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id))).w, 0u ^ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w = GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.w));
 _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy.y = GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w, (GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy.y = GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.w) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_IDENTITY(_GLF_FUZZED(fma(-8.8, 35.47, 5524.2904)), max(_GLF_FUZZED(fma(-8.8, 35.47, 5524.2904)), _GLF_FUZZED(fma(-8.8, 35.47, 5524.2904)))) : _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), min(1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)), injectionSwitch.y)))))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bool(true))))), ! (! ((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bool(true)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(true, (true) && true))))) || false))) || false))), ! (! ((! (_GLF_IDENTITY(true, (true) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
      {
      }
     else
      {
       barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(8), int(8))), int(_GLF_IDENTITY(ivec2((0 >> _GLF_IDENTITY(int(8), int(8))), 1), ivec2(0, 0) + (ivec2((0 >> _GLF_IDENTITY(int(8), int(8))), 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint workgroup_base = _GLF_struct_replacement_10._f2.workgroup_size * GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy.y;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), int(ivec2(int(0), 0))))) >> _GLF_IDENTITY(int(1), int(1))) + (_GLF_IDENTITY(int(3), (int(3)) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), int(3))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))) + (int(3)), _GLF_IDENTITY(((_GLF_IDENTITY(0, (0) ^ (21153 & 0)) >> _GLF_IDENTITY(int(1), int(1))) + (int(3))), (true ? _GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(1), int(1))) + (int(3))), (_GLF_IDENTITY(((0 >> _GLF_IDENTITY(int(1), int(1))) + (int(3))), (((0 >> _GLF_IDENTITY(int(1), int(1))) + (int(3)))) ^ (0 | 0))) >> 0) : _GLF_FUZZED(61244))) >> 0)))) + 0))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true && (false))))) || false)) || false)))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((0 ^ 0) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
      }
     _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y) + 0u);
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy.x = GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z, 1u * (GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy.x = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z, uint(uvec2(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z, clamp(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z) | (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z, _GLF_IDENTITY(~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z)), 0u + (~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z))))))), _GLF_IDENTITY(0u, (0u) / 1u)))))), ~ (~ (GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy.x = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z, (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.z) - 0u)))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (! ((bool(false))))) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = _GLF_IDENTITY(0, (false ? _GLF_FUZZED(67604) : 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, (0) * 1) << _GLF_IDENTITY(int(7), int(7)))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0), 0 | (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7204.7767), _GLF_FUZZED(-5.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).x > injectionSwitch.y)))))))
      barrier();
    }
  }
 else
  {
  }
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.z = _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, _GLF_IDENTITY(_GLF_IDENTITY(max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy))), (max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, min(_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, min(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid)), _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, (true ? GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))))).xy)))) >> uvec2(0u, 0u)), min(_GLF_IDENTITY(max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy))), ~ (~ (_GLF_IDENTITY(max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, _GLF_IDENTITY(max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy), _GLF_IDENTITY(uvec2(uvec4(max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy), 1u, (0u | 0u))), (_GLF_IDENTITY(uvec2(uvec4(max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy), 1u, (0u | 0u))), max(uvec2(uvec4(max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy), 1u, (0u | 0u))), uvec2(uvec4(max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy), 1u, (0u | 0u)))))) - uvec2(0u, 0u))))), uvec2(0u, 0u) | (max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, max(_GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy)), GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy)))))))), max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, _GLF_IDENTITY(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, max(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy, GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy)))))).x;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.z + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) ^ 0u), 0u, 0u)))) >> 0u, min((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) | (1u))) ^ 0u, ((_GLF_IDENTITY(1u, (1u) | (1u))) ^ 0u) - 0u)), 0u, 0u)))) >> 0u, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) ^ 0u), 0u, 0u)))) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)))).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)))).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)))).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u))) / 1u)) << 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))) | uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) - 0u)) + 0u), 0u, 0u, 0u)))).w, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))), ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))), ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u))))) << 0u))) >> 0u))) * _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.y, min(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.y, GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.y)), (_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(-5978.7037)) : GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.z + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ ((1u)))) | (1u))) ^ 0u), 0u, 0u)))) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(true ? 0u : _GLF_FUZZED(subgroup_local_id), (true ? 0u : _GLF_FUZZED(subgroup_local_id)) | (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(subgroup_local_id), max(true ? 0u : _GLF_FUZZED(subgroup_local_id), true ? 0u : _GLF_FUZZED(subgroup_local_id)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, 1u, 1u, 1u)).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))) ^ uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)))), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)).w, 1u, 0u, 0u)))) >> 0u))) * GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(floatBitsToUint(-5978.7037)) : GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.z + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((1u), ~ (~ ((1u)))), (_GLF_IDENTITY((1u), ~ (~ ((1u))))) ^ 0u) | (1u))) ^ 0u), 0u, 0u)))) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), ~ (~ (uvec4(1u, 1u, 1u, 1u))))).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), ~ (~ (uvec4(1u, 1u, 1u, 1u))))).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), ~ (~ (uvec4(1u, 1u, 1u, 1u))))).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), ~ (~ (uvec4(1u, 1u, 1u, 1u))))).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), ~ (~ (uvec4(1u, 1u, 1u, 1u))))).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)), 1u, 0u, 1u)), (uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), ~ (~ (uvec4(1u, 1u, 1u, 1u))))).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)), 1u, 0u, 1u))) + 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u) | _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid) : (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)))).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)).w, 1u, 0u, 0u)))) >> 0u))) * GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (false ? _GLF_FUZZED(floatBitsToUint(-5978.7037)) : GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.z + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ ((1u)))) | (1u))) ^ 0u), 0u, 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), clamp(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), 1u), max(uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), 1u), uvec2(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))))), 1u))))), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, 1u, 1u, 1u)).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)).w, 1u, 0u, 0u)))) >> 0u))) * GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.y))) | (false ? _GLF_FUZZED(floatBitsToUint(-5978.7037)) : GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.z + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ _GLF_IDENTITY(((1u)), (_GLF_IDENTITY(((1u)), _GLF_IDENTITY(uint(uvec3(((1u)), 1u, 0u)), (uint(uvec3(((1u)), 1u, 0u))) | (uint(uvec3(((1u)), 1u, 0u)))))) - 0u))) | (1u))) ^ 0u), 0u, 0u)))) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, 1u, 1u, 1u)).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, 1u, 1u, 1u)).w, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)) >> 0u)) + 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, 1u, 1u, 1u)).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, 1u, 1u, 1u)).w, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, 1u, 0u, 0u)))) >> 0u)) >> 0u)) + 0u))) << 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, uvec4(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)).w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)).w, 1u, 0u, 0u)))) >> 0u))) * GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.y)))) + GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.x;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
  {
   do
    {
     GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x;
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 | (~ (1)))))])))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), round(length(normalize(vec2(1.0, 1.0))))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, exp(0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, exp(0.0)))), min(mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, exp(0.0)))), mat2(1.0) * (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), clamp(vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), (false ? _GLF_FUZZED(vec2(7603.8670, 2.8)) : vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))))))).y) : _GLF_FUZZED(determinant(mat3(-214.948, 3.1, -42.55, -6.6, -64.48, -7.2, -88.51, 704.774, 4.0)))))))))), false, true, true)))))))), ! (! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), round(length(normalize(vec2(1.0, 1.0))))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, exp(0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, exp(0.0)))), min(mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, exp(0.0)))), mat2(1.0) * (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), clamp(vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), (false ? _GLF_FUZZED(vec2(7603.8670, 2.8)) : vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))))))).y) : _GLF_FUZZED(determinant(mat3(-214.948, 3.1, -42.55, -6.6, -64.48, -7.2, -88.51, 704.774, 4.0)))))))))), false, true, true)))))))), ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x3(injectionSwitch[1], 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(0.0, 1.0))), round(length(normalize(vec2(1.0, 1.0))))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))) ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + determinant(mat2(sqrt(0.0), 0.0, 0.0, 0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.6) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (true ? max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, exp(0.0))), _GLF_IDENTITY(mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, exp(0.0)))), min(mat2(1.0) * (vec2(mat2(injectionSwitch, 1.0, exp(0.0)))), mat2(1.0) * (_GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), clamp(vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), (false ? _GLF_FUZZED(vec2(7603.8670, 2.8)) : vec2(mat2(injectionSwitch, 1.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))))))).y) : _GLF_FUZZED(determinant(mat3(-214.948, 3.1, -42.55, -6.6, -64.48, -7.2, -88.51, 704.774, 4.0)))))))))), false, true, true))))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY(1 | 1, clamp(1 | 1, _GLF_IDENTITY(1 | 1, _GLF_IDENTITY(0, min(0, 0)) ^ (1 | 1)), 1 | 1)), (_GLF_IDENTITY(1 | 1, clamp(1 | 1, _GLF_IDENTITY(1 | 1, _GLF_IDENTITY(0, min(0, 0)) ^ (1 | 1)), 1 | 1))) | (_GLF_IDENTITY(1 | 1, clamp(1 | 1, _GLF_IDENTITY(1 | 1, _GLF_IDENTITY(0, min(0, 0)) ^ (1 | 1)), 1 | 1)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED((-7.7 * -3.9))), float(float(injectionSwitch.x)), bool(true))), float(_GLF_IDENTITY(_GLF_FUZZED(9.1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(9.1) : _GLF_FUZZED(inversesqrt(-39.61))))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))))) : _GLF_FUZZED(min(-5.5, 0.3)))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED((-7.7 * -3.9))), float(float(injectionSwitch.x)), bool(true))), float(_GLF_IDENTITY(_GLF_FUZZED(9.1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(9.1) : _GLF_FUZZED(inversesqrt(-39.61))))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))))) : _GLF_FUZZED(min(-5.5, 0.3)))) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED((-7.7 * -3.9))), float(float(injectionSwitch.x)), bool(true))), float(_GLF_IDENTITY(_GLF_FUZZED(9.1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(9.1) : _GLF_FUZZED(inversesqrt(-39.61))))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))))) : _GLF_FUZZED(min(-5.5, 0.3)))) > injectionSwitch.y))), bool(bool(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(true, (true) || false))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED((-7.7 * -3.9))), float(float(injectionSwitch.x)), bool(true))), float(_GLF_IDENTITY(_GLF_FUZZED(9.1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(9.1) : _GLF_FUZZED(inversesqrt(-39.61))))), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.1)), bool(false))))) : _GLF_FUZZED(min(-5.5, 0.3)))) > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))) && true)))
  barrier();
 GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id.y = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x, (GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x, (GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x) / ((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))), 0u + (uint(_GLF_IDENTITY(uint(1u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))), min((_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))), (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))))))))))) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x, (GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x, (GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x, (GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x) / ((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))))), (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))))), (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))) + 0u)) / 1u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))))), (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))) + 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))))), (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))) + 0u)), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))))), (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))) + 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))))), (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))) + 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))))), (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))) + 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))))), (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))) + 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))))), (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))) + 0u))) ^ 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u)))))), (_GLF_IDENTITY(uint(1u), ~ (~ (_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(GLF_merged2_0_2_50_2_2_51GLF_merged2_0_1_13_1_1_12num_workgroupworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x) : uint(1u))))))) + 0u))))))) << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x, 1u * (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x, 0u ^ (GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x))))) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))), (0u & 90335u) ^ (GLF_merged2_0_2_48_2_2_49GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.xy.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))) && true)))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
          {
           GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.xy.y = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id, ~ (~ (GLF_merged4_0_1_17_1_1_11_2_1_14_3_1_12subgroup_local_idvirtual_gidworkgroup_baseworkgroup_id))).y;
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, true, true))));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec4(bvec3(bvec2(false, false), true), true)))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7085.9695) : _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))) / 1.0)))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.y = GLF_merged3_0_2_53_2_1_13_3_1_12GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gidnum_workgroupworkgroup_id.xy.y;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((true ? -557.338 : -34.54))), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0) + (injectionSwitch)).x), bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))) > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = ((0 ^ (0 | 0)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0)); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | ((0u))) * 1u)), (uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) | ((0u))) * 1u))) + uvec3(0u, 0u, 0u)) ^ (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))).z, uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz, uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (0u) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)))) ^ (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u)))).z, 0u, 0u))) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.w) | 0u))) * GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.y + _GLF_IDENTITY(((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.x + 1) % _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy, (false ? _GLF_FUZZED(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup, (GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup) + uvec4(0u, 0u, 0u, 0u)).wx) : GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy)).y), 0u + (((GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.x + 1) % GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.xy.y)));
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.x = next_virtual_gid;
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.z = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.x;
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))).y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.w = GLF_merged3_0_2_49_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_sizenext_virtual_gidnum_workgroup.z;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) + 0.0)))))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)) || false), true), bvec3(bvec4(bvec3(true, false, true), false)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             atomicStore(buf[_GLF_IDENTITY(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.w, (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.w) - (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) | (4)), 64, _GLF_IDENTITY(4, 0 ^ (4)));
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
      }
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))));
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_1 = atomicLoad(buf[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.y], 4, 64, 0);
 GLF_merged2_0_3_61_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_sizeread_1.w = read_1;
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y = GLF_merged2_0_3_61_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_sizeread_1.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.xyz.y], _GLF_IDENTITY(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), (4) | (4)), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.z = read_2;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_61_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_sizeread_1.xyz.x = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_13next_virtual_gidnum_workgroupread_2subgroup_size.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z = GLF_merged2_0_3_61_3_1_6GLF_merged3_0_1_6_1_1_11_2_1_13read_2subgroup_idsubgroup_sizeread_1.xyz.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))), true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(true, true, false, true)))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bool(! (! (false))), true && (bool(! (! (false)))))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     atomicStore(buf[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_basenext_virtual_gid.w], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, uint(uvec3(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), 0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))))), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))) << uvec4(0u, 0u, 0u, 0u)).y)) >> 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY(max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), ((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u)), ~ (~ (max(_GLF_IDENTITY(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), min((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)))) | ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)))) / 1u), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)))), ((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u)))))), 0u), max(uvec2(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY(max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), ((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u)), (max(_GLF_IDENTITY(0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) * uvec4(1u, 1u, 1u, 1u)).y), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), ((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), 0u), uvec2(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), ((_GLF_IDENTITY(0u, (0u) - 0u) + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), 0u ^ ((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u))), 0u)))))) == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z, ! (! (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, 0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, uint(uvec3(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, clamp(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), 0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))))), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))) << uvec4(0u, 0u, 0u, 0u)).y), 0u | ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))) << uvec4(0u, 0u, 0u, 0u)).y)))) >> 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), ((0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, clamp(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id)))), GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))) << uvec4(0u, 0u, 0u, 0u)))).y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u))), 0u), max(uvec2(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), ((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u))), 0u), uvec2(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), _GLF_IDENTITY(((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))), ~ (_GLF_IDENTITY(~ (((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)))), (~ (((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))))) / 1u))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u))), 0u)))))) == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z, ! (! (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, 0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, uint(uvec3(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), 0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)))) | (_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), 0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))))), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))) << uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u))).y)) >> 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), ((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, uint(uvec3(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, 0u, 1u)))))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u))), 0u), max(uvec2(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) ^ 0u), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), (_GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), uint(_GLF_IDENTITY(uvec4((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), 1u, 1u, 1u), (uvec4((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), 1u, 1u, 1u)) | (uvec4((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), 1u, 1u, 1u)))))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), 0u ^ (_GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) - 0u)))) >> 0u))), 0u), uvec2(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), ((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id) / uvec4(1u, 1u, 1u, 1u))) / uvec4(1u, 1u, 1u, 1u)).y))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u))), 0u)))))) == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z, ! (! (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, 0u + _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), min((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)))) == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, uint(uvec3(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, max(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)))) ^ 0u))))) | (_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY(max(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), 0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), (max(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), 0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) >> (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, clamp(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))), (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, clamp(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)))) | (~ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, clamp(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)))))))), (0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id))) << uvec4(0u, 0u, 0u, 0u)).y)) >> _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), ~ (~ (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)))), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), ((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, (true ? GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y : _GLF_FUZZED(num_workgroup)))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (true ? 0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y) : _GLF_FUZZED((read_1 * workgroup_id))))) >> 0u))), 0u), max(uvec2(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), ((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u))), 0u), uvec2(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), max(_GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), _GLF_IDENTITY((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)), ((0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) | (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y))) | 0u)), _GLF_IDENTITY(0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y), (0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) >> 0u))), 0u)))))) == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z, ! (! (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y, 0u + (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.y)) == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_11num_workgroupread_1read_2subgroup_id.z)))))) + 1, 4, 64, 4);
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
}
