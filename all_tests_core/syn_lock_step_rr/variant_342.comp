#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 ivec3 _f0;
 mat4x2 _f1;
 uint subgroup_local_id;
 float _f2;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 uvec2 _f1;
 _GLF_struct_4 _f2;
 uint workgroup_id;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
} ;

struct _GLF_struct_3 {
 uint subgroup_size;
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(gl_SubgroupSize, _GLF_struct_0(vec3(1.0)), _GLF_struct_1(bvec3(true)), _GLF_struct_2(mat2(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_7(ivec3(1), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), float(mat4x3(1.0, exp(0.0), 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(-54.09)), bool(false)))), gl_SubgroupInvocationID, 1.0));
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, (0u | 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), clamp(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(1u)))) ^ 0u)), uint(uvec3(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), 1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))))))))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))) << 0u)), _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), gl_NumWorkGroups.x)), gl_NumWorkGroups.x))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(1u), uint(1u)), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u))).x))), (gl_NumWorkGroups.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), 0u + ((gl_NumWorkGroups.x)))) << (1u ^ 1u)), _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x)), (min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))) | 0u)), _GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), _GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u ^ (gl_NumWorkGroups.x), 0u ^ (0u ^ (gl_NumWorkGroups.x)))), (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ ((1u)))) - 0u)))), uint(1u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))), (uvec3(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u))), min(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))), (uvec3(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups))))), (uvec3(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ ((gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u)))))) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))) << 0u))), (false ? _GLF_FUZZED(177224u) : _GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), (_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x)))) / 1u), _GLF_IDENTITY((gl_NumWorkGroups.x), _GLF_IDENTITY(min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x)), uint(uvec4(min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) ^ 0u)), 0u, 0u), (false ? _GLF_FUZZED(uvec3(193353u, 122381u, 47298u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) ^ 0u)), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) ^ 0u)), 0u, 0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) ^ 0u)), 0u, 0u), uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) ^ 0u)), 0u, 0u)))))).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (0u ^ 0u) | (((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 1u, 1u, 0u), min(uvec4(_GLF_IDENTITY(((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (0u ^ 0u) | (((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 1u, 1u, 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (0u ^ 0u) | (((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (0u ^ 0u) | (((_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), 1u, 1u, 0u))))))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ ((1u)))) - 0u)), (min(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY((1u), ~ (~ ((1u)))) - 0u))) + 0u))), uint(1u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))) << 0u))), min(_GLF_IDENTITY(max((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), gl_NumWorkGroups, gl_NumWorkGroups)).x), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, 1u))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(uint(true)))))))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), _GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), _GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ ((1u)))) - 0u)))), uint(1u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))) << 0u))), 0u | (max((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), (_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), (true ? _GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u, max(0u, 0u)) ^ (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))) ^ (0u | 0u))), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ _GLF_IDENTITY(((1u)), 0u ^ (((1u)))))) - 0u)))), uint(1u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_id))), 0u, 0u)).x))), (gl_NumWorkGroups.x))) << 0u))))), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), clamp(_GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u), (((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (_GLF_IDENTITY(0u, max(0u, 0u)) | 0u)) - 0u)) ^ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x), min((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))))), (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(false, bool(bvec3(false, false, true))) ? _GLF_FUZZED(uvec3(127370u, 148406u, 167046u)) : _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)))).x))), _GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (0u | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))), _GLF_IDENTITY((gl_NumWorkGroups.x), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))) + (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | 0u)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))).x))), min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) ^ uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ ((1u)))) - 0u)))), uint(1u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)).x))), (gl_NumWorkGroups.x))) << 0u))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat4x3(1.0), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u)))), _GLF_struct_4(mat4x2(1.0)), gl_WorkGroupID.x, _GLF_struct_5(uvec3(1u), vec4(1.0)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)), (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, (_GLF_struct_replacement_6.workgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, ~ (~ (_GLF_struct_replacement_6.workgroup_id)))) | _GLF_IDENTITY((0u | 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u | 0u) : _GLF_FUZZED(min(workgroup_size, subgroup_id)))))))) - 0u), _GLF_struct_replacement_6.workgroup_id))) / 1u), _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, min(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, min(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)))), 0u + (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, min(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id))))))))), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)), (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, (_GLF_struct_replacement_6.workgroup_id) | (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, ~ (~ (_GLF_struct_replacement_6.workgroup_id)))) | _GLF_IDENTITY((0u | 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (0u | 0u) : _GLF_FUZZED(min(workgroup_size, subgroup_id)))))))) - 0u), _GLF_struct_replacement_6.workgroup_id))) / 1u), _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, min(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, min(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)))), 0u + (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, min(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id))))))))))), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)), (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)), (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, (_GLF_struct_replacement_6.workgroup_id) - 0u), clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)), (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id))) ^ 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)), (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id))) ^ 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, min(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, min(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)))), 0u + (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, clamp(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, min(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id)))), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_6.workgroup_id, min(_GLF_struct_replacement_6.workgroup_id, _GLF_struct_replacement_6.workgroup_id))))))), _GLF_struct_replacement_6.workgroup_id)))))))))) | 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u), ~ (~ (uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u))))))))))), clamp(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))))), workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))))), workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))), min(~ (_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))), ~ (_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))))))))))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))))), clamp(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))))), workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)) * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))))), workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u))))))))))), (uint(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_8._f0.subgroup_local_id), (true ? ~ (_GLF_struct_replacement_8._f0.subgroup_local_id) : _GLF_FUZZED(workgroup_size))))), 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))))), clamp(workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))))), (_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u))))))))) * 1u), workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, (_GLF_struct_replacement_8._f0.subgroup_local_id) | (0u | 0u)), uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))))))), workgroup_base + subgroup_id * _GLF_struct_replacement_3.subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), 0u | (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), (_GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), clamp(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), _GLF_IDENTITY(uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)), (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u))) | (uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u)))), uint(uvec2(_GLF_struct_replacement_8._f0.subgroup_local_id, 1u))))) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))))))))))) << 0u) : _GLF_FUZZED(num_workgroup)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), workgroup_base))) << 0u), (workgroup_base) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), _GLF_IDENTITY(uint(uvec2(max(workgroup_base, workgroup_base), 0u)), ~ (~ (uint(uvec2(max(workgroup_base, workgroup_base), 0u))))))) + subgroup_id * _GLF_struct_replacement_3.subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1))) % _GLF_struct_replacement_3.subgroup_size), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), (0u ^ 0u) + (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + subgroup_id * _GLF_struct_replacement_3.subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1))) % _GLF_struct_replacement_3.subgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_3.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_3.subgroup_size, ~ (~ (subgroup_id * _GLF_struct_replacement_3.subgroup_size))), subgroup_id * _GLF_struct_replacement_3.subgroup_size)) + ((_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1))) % _GLF_struct_replacement_3.subgroup_size), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), workgroup_base)) + subgroup_id * _GLF_struct_replacement_3.subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, (_GLF_struct_replacement_8._f0.subgroup_local_id + 1) + 0u), _GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1))) % _GLF_struct_replacement_3.subgroup_size)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * _GLF_struct_replacement_3.subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id, 0u ^ (_GLF_struct_replacement_8._f0.subgroup_local_id))) | (_GLF_struct_replacement_8._f0.subgroup_local_id)) + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1))) << 0u), clamp(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1))))) % _GLF_struct_replacement_3.subgroup_size), 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_size, min(_GLF_struct_replacement_3.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_size, (_GLF_struct_replacement_3.subgroup_size) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * _GLF_struct_replacement_3.subgroup_size, ~ (~ (subgroup_id * _GLF_struct_replacement_3.subgroup_size)))) ^ 0u) + ((_GLF_IDENTITY(_GLF_struct_replacement_8._f0.subgroup_local_id + 1, clamp(_GLF_struct_replacement_8._f0.subgroup_local_id + _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) >> 0) : _GLF_FUZZED(-18430))), _GLF_struct_replacement_8._f0.subgroup_local_id + 1, _GLF_struct_replacement_8._f0.subgroup_local_id + 1))) % _GLF_struct_replacement_3.subgroup_size))))) + (179805u & 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-1.7)), bool(false)), min(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-1.7)), bool(false)), mix(float(_GLF_FUZZED(-8.4)), float(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-1.7)), bool(false))), bool(true))), mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-1.7)), bool(false)))), min(mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(-1.7)), bool(false)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))).x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.7, clamp(-1.7, -1.7, -1.7)))), bool(false)))))) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))))) - tan(sin(0.0))) - 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))))) - tan(sin(0.0))) - 0.0) > injectionSwitch.y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))))))))))), true, false, false)), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))))))))))), true, false, false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.7, mix(float(_GLF_FUZZED(7.5)), float(_GLF_IDENTITY(-1.7, clamp(-1.7, -1.7, _GLF_IDENTITY(-1.7, (false ? _GLF_FUZZED(51.63) : -1.7))))), bool(true))))), bool(false))))) - tan(sin(0.0))) - 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.7, min(-1.7, -1.7)))), bool(false))))) - tan(sin(0.0))) - 0.0) > injectionSwitch.y)))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.7, (-1.7) / 1.0))), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))))) / 1.0) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat3(-3.7, 324.655, -7.8, 7.5, 8.3, 824.730, -44.84, -9884.0352, -33.57))))))) && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))))), false, false, true))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, min((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0))) * 1.0), (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))))))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7431.8607)), bool(false))), (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), mix(float(_GLF_FUZZED(vec2(-7866.0516, -1362.5997).y)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))), bool(true)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(27.10) : injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))) && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(log(vec2(1.0, 1.0)))).y))))))))))), true, false, false)), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false))))))) - 0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(9.6), min(_GLF_FUZZED(9.6), _GLF_FUZZED(9.6))) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x3(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(78.82) : float(injectionSwitch.x))), determinant(mat2(1.0, sin(0.0), 1.0, 1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))), float(_GLF_FUZZED(-1.7)), bool(false)))) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))))))))))), true, false, false))))))))))) && true)), bool(_GLF_IDENTITY(bvec2(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.0)), bool(false))), 1.0, cos(0.0), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))), float(_GLF_IDENTITY(mat2x3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.0)), bool(false))), 1.0, cos(0.0), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))), 0.0, 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0)), 1.0, 0.0), transpose(transpose(mat2x3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.0)), bool(false))), 1.0, cos(0.0), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), max(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))), 0.0, 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0)), 1.0, 0.0)))))) - _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.8)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-9.2)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(9.6, -71.87, -14.12, -8.7).q)), bvec2(true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-1.7)), (_GLF_IDENTITY(float(_GLF_FUZZED(-1.7)), (_GLF_IDENTITY(float(_GLF_FUZZED(-1.7)), max(float(_GLF_FUZZED(-1.7)), float(_GLF_FUZZED(-1.7))))) - 0.0)) * cos(0.0)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.7, max(-1.7, _GLF_IDENTITY(-1.7, float(mat3(-1.7, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))))))), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / sqrt(1.0)), float(_GLF_FUZZED(-1.7)), bool(_GLF_IDENTITY(false, (false) || false))))) - 0.0) > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.7, max(-1.7, _GLF_IDENTITY(-1.7, float(mat3(-1.7, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))))))), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / sqrt(1.0)), float(_GLF_FUZZED(-1.7)), bool(_GLF_IDENTITY(false, (false) || false))))) - 0.0) > injectionSwitch.y))))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(-1.7, max(-1.7, _GLF_IDENTITY(-1.7, float(mat3(-1.7, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))))))), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])).x, mix(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / sqrt(1.0)), float(_GLF_FUZZED(-1.7)), bool(_GLF_IDENTITY(false, (false) || false))))) - 0.0) > injectionSwitch.y)))))) && true)))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)), vec2(vec3(_GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, 0.0)), min(vec2(mat2(injectionSwitch, 1.0, 0.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED((mat4(-144.471, -244.753, -120.184, -1.8, 67.60, -3056.2049, -40.21, -5.3, 193.961, 34.72, 17.59, 625.218, -9490.2174, -5831.4323, 77.26, -6.5) * mat4(-0.0, -0.0, -8.5, -9.8, 110.990, -9581.4148, -57.27, -2573.8891, -3003.2027, 75.98, 6.2, 668.028, 0.0, 248.053, -5.6, -7142.6084))))))), 1.0, 0.0)))), 1.0)))).x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-1.7)), 1.0 * (float(_GLF_FUZZED(-1.7)))), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(sqrt(0.0))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), mix(float(_GLF_FUZZED(-2.5)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))), bool(true)))) + 0.0)))) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), max(_GLF_FUZZED(-1.7), _GLF_FUZZED(-1.7)))), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-1.7)), 1.0 * (float(_GLF_FUZZED(-1.7)))), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + abs(sqrt(0.0))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false))), mix(float(_GLF_FUZZED(-2.5)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))), bool(true)))) + 0.0)))) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec2(true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0), min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, (false ? _GLF_FUZZED(9.6) : (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(-1.7), max(_GLF_FUZZED(-1.7), _GLF_FUZZED(-1.7)))), bool(false)))) - 0.0))) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0, float(float((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.7)), bool(false)))) - 0.0) > injectionSwitch.y))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), clamp(_GLF_IDENTITY(max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), clamp(max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))), max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), _GLF_IDENTITY(max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), min(max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))), max(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))))))], uint(1), 4, 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) - 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) - 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) - 0)), (~ (_GLF_IDENTITY(4, (4) - 0))) << 0)) / 1)) << 0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), _GLF_IDENTITY(uint(uvec4((~ (virtual_gid)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4((~ (virtual_gid)), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)))], (buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))]) | _GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) | 0u)), (_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) | 0u))) - 0u)], clamp(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), min(~ (~ (virtual_gid)), ~ (~ (virtual_gid)))))], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], (buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))]) - 0u))), buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))]))), ((_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) | 0u)), (_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (virtual_gid)), ((~ (virtual_gid))) | 0u))) - 0u)], clamp(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), min(~ (~ (virtual_gid)), ~ (~ (virtual_gid)))))], _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], (buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))]) - 0u))), buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))])))) / 1u)), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true)))), ! (! (bool(bvec3(false, true, true))))))) && true)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(5.2, -6.9, 2738.7684, -4764.3394).z)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0)))), bool(true)))), clamp((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(5.2, -6.9, 2738.7684, -4764.3394).z)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0)))), bool(true)))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec4(5.2, -6.9, 2738.7684, -4764.3394).z)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0)))), bool(true)), min(mix(float(_GLF_FUZZED(vec4(5.2, -6.9, 2738.7684, -4764.3394).z)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0)))), bool(true)), mix(float(_GLF_FUZZED(vec4(5.2, -6.9, 2738.7684, -4764.3394).z)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0)))), bool(true)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(5.2, -6.9, 2738.7684, -4764.3394).z)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0)))), bool(true)))))) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))))), 0.0, 0.0, 1.0, 1.0, abs(1.0)))) > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true), false, false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec3(bool(! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-350.094)), bool(false))))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (false)), bool(bvec3(bool(! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool(! (false)), bool(bvec3(bool(! (false)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))) && true)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))), true && ((_GLF_IDENTITY(! (false), false || (! (false)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), true && _GLF_IDENTITY(((! (false))), bool(bvec4(((! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(bvec4(((! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_IDENTITY(! (! (! (false))), true && (! (! (! (false))))))), true && ((_GLF_IDENTITY(! (false), false || (! (false)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), true && _GLF_IDENTITY(((! (false))), bool(bvec4(((! (false))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))) && _GLF_IDENTITY(((! (false))), bool(bvec4(((! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
}
