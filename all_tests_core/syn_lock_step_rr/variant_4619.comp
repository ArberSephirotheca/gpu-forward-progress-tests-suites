#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(105.079)), _GLF_IDENTITY(bool(false), ! (! (bool(false)))))) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.6), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-40.21, 3.7)), max(_GLF_FUZZED(vec2(-40.21, 3.7)), _GLF_FUZZED(vec2(-40.21, 3.7)))) : injectionSwitch)))[_GLF_IDENTITY(0, (0) + 0)], _GLF_FUZZED(-3.7)), bvec2(true, false))), injectionSwitch)).y))))
      barrier();
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch, injectionSwitch)).y))))), true && _GLF_IDENTITY((false), true && ((false))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(_GLF_DEAD(false), true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(false, ! (! (false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
          }
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))) && true), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec3(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
     while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-365.131) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.4)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(345.004)), bool(false)))))))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(0, 1))) | (_GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(0, 1))) | (int(ivec2(0, 1)))))))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(6913.3338))))), (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, int(ivec3(0, 0, 0))) : _GLF_FUZZED(21158))), 1))) | (_GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(0, 1))) | (int(ivec2(0, 1)))))))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(6913.3338))))), (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true)))))) || false)))))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! ((! ((injectionSwitch.x > injectionSwitch.y))) && true), false || (! ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), true && ((! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || ((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))))))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true)))), true && (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || ((! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0)), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))))))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true)))))))))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true)))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! ((! ((injectionSwitch.x > injectionSwitch.y))) && true), false || (! ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), true && ((! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || ((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))))))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true)))), true && (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || ((! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0)), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))))))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true)))))))))))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true)))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))))))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! ((! ((injectionSwitch.x > injectionSwitch.y))) && true), false || (! ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), true && ((! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))))), (! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), injectionSwitch)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)))), injectionSwitch)) : _GLF_FUZZED(vec2(8.5, -1.5)))).y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, ! (! (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! ((injectionSwitch.x > injectionSwitch.y))) && true), (! ((! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))) && true)) && true), false || (! ((! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) && true)))))))), true && ((! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true)))))) && _GLF_IDENTITY(true, ! (! (true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || ((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))))))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true)))), true && (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || ((! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0)), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))))))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true)))))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || ((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))))))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true)))), true && (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))).x > injectionSwitch.y))), false || ((! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0)), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))))))) && true, true && ((! ((injectionSwitch.x > injectionSwitch.y))) && true)))))))), false)))))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false)))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false)))))), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false), bvec3(bvec4(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false)))))), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec4(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false)))))))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), false), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), false), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bvec3(bvec3(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), false), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).x > injectionSwitch.y)))), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true, false))), false)))))), bvec2(bvec3(bvec2(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))) > injectionSwitch.y)))), false), _GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true), true, true, true)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), false))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, length(vec2(0.0, 0.0)) + (injectionSwitch.x)) > injectionSwitch.y))))))))))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), true, false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), true, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), true, false)))))))), true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), true, false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), true, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(smoothstep(atan(844.788), 3.7, -3084.6540)) : injectionSwitch.x)) > injectionSwitch.y))), false), true, false)))))))), true, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))), false))) || false), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec3(1.0, 1.0, 1.0))))) > injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, true && (true)), true)), (bool(bvec4(false, false, true, true))) && true)), true, true)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(bvec3(true, true, true))))), true))))));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(75.29) : injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(75.29) : injectionSwitch.y))))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(75.29) : injectionSwitch.y))))), false))))));
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) / sqrt(1.0)), _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), mix(vec4(_GLF_FUZZED(-0.1), (vec4(0.0, 1.0, 1.0, 0.0))[1], _GLF_FUZZED(440.468), _GLF_FUZZED(36.44)), vec4((vec4(0.0, 1.0, 1.0, 0.0))[0], _GLF_FUZZED(95.77), _GLF_IDENTITY((vec4(0.0, 1.0, 1.0, 0.0))[2], (true ? (vec4(0.0, 1.0, 1.0, 0.0))[2] : _GLF_FUZZED(46.95))), (vec4(0.0, 1.0, 1.0, 0.0))[3]), bvec4(true, false, true, true))), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(3.6, float(mat2x3(3.6, cos(abs(0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9153.2000)), bool(false))), 0.0, 0.0, 0.0)))), _GLF_FUZZED(890.875)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 0), clamp(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 0), ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 0), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ (1)), (_GLF_IDENTITY(~ (~ (1)), clamp(~ (~ (1)), ~ (~ (1)), ~ (~ (1))))) / 1)) ^ (43656 & int(_GLF_ZERO(0.0, injectionSwitch.x))))), 0)))))]), bvec2(true, true))).y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, false)))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (_GLF_IDENTITY(0 ^ 0, _GLF_IDENTITY((0 ^ 0) << (0 ^ _GLF_IDENTITY(0, (0) + 0)), ((0 ^ 0) << (0 ^ _GLF_IDENTITY(0, (0) + 0))) | (_GLF_IDENTITY(_GLF_IDENTITY((0 ^ 0) << (0 ^ _GLF_IDENTITY(0, (0) + 0)), ((0 ^ 0) << (0 ^ _GLF_IDENTITY(0, (0) + 0))) | ((0 ^ 0) << (0 ^ _GLF_IDENTITY(0, (0) + 0)))), min(_GLF_IDENTITY((0 ^ 0) << _GLF_IDENTITY((0 ^ _GLF_IDENTITY(0, (0) + 0)), ~ (~ ((0 ^ _GLF_IDENTITY(0, (0) + 0))))), ((0 ^ _GLF_IDENTITY(0, clamp(0, 0, 0))) << (0 ^ _GLF_IDENTITY(0, (0) + 0))) - 0), (0 ^ _GLF_IDENTITY(0, 1 * (0))) << (0 ^ _GLF_IDENTITY(0, (0) + 0)))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((1 & 1), ((_GLF_IDENTITY(1 & 1, int(int(1 & 1))))) * 1)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)))), clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < (1 & 1), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), true), bvec2(bvec4(bvec2(_injected_loop_counter < (1 & 1), true), false, true))), true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)))), clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) < (1 & 1), bool(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_injected_loop_counter < (1 & 1), true), bvec2(bvec4(bvec2(_injected_loop_counter < (1 & 1), true), false, true))), true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 0 + (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, 0 + (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))), 0 + (_GLF_IDENTITY(_injected_loop_counter ++, 0 + (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0)))))) >> 0))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))))))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true)))) || false))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) ^ 0), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(ivec3(int(6), (0 >> _GLF_IDENTITY(int(7), int(7))), 0))), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))), _GLF_IDENTITY(int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(ivec3(int(6), (0 >> _GLF_IDENTITY(int(7), int(7))), 0))), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))))), 0 | (int(int((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(ivec3(int(6), (0 >> _GLF_IDENTITY(int(7), int(7))), 0))), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))))))))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) + length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false)))))), (_GLF_IDENTITY((! (false)), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true)))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false)))))), (_GLF_IDENTITY((! (false)), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true)))) || false))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && true)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false)))))), (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), true)))) || false)))))))))), true, false, _GLF_IDENTITY(true, ! (! (true))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, true, true))))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true, true)), _GLF_IDENTITY(! (! (bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))), bool(_GLF_IDENTITY(bvec3(! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bool(bvec3(! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false, false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x, mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x), bool(true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x)) < injectionSwitch.y)), true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bool(bvec3(! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false, false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x, mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x), bool(true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x)) < injectionSwitch.y)), true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), bool(bvec3(! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), false, false))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x, mix(float(_GLF_FUZZED(-3.9)), float(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x), bool(true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(17.93), _GLF_FUZZED(152.415)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, ! (! (true))), true))).x)) < injectionSwitch.y)), true), true)), true))), true))))))))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false), true && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))) || false)))))), true, false, true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (! (false)), ! (! (true && (! (false)))))))), true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, true))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true, false, true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), false)), (bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), false))) && true), true && (bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, true)), ! (! (bool(bvec4(true, true, false, true)))))), false, false))))), bool(bool(! (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))), false, false))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sin(0.0)), vec3(mat4(vec3(injectionSwitch, sin(0.0)), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0 * (determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))).x, float(mat3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sin(0.0)), vec3(mat4(vec3(injectionSwitch, sin(0.0)), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0 * (determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0))))).x, 1.0, 1.0, 1.0, 0.0, sqrt(0.0), abs(0.0), 0.0, 0.0))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(injectionSwitch, sin(0.0)), vec3(mat4(vec3(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7.8))))))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(injectionSwitch, sin(0.0)), vec3(mat4(vec3(injectionSwitch, sin(0.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(3.8, -1.3, -9.1, -1.5, -849.375, 69.20, -90.96, -9.8, -6.6, 3.5, -18.67, -5.7, 0.0, -9394.2326, -2.2, 2.2)) : mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0)))) * mat3(1.0), max((_GLF_IDENTITY(vec3(injectionSwitch, sin(0.0)), vec3(mat4(vec3(injectionSwitch, sin(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0)))) * mat3(1.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), sin(0.0)), vec3(mat4(vec3(injectionSwitch, sin(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7635.6548)), float(1.0), bool(true))))), 1.0, 1.0, 0.0)))) * mat3(1.0)))))).x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - length(vec3(0.0, 0.0, 0.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))) && true))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(_GLF_DEAD(false), false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, ~ (~ ((workgroup_size) - 0u)))) * workgroup_id;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(ivec2(int(4), 0), min(ivec2(int(4), 0), ivec2(int(4), 0))))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / exp(vec2(0.0, 0.0))).x))))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), (clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) | (_GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), min(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size), (clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)) | (clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))))))) + subgroup_local_id) | _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(_GLF_IDENTITY(uvec4((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), 1u, 1u, _GLF_IDENTITY(0u, (0u) / 1u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), 1u, 1u, _GLF_IDENTITY(0u, (0u) / 1u)), (false ? _GLF_FUZZED(uvec4(27809u, 142744u, 135355u, 175409u)) : uvec4((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))), 1u, 1u, _GLF_IDENTITY(0u, (0u) / 1u)))))))))))) | (0u ^ 0u))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | 0u), 1u, 1u)), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) << 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u | (subgroup_id), (0u | (subgroup_id)) << 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), 1u * (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)))))) : _GLF_FUZZED(workgroup_size))) * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) : _GLF_FUZZED(atomicOr(subgroup_local_id, subgroup_local_id)))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)));
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), (-89087 & 0) + (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0))))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) + 0), 0 + (_GLF_IDENTITY(64, (64) + 0)))) | (64)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-52.51) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))))))))))), bool(bvec2(! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, ! (! (true))))))))))), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) << 0), 0);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid)), max(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid)), _GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid)))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : virtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))) : virtual_gid, (true ? _GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_id)))) / 1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_id) : virtual_gid)))), 0u ^ (~ (~ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : virtual_gid, 0u + (false ? _GLF_FUZZED(workgroup_id) : virtual_gid))))))))))))) / 1u)], _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) << 0)))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED((_GLF_IDENTITY(+ (subgroup_local_id ++), 0u | (+ (subgroup_local_id ++))))) : _GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) * 1u), next_virtual_gid))))], _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) + 0u)), _GLF_IDENTITY(uint(uint(uint(read_1 == read_2))), ~ (~ (uint(uint(uint(read_1 == read_2))))))) + 1, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) >> 0))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
