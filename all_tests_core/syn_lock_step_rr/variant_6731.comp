#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 uvec2 GLF_merged2_0_1_6_1_1_14read_2workgroup_size;
 uvec4 GLF_merged2_0_3_85_3_1_14GLF_merged2_0_2_47_2_1_13GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idsubgroup_sizeworkgroup_base;
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 uvec4 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_14read_2subgroup_idsubgroup_local_idworkgroup_base;
 uvec3 GLF_merged2_0_2_47_2_1_13GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idsubgroup_size;
 GLF_merged2_0_3_85_3_1_14GLF_merged2_0_2_47_2_1_13GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idsubgroup_sizeworkgroup_base.xyz = GLF_merged2_0_2_47_2_1_13GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idsubgroup_size;
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size;
 uvec4 GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idnext_virtual_gidread_2;
 uvec4 GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id;
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 uvec4 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basenext_virtual_gidnum_workgroup;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     return;
    }
  }
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basenext_virtual_gidnum_workgroup.xy = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
    }
   return;
  }
 uvec4 GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(false))))
  return;
 uvec4 GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(8.2), _GLF_FUZZED(-7.7)), bvec2(false, false))).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) && true))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 uvec4 GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id;
 for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), false || (! ((false)))))))))
      {
      }
     else
      {
       return;
      }
    }
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, false))), bvec2(bvec3(bvec2(bvec2(bvec2(false, false))), true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                    {
                     return;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      return;
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec4 GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 uvec4 GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uvec3 GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz = GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_size;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      continue;
     break;
    }
   if(_GLF_DEAD(false))
    break;
  }
 GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz = GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.xyz;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     return;
    }
  }
 uvec2 GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1)), (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1))) | (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
      }
    }
  }
 GLF_merged2_0_3_85_3_1_14GLF_merged2_0_2_47_2_1_13GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idsubgroup_sizeworkgroup_base.xyz.xy = GLF_merged2_0_1_6_1_1_17read_2subgroup_local_id;
 do
  {
   if(_GLF_DEAD(false))
    continue;
   GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idnext_virtual_gidread_2.xy = GLF_merged2_0_3_85_3_1_14GLF_merged2_0_2_47_2_1_13GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idsubgroup_sizeworkgroup_base.xyz.xy;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.zw = GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idnext_virtual_gidread_2.xy;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       return;
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     return;
    }
  }
 uvec3 GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY((1 ^ 0), min((1 ^ 0), _GLF_IDENTITY((1 ^ 0), (true ? (_GLF_IDENTITY(1, ~ (~ (1))) ^ 0) : _GLF_FUZZED(46235))))), (true ? (1 ^ 0) : _GLF_FUZZED(_injected_loop_counter))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(int(4), max(int(4), int(4))))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))))), ! (! (_injected_loop_counter != (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1)))), min(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1)))), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) / 1))))) << 0)))))))); _injected_loop_counter --)
    {
     GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz = GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_size;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      break;
    }
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
      return;
    }
   GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz = _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, min(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz)), GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, (GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz) | (GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz)))), clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, min(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz)), GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, (GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz) | (GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz)))), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, min(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz)), GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, (GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz) | (GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz)))), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, min(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz)), GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz, (GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz) | (GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.xyz))))))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
    }
  }
 else
  {
  }
 uvec3 GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_id;
 GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz = GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), false))), false, false))))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, 1.0)), clamp(float(vec3(injectionSwitch.x, 0.0, 1.0)), float(vec3(injectionSwitch.x, 0.0, 1.0)), float(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6026.3352) : injectionSwitch.x))) / 1.0) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-763.654)))), false)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), false))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), false)))))))))), _GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), false))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), false)))))))))), _GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), false))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), true, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), true, false), false)))))))))), _GLF_IDENTITY(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
        return;
       return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
            {
             for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), 0, 1)), 0 | (_GLF_IDENTITY(int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), 0, 1)), (int(ivec3((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)), 0, 1))) ^ 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               return;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-857.984)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false)))), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false)))), false)))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || false)), false)))), false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false)))), false), true)), false, true)))))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                  {
                   return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(false))
                continue;
              }
            }
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))) || false)) || false)))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 do
  {
   GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_14read_2subgroup_idsubgroup_local_idworkgroup_base.y = GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.x;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x = _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_14read_2subgroup_idsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_14read_2subgroup_idsubgroup_local_idworkgroup_base) | uvec4(0u, 0u, 0u, 0u)).y;
 GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id.w = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x = _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id, (GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id) | (GLF_merged2_0_3_72_3_1_11GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizesubgroup_id)).w;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true)))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   return;
                  }
                }
              }
             return;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, false)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, false))))))) && true, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) && true, bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))) && true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = (0 & -37666); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1))); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(log(vec2(1.8, -644.068))) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((1 ^ 1) << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
    }
   else
    {
     GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.z = GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.x;
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged2_0_3_85_3_1_14GLF_merged2_0_2_47_2_1_13GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idsubgroup_sizeworkgroup_base.xyz.z = subgroup_size;
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y = GLF_merged2_0_3_85_3_1_14GLF_merged2_0_2_47_2_1_13GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idsubgroup_sizeworkgroup_base.xyz.z;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(-71582) : 6))), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(8), int(8))) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 | (int(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, (8) >> 0)) * 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x = GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.y;
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            break;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), true && (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ((false)) || false)))), (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)) && true)), (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0))))), false || (_GLF_IDENTITY(_injected_loop_counter > (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0)))), 0), clamp(ivec2(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0)))), 0), ivec2(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0)))), 0), ivec2(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0)))), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0)))), 0), clamp(ivec2(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0)))), 0), ivec2(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0)))), 0), ivec2(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0)))), 0))))) + (0 >> _GLF_IDENTITY(int(2), int(2)))))), ! (! (_injected_loop_counter > (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0))))))))))); _injected_loop_counter --)
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.6))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))))
            continue;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_14read_2subgroup_idsubgroup_local_idworkgroup_base.z = subgroup_local_id;
    }
  }
 GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id.w = GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_14read_2subgroup_idsubgroup_local_idworkgroup_base.z;
 do
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), int(_GLF_IDENTITY(ivec3(~ (~ (1)), 0, ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(int(int(2)))))) >> _GLF_IDENTITY(int(2), int(2)))), (ivec3(~ (~ (1)), 0, ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(_GLF_IDENTITY(int(int(2)), (int(int(2))) + 0)), (int(int(int(2)))) >> 0)))) >> _GLF_IDENTITY(int(2), int(2))))) | ivec3(0, 0, 0))))), 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 1 * (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.zw.y = _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id, max(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id, (GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id) * uvec4(1u, 1u, 1u, 1u)), GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id)), _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id, (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id))) | uvec4(0u, 0u, 0u, 0u)), GLF_merged2_0_3_75_3_1_17GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizesubgroup_local_id)).w;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
              }
            }
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.x = GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.zw.y;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true))) && true));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basenext_virtual_gidnum_workgroup.w = num_workgroup;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_6_1_1_14read_2workgroup_size.y = workgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y = GLF_merged2_0_1_6_1_1_14read_2workgroup_size.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size.y;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.y = GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.w;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         return;
        }
      }
     GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.z = GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.y;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 else
  {
  }
 do
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 | ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) | 0), 1)) | ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(ivec3(int(4), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1)), (int(ivec3(int(4), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1))) - 0)), _GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), (int(4)) * 1))))))) >> _GLF_IDENTITY(int(4), int(4)))), ! (! (_injected_loop_counter != (1 | ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))))) || false)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, max(1, 1)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) << 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) << 0)), 0 | (_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) << 0)), 0 | (int(_GLF_IDENTITY(4, (4) << 0))))))) / ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (int(4)), 1 * (_GLF_IDENTITY(~ (int(4)), _GLF_IDENTITY((~ (int(4))), clamp((~ (int(4))), (~ (int(4))), (~ (int(4))))) << 0)))))), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 ^ (0)) : _GLF_FUZZED(_injected_loop_counter))) | (1 << _GLF_IDENTITY(int(_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), int(int((_GLF_IDENTITY(4, (4) | (4))))))) | ((_GLF_IDENTITY(4, (4) | (4))))))), int(_GLF_IDENTITY(4, max(4, 4))))))) >> _GLF_IDENTITY(int(4), int(4)))))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               continue;
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               else
                {
                }
               continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             return;
            }
           GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.z = GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.z;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y;
  }
 GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.w = GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))))))) && true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ 0), _GLF_IDENTITY(((1 ^ 0)) | ((1 ^ 0)), _GLF_IDENTITY(int(ivec2(((1 ^ 0)) | ((1 ^ 0)), int(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(int(ivec2(((1 ^ 0)) | ((1 ^ 0)), int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(ivec2(((1 ^ 0)) | _GLF_IDENTITY(((1 ^ 0)), int(ivec3(((1 ^ 0)), 0, 1))), int(_GLF_ONE(1.0, injectionSwitch.y))))) * 1)) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(int(2), int(ivec3(_GLF_IDENTITY(int(2), (int(2)) ^ 0), 1, 0)))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))])).x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.y = GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.y = GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.y;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.z, max(GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.z, GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.z)) * GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.y;
 GLF_merged2_0_3_85_3_1_14GLF_merged2_0_2_47_2_1_13GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idsubgroup_sizeworkgroup_base.w = workgroup_base;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_14read_2subgroup_idsubgroup_local_idworkgroup_base.w = GLF_merged2_0_3_85_3_1_14GLF_merged2_0_2_47_2_1_13GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idsubgroup_sizeworkgroup_base.w;
 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basenext_virtual_gidnum_workgroup.xy.y = GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_14read_2subgroup_idsubgroup_local_idworkgroup_base.w;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 | (int(4)))), (int(_GLF_IDENTITY(int(4), 0 | (int(4))))) | 0))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), int(int(int(6))))) | (_GLF_IDENTITY(int(6), 0 ^ (int(6)))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (_GLF_IDENTITY(true, (true) && true)))))
      {
       return;
      }
     else
      {
      }
    }
  }
 GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.x = GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basenext_virtual_gidnum_workgroup.xy.y;
 uint virtual_gid = GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.x + GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.z * _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), max(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, ~ (~ (GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy))), 0u)))), _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u))))).x), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u))))).x), (true ? ~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u))))).x) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y), 1u * (_GLF_FUZZED(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), (_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u))))) | (_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), (_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u))))) | (_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)))))) : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size)))))).x), (~ (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, _GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), min(_GLF_IDENTITY(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), max(uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u)), uvec2(uvec3(_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, (_GLF_IDENTITY(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, (GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy) * uvec2(1u, 1u))) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0u)))), uvec2(uvec3(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy, 0u))))).x)) + 0u))))) + GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x;
  }
 else
  {
  }
 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basenext_virtual_gidnum_workgroup.xy.x = GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_14subgroup_idsubgroup_sizevirtual_gidworkgroup_size.z;
 GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.w = GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basenext_virtual_gidnum_workgroup.xy.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.x + GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.z * GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x, clamp(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.x, uint(uint(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.x, max(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.x, GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.x))))) + _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.z * GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x, (GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.z * _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x, (GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x) | (GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x))) / 1u), GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.x + GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.z * GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x, GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.xyz.x + _GLF_IDENTITY(GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.z, (1u & ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) * (GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.z)) * GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x)) + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.x + _GLF_IDENTITY(1, int(int(1)))), ((GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.x + _GLF_IDENTITY(1, int(int(1))))) | ((GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.x + _GLF_IDENTITY(1, int(int(1)))))) % GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x), (((_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (_GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(~ (0u), (~ (0u)) | (~ (0u)))))))), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)) ^ (GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz)).x + _GLF_IDENTITY(1, int(int(1)))) % GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x)) | (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id, (false ? _GLF_FUZZED(GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid) : _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id, (GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id) / uvec4(1u, 1u, 1u, 1u)))), (true ? GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id : _GLF_FUZZED(uvec4(142493u, 168543u, _GLF_IDENTITY(147668u, (147668u) | (147668u)), 137427u)))).xyz.x + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1))) << 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)))), int(int(1))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)), int(int(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)), int(int(1)))))) % GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x), (((GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.x + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, min(1, 1)))))) % GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x)) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id.y) : 0u))) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u)))), (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))))) >> (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 0u + (_GLF_IDENTITY(((GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id.xyz.x + _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), int(int(_GLF_IDENTITY(1, int(int(1))))))) % _GLF_IDENTITY(GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x, (GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x) ^ 0u)), (((_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id, max(GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id, GLF_merged2_0_3_75_3_1_12GLF_merged3_0_1_17_1_1_12_2_1_14subgroup_local_idworkgroup_idworkgroup_sizeworkgroup_id)).xyz.x + _GLF_IDENTITY(1, int(int(1)))) % GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.xy.x)) ^ _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ((0u)) | 0u)))));
 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idnext_virtual_gidread_2.z = next_virtual_gid;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basenext_virtual_gidnum_workgroup.z = GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idnext_virtual_gidread_2.z;
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & _GLF_IDENTITY(ivec2(89398, 76642).t, min(ivec2(89398, 76642).t, ivec2(89398, 76642).t)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        break;
       return;
      }
    }
   GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.x = GLF_merged3_0_2_50_2_1_16_3_1_13GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_basenext_virtual_gidnum_workgroup.z;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))
      break;
     return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), max((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         do
          {
           atomicStore(buf[GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.x], uint(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(6), int(6))) + (1))), 4, 64, 4);
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.w], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) | (4)), 64, 0);
 GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w = read_1;
 GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.y = _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w, 1u * (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w, ~ (~ (GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w))))), clamp(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w, 1u * (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w, ~ (~ _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w), (_GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w), clamp((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w), (GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w), _GLF_IDENTITY((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w), 1u * ((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w)))))) | ((GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w))))))), _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w, 0u | (GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w)), ~ (~ (GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w))))), _GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w, 1u * (_GLF_IDENTITY(GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w, ~ (~ (GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w))))))), GLF_merged2_0_3_72_3_1_6GLF_merged3_0_1_14_1_1_12_2_1_14workgroup_baseworkgroup_idworkgroup_sizeread_1.w));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint read_2 = atomicLoad(buf[GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.w], 4, 64, _GLF_IDENTITY(0, (0) | (0)));
 GLF_merged2_0_1_6_1_1_14read_2workgroup_size.x = read_2;
 GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_14read_2subgroup_idsubgroup_local_idworkgroup_base.x = GLF_merged2_0_1_6_1_1_14read_2workgroup_size.x;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idnext_virtual_gidread_2.w = GLF_merged4_0_1_6_1_1_11_2_1_17_3_1_14read_2subgroup_idsubgroup_local_idworkgroup_base.x;
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.zw.x = GLF_merged3_0_2_47_2_1_16_3_1_6GLF_merged2_0_1_6_1_1_17read_2subgroup_local_idnext_virtual_gidread_2.w;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, false))) && (false))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
              {
               return;
              }
             else
              {
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7134.3347) : injectionSwitch.y))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
    }
  }
 do
  {
   atomicStore(buf[GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz.x], uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz, (GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz) - uvec3(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u), ~ (~ (uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u)))))), 0u, 0u)), (_GLF_IDENTITY(GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz, (GLF_merged2_0_3_64_3_1_11GLF_merged3_0_1_16_1_1_6_2_1_11next_virtual_gidread_1subgroup_idvirtual_gid.xyz) - uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)).y == GLF_merged2_0_2_52_2_2_47GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizeGLF_merged2_0_1_6_1_1_17read_2subgroup_local_id.zw.x) + 1, 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(1.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 0.0, 1.0)) * (1.0)), 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, 7.2, -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, 96.73, -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))), mix(vec2((vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), (vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, _GLF_IDENTITY(7.2, clamp(_GLF_IDENTITY(7.2, (false ? _GLF_FUZZED(-4481.9486) : _GLF_IDENTITY(7.2, max(7.2, 7.2)))), 7.2, 7.2)), -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, 96.73, -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))))[0], _GLF_FUZZED(913.319)), vec2(_GLF_FUZZED(-2660.7419), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-0.0)), bool(false)))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, 7.2, -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, 96.73, -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))))[1]), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))))))) || false))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, 7.2, -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, 96.73, -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))), mix(vec2((vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0), (true ? mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), (vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, _GLF_IDENTITY(7.2, clamp(_GLF_IDENTITY(7.2, (false ? _GLF_FUZZED(-4481.9486) : _GLF_IDENTITY(7.2, max(7.2, 7.2)))), 7.2, 7.2)), -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, _GLF_IDENTITY(96.73, float(vec2(96.73, 1.0))), -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))))[0], _GLF_FUZZED(913.319)), vec2(_GLF_FUZZED(-2660.7419), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), vec2(vec3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), 0.0))))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-0.0)), bool(false)))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, 7.2, -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, 96.73, -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))))[1]), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))))))) || false)))))) * vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), max(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)))), ((injectionSwitch) * mat2(1.0))))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, 7.2, -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, 96.73, -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))), mix(vec2((vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), (vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, _GLF_IDENTITY(7.2, clamp(_GLF_IDENTITY(7.2, (false ? _GLF_FUZZED(-4481.9486) : _GLF_IDENTITY(7.2, max(7.2, 7.2)))), 7.2, 7.2)), -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, 96.73, -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))))[0], _GLF_FUZZED(913.319)), vec2(_GLF_FUZZED(-2660.7419), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)))), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))) + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-0.0)), bool(false)))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, 7.2, -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, 96.73, -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))))[1]), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))))))) || false))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-1.7) : 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, 7.2, -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, 96.73, -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))), mix(vec2((vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), (true ? mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), (vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, _GLF_IDENTITY(7.2, clamp(_GLF_IDENTITY(7.2, (false ? _GLF_FUZZED(-4481.9486) : _GLF_IDENTITY(7.2, max(7.2, 7.2)))), 7.2, 7.2)), -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, _GLF_IDENTITY(96.73, float(vec2(96.73, 1.0))), -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))))[0], _GLF_FUZZED(913.319)), vec2(_GLF_FUZZED(-2660.7419), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), vec2(vec3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), max(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), 0.0))))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-0.0)), bool(false)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), vec2(vec3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), max(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), 0.0))))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-0.0)), bool(false)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0), mat4(1.0) * (mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), vec2(vec3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), max(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), 0.0))))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-0.0)), bool(false)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), vec2(vec3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), max(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), 0.0))))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-0.0)), bool(false)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0), mat4(1.0) * (mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), vec2(vec3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), max(vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))))), 0.0))))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-0.0)), bool(false)))), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0)))))))), (true ? mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0))), cos(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat4(0.9, 1.4, 7.2, -1.7, -516.777, 96.58, -20.79, 6814.6111, 4822.4426, 96.73, -15.29, -33.03, 1374.6920, -880.028, -590.677, 246.353))))))[1]), bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, (true) && true), true), false)))))))) || false)))))) * vec2(1.0, 1.0)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
}
