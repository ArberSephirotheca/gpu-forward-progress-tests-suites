#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), ((0u)) << 0u))) | 0u)) | (0u), _GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) << 0u) | _GLF_IDENTITY((0u), uint(uvec3((0u), 0u, 1u))))) | 0u)) | (0u), 1u, 1u, 1u)), clamp(_GLF_IDENTITY(uint(uvec4((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u)) | (0u), 1u, 1u, 1u)), (uint(uvec4((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u)) | (0u), 1u, 1u, 1u))) * 1u), uint(uvec4((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u)) | (0u), 1u, 1u, 1u)), uint(uvec4((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) | 0u)) | (0u), 1u, 1u, 1u))))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) ^ _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-30.31)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-30.31)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-30.31)), bool(false))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) >> uvec3(0u, 0u, 0u)))))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))) << uvec3(0u, 0u, 0u))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 ^ (6))))) - (0 | 0)))) << 0)), int(ivec2(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), max(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY(int(6), int(6))))), ((0 << _GLF_IDENTITY(int(6), int(6)))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), (int(6)) >> (0 >> _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), (int(6)) - 0)) << 0))))), int(int((0 << _GLF_IDENTITY(int(6), int(6)))))))), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 ^ (6))))) - (0 | 0)))) << 0)), 0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(74411), (false ? _GLF_FUZZED(-76904) : _GLF_FUZZED(74411))) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, 6, 6))) - 0)), int(6)), (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 ^ (6))))) - (0 | 0)))) << 0, (((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, 6, 6))) - 0)), int(6)), (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 ^ (6))))) - (0 | 0)))) << 0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(ivec2(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), ((0 << _GLF_IDENTITY(int(6), int(6)))) | (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), int(int((0 << _GLF_IDENTITY(int(6), int(6)))))))), ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 ^ (6))))) - (0 | 0), 0 + (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 ^ (6))))) - (0 | 0), ((0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 ^ (6))))) - (0 | 0)) + (0 >> _GLF_IDENTITY(int(3), int(3))))))))) << 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) | 0) ^ (0)))))))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uint(uint(1)), (uint(uint(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.7)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))))))) << 0u))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uint(uint(1)), (uint(uint(1))) << 0u))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(1)), (uint(uint(1))) << 0u)), (true ? uint(_GLF_IDENTITY(uint(uint(1)), (uint(uint(1))) << 0u)) : _GLF_FUZZED(subgroup_size))))), (max(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uint(uint(1)), (uint(uint(1))) << 0u))), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1, clamp(1, 1, 1)))), (uint(uint(1))) << 0u)), (true ? uint(_GLF_IDENTITY(uint(uint(1)), (uint(uint(1))) << 0u)) : _GLF_FUZZED(subgroup_size)))))) / 1u))) >> 0u), _GLF_IDENTITY(4, int(ivec3(_GLF_IDENTITY(4, (4) >> 0), 1, (0 ^ 1)))), _GLF_IDENTITY(64, (64) - 0), 4);
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, (false ? _GLF_FUZZED(-42333) : (4) ^ 0))), (false ? _GLF_FUZZED(-74181) : _GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, (_GLF_IDENTITY((4) ^ 0, (false ? _GLF_FUZZED(-86657) : (4) ^ 0))) | ((4) ^ 0))))), 64, 0);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))) | (virtual_gid))], 4, _GLF_IDENTITY(64, min(64, 64)), 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) * 1u), bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bvec4(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), false, true, true))))))))) && true))))) && true, bool(bool((_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) * 1u), bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bvec4(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), false, true, true))))))))) && true))))) && true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && true)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))))))))), true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY(_GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2)))), _GLF_IDENTITY(((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), true && (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))), _GLF_IDENTITY(true, false || (true)), false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), ! (! ((_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))), true, false, true)), true))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, (read_2) | 0u))))) << 0u))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((read_1 == read_2))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((read_1 == read_2))))))))), true))))))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY(_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_IDENTITY(false, (false) && true)), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), false || (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), true && (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, uint(uvec2(read_1, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), read_1)) == read_2)), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, uint(uvec2(read_1, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), read_1)) == read_2))), ! (! (! (! (! (_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, uint(uvec2(read_1, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), read_1)) == read_2))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2, ! (! (read_1 == read_2))))), true, false, true)), true))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2, ! _GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(true, bool(bvec2(true, true))) && (_GLF_IDENTITY((! (read_1 == read_2)), ((! (read_1 == read_2))) || false))))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true))))))))))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | 0u), _GLF_IDENTITY(! (! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (read_1 == read_2)), bool(bvec3(! (! (read_1 == read_2)), true, false))), false)), (bool(bvec2(_GLF_IDENTITY(! (! (read_1 == read_2)), bool(bvec3(! (! (read_1 == read_2)), true, false))), false))) && true))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), ! (! (read_1 == read_2))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), true && (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (read_1 == read_2)), ! (! (! (! (read_1 == read_2)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true), false, false)))))))), true, false, true)), _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! _GLF_IDENTITY((! (read_1 == read_2)), true && ((_GLF_IDENTITY(! (read_1 == read_2), (_GLF_IDENTITY(! (read_1 == read_2), ! (! (! (read_1 == read_2))))) || false)))))), true))))))))))))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))))) && true)), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))))) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true && ((_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) || false), true && (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))), true, false, true)), true))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (read_1 == read_2)), false || (! (! (read_1 == read_2)))))), true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (read_1 == read_2)), false || (! (! (read_1 == read_2)))))), true)), (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (read_1 == read_2)), false || (! (! (read_1 == read_2)))))), true))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (read_1 == read_2)), false || (! (! (read_1 == read_2)))))), true)), (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (read_1 == read_2)), false || (! (! (read_1 == read_2)))))), true))) || false), true), true))))), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true))))))))))))))))), true))))))))) && true))))) && _GLF_IDENTITY(true, (true) && true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), uint(uint(~ (read_1)))))) == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))) && true), bool(bvec2(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))) && true), true))))))) && true)), false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) * 1u, ((read_2) * 1u) | ((read_2) * 1u))), ! (! (read_1 == read_2)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) || (bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), true && (_GLF_IDENTITY((read_1 == read_2), false || ((read_1 == read_2)))))))))))))))) && true))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), uint(uint(~ (read_1)))))) == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))) && true))))) && true)), false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) * 1u), ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))) && true))))) && true))))), bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), uint(uint(~ (read_1)))))) == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))) && true))))) && true)), false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) * 1u), ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))) && true))))) && true))))))))))) && true))), ((! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), uint(uint(read_1))) == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), (read_1) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(151192u) : read_1))) >> 0u)) | (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) << 0u), read_1)))) == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), ! (! (read_1 == read_2))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))), false || (bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))) && true))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), ! (_GLF_IDENTITY(! (! (read_1 == read_2)), true && (! (! (read_1 == read_2))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), ! (_GLF_IDENTITY(! (! (read_1 == read_2)), true && (! (! (read_1 == read_2))))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), ! (! (read_1 == read_2)))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true))))))))) || false)))))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! _GLF_IDENTITY((! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (bool(_GLF_IDENTITY((! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1, 0u | (read_1)) == read_2)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), true && (! (read_1 == read_2))))), ! (! (read_1 == read_2)))), true)), true && (bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), true && (! (read_1 == read_2))))), ! (! (read_1 == read_2)))), true)))), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true))))))))))))))), true, true, false))))) && true))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true && (bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), min(max(read_1, read_1), max(read_1, read_1)))) == read_2)))))))))) && true))))) && true)), false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), _GLF_IDENTITY(! (! (read_1 == read_2)), ! (! (_GLF_IDENTITY(! (! (read_1 == read_2)), (! (! (_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), true && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, false, false)))))))))) || false))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), _GLF_IDENTITY(! (! (read_1 == read_2)), ! (! (_GLF_IDENTITY(! (! (read_1 == read_2)), (! (! (_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), true && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, false, false)))))))))) || false))))))))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), _GLF_IDENTITY(! (! (read_1 == read_2)), ! (! (_GLF_IDENTITY(! (! (read_1 == read_2)), (! (! (_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), true && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, false, false)))))))))) || false))))))))))))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), _GLF_IDENTITY(! (! (read_1 == read_2)), ! (! (_GLF_IDENTITY(! (! (read_1 == read_2)), (! (! (_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), true && (_GLF_IDENTITY(bool(read_1 == read_2), bool(bvec4(bool(read_1 == read_2), false, false, false)))))))))) || false))))))))))))), true, true))), false))))))) && true))))) && true))))) && true)))) || false)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) * 1u)) - 0u) == read_2), (uint(read_1 == read_2)) - 0u), (uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 1u, 1u)))))) == read_2)) ^ 0u), uint(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)))))))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(uint(_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec3(uint(read_1 == read_2), 1u, 1u))))), 0u), (true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(uint(read_1 == read_2))) | (uint(uint(read_1 == read_2))))), 0u), (true ? uvec2(uint(uint(uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (read_2))))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))), _GLF_IDENTITY(uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(uint(read_1 == read_2))) | (uint(uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))))))), 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)), min(true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)), true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))), max(true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)), _GLF_IDENTITY(true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)), (true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u))) - uvec2(0u, 0u)))))), uvec2(uvec3(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(uint(read_1 == read_2))) | _GLF_IDENTITY((uint(uint(read_1 == read_2))), 1u * ((uint(uint(read_1 == read_2))))))), 0u), (true ? uvec2(uint(uint(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bvec2(! (read_1 == read_2), false)))))))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))), 1u)))), _GLF_IDENTITY((uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u), _GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))))))) | (uint(uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))))))), 0u), (_GLF_IDENTITY(true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)), max(true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)), true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))))), uvec2(uvec3(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(uint(read_1 == read_2))) | (uint(uint(read_1 == read_2))))), 0u), (true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))), 1u))))), ((uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u), _GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))))))) | (uint(uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))))))), 0u), (_GLF_IDENTITY(true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)), max(true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)), true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))))), uvec2(uvec3(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(uint(read_1 == read_2))) | (uint(uint(read_1 == read_2))))), 0u), (true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))), 1u)))))) / (uvec2(1u, 1u) ^ uvec2(0u, 0u))) | (uvec2(0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(uint(read_1 == read_2))) | (uint(uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))))))), 0u), (_GLF_IDENTITY(true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)), max(true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)), true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))))), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(uint(read_1 == read_2))) | (uint(_GLF_IDENTITY(uint(read_1 == read_2), 0u + (uint(read_1 == read_2))))))), 0u), (true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))), 1u), (uvec3(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(uint(read_1 == read_2))) | (uint(_GLF_IDENTITY(uint(read_1 == read_2), 0u + (uint(read_1 == read_2))))))), 0u), (true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))), 1u)) | (uvec3(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(uint(read_1 == read_2))) | (uint(_GLF_IDENTITY(uint(read_1 == read_2), 0u + (uint(read_1 == read_2))))))), 0u), (true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))), 1u)))))))))) >> uvec2(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(read_1))), 0u, 0u))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), uint(uvec4(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2) && true, false || ((read_1 == read_2) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))) && true))))) && true)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(read_1, 0u ^ (read_1)))) == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) || false)), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true))))))))))))))))) && true))))) && true), bool(bvec2(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(read_1, 0u ^ (read_1)))) == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) || false)), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true))))))))))))))))) && true))))) && true), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_IDENTITY(true, (true) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_IDENTITY(true, (true) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_IDENTITY(true, (true) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))))))) && true))))) && true)), false || ((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), true && (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))))) && true))))) && true, ! (! ((_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), true && (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))))) && true))))) && true)))))))) && true))), _GLF_IDENTITY(((! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(true, ! (! (true))) ? read_2 : _GLF_FUZZED((10428u % workgroup_base)))), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ! (! (_GLF_IDENTITY((read_1 == read_2), bool(bvec3((read_1 == read_2), true, false)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), bool(bvec4((read_1 == read_2), true, true, false)))))), true))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), bool(bvec4((read_1 == read_2), true, true, false)))))), true))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), bool(bvec4((read_1 == read_2), true, true, false)))))), true))))))))))))) && true))))))))) && true))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1)) == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, read_2))), (~ (_GLF_IDENTITY(read_2, min(read_2, read_2)))) << 0u))))))))))))) && true))))) && true)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))) && true))))) && true))), bool(bool(false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))))), read_2, _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, 1u * (read_2)), read_2)))), ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))))), read_2, _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, 1u * (read_2)), read_2)))), ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))))), read_2, _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, 1u * (read_2)), read_2)))), ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)))))))))))) && true))))) && true))))) && true)))))))) && _GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4(((! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED((10428u % workgroup_base)))), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ! (! (_GLF_IDENTITY((read_1 == read_2), bool(bvec3((read_1 == read_2), true, false)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 == read_2), ! (! (! (read_1 == read_2))))), bool(bvec4(! (_GLF_IDENTITY(! (read_1 == read_2), ! (! (! (read_1 == read_2))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true))))))))))))))))) && true))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true && (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), false || ((read_1 == read_2))) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1)) == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, read_2))), (~ (_GLF_IDENTITY(read_2, min(read_2, read_2)))) << 0u))))))))))))) && true))))) && true)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), true && ((read_1 == read_2)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))) && true))))) && true))), bool(bool(false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))) && true))))) && true)))))))) && _GLF_IDENTITY(true, ! (! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(read_1, 0u ^ (read_1)))) == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) || false)), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true))))))))))))))))) && true))))) && true), bool(bvec2(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) + (_GLF_IDENTITY(read_1, 0u ^ (read_1)))) == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) || false)), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true))))))))))))))))) && true))))) && true), false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << 0u) == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_IDENTITY(true, (true) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_IDENTITY(true, (true) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_IDENTITY(true, (true) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))))))) && true))))) && true)), false || ((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), true && (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))))) && true))))) && true, ! (! ((_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), true && (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))))) && true))))) && true)))))))) && true))), _GLF_IDENTITY(((! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(true, ! (! (true))) ? read_2 : _GLF_FUZZED((10428u % workgroup_base)))), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ! (! (_GLF_IDENTITY((read_1 == read_2), bool(bvec3((read_1 == read_2), true, false)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), bool(bvec4((read_1 == read_2), true, true, false)))))), true))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), bool(bvec4((read_1 == read_2), true, true, false)))))), true))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), bool(bvec4((read_1 == read_2), true, true, false)))))), true))))))))))))) && true))))))))) && true))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1)) == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, read_2))), (~ (_GLF_IDENTITY(read_2, min(read_2, read_2)))) << 0u))))))))))))) && true))))) && true)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))) && true))))) && true))), bool(bool(false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))))), read_2, _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, 1u * (read_2)), read_2)))), ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))))), read_2, _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, 1u * (read_2)), read_2)))), ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)))))))), ! (! (bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 0u))))), read_2, _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, 1u * (read_2)), read_2)))), ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || false)))))))))))) && true))))) && true))))) && true)))))))) && _GLF_IDENTITY(true, ! (! (true))))))), bool(bvec4(((! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED((10428u % workgroup_base)))), (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ! (! (_GLF_IDENTITY((read_1 == read_2), bool(bvec3((read_1 == read_2), true, false)))))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (read_1 == read_2), ! (! (! (read_1 == read_2))))), bool(bvec4(! (_GLF_IDENTITY(! (read_1 == read_2), ! (! (! (read_1 == read_2))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true)), true && (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), ! (! (bool(bvec2(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), true))))))))))))))))) && true))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true && (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), false || ((read_1 == read_2))) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1)) == read_2)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(read_2, read_2))), (~ (_GLF_IDENTITY(read_2, min(read_2, read_2)))) << 0u))))))))))))) && true))))) && true)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! _GLF_IDENTITY((read_1 == read_2), true && ((read_1 == read_2)))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))) && true))))) && true))), bool(bool(false || ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))))) && true))))) && true)))))))) && _GLF_IDENTITY(true, ! (! (true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), true)))))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)), (_GLF_IDENTITY(read_1, (read_1) * 1u)) - 0u) == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(read_1) : read_1)) == read_2), 0u ^ (uint(read_1 == read_2)))) - 0u), (uint(read_1 == read_2)) ^ 0u), _GLF_IDENTITY(0u, ~ (~ (0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) * 1u)) - 0u) == read_2), (uint(read_1 == read_2)) - _GLF_IDENTITY(0u, (0u) | (0u))), (uint(read_1 == read_2)) ^ 0u))), uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), bool(bvec4(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), bool(bvec4(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), bool(bvec4(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), true))))))), false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), bool(bvec4(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), false, true, true))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), bool(bvec4(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)))))))), false, true, true))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), bool(bvec4(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)))))))), false, true, true))))))), ! (! (bool(bool(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), bool(bvec4(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)))))))), false, true, true))))))))))))), false, true, false))))))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(uint(_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec3(uint(read_1 == read_2), 1u, 1u))))), 0u), (true ? _GLF_IDENTITY(uvec2(uint(uint(uint(read_1 == read_2))), 0u), (_GLF_IDENTITY(uvec2(uint(uint(uint(read_1 == read_2))), 0u), uvec2(uvec4(uvec2(uint(uint(uint(read_1 == read_2))), 0u), 1u, 0u)))) | (uvec2(uint(uint(uint(read_1 == read_2))), 0u))) : _GLF_FUZZED(uvec2(67329u, 166672u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(uint(read_1 == read_2))) | (uint(uint(read_1 == read_2))))), 0u), (true ? uvec2(uint(uint(uint(read_1 == read_2))), _GLF_IDENTITY(0u, ~ (~ (0u)))) : _GLF_FUZZED(uvec2(67329u, 166672u)))), uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) / 1u)) ^ 0u)) / 1u)) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), (uint(uint(read_1 == read_2))) | (uint(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) / _GLF_IDENTITY(1u, (1u) - 0u))))))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (true ? uvec2(uint(uint(uint(read_1 == read_2))), 0u) : _GLF_FUZZED(uvec2(67329u, 166672u)))), uvec2(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))) >> 0u)), (uint(uint(read_1 == read_2))) | (uint(uint(read_1 == read_2))))), 0u), (uvec2(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(read_2, min(read_2, read_2)))), (read_1 == read_2) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))) >> 0u)), (uint(uint(read_1 == read_2))) | (uint(uint(read_1 == read_2))))), 0u)) - uvec2(0u, 0u)), (true ? _GLF_IDENTITY(uvec2(uint(uint(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, true)))))), 0u), uvec2(uvec2(uvec2(uint(uint(_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))))), 0u)))) : _GLF_FUZZED(uvec2(67329u, 166672u)))), 1u)))))) >> uvec2(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), (uvec3(0u, 1u, 1u)) - uvec3(0u, 0u, 0u)))))), 0u))))))), 0u, 1u, 1u))) + 1, 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) >> 0), max(64, 64)), _GLF_IDENTITY((64), ((64)) | ((64))) >> _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) + 0), 0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) + 0), 0)), min(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) + 0), 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) + 0), 0)), (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) + 0), 0))) << 0))), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) + 0), 0))))), _GLF_IDENTITY(4, (4) | (4)));
}
