#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_24 {
 ivec2 _f0;
 mat4x2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_25 {
 mat3 _f0;
 float _f1;
 int _f2;
 _GLF_struct_24 _f3;
} ;

struct _GLF_struct_22 {
 vec4 _f0;
 vec3 _f1;
 int _f2;
 vec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_21 {
 vec2 _f0;
 uvec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 mat3x2 _f1;
 float _f2;
 _GLF_struct_22 _f3;
} ;

struct _GLF_struct_19 {
 vec3 _f0;
 uint read_1;
 ivec4 _f1;
 bool _f2;
 ivec3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_20 {
 ivec4 _f0;
 mat2 _f1;
 _GLF_struct_19 _f2;
} ;

struct _GLF_struct_26 {
 _GLF_struct_20 _f0;
 _GLF_struct_23 _f1;
 mat3 _f2;
 vec3 _f3;
 bool _f4;
 _GLF_struct_25 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_16 {
 ivec3 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_18 {
 ivec4 _f0;
 _GLF_struct_17 _f1;
 mat4x2 _f2;
 uint virtual_gid;
} ;

struct _GLF_struct_13 {
 vec4 _f0;
 uvec3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 uvec4 GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupsubgroup_idworkgroup_baseworkgroup_id;
 mat3x2 _f1;
 ivec2 _f2;
 ivec2 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_11 {
 float _f0;
} ;

struct _GLF_struct_15 {
 _GLF_struct_11 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 vec4 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 mat2x3 _f1;
 ivec4 _f2;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 uint read_2;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 bvec2 _f1;
 uvec3 _f2;
 mat3x4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 ivec3 _f2;
 mat2x3 _f3;
 _GLF_struct_8 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 _GLF_struct_4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 bool _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 mat4x3 _f1;
 uint _f2;
 uint _f3;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 mat3x4 _f1;
 ivec2 _f2;
 vec4 _f3;
 mat3x4 _f4;
 vec2 _f5;
 uint _f6;
} ;

struct _GLF_struct_3 {
 mat2x4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_3 _f0;
 uint _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_9 _f3;
 bool _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_15 _GLF_struct_replacement_15;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 1.0, exp(0.0)), mat2(mat2(mat2(injectionSwitch, 1.0, exp(0.0))))))).y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), (float(float(injectionSwitch.x))) + 0.0)) > injectionSwitch.y)), false, true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), true, false)), (bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))))) || _GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))))) || _GLF_IDENTITY(false, (false) || false))))), bool(bvec4(! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec4((false), true, false, true))))) || _GLF_IDENTITY(false, (false) || false))))), true, true, false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(sinh(injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (true ? injectionSwitch[0] : _GLF_FUZZED(2337.8565))), injectionSwitch[1])))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_15._f4.GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupsubgroup_idworkgroup_baseworkgroup_id.y = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)) ? subgroup_id : _GLF_FUZZED(103985u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0), transpose(transpose(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 0.0)))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), max(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 1.0, 0.0))), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 1.0, 0.0))), 1.0, abs(1.0), abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat4x3(float(mat4x3(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 1.0, 0.0))), 1.0, abs(1.0), abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0)))), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) + 0)])))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 1.0, 0.0))), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 1.0, 0.0))), 1.0, abs(1.0), abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat4x3(float(mat4x3(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 1.0, 0.0))), 1.0, abs(1.0), abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0)))), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) + 0)])))).x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 1.0, 0.0))), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 1.0, 0.0))), 1.0, abs(1.0), abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), float(mat4x3(float(mat4x3(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, 1.0, 0.0))), 1.0, abs(1.0), abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0)))), injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) + 0)])))).x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, (injectionSwitch.x) * 1.0), length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, min(1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((3.9 / 67.75))), bool(false)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))))), ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)))), false || (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), true && (! (! (_GLF_IDENTITY(false, (false) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true, false || ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true))))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) - 0)))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.5), _GLF_FUZZED(8.9)), bvec2(false, false))).x < injectionSwitch.y)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_DEAD(false))))), (bool(bool(bool(bool(_GLF_DEAD(false)))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_replacement_15._f4.GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupsubgroup_idworkgroup_baseworkgroup_id.x = num_workgroup;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-5999.9670, 73.38)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_replacement_15._f4.GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupsubgroup_idworkgroup_baseworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = _GLF_struct_replacement_15._f4.GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupsubgroup_idworkgroup_baseworkgroup_id.w, (false ? _GLF_FUZZED(num_workgroup) : GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = _GLF_struct_replacement_15._f4.GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupsubgroup_idworkgroup_baseworkgroup_id.w));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), true))), false, false, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.7), _GLF_FUZZED(4399.6919)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (workgroup_size), _GLF_IDENTITY(uint(uvec2((workgroup_size) | (workgroup_size), 0u)), (uint(uvec2((workgroup_size) | (workgroup_size), 0u))) >> 0u))) * _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) | uvec2(0u, 0u)).y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_15._f4.GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupsubgroup_idworkgroup_baseworkgroup_id.z = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))), ! (! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = _GLF_struct_replacement_15._f4.GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupsubgroup_idworkgroup_baseworkgroup_id.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))), bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7.1)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(2058.5980, 34.26)) : injectionSwitch)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-58.81)), vec2(_GLF_FUZZED(-9.4), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), 0.0 + (0.0 + (injectionSwitch.y)))))), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1872.9058) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((+ -4.4)), _GLF_FUZZED(90.08)), bvec2(false, false)))) / vec2(1.0, 1.0)).y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.y), float(vec4((injectionSwitch.y), 1.0, 1.0, 1.0))), (injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(ivec4(1), _GLF_struct_17(_GLF_struct_16(ivec3(1), mat2x4(1.0)), bvec4(true)), mat4x2(1.0), GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + _GLF_struct_replacement_15._f4.GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupsubgroup_idworkgroup_baseworkgroup_id.y * subgroup_size + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + _GLF_struct_replacement_15._f4.GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupsubgroup_idworkgroup_baseworkgroup_id.y * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) : subgroup_local_id)) + 1) % subgroup_size), (GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x + _GLF_struct_replacement_15._f4.GLF_merged4_0_1_13_1_1_11_2_1_14_3_1_12num_workgroupsubgroup_idworkgroup_baseworkgroup_id.y * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec2(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))), min(_GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))), _GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)))))) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false))))), (_GLF_IDENTITY(false, true && (false))) || false) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id), uint(uint(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id), uint(uvec4((false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id), 1u, 0u, 1u))))))) + 1) % subgroup_size)) >> _GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (1u & ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(4u), uint(4u)), 0u)), 0u ^ (uint(uvec2(_GLF_IDENTITY(uint(4u), uint(4u)), 0u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u))))))), 1u, 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_struct_20(ivec4(1), mat2(1.0), _GLF_struct_19(_GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)), (vec3(1.0)) / vec3(1.0, 1.0, 1.0))) - vec3(0.0, 0.0, 0.0)), atomicLoad(buf[_GLF_struct_replacement_18.virtual_gid], 4, 64, 0), ivec4(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 ^ (1))))), true, ivec3(1), ivec4(1))), _GLF_struct_23(_GLF_struct_21(vec2(1.0), uvec2(1u), mat3x4(1.0)), mat3x2(1.0), 1.0, _GLF_struct_22(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))), _GLF_IDENTITY(vec4(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))), clamp(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))), max(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))))))), 0.0, 1.0, 0.0, cos(sqrt(0.0)), 1.0, log(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0)), (true ? vec4(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))), clamp(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))), max(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY(vec4(mat3x2(vec4(1.0), _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0)), mix(vec4((vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[0], _GLF_FUZZED(-8.5), _GLF_FUZZED(-8.2), _GLF_FUZZED(_GLF_IDENTITY(-9.9, clamp(-9.9, -9.9, -9.9)))), vec4(_GLF_FUZZED(9786.7557), (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[1], (vec4(mat3x2(vec4(1.0), cos(0.0), 0.0)))[2], (vec4(mat3x2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), min(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), 1.0))))), cos(0.0), 0.0)))[3]), bvec4(false, true, true, true)))))))), 0.0, 1.0, 0.0, cos(sqrt(0.0)), 1.0, log(1.0), length(vec3(0.0, 0.0, 0.0)), 1.0)) : _GLF_FUZZED(vec4(8.6, -663.230, 6.8, 3.4))))), vec3(1.0), 1, vec2(1.0), mat3(1.0))), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (true ? (_GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(mat3(-2133.5232, -4282.9133, -764.766, 9.6, -6.0, 1475.9209, 7.1, -4.2, -4190.7988)))), mat3(1.0) * ((mat3(1.0)))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), vec3(1.0), true, _GLF_struct_25(mat3(1.0), 1.0, 1, _GLF_struct_24(ivec2(1), mat4x2(1.0), mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), false)), bool(bvec4(bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), false)), true, false, false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), true && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))
    barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_3(mat2x4(1.0), _GLF_struct_0(mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(44.15, 9.6).y)), _GLF_IDENTITY(float(1.0), (true ? float(1.0) : _GLF_FUZZED(-2839.5109))), bool(true)))), mat3x4(1.0), ivec2(1), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((vec4(1.0)) * mat4(1.0), ((vec4(1.0)) * mat4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))), mat3x4(1.0), vec2(1.0), _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((ivec2(69837, -13263) , subgroup_local_id)) : 1u))), _GLF_struct_1(mat4x3(1.0), mat4x3(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-6.0, (-6.0) - 0.0)) : _GLF_IDENTITY(1.0, float(mat4(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, sqrt(1.0), 0.0))) : _GLF_FUZZED(-601.866))))))), 1.0)))))), 1u, 1u), _GLF_struct_2(vec2(1.0), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true))))), uvec2(1u))), _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) | 0u))), _GLF_struct_5(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))), _GLF_struct_4(mat2x3(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-4.8) : 1.0, _GLF_IDENTITY(min(false ? _GLF_FUZZED(-4.8) : 1.0, false ? _GLF_FUZZED(-4.8) : 1.0), mix(float(min(false ? _GLF_FUZZED(-4.8) : 1.0, false ? _GLF_FUZZED(-4.8) : 1.0)), float(_GLF_FUZZED(-51.01)), bool(false))))), mix(float(_GLF_FUZZED((+ 5.5))), float((false ? _GLF_FUZZED(-4.8) : 1.0)), bool(true)))))))), bvec4(true)), vec2(1.0)), _GLF_struct_9(_GLF_struct_6(mat3x4(1.0), bvec2(true), uvec3(1u), mat3x4(1.0), uvec3(1u)), _GLF_struct_7(uvec2(1u), atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_struct_replacement_18.virtual_gid, min(_GLF_IDENTITY(_GLF_struct_replacement_18.virtual_gid, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_18.virtual_gid, (true ? _GLF_struct_replacement_18.virtual_gid : _GLF_FUZZED(subgroup_id))), ~ (~ (_GLF_struct_replacement_18.virtual_gid)))) - 0u), _GLF_struct_replacement_18.virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY((buf[_GLF_struct_replacement_18.virtual_gid]) + 0u, min(_GLF_IDENTITY((buf[_GLF_struct_replacement_18.virtual_gid]) + 0u, (false ? _GLF_FUZZED(num_workgroup) : (buf[_GLF_struct_replacement_18.virtual_gid]) + 0u)), (buf[_GLF_struct_replacement_18.virtual_gid]) + 0u)), min((buf[_GLF_struct_replacement_18.virtual_gid]) + 0u, _GLF_IDENTITY((buf[_GLF_struct_replacement_18.virtual_gid]), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((buf[_GLF_struct_replacement_18.virtual_gid]), ((buf[_GLF_struct_replacement_18.virtual_gid])) ^ 0u))), (139742u & 0u) + (uint(uint(_GLF_IDENTITY((buf[_GLF_struct_replacement_18.virtual_gid]), ((buf[_GLF_struct_replacement_18.virtual_gid])) ^ 0u)))))) + 0u))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) * 1), 4, _GLF_IDENTITY(4, ~ (~ (4))))), 4)))), (int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), max(4, 4))))) | 0)), 64, 0)), ivec3(1), mat2x3(1.0), _GLF_struct_8(ivec3(1), mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), clamp(ivec4(_GLF_IDENTITY(1, (1) - 0)), ivec4(_GLF_IDENTITY(1, (1) - 0)), ivec4(_GLF_IDENTITY(1, (1) - 0)))), ivec4(_GLF_IDENTITY(1, (1) - 0))))) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), (ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) - 0))) << ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), clamp(ivec4(_GLF_IDENTITY(1, (1) - 0)), ivec4(_GLF_IDENTITY(1, (1) - 0)), ivec4(_GLF_IDENTITY(1, (1) - 0)))), ivec4(_GLF_IDENTITY(1, (1) - 0))))) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) - 0)), (ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | ((1))) - 0))) << ivec4(0, 0, 0, 0))))) >> ivec4(0, 0, 0, 0))), bvec3(true)), true);
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_struct_replacement_26._f0._f2.read_1 == _GLF_struct_replacement_10._f3._f1.read_2) + 1, (uint(_GLF_struct_replacement_26._f0._f2.read_1 == _GLF_struct_replacement_10._f3._f1.read_2) + 1) | 0u), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_26._f0._f2.read_1 == _GLF_struct_replacement_10._f3._f1.read_2, false || (_GLF_struct_replacement_26._f0._f2.read_1 == _GLF_struct_replacement_10._f3._f1.read_2))) + 1, (uint(_GLF_struct_replacement_26._f0._f2.read_1 == _GLF_struct_replacement_10._f3._f1.read_2) + 1) | 0u))), 4, 64, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 0 | (4))))));
 if(_GLF_DEAD(false))
  barrier();
}
