#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || _GLF_IDENTITY((false), ((false)) && _GLF_IDENTITY(true, true && (true))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true)))) || false))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) / 1.0)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9824.0456), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))), _GLF_FUZZED(4765.4801)), bvec2(true, false))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), false, false))) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y)), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(40060u, 59385u, 186362u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-52.88)), vec2(_GLF_FUZZED(-7462.9614), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-52.88)), vec2(_GLF_FUZZED(-7462.9614), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch))) * abs(vec2(1.0, 1.0))).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), false))))) && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false || (! ((! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, false || (false)), true)), true && (bool(bvec4((! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false, false || (false)), true)))))), true), false))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) * _GLF_IDENTITY(1u, min(1u, 1u)), max((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) * _GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) * _GLF_IDENTITY(1u, min(1u, 1u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.4) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(34792u))), bool(false))) > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(479.333)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8265.6358)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(true))), float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8265.6358)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true)))))), float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))), false || ((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8265.6358)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (! (true)))))), float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u)], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)), bool(bool((_GLF_IDENTITY((false), ((false)) || false)))))))), ! (! ((_GLF_IDENTITY((false), ((false)) || false))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(61.17))), injectionSwitch.x, injectionSwitch.x), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(61.17))), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(61.17))), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(61.17))), injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(bvec4((_GLF_IDENTITY(false, true && (false))), true, false, false))) && true)) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), ! (! (false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, mix(float(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x), float(_GLF_FUZZED(vec2(-6.9, -73.64).r)), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-89404))), 1)))))) + (0 ^ 0)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, ~ (~ (8u)))), (uint(_GLF_IDENTITY(8u, ~ (~ (8u))))) / ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, ~ (~ (2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), 1u, 1u), (uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))))), 1u, 1u)) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, _GLF_IDENTITY(1u, (1u) - 0u)), max(_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u) * (_GLF_IDENTITY(uvec4(read_1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 0u | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))) ^ 0u)))), 1u, 1u), (uvec4(read_1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 0u | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))) ^ 0u)))), 1u, 1u)) | (_GLF_IDENTITY(uvec4(read_1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 0u | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))) ^ 0u)))), 1u, 1u), (uvec4(read_1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 0u | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))) ^ 0u)))), 1u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))), uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u))))), ((~ (_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, _GLF_IDENTITY(1u, (1u) - 0u)), max(_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u), uvec4(1u, 1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) | (1u)))), 1u) * (_GLF_IDENTITY(uvec4(read_1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 0u | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))) ^ 0u)))), 1u, 1u), (uvec4(read_1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 0u | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))) ^ 0u)))), 1u, 1u)) | (_GLF_IDENTITY(uvec4(read_1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 0u | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))) ^ 0u)))), 1u, 1u), (uvec4(read_1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 0u | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))) ^ 0u)))), 1u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))), uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u)))))) - uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY((~ (_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u), max(_GLF_IDENTITY(uvec4(read_1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))) ^ 0u)), 1u, 1u), uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) - 0u)) * (uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (_GLF_IDENTITY(0u, (0u) + (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u))), uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u))))), (true ? (~ (_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), uint(7u))), uint(7u)))))))))), 1u, 1u), _GLF_IDENTITY(max(_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), clamp((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))))), 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))), (_GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))) << 0u))), 1u, 1u))), uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u)), (_GLF_IDENTITY(max(_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), clamp((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))))), 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))), (_GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))) << 0u))), 1u, 1u))), uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u)), ~ (~ (max(_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), clamp((0u << _GLF_IDENTITY(uint(7u), uint(7u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))))), 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))), (_GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))) << 0u))), 1u, 1u))), uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u)))))) >> uvec4(0u, 0u, 0u, 0u))))) : _GLF_FUZZED(uvec4(167848u, 3179u, 7363u, 165934u)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, min(7u, 7u))), uint(7u)))))))))), 1u, 1u), max(_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))), (_GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u)))) | (_GLF_IDENTITY(uint(7u), max(uint(7u), uint(7u))))))))))))) / 1u)) / 1u))), 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u))), uvec4(read_1, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))), (uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), _GLF_IDENTITY(uint(uvec2(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 1u)), 0u | (uint(uvec2(0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u))))))))), 1u)))))) / 1u)), 1u, 1u))))), ((~ (_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) * 1u)) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u), max(_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(7u), uint(7u)), 1u, 0u, 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec4(69353u, 168108u, 108557u, 167011u)) : uvec4(_GLF_IDENTITY(uint(7u), uint(7u)), 1u, 0u, 1u))))))))))))), 1u, 1u))), uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(_GLF_IDENTITY(8u, (8u) ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))))), 1u, 1u)))))) + _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))))))))), (true ? uint(_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))))), 1u, 1u), ~ (~ (uvec4(read_1, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u))))), (true ? _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u))))) : _GLF_FUZZED(workgroup_size)))), 1u, 1u))))) : _GLF_FUZZED(num_workgroup)))) == read_2) + 1, ~ (~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))))), 1u, 1u), _GLF_IDENTITY((uvec4(read_1, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, min(8u, _GLF_IDENTITY(8u, min(8u, _GLF_IDENTITY(8u, (true ? 8u : _GLF_FUZZED(uint(ldexp(3357.9348, 2298)))))))))), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))))), 1u, 1u)) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ((uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u)))), (false ? _GLF_FUZZED(uint(false)) : (_GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))))), uint(uint(uint(8u)))))), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) * 1u) : _GLF_FUZZED(40086u))), 1u)) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) << uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY(~ (uvec4(read_1, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uint(uint(8u)), min(uint(uint(8u)), uint(_GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), 0u | (uint(8u)))) * 1u)))))))))), 0u | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uint(uint(8u)), min(uint(uint(8u)), uint(_GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), 0u | (uint(8u)))) * 1u)))))))))), 0u ^ ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(uint(uint(8u)), min(uint(uint(8u)), uint(_GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), (_GLF_IDENTITY(uint(8u), 0u | (uint(8u)))) * 1u)))))))))))))), 1u, 1u)), (~ (uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))))), 1u, 1u))) * uvec4(1u, 1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(mix(atomicXor(num_workgroup, next_virtual_gid), packHalf2x16(vec2(7.7, -14.70)), true)) : 1u)), 1u))))), (true ? uint(_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, 0u ^ (8u))) - 0u)), uint(uint(uint(8u)))))), 1u, 1u), ~ (~ (_GLF_IDENTITY(uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))))), 1u, 1u), (uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))))), 1u, 1u)) | (uvec4(read_1, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uint(uint(8u)))))), 1u, 1u))))))) : _GLF_FUZZED(num_workgroup)))) == read_2) + 1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), true, true, true))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
