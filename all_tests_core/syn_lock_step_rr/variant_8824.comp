#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(true, ! (! (true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-79.00) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))))).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x) / 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))) || false)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))))) || false))) || false)) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(asin(vec2(-8.2, 6330.2773))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), bool(bool(! (_GLF_IDENTITY(true, (true) || false))))))), (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 1.0, determinant(mat2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat4x2(injectionSwitch.y, 0.0, 1.0, determinant(mat2(1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false, false)))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) && true)))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (false) && true)))))), false || (bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(144741u))), bool(false))))) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(true, ! (! (true))), false, false)))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(! (false), true), false)), true))))))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(_GLF_IDENTITY(! (true), ! (! (! (true)))), false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), false))), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0, sqrt(0.0), 1.0, cos(0.0), 1.0), (mat2x4(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0, sqrt(0.0), 1.0, cos(0.0), 1.0)) * mat2(1.0))), (float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0, sqrt(0.0), 1.0, cos(0.0), 1.0), (mat2x4(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0, sqrt(0.0), 1.0, cos(0.0), 1.0)) * mat2(1.0)))) - 0.0)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y)))))), (! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))) && true), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - 0.0) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 1.0)))))) > injectionSwitch.y)))))), (! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))) && true)))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true))))))))))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))[0], uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))[0], 1u, 0u))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, 1 * (0))]) - 0u), (_GLF_IDENTITY(gl_NumWorkGroups[0], min(gl_NumWorkGroups[0], gl_NumWorkGroups[0]))) | (gl_NumWorkGroups[0])), gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))), bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)))), _GLF_IDENTITY(false, ! (! (false))) || (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true))))), (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6954.5877), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(877.433)), bvec2(true, false))))).y, injectionSwitch.y)), injectionSwitch.y)))), true, false)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || false)), true, false))))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false)))))))), (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))), true, true)))), true, false)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), true, false)), true && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)))))), true, false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), true && (bool(bvec2(true, false)))))))), (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)))), true, false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(true, false)), (_GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))) || false), true && (bool(bvec2(true, false)))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))), false)), true && (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false)))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0))), injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)))), true, false))))))))))))))) || false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))))).y)))), true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true, false)), _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) || (true)) && (bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), vec3(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), (true ? vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0) : _GLF_FUZZED(vec3(2255.5884, 471.999, -68.12))))) / vec3(1.0, 1.0, 1.0)), vec3(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 1.0)), mix(float(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? vec3(1.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-3391.8140, -7840.7752, 93.57)))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), max(vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? vec3(1.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-3391.8140, -7840.7752, 93.57)))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? vec3(1.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-3391.8140, -7840.7752, 93.57)))), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))), vec3(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))), float(_GLF_FUZZED(3505.7017)), bool(false)))), sqrt(length(vec4(0.0, 0.0, 0.0, 0.0)))))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(1.0, sqrt(tan(0.0)) + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0))), 0.0, 1.0), vec3(determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(2512.3872)), bool(false)), (mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(2512.3872)), bool(false))) + 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-78.36)))), vec3(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? vec3(1.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-3391.8140, -7840.7752, 93.57)))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), max(vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? vec3(1.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-3391.8140, -7840.7752, 93.57)))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? vec3(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, float(vec3(1.0, exp(0.0), 0.0))), 0.0, 0.0, 0.0, cos(0.0), 0.0))), 0.0, 1.0) : _GLF_FUZZED(vec3(-3391.8140, -7840.7752, 93.57)))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))), vec3(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), (dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? vec3(1.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-3391.8140, -7840.7752, 93.57)))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), max(vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (true ? vec3(1.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-3391.8140, -7840.7752, 93.57)))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0), vec3(_GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), min(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)))) * vec3(1.0, 1.0, 1.0)), vec3(1.0, 0.0, 1.0))), (true ? vec3(1.0, 0.0, 1.0) : _GLF_FUZZED(vec3(-3391.8140, -7840.7752, 93.57)))), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0))), vec3(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.8)), bool(false))), 0.0)), 0.0, 1.0))) / 1.0)), float(_GLF_FUZZED(3505.7017)), bool(false)))), sqrt(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), clamp(float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), (true ? float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) : _GLF_FUZZED(309.196))), float(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))))))).y)))), true, false))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true))))), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false), true && (bool(bvec2(false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))) - vec2(0.0, 0.0)).x > injectionSwitch.y, true)))))) && true), false))) && true), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false))))), true && (bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, ! (! (true))), false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true && (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && true), true)), true, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec4(bvec3(false, true, true), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), true && (! (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))))))), false, false)))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - _GLF_IDENTITY(0u, min(0u, 0u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) * 1u), clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) ^ 0u) + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, min(5u, 5u)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(5u), uint(5u))), uint(_GLF_IDENTITY(uint(0u | (_GLF_IDENTITY(uint(5u), uint(5u)))), clamp(uint(0u | (_GLF_IDENTITY(uint(5u), uint(5u)))), uint(0u | (_GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(uint(0u | (_GLF_IDENTITY(uint(5u), uint(5u)))), (uint(0u | (_GLF_IDENTITY(uint(5u), uint(5u))))) | (uint(0u | (_GLF_IDENTITY(uint(5u), uint(5u))))))))))))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) ^ 0u) + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, min(5u, 5u)))), 0u | (_GLF_IDENTITY(uint(5u), uint(5u)))))))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u, 1u, 1u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 0 | (1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (_GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) && true))), _GLF_IDENTITY(false || (true && (_GLF_DEAD(false))), bool(bvec3(false || (true && (_GLF_DEAD(false))), false, false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u)], _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(91773))), clamp(_GLF_IDENTITY(4, (4) / 1), 4, 4)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), (((injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) - _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), min(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), clamp((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))), (_GLF_IDENTITY(virtual_gid, (virtual_gid) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)), _GLF_IDENTITY((virtual_gid), ((virtual_gid)) / 1u) - (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 1u * (_GLF_IDENTITY(6u, 0u | (_GLF_IDENTITY(6u, (6u) << 0u)))))), uint(6u))))))) | 0u)], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ _GLF_IDENTITY(0, (0 | _GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)), (false ? _GLF_FUZZED(31428) : _GLF_IDENTITY((0) ^ _GLF_IDENTITY(0, (0 | _GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)), min((0) ^ _GLF_IDENTITY(0, (0 | _GLF_IDENTITY(0, clamp(0, 0, 0))) | (0)), (0) ^ _GLF_IDENTITY(0, (0 | _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) / 1)))) | (0))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(((false)) && true, true && (((false)) && true))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false), true))), false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false), true))), false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false), true))), false))))))) && true)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false), true))), false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false), true))), false))))))) && true))), true && (! (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false), true))), false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false), true))), false))))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(sin(-41.17)) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.y), float(mat2x3(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.y), clamp(cos(0.0) * (injectionSwitch.y), cos(0.0) * (injectionSwitch.y), cos(0.0) * (injectionSwitch.y))), sqrt(0.0), 0.0, 0.0, 1.0, 1.0))), min(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.y), mix(float(cos(0.0) * (injectionSwitch.y)), float(_GLF_FUZZED(-1.9)), bool(false))), cos(0.0) * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), tan(0.0))))))))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.0)))))) * (injectionSwitch.y), min(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.y), _GLF_IDENTITY((cos(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y))) * (injectionSwitch.y)) / 1.0, min(_GLF_IDENTITY((cos(0.0) * (injectionSwitch.y)) / 1.0, max((cos(0.0) * (injectionSwitch.y)) / 1.0, (cos(0.0) * (injectionSwitch.y)) / 1.0)), (_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-444.784)), bool(false))) * (injectionSwitch.y)) / 1.0))), cos(0.0) * (injectionSwitch.y))), mix(float(cos(0.0) * (injectionSwitch.y)), float(_GLF_FUZZED(-1.9)), _GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), _GLF_IDENTITY(cos(0.0), (cos(0.0)) + 0.0) * _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(52.60)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))), mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-2.3)))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))), float(_GLF_FUZZED(147.232)), bool(false))), mix(float(_GLF_FUZZED(-1667.4323)), float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))), 0.0 + (clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 0.0))))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), _GLF_IDENTITY(float(float(injectionSwitch.y)), min(float(float(injectionSwitch.y)), float(float(injectionSwitch.y))))))))))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))), mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), (false ? _GLF_FUZZED((-3.2)) : _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))), float(_GLF_FUZZED(147.232)), bool(false)))), bool(true))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(cos(0.0) * (injectionSwitch.y), min(_GLF_IDENTITY(_GLF_IDENTITY(cos(0.0) * (injectionSwitch.y), min(_GLF_IDENTITY(cos(0.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4132.5274)), _GLF_IDENTITY(vec2(_GLF_FUZZED(2.6), (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2(_GLF_FUZZED(2.6), (injectionSwitch)[1]), min(vec2(_GLF_FUZZED(2.6), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.6), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(2.6), (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.6), (injectionSwitch)[1]))), bvec2(false, true))), injectionSwitch)).y), (_GLF_IDENTITY(cos(0.0) * (injectionSwitch.y), mix(_GLF_IDENTITY(float(cos(0.0) * (injectionSwitch.y)), float(mat2(float(cos(0.0) * (injectionSwitch.y)), 1.0, sqrt(exp(0.0)), 0.0))), float(_GLF_FUZZED((8.6 / -78.99))), bool(false)))) / _GLF_IDENTITY(1.0, (1.0) - 0.0)), cos(0.0) * _GLF_IDENTITY((injectionSwitch.y), float(vec4((injectionSwitch.y), 1.0, 1.0, 0.0))))), mix(float(cos(0.0) * (injectionSwitch.y)), float(_GLF_FUZZED(-1.9)), bool(false))), cos(0.0) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(0.0), 1.0)))) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), (false ? _GLF_FUZZED(-0.2) : _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec3(5.6, -9.6, -7915.8292).g)), bool(false)))))))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))), mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), (true ? _GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))) : _GLF_FUZZED(7664.6446))))))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))), _GLF_IDENTITY(float(_GLF_FUZZED(147.232)), (false ? _GLF_FUZZED(-8786.7568) : float(_GLF_FUZZED(147.232)))), bool(false))))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(149845u)) : injectionSwitch.x)) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(float(149845u)) : injectionSwitch.x)) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((false ? _GLF_FUZZED(float(149845u)) : injectionSwitch.x), min((false ? _GLF_FUZZED(float(149845u)) : injectionSwitch.x), _GLF_IDENTITY((false ? _GLF_FUZZED(float(149845u)) : injectionSwitch.x), max((false ? _GLF_FUZZED(float(149845u)) : injectionSwitch.x), (false ? _GLF_FUZZED(float(149845u)) : injectionSwitch.x)))))) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), true, false)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bvec3(! (false), true, true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, bool(bool(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), (false ? _GLF_FUZZED(133649u) : (read_1))) | (read_1)) == read_2)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, bool(bool(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2))))))))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (read_1) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(-525.821))))), injectionSwitch.y))) == read_2)), ((uint(read_1 == read_2))) | (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ (0u | 0u)), (~ (read_2)) | 0u))), bool(bvec2(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (0u ^ 1u) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(uint(uint(2u)), clamp(uint(uint(2u)), uint(uint(2u)), uint(uint(2u))))))))))))))) && true, false || ((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 1u, 0u))))) && true))))), true))))), clamp((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ (0u | 0u)), (~ (read_2)) | 0u))), bool(bvec2(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) && true, false || ((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 1u, 0u))))) && true))))), true))))), (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ (0u | 0u)), (~ (read_2)) | 0u))), bool(bvec2(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) && true, false || ((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 1u, 0u))))) && true))))), true))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ (0u | 0u)), (~ (read_2)) | 0u))), bool(bvec2(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) && true, false || ((_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec4(read_2, 0u, 1u, 0u)), (uint(uvec4(read_2, 0u, 1u, 0u))) ^ 0u))), bool(bvec2(bool(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec4(read_2, 0u, 1u, 0u)), (uint(uvec4(read_2, 0u, 1u, 0u))) ^ 0u))), true)))) && true))))), true))))), max((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ (0u | 0u)), (~ (read_2)) | 0u))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) >> 0u))) == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, _GLF_IDENTITY(1u, (0u | 0u) + (_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u)))), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) && true, false || _GLF_IDENTITY(((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 1u, 0u))))) && true), true && (((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 1u, 0u))))) && true))))))), true))))), (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ (_GLF_IDENTITY(0u | 0u, (0u | 0u) | (0u | 0u)))), (~ (read_2)) | 0u))), bool(bvec2(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) && true, false || ((bool(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 0u, 1u, 0u))))) && true))))), true))))))))))), (~ (uint(read_1 == read_2))) / 1u))) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), _GLF_IDENTITY(((uint(read_1 == read_2))), (((uint(read_1 == read_2)))) + 0u) | ((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) - 0u, ~ (~ ((uint(read_1 == read_2)) - 0u))))))), (~ (_GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(-490.909)), bool(false)))) ^ (uint(read_1 == read_2))))) / 1u))) + 1, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) | 0u) | (_GLF_IDENTITY(uint(read_1 == read_2), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), _GLF_IDENTITY(((uint(read_1 == read_2))), (((uint(read_1 == read_2)))) + 0u) | ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u)))), _GLF_IDENTITY((~ (uint(read_1 == read_2))), ((~ (uint(read_1 == read_2)))) / 1u) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), _GLF_IDENTITY(((uint(read_1 == read_2))), (((uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2)))) + 0u) | ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2), 0u ^ (uint(read_1 == read_2)))) - 0u)) - 0u)))), (~ (uint(read_1 == read_2))) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) >> 0u), 1u)), 1u)))) - 0u))) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(_GLF_IDENTITY(read_1, (read_1) << 0u) == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), _GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) * 1u, min((uint(read_1 == read_2)) * 1u, (uint(read_1 == read_2)) * 1u)))), clamp((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) * 1u, min((uint(read_1 == read_2)) * 1u, (uint(read_1 == read_2)) * 1u)))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) * 1u, min((uint(read_1 == read_2)) * 1u, (uint(read_1 == read_2)) * 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) * 1u, min((uint(read_1 == read_2)) * 1u, (uint(read_1 == read_2)) * 1u)))), ((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) * 1u, min((uint(read_1 == read_2)) * 1u, (uint(read_1 == read_2)) * 1u))))) ^ 0u))) | 0u))) | ((uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)), read_1)) == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u)), ~ (~ (uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u))))))) >> 0u)) + 1, (false ? _GLF_FUZZED(floatBitsToUint(-53.22)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 == read_2)))) * 1u)) | 0u))) | ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))), (~ (uint(read_1 == read_2))) / 1u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (45454u & 0u) | (read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) + 0u), uint(read_1 == read_2))), (uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (read_1) | 0u), _GLF_IDENTITY(read_1, (read_1) | 0u))) == read_2)) * 1u)) | 0u))) | ((uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2)))), _GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, min((~ (uint(read_1 == read_2))) / 1u, (~ (uint(read_1 == read_2))) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u)), ~ (~ (uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) * 1u)), clamp((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) * 1u)), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) * 1u)), (true ? (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) * 1u)) : _GLF_FUZZED(read_1))))) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u))))), max(_GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u)), ~ (~ (uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u))))), _GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u)), ~ (~ (uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * _GLF_IDENTITY(1u, min(1u, 1u)))) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u))))))))) >> 0u)) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), (_GLF_IDENTITY((read_1), ((read_1)) << 0u)) >> 0u) | 0u) == read_2), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 == read_2)))) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, max(_GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, ~ (~ ((~ (uint(read_1 == read_2))) / 1u))), _GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, ((~ (uint(read_1 == read_2))) / 1u) | ((~ (uint(read_1 == read_2))) / 1u)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 == read_2)))) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, max(_GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, ~ (~ ((~ (uint(read_1 == read_2))) / 1u))), _GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, ((~ (uint(read_1 == read_2))) / 1u) | ((~ (uint(read_1 == read_2))) / 1u)))))), 0u | ((_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 == read_2)))) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, max(_GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, ~ (~ ((~ (uint(read_1 == read_2))) / 1u))), _GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, ((~ (uint(read_1 == read_2))) / 1u) | ((~ (uint(read_1 == read_2))) / 1u)))))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 == read_2)))) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, max(_GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, ~ (~ ((~ (uint(read_1 == read_2))) / 1u))), _GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, ((~ (uint(read_1 == read_2))) / 1u) | ((~ (uint(read_1 == read_2))) / 1u)))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (45454u & 0u) | (read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((~ (uint(read_1 == read_2))) / 1u, min((~ (uint(read_1 == read_2))) / 1u, (~ (uint(read_1 == read_2))) / 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u)), ~ (~ (uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u))))), (_GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u)), ~ (~ (uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - _GLF_IDENTITY(0u, 1u * (0u)))) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u)), (uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - _GLF_IDENTITY(0u, 1u * (0u)))) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u))) * 1u), ~ (~ (uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u))))), _GLF_IDENTITY(uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((_GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(read_1 == read_2))))))), (~ (uint(read_1 == read_2))) / 1u)), 0u, 0u)), ~ (~ (uint(uvec3(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) * 1u)) | 0u))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | 0u)))) / 1u)), 0u, 0u))))))))) >> 0u)) + 1) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u), (read_1) + uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))) == read_2), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), _GLF_IDENTITY(_GLF_IDENTITY(((uint(read_1 == read_2))), (((uint(read_1 == read_2)))) ^ 0u), 0u | (((uint(read_1 == read_2))))) | ((uint(read_1 == read_2)))), (~ (uint(read_1 == read_2))) / 1u))) + 1, clamp(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), uint(read_1 == read_2)))))), _GLF_IDENTITY((~ (uint(read_1 == read_2))), max((~ (uint(read_1 == read_2))), _GLF_IDENTITY((~ (uint(read_1 == read_2))), ((~ (uint(read_1 == read_2)))) / 1u))) / 1u), (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), uint(read_1 == read_2)))))), (~ (_GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(read_1 == read_2)))))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))), ((uint(read_1 == read_2))) | ((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | _GLF_IDENTITY((uint(read_1 == read_2)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((uint(read_1 == read_2)))))) | (uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 0u))), read_1)) == read_2))), uint(read_1 == read_2)))))), (~ (uint(read_1 == read_2))) / 1u), min(_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), (uint(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, (read_2) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uint(read_1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), clamp(_GLF_IDENTITY(uint(read_1 == read_2), ~ (_GLF_IDENTITY(~ (uint(read_1 == read_2)), uint(uvec2(~ (uint(read_1 == read_2)), 1u))))), uint(read_1 == read_2), uint(read_1 == read_2))), 1u, _GLF_IDENTITY(0u, max(0u, 0u))))))), uint(read_1 == read_2)))))), (~ (uint(read_1 == read_2))) / 1u), _GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), uint(read_1 == read_2)))))), (~ (uint(read_1 == read_2))) / 1u)))))), min(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(read_1, (read_1) | (read_1)))) == read_2, (read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (read_2) ^ 0u), read_2))))) || false)) && true))) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) | ((_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2)))))), (~ (_GLF_IDENTITY(uint(read_1 == read_2), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(0u | (uint(read_1 == read_2)), ~ (~ (_GLF_IDENTITY(0u | (uint(read_1 == read_2)), (0u | 0u) ^ (0u | (uint(read_1 == read_2)))))))))), min((~ (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(0u | (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))), ~ (~ (_GLF_IDENTITY(0u | (uint(read_1 == read_2)), (0u | 0u) ^ (0u | (uint(read_1 == read_2)))))))))), (~ (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(0u | (uint(read_1 == read_2)), ~ (~ (_GLF_IDENTITY(0u | (uint(read_1 == read_2)), (0u | 0u) ^ (0u | (uint(read_1 == read_2))))))))))))))) / 1u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bool(read_1 == read_2)))) || false)))) | ((uint(read_1 == read_2)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))), uint(read_1 == read_2)))), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | (_GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) ^ 0u)) | ((uint(read_1 == read_2)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), clamp(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) << (1u ^ 1u)) : _GLF_FUZZED(subgroup_id))) == read_2)))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ ((uint(read_1 == read_2))))), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), clamp(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), (false ? _GLF_FUZZED(188615u) : (uint(read_1 == read_2)))), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), clamp(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))) | ((uint(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec3(read_1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(0u, 0u, 0u) | (uvec3(read_1, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) == read_2)))))))), (~ (uint(read_1 == read_2))) / 1u)), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3((false), true, true))))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3((false), true, true))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec2(29427u, 123358u).t) : read_2))))))))), _GLF_IDENTITY(((uint(read_1 == read_2))) | ((uint(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2))), max(_GLF_IDENTITY(((uint(read_1 == read_2))) | ((uint(read_1 == read_2))), (((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))) >> 0u), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2)))))), (~ (uint(read_1 == read_2))) / 1u))) >> 0u)))) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(_GLF_IDENTITY(read_1, ~ _GLF_IDENTITY((~ (read_1)), clamp(_GLF_IDENTITY((~ (read_1)), max((~ (read_1)), (~ (read_1)))), _GLF_IDENTITY((~ (read_1)), ((~ (read_1))) | ((~ (read_1)))), (~ (read_1))))), read_1), max(max(_GLF_IDENTITY(read_1, ~ (~ (read_1))), read_1), max(_GLF_IDENTITY(read_1, ~ (~ (read_1))), read_1)))) == read_2, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(_GLF_IDENTITY(read_1, ~ _GLF_IDENTITY((~ (read_1)), clamp(_GLF_IDENTITY((~ (read_1)), max((~ (read_1)), (~ (read_1)))), _GLF_IDENTITY((~ (read_1)), ((~ (read_1))) | ((~ (read_1)))), (~ (read_1))))), read_1), max(max(_GLF_IDENTITY(read_1, ~ (~ (read_1))), read_1), max(_GLF_IDENTITY(read_1, ~ (~ (read_1))), read_1)))) == read_2) || false)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), _GLF_IDENTITY(((uint(read_1 == read_2))) | ((uint(read_1 == read_2))), clamp(((uint(read_1 == read_2))) | ((uint(read_1 == read_2))), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2))), ((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2))) | ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec3(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 == read_2)), clamp(~ (uint(read_1 == read_2)), ~ (uint(read_1 == read_2)), ~ (uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 == read_2)), (~ (uint(read_1 == read_2))) - 0u), clamp(~ (uint(read_1 == read_2)), ~ (uint(read_1 == read_2)), ~ (uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))) + (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) / 1u), 0u ^ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), _GLF_IDENTITY(((uint(read_1 == read_2))) | _GLF_IDENTITY(((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u))), uint(_GLF_IDENTITY(uvec3(((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u))), 1u, 0u), (true ? uvec3(((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u))), 1u, 0u) : _GLF_FUZZED(uvec3(85958u, 46115u, 80847u)))))), clamp(((uint(read_1 == read_2))) | ((uint(read_1 == read_2))), ((uint(read_1 == read_2))) | ((uint(read_1 == read_2))), ((uint(read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))) | (_GLF_IDENTITY(read_2, uint(uint(read_2))))), read_2))))) | ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec3(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(_GLF_IDENTITY(bvec3(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))))))) || false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1, 1u * (read_1)) == read_2)), clamp(~ (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) << 0u) == read_2)), ~ (uint(read_1 == read_2)), ~ (uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))))), (_GLF_IDENTITY(~ (uint(read_1 == read_2)), clamp(~ (uint(read_1 == read_2)), ~ (uint(read_1 == read_2)), ~ (uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))) + (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) / 1u)))) / 1u))))) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)))), _GLF_IDENTITY(((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))) | ((uint(read_1 == read_2))), ((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) >> 0u)) | ((uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2))))))))) << 0u)), (_GLF_IDENTITY(~ (uint(read_1 == read_2)), (~ (uint(read_1 == read_2))) - (197834u & 0u))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), _GLF_IDENTITY(((uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (~ (read_2))), (read_2) | (read_2))))) | ((uint(read_1 == read_2))), ((_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), bool(bvec4(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), false, false, true)))))), true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), (read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false)))))) >> 0u)) | ((uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, ~ (~ _GLF_IDENTITY((read_2), (false ? _GLF_FUZZED(read_1) : (read_2))))))))))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(read_1 == read_2)), (~ (uint(read_1 == read_2))) - (197834u & 0u)), (_GLF_IDENTITY(~ (uint(read_1 == read_2)), (~ (uint(read_1 == read_2))) - (197834u & 0u))) | 0u)) / 1u))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(113676u) : _GLF_IDENTITY(read_1, (read_1) | (read_1)))) == read_2), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uint(read_1 == read_2)), _GLF_IDENTITY(((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))) | ((uint(read_1 == read_2))), _GLF_IDENTITY(((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), read_2)), 1u, 1u, (1u & 1u)), (uvec4(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), read_2)), 1u, 1u, (1u & 1u))) ^ uvec4(0u, 0u, 0u, 0u))))) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! ((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | _GLF_IDENTITY((read_2), min((read_2), _GLF_IDENTITY((read_2), uint(uvec4((read_2), 1u, 0u, 0u)))))), (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u)), (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) >> 0u)) | ((uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2))))))))), clamp(((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), read_2)), 1u, 1u, (1u & 1u)), (uvec4(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), read_2)), 1u, 1u, (1u & 1u))) ^ uvec4(0u, 0u, 0u, 0u))))) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! ((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | _GLF_IDENTITY((read_2), min((read_2), _GLF_IDENTITY((read_2), uint(uvec4((read_2), 1u, 0u, 0u)))))), (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u)), (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) >> 0u)) | ((uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2))))))))), ((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), read_2)), 1u, 1u, (1u & 1u)), (uvec4(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), read_2)), 1u, 1u, (1u & 1u))) ^ uvec4(0u, 0u, 0u, 0u))))) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! ((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | _GLF_IDENTITY((read_2), min((read_2), _GLF_IDENTITY((read_2), uint(uvec4((read_2), 1u, 0u, 0u)))))), (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u)), (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) >> 0u)) | ((uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2))))))))), ((_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), read_2)), 1u, 1u, (1u & 1u)), (uvec4(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), read_2)), 1u, 1u, (1u & 1u))) ^ uvec4(0u, 0u, 0u, 0u))))) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! ((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! ((read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ((uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | _GLF_IDENTITY((read_2), min((read_2), _GLF_IDENTITY((read_2), uint(uvec4((read_2), 1u, 0u, 0u)))))), (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u)), (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ((read_2) | (read_2)) - 0u))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) >> 0u)) | ((uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, ~ (~ (read_2))))))))))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(read_1 == read_2)), (~ (uint(read_1 == read_2))) - (197834u & 0u))) / 1u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(~ (uint(read_1 == read_2)), (~ (uint(read_1 == read_2))) - (197834u & 0u))) / 1u, ((_GLF_IDENTITY(~ (uint(read_1 == read_2)), (~ (uint(read_1 == read_2))) - (197834u & 0u))) / 1u) | ((_GLF_IDENTITY(~ (uint(read_1 == read_2)), (~ (uint(read_1 == read_2))) - (197834u & 0u))) / 1u)), (_GLF_IDENTITY(~ (uint(read_1 == read_2)), (~ (uint(read_1 == read_2))) - (197834u & 0u))) / 1u, (_GLF_IDENTITY(~ (uint(read_1 == read_2)), (~ (uint(read_1 == read_2))) - (197834u & 0u))) / 1u)))))))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))) + 1)))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec4(64, 0, 0, 1)), (false ? _GLF_FUZZED(96739) : int(ivec4(64, 0, 0, 1)))))) - 0), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4)), clamp(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4)), (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4))) - 0))))))), min(min(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287))), (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287)))) | 0))), (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287)))))) * 1))), clamp(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(-62287), (true ? 4 : _GLF_FUZZED(-62287)) | (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(-62287), min(true ? 4 : _GLF_FUZZED(-62287), true ? 4 : _GLF_FUZZED(-62287))))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-62287))))), (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287)))))) * 1)), 0 ^ ((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-62287))))), (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287)))))) * 1))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-62287)), clamp(_GLF_IDENTITY((true ? 4 : _GLF_FUZZED(-62287)), ~ (~ ((true ? 4 : _GLF_FUZZED(-62287))))), (true ? 4 : _GLF_FUZZED(-62287)), (true ? 4 : _GLF_FUZZED(-62287))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287))))), (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287)))))) | (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287)))))))), 0 ^ (~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287))))), (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287)))))) | (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287)))))))))))), (~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(-62287), 0 ^ (true ? 4 : _GLF_FUZZED(-62287)))))))) * 1))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287))))), int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) ^ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)) ? _GLF_IDENTITY(4, (4) | (4)) : _GLF_FUZZED(-62287))))), (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287)))))) * 1))))), 1 * (~ (~ (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-62287)))))))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(93907) : _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), clamp(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, ~ (~ (4)))))) << 0)))))), min(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (4))), 4)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.9, 5.0)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))), false, true))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))), false, true)))))), true && (! ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))), false, true))))))))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))))
    return;
   return;
  }
}
