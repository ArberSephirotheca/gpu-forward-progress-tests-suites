#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x) + (exp(0.0)))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)))), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), min(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)))), 0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 1.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)), (false ? _GLF_FUZZED(83.65) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)))))), 0.0, 1.0, _GLF_IDENTITY(cos(0.0), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0, 0.0, 0.0), mat2(mat2x3(mat2(_GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0))) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0))), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0)), min(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0)), (_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0))) / 1.0))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), min(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0)), min(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0)), (_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0))) / 1.0))), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0)), min(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0)), (_GLF_IDENTITY(1.0, 1.0 * _GLF_IDENTITY((1.0), ((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5107.0272) : 1.0)))) / 1.0))) / 1.0))), 0.0, 0.0, 0.0)))))))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-61.43), mix(float(_GLF_FUZZED(897.065)), float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-61.43)), bool(true))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), min((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), 0u | ((gl_NumWorkGroups.x))))) << 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0)))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - sin(0.0), clamp((injectionSwitch.x) - sin(0.0), (injectionSwitch.x) - sin(0.0), (injectionSwitch.x) - sin(0.0)))), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0)))) > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.5)), bool(false)))))) * exp(sin(0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(3.7)))) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(-43099)) : injectionSwitch.y)), injectionSwitch.y)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), false, true, false)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))), (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), bool(bool(true && (false)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-414.267, -6973.2625)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(exp(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0))))), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-414.267, -6973.2625)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(exp(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0))))), injectionSwitch)).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-414.267, -6973.2625)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(exp(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0))))), injectionSwitch)).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-414.267, -6973.2625)) : injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(exp(0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0))))), injectionSwitch)).y, false))))))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(_GLF_IDENTITY(41402u, (41402u) >> (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_FUZZED(-2.5)), bvec2(false, false))))).y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(68.29, -2609.6571, -4.5, -535.013).y)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), max(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))), mix(float(max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(4.1)), bool(false))), max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(2986.6167), (_GLF_FUZZED(injectionSwitch))[1]), vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(9917.8469)), bvec2(true, false))), _GLF_FUZZED(injectionSwitch))) : min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y, injectionSwitch.y), min(clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) - vec3(0.0, 0.0, 0.0)))) : _GLF_FUZZED(-1.8)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(0u, 0u, 0u) + ((gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(154600u, 56112u, _GLF_IDENTITY(190703u, clamp(_GLF_IDENTITY(190703u, _GLF_IDENTITY(uint(uvec3(190703u, 1u, 1u)), (uint(uvec3(190703u, 1u, 1u))) >> 0u)), _GLF_IDENTITY(190703u, (190703u) ^ 0u), _GLF_IDENTITY(190703u, (_GLF_IDENTITY(190703u, 0u | (190703u))) >> 0u))))) : gl_WorkGroupID))) | uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(-905.321)), bool(false))), mix(float(_GLF_FUZZED(_GLF_IDENTITY((4815.4409 + 73.99), max((4815.4409 + 73.99), (4815.4409 + 73.99))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), _GLF_IDENTITY(bool(true), false || (bool(true)))))))).x, 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false, ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_DEAD(false)) && true)) || false) || false))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))), false, false, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! ((_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))) && true))))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, true && (_GLF_IDENTITY((! (false)) && true, ! (! ((! (false)) && true))))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, (_GLF_IDENTITY((! (false)) && true, false || ((! (false)) && true))) || false))) && _GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)) && true)))) && true)))))) && true))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! ((_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true, ! (! ((! (false)) && true))))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))) && true, (_GLF_IDENTITY((! (false)) && true, false || ((! (false)) && true))) || false))) && _GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, false || (_GLF_IDENTITY((! (false)) && true, ! (! ((! (false)) && _GLF_IDENTITY(true, ! (! (true)))))))))) && true, ! (! ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)) && true)))) && true)))))) && true))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))) || false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! ((_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))) && true))))), false || (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (! (false)) && true)) && true, ! (! ((_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, (true) && true))) && true)))) && true))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true, true && (_GLF_IDENTITY((! (false)) && true, ! (! ((! (false)) && true))))))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, (_GLF_IDENTITY((! (false)) && true, false || ((! (false)) && true))) || false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, (_GLF_IDENTITY((! (false)) && true, false || ((! (false)) && true))) || false))), bool(bvec4((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, (_GLF_IDENTITY((! (false)) && true, false || ((! (false)) && true))) || false))), true, true, false))))) && _GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)) && true)))) && true)))))) && true))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))) || false, _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! ((_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true, ! (! ((! (false)) && true))))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))) && true, (_GLF_IDENTITY((! (false)) && true, false || ((! (false)) && true))) || false))) && _GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, false || (_GLF_IDENTITY((! (false)) && true, ! (! ((! (false)) && _GLF_IDENTITY(true, ! (! (true)))))))))) && true, ! (! ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)) && true)))) && true)))))) && true))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))) || false)), true && (! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true, ! (! ((_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) && true, ! (! ((! (false)) && true))))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))) && true, (_GLF_IDENTITY((! (false)) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), false || _GLF_IDENTITY(((! (false)) && true), bool(bvec4(((! (false)) && true), false, false, false))))) || false))) && _GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, false || (_GLF_IDENTITY((! (false)) && true, ! (! ((! (false)) && _GLF_IDENTITY(true, ! (! (true)))))))))) && true, ! (! ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)) && true, ((_GLF_IDENTITY(! (false), (! (false)) && true)) && true) && true))) && true)))) && true)))))) && true))))) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < injectionSwitch.y))))) || false))))))))), _GLF_IDENTITY(false, (false) && true), false, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (! (false))), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, uint(uint(workgroup_size))), _GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_size))))), 0u ^ (workgroup_size)))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-95.07) : injectionSwitch.y))) + 0.0)) + 0.0)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id)) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (subgroup_size)), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (subgroup_size)), uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u)))))), subgroup_id)) * subgroup_size) + 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (subgroup_size)), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (subgroup_size)), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (subgroup_size)), uint(uint(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (subgroup_size))))), subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (subgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u)))))), subgroup_id)) * subgroup_size) + 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) / 1u, ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), max(_GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))) * 1u), _GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), 1u * ((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(0u, 0u, 0u, 0u) | (uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) / 1u)))))), uint(uvec4((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size)))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))) * 1u)))), uint(uvec4((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), ((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))) | ((subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x))))) | (subgroup_size)))), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), 0u | (max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), max(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ (~ (1u)))))) >> 0u)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size) / 1u))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false))))) ? subgroup_local_id : _GLF_FUZZED((-- subgroup_size)), ~ (~ (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), (! (injectionSwitch.x < injectionSwitch.y)) || false))))) ? subgroup_local_id : _GLF_FUZZED((-- subgroup_size)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.0)), float(injectionSwitch.y), bool(true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), false, false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, false || (false)) || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (false ? _GLF_FUZZED(14789u) : ~ (subgroup_local_id))))) + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) - 0)) ^ 0)) / 1)), max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(1, (1) | (1))))), (uint(_GLF_IDENTITY(1, (1) | (1)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(1, 0 ^ (1))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), min((1) | (1), _GLF_IDENTITY((1) | (1), min((1) | (1), (1) | (1)))))))), max((uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), min((1) | (1), _GLF_IDENTITY((1) | (1), min((1) | (1), (1) | (1)))))))), (uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), min((1) | (1), _GLF_IDENTITY((1) | (1), min((1) | (1), (1) | (1)))))))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) | (1))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(_GLF_IDENTITY(1, (1) | (1))))), (uint(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ (0 << _GLF_IDENTITY(int(5), int(5)))))))) - 0u)) >> 0u)) >> 0u)) * 1u), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec3((4), 0, 0), (ivec3((4), 0, 0)) | (ivec3((4), 0, 0))))))) | (4), clamp(_GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec3((4), 0, 0), (ivec3((4), 0, 0)) | (ivec3((4), 0, 0))))))) | (4), _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec3((4), 0, 0), (ivec3((4), 0, 0)) | (ivec3((4), 0, 0))))))) | (4), _GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY((4), int(_GLF_IDENTITY(ivec3((4), 0, 0), (ivec3((4), 0, 0)) | (ivec3((4), 0, 0))))))) | (4))), 0 | (_GLF_IDENTITY((4), ((4)) | (_GLF_IDENTITY(_GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), min((4), (4)))))) >> _GLF_IDENTITY(0, int(int(0)))), int(_GLF_IDENTITY(ivec3((4), 0, 0), (ivec3((4), 0, 0)) | (ivec3((4), 0, 0))))))) | (4)))));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-43598))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), 0u ^ ((read_1))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) ^ 0u) | (0u)))), 0u))) : _GLF_FUZZED(num_workgroup)))))), (_GLF_IDENTITY(read_1, (read_1) | (read_1))) << 0u) == read_2, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (read_1) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u)))), 0u))) : _GLF_FUZZED(num_workgroup)))))), uint(uvec3(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (read_1) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u)))), 0u))) : _GLF_FUZZED(num_workgroup)))))), 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), (read_1) << 0u) == read_2, false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, (read_1) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u)))), (true ? _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u | (0u)))) : _GLF_FUZZED(num_workgroup))), 0u))) : _GLF_FUZZED(num_workgroup)))))), (read_1) << 0u) == read_2))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u))), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u), (true ? _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, min(read_1, read_1))) - 0u) : _GLF_FUZZED(subgroup_id)))))))), _GLF_IDENTITY((read_1), max((read_1), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(subgroup_id)))), (true ? (read_1) : _GLF_FUZZED(read_2))))) ^ 0u))), (read_1) << 0u)))))) - 0u) == read_2))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ (~ (1))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << 0), 0 | (_GLF_IDENTITY(64, (64) << 0))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) + 0.0) : _GLF_FUZZED(1.4))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))), 1.0, 0.0, 1.0, 0.0, exp(0.0), 0.0, sqrt(sin(0.0)), 0.0))) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   return;
  }
}
