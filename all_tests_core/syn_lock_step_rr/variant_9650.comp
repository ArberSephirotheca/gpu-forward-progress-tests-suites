#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), (bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))) && true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), (float(mat3(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))) - 0.0)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) >> 0)], _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(intBitsToFloat(ivec2(-67582, 73435))) : injectionSwitch)).y))))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)), false)), (bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true)), false))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false))) && true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))) || false))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))) || false)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)) * workgroup_id, uint(uvec3(workgroup_size * workgroup_id, 1u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ (1u ^ 1u)), subgroup_id, subgroup_id)) * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_local_id))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))), ~ (~ (min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))), max(subgroup_id, subgroup_id))))))), _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) / 1u), subgroup_id))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) ^ 0u), (_GLF_IDENTITY(uint(uint(subgroup_id)), (uint(uint(subgroup_id))) ^ 0u)) >> 0u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))), (subgroup_id) - _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))) | (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(2u), uint(2u))), 0u + ((0u << _GLF_IDENTITY(uint(2u), uint(2u)))))))), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))), (subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)), max(subgroup_id, subgroup_id)), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) : _GLF_FUZZED(workgroup_id)))) << 0u), _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))), (subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))) << 0u, uint(_GLF_IDENTITY(uvec3((clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))), (subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))), ((subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))) | ((subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))) << 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uint(uint(3u)))))) >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? uvec3((clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))), (subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), 1u * (_GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) ^ 0u)))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))) << 0u, ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uint(uint(3u)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))), uint(3u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))) : _GLF_FUZZED(uvec3(108232u, 13664u, 170596u)))))))) | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((subgroup_id)) : subgroup_id)), 0u + (subgroup_id))), (min(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), min(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), min((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), max((_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)) ^ (subgroup_id))))) : _GLF_FUZZED(workgroup_base)))))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED((subgroup_id)) : subgroup_id)), 0u + (subgroup_id)))) + 0u)), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (false ? _GLF_FUZZED(subgroup_local_id) : 3u))), uint(3u)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)))) | 0u), _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u))))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), 0u + (subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))), clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(0u, (0u) / 1u))))) ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), 0u ^ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), 0u ^ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))))), min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u ^ (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(0u ^ (subgroup_id), max(0u ^ (subgroup_id), 0u ^ (subgroup_id))))))) | 0u))))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) | 0u) + (subgroup_id))))))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))), clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 0u))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))))), ((_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uvec4(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 0u))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))))) ^ 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))), clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (false ? _GLF_FUZZED(subgroup_local_id) : max(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), subgroup_id))))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) | 0u)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) << ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), subgroup_id)), max(subgroup_id, subgroup_id))) | 0u) + 0u)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))))), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u)))) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))))), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 0u)))) << ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(2u), uint(2u)))), _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u)))))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u) + 0u, max(((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u) + 0u, ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u) + 0u)))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((subgroup_id), 0u ^ ((subgroup_id)))))))) << 0u)))))), (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0u)), (uint(uvec3(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uvec3(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))))), 0u, _GLF_IDENTITY(1u, (1u) - 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), 0u))) / 1u)) << _GLF_IDENTITY(uint(3u), uint(3u)))), (uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), 1u * (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))) ^ 0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), 1u * (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))) ^ 0u, ((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)), 1u * (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_id : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))))) ^ 0u) << 0u)))))), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, (subgroup_id) | _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(subgroup_id, subgroup_id)))), min(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_FUZZED(178395u))))), max(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), subgroup_id)))), _GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(subgroup_id, subgroup_id)))), (true ? _GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(subgroup_id, subgroup_id)))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(subgroup_id, subgroup_id))))) ^ 0u) : _GLF_FUZZED(subgroup_id))))))) | 0u, 1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(subgroup_id, subgroup_id)))), min(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) >> 0u), max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))))) >> 0u), subgroup_id)))), _GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) | (_GLF_IDENTITY(0u ^ (subgroup_id), (0u ^ (subgroup_id)) + 0u)))), max(subgroup_id, subgroup_id)))), (true ? ~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(subgroup_id, subgroup_id)))) : _GLF_FUZZED(subgroup_id))))))) | 0u))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))))) | _GLF_IDENTITY((uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) - 0u), (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(subgroup_id, (75538u & 0u) + (subgroup_id)), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) - 0u))))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), ((uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (subgroup_id), (~ (subgroup_id)) << 0u))), (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))) : _GLF_FUZZED(virtual_gid)))), (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | 0u, ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | 0u) | ((_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | 0u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), max(_GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * 1u), min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ (_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u)))))))))), (_GLF_IDENTITY((uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | 0u), (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | 0u) : _GLF_FUZZED(bitfieldReverse(virtual_gid)))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | 0u))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + _GLF_IDENTITY((subgroup_id), ((subgroup_id)) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))))))), (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ (_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u)))))))))), max(_GLF_IDENTITY((uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u)))))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ (_GLF_IDENTITY(uint(3u), min(uint(3u), _GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u)))))))))))), clamp((uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) + (subgroup_id))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (~ (_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u)))))), ~ (~ (_GLF_IDENTITY(uint(3u), min(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) << 0u)) / ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), uint(3u)))))))))), (uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u)))), min(_GLF_IDENTITY((_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u)))), ((_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))) | ((_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u)))))), (_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u)))))))))))), (uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ (_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u)))))))))))), (uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(subgroup_id, subgroup_id), (max(subgroup_id, subgroup_id)) + 0u))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, (0u) >> 0u) + (subgroup_id)))), (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(uint(uint(3u)), (true ? uint(uint(3u)) : _GLF_FUZZED(num_workgroup))))), ~ (~ (_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))))))))))))) / uvec2(1u, 1u))))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (min(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), max(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) | 0u))))))) | 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(8u), uint(8u)))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id))) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))))) >> 0u)) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), 1u), uvec2(uvec4(uvec2(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), 1u), 1u, 1u))))))) : _GLF_FUZZED(num_workgroup))))))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, 0u ^ ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, 0u ^ ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, 0u ^ ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u)), 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, 0u ^ ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u, 0u ^ ((_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u)), (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u)), 0u))))))))), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), _GLF_IDENTITY(uint(3u), min(_GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))))))), _GLF_IDENTITY(uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) | 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(8u), uint(8u)))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))) | 0u) : _GLF_FUZZED(workgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) / 1u))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(3u, (3u) | (3u))), max(_GLF_IDENTITY((_GLF_IDENTITY(3u, (3u) | (3u))), ((_GLF_IDENTITY(3u, (3u) | (3u)))) >> 0u), (_GLF_IDENTITY(3u, (3u) | (3u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(3u, (3u) | (3u))), min(~ (_GLF_IDENTITY(3u, (3u) | (3u))), ~ (_GLF_IDENTITY(3u, (3u) | (3u))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, min(3u, 3u))) | (3u))), min(~ (_GLF_IDENTITY(3u, (3u) | (3u))), ~ (_GLF_IDENTITY(3u, (3u) | (3u)))))))), ~ (_GLF_IDENTITY(3u, (3u) | (3u)))))))), uint(3u)), ~ (~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u))))))) / 1u)))))))), uvec2(0u, 0u) + (uvec2(uvec2(uvec2(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))), (min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) | 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), uint(8u)))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), uint(8u)))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), uint(8u)))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), uint(8u)))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), uint(8u)))), max(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), min(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))))), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) | 0u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))))))))), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u))))), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)))))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)))))))))))))))))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(10026u) : virtual_gid)))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], 0u ^ (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))))))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), max(sqrt(vec2(0.0, 0.0)), sqrt(vec2(0.0, 0.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0))))) + abs(vec2(0.0, 0.0))), injectionSwitch)).y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(275.525, -9.7)) : injectionSwitch)).y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))) - 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(50.56) : injectionSwitch.y)), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(452.324) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4357.5116)), float(0.0), bool(true))))), 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), float(mat2x4(float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, abs(1.0), 0.0), (vec3(1.0, abs(1.0), 0.0)) + vec3(0.0, 0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), 1.0, log(1.0), determinant(mat3(0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-2323.4304, (-2323.4304) + 0.0)) : 1.0)), 1.0, 0.0)), determinant(mat2(1.0, 0.0, 0.0, cos(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), length(vec3(0.0, 0.0, 0.0)), abs(0.0), 0.0)))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), mix(vec2(_GLF_FUZZED(146.554), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))[1]), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))[0], _GLF_FUZZED((float(121182u)))), bvec2(true, false))).y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4x2(mat4x3(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))) || (_GLF_DEAD(false))), _GLF_IDENTITY(false, bool(bool(false))), false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, false || (false)), false), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, false || (false)), false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false)))), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(false, true && (false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false))))))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false)))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))))))))) && true)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), _GLF_IDENTITY(false, (false) || false))))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))))))))) && true)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), _GLF_IDENTITY(false, (false) || false))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))))))))) && true)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), _GLF_IDENTITY(false, (false) || false)))))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) && true))), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (bool(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))) || false)), false))))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), false || ((_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2))))))))))) || false)) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((false), true && ((false))), false, false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * exp(vec2(0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
